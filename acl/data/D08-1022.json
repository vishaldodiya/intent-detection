{"year": 2008, "sections": [{"a holistic lexiconbased approach to opinion mining": "", "num": 0, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 8, "segment_span": [0, 30], "characterOffsetBegin": 0, "originalText": "examples", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 10, "segment_span": [1, 24], "characterOffsetBegin": 9, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "partial", "lemma": "partial", "after": "", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [1, 24], "characterOffsetBegin": 10, "originalText": "partial", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 18, "segment_span": [1, 24], "characterOffsetBegin": 17, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": "Abstract", "lemma": "abstract", "after": " ", "pos": "JJ", "characterOffsetEnd": 27, "segment_span": [1, 24], "characterOffsetBegin": 19, "originalText": "Abstract", "ArgType": null, "before": " "}, {"index": 6, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [1, 24], "characterOffsetBegin": 28, "originalText": "source", "ArgType": null, "before": " "}, {"index": 7, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [1, 24], "characterOffsetBegin": 35, "originalText": "target", "ArgType": null, "before": " "}, {"index": 8, "word": "tree-to-tree", "lemma": "tree-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [1, 24], "characterOffsetBegin": 42, "originalText": "tree-to-tree", "ArgType": null, "before": " "}, {"index": 9, "word": "Ding", "lemma": "ding", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [1, 24], "characterOffsetBegin": 55, "originalText": "Ding", "ArgType": "subj", "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 63, "segment_span": [1, 24], "characterOffsetBegin": 60, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "Palmer", "lemma": "Palmer", "after": " ", "pos": "NNP", "characterOffsetEnd": 70, "segment_span": [1, 24], "characterOffsetBegin": 64, "originalText": "Palmer", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 72, "segment_span": [1, 24], "characterOffsetBegin": 71, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 76, "segment_span": [1, 24], "characterOffsetBegin": 72, "originalText": "2005", "ArgType": null, "before": ""}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 77, "segment_span": [1, 24], "characterOffsetBegin": 76, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": "Translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [1, 24], "characterOffsetBegin": 78, "originalText": "Translation", "ArgType": null, "before": " "}, {"index": 16, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [1, 24], "characterOffsetBegin": 90, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 17, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [1, 24], "characterOffsetBegin": 95, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 108, "segment_span": [1, 24], "characterOffsetBegin": 106, "originalText": "is", "ArgType": null, "before": " "}, {"index": 19, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [1, 24], "characterOffsetBegin": 109, "originalText": "a", "ArgType": null, "before": " "}, {"index": 20, "word": "fundamental", "lemma": "fundamental", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [1, 24], "characterOffsetBegin": 111, "originalText": "fundamental", "ArgType": null, "before": " "}, {"index": 21, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [1, 24], "characterOffsetBegin": 123, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [1, 24], "characterOffsetBegin": 131, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [1, 24], "characterOffsetBegin": 134, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 24, "word": "translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 153, "segment_span": [1, 24], "characterOffsetBegin": 142, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 154, "segment_span": [0, 30], "characterOffsetBegin": 153, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "especially", "lemma": "especially", "after": " ", "pos": "RB", "characterOffsetEnd": 165, "segment_span": [0, 30], "characterOffsetBegin": 155, "originalText": "especially", "ArgType": null, "before": " "}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 169, "segment_span": [0, 30], "characterOffsetBegin": 166, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "linguistically", "lemma": "linguistically", "after": " ", "pos": "RB", "characterOffsetEnd": 184, "segment_span": [0, 30], "characterOffsetBegin": 170, "originalText": "linguistically", "ArgType": null, "before": " "}, {"index": 29, "word": "syntax-based", "lemma": "syntax-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 197, "segment_span": [0, 30], "characterOffsetBegin": 185, "originalText": "syntax-based", "ArgType": null, "before": " "}, {"index": 30, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 205, "segment_span": [0, 30], "characterOffsetBegin": 198, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 31, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 210, "segment_span": [30, 42], "characterOffsetBegin": 206, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 32, "word": "need", "characterOffsetEnd": 215, "after": " ", "pos": "VBP", "is_root": true, "lemma": "need", "segment_span": [30, 42], "tense": "P", "characterOffsetBegin": 211, "originalText": "need", "ArgType": null, "before": " "}, {"index": 33, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 221, "segment_span": [30, 42], "characterOffsetBegin": 216, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 34, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 227, "segment_span": [30, 42], "characterOffsetBegin": 222, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 35, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 232, "segment_span": [30, 42], "characterOffsetBegin": 228, "originalText": "from", "ArgType": null, "before": " "}, {"index": 36, "word": "either", "lemma": "either", "after": " ", "pos": "DT", "characterOffsetEnd": 239, "segment_span": [30, 42], "characterOffsetBegin": 233, "originalText": "either", "ArgType": null, "before": " "}, {"index": 37, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 242, "segment_span": [30, 42], "characterOffsetBegin": 240, "originalText": "or", "ArgType": null, "before": " "}, {"index": 38, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 247, "segment_span": [30, 42], "characterOffsetBegin": 243, "originalText": "both", "ArgType": null, "before": " "}, {"index": 39, "word": "sides", "lemma": "side", "after": " ", "pos": "NNS", "characterOffsetEnd": 253, "segment_span": [30, 42], "characterOffsetBegin": 248, "originalText": "sides", "ArgType": null, "before": " "}, {"index": 40, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 256, "segment_span": [30, 42], "characterOffsetBegin": 254, "originalText": "of", "ArgType": null, "before": " "}, {"index": 41, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 260, "segment_span": [30, 42], "characterOffsetBegin": 257, "originalText": "the", "ArgType": null, "before": " "}, {"index": 42, "word": "bitext", "lemma": "bitext", "after": "", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [30, 42], "characterOffsetBegin": 261, "originalText": "bitext", "ArgType": null, "before": " "}, {"index": 43, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 268, "characterOffsetBegin": 267, "originalText": ".", "ArgType": null, "before": ""}], "text": "examples ( partial ) Abstract source target tree-to-tree Ding and Palmer ( 2005 ) Translation rule extraction is a fundamental problem in machine translation , especially for linguistically syntax-based systems that need parse trees from either or both sides of the bitext ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 272, "segment_span": [0, 9], "characterOffsetBegin": 269, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 280, "segment_span": [0, 9], "characterOffsetBegin": 273, "originalText": "current", "ArgType": null, "before": " "}, {"index": 3, "word": "dominant", "lemma": "dominant", "after": " ", "pos": "JJ", "characterOffsetEnd": 289, "segment_span": [0, 9], "characterOffsetBegin": 281, "originalText": "dominant", "ArgType": null, "before": " "}, {"index": 4, "word": "practice", "lemma": "practice", "after": " ", "pos": "NN", "characterOffsetEnd": 298, "segment_span": [0, 9], "characterOffsetBegin": 290, "originalText": "practice", "ArgType": "subj", "before": " "}, {"index": 5, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 303, "segment_span": [0, 9], "characterOffsetBegin": 299, "originalText": "only", "ArgType": null, "before": " "}, {"index": 6, "word": "uses", "characterOffsetEnd": 308, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "use", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 304, "originalText": "uses", "ArgType": "verb", "before": " "}, {"index": 7, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 315, "segment_span": [0, 9], "characterOffsetBegin": 309, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 8, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 321, "segment_span": [0, 9], "characterOffsetBegin": 316, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 322, "segment_span": [0, 9], "characterOffsetBegin": 321, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 328, "segment_span": [9, 20], "characterOffsetBegin": 323, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 11, "word": "adversely", "lemma": "adversely", "after": " ", "pos": "RB", "characterOffsetEnd": 338, "segment_span": [9, 20], "characterOffsetBegin": 329, "originalText": "adversely", "ArgType": null, "before": " "}, {"index": 12, "word": "affects", "characterOffsetEnd": 346, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "affect", "segment_span": [9, 20], "tense": "Z", "characterOffsetBegin": 339, "originalText": "affects", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 350, "segment_span": [9, 20], "characterOffsetBegin": 347, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 355, "segment_span": [9, 20], "characterOffsetBegin": 351, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 359, "segment_span": [9, 20], "characterOffsetBegin": 356, "originalText": "set", "ArgType": null, "before": " "}, {"index": 16, "word": "quality", "lemma": "quality", "after": " ", "pos": "NN", "characterOffsetEnd": 367, "segment_span": [9, 20], "characterOffsetBegin": 360, "originalText": "quality", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "due", "lemma": "due", "after": " ", "pos": "JJ", "characterOffsetEnd": 371, "segment_span": [9, 20], "characterOffsetBegin": 368, "originalText": "due", "ArgType": null, "before": " "}, {"index": 18, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 374, "segment_span": [9, 20], "characterOffsetBegin": 372, "originalText": "to", "ArgType": null, "before": " "}, {"index": 19, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "JJ", "characterOffsetEnd": 382, "segment_span": [9, 20], "characterOffsetBegin": 375, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 20, "word": "errors", "lemma": "error", "after": "", "pos": "NNS", "characterOffsetEnd": 389, "segment_span": [9, 20], "characterOffsetBegin": 383, "originalText": "errors", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 390, "characterOffsetBegin": 389, "originalText": ".", "ArgType": null, "before": ""}], "text": "The current dominant practice only uses 1-best trees , which adversely affects the rule set quality due to parsing errors ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 393, "segment_span": [0, 6], "characterOffsetBegin": 391, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 396, "segment_span": [0, 6], "characterOffsetBegin": 394, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "propose", "characterOffsetEnd": 404, "after": " ", "pos": "VBP", "is_root": true, "lemma": "propose", "segment_span": [0, 6], "tense": "P", "characterOffsetBegin": 397, "originalText": "propose", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 406, "segment_span": [0, 6], "characterOffsetBegin": 405, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "novel", "lemma": "novel", "after": " ", "pos": "JJ", "characterOffsetEnd": 412, "segment_span": [0, 6], "characterOffsetBegin": 407, "originalText": "novel", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 421, "segment_span": [0, 6], "characterOffsetBegin": 413, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 427, "segment_span": [6, 13], "characterOffsetBegin": 422, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 8, "word": "extracts", "characterOffsetEnd": 436, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "extract", "segment_span": [6, 13], "tense": "Z", "characterOffsetBegin": 428, "originalText": "extracts", "ArgType": null, "before": " "}, {"index": 9, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 442, "segment_span": [6, 13], "characterOffsetBegin": 437, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 447, "segment_span": [6, 13], "characterOffsetBegin": 443, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 449, "segment_span": [6, 13], "characterOffsetBegin": 448, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 456, "segment_span": [6, 13], "characterOffsetBegin": 450, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 13, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 463, "segment_span": [6, 13], "characterOffsetBegin": 457, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 468, "segment_span": [13, 19], "characterOffsetBegin": 464, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 15, "word": "compactly", "lemma": "compactly", "after": " ", "pos": "RB", "characterOffsetEnd": 478, "segment_span": [13, 19], "characterOffsetBegin": 469, "originalText": "compactly", "ArgType": null, "before": " "}, {"index": 16, "word": "encodes", "characterOffsetEnd": 486, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "encode", "segment_span": [13, 19], "tense": "Z", "characterOffsetBegin": 479, "originalText": "encodes", "ArgType": null, "before": " "}, {"index": 17, "word": "exponentially", "lemma": "exponentially", "after": " ", "pos": "RB", "characterOffsetEnd": 500, "segment_span": [13, 19], "characterOffsetBegin": 487, "originalText": "exponentially", "ArgType": null, "before": " "}, {"index": 18, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 505, "segment_span": [13, 19], "characterOffsetBegin": 501, "originalText": "many", "ArgType": null, "before": " "}, {"index": 19, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 512, "segment_span": [13, 19], "characterOffsetBegin": 506, "originalText": "parses", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 513, "characterOffsetBegin": 512, "originalText": ".", "ArgType": null, "before": ""}], "text": "So we propose a novel approach which extracts rules from a packed forest that compactly encodes exponentially many parses ."}, {"tokens": [{"index": 1, "word": "Experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 525, "segment_span": [0, 2], "characterOffsetBegin": 514, "originalText": "Experiments", "ArgType": "subj", "before": " "}, {"index": 2, "word": "show", "characterOffsetEnd": 530, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [0, 2], "tense": "P", "characterOffsetBegin": 526, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 535, "segment_span": [2, 30], "characterOffsetBegin": 531, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 540, "segment_span": [2, 30], "characterOffsetBegin": 536, "originalText": "this", "ArgType": null, "before": " "}, {"index": 5, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 547, "segment_span": [2, 30], "characterOffsetBegin": 541, "originalText": "method", "ArgType": "subj", "before": " "}, {"index": 6, "word": "improves", "characterOffsetEnd": 556, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [2, 30], "tense": "Z", "characterOffsetBegin": 548, "originalText": "improves", "ArgType": null, "before": " "}, {"index": 7, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 568, "segment_span": [2, 30], "characterOffsetBegin": 557, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 8, "word": "quality", "lemma": "quality", "after": " ", "pos": "NN", "characterOffsetEnd": 576, "segment_span": [2, 30], "characterOffsetBegin": 569, "originalText": "quality", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 579, "segment_span": [2, 30], "characterOffsetBegin": 577, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 584, "segment_span": [2, 30], "characterOffsetBegin": 580, "originalText": "over", "ArgType": null, "before": " "}, {"index": 11, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 586, "segment_span": [2, 30], "characterOffsetBegin": 585, "originalText": "1", "ArgType": null, "before": " "}, {"index": 12, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 591, "segment_span": [2, 30], "characterOffsetBegin": 587, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 13, "word": "point", "lemma": "point", "after": " ", "pos": "NN", "characterOffsetEnd": 597, "segment_span": [2, 30], "characterOffsetBegin": 592, "originalText": "point", "ArgType": null, "before": " "}, {"index": 14, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 600, "segment_span": [2, 30], "characterOffsetBegin": 598, "originalText": "on", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 602, "segment_span": [2, 30], "characterOffsetBegin": 601, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 619, "segment_span": [2, 30], "characterOffsetBegin": 603, "originalText": "state-of-the-art", "ArgType": null, "before": " "}, {"index": 17, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "NN", "characterOffsetEnd": 634, "segment_span": [2, 30], "characterOffsetBegin": 620, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 18, "word": "system", "lemma": "system", "after": "", "pos": "NN", "characterOffsetEnd": 641, "segment_span": [2, 30], "characterOffsetBegin": 635, "originalText": "system", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 642, "segment_span": [2, 30], "characterOffsetBegin": 641, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 646, "segment_span": [2, 30], "characterOffsetBegin": 643, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 649, "segment_span": [2, 30], "characterOffsetBegin": 647, "originalText": "is", "ArgType": null, "before": " "}, {"index": 22, "word": "0.5", "lemma": "0.5", "after": " ", "pos": "CD", "characterOffsetEnd": 653, "segment_span": [2, 30], "characterOffsetBegin": 650, "originalText": "0.5", "ArgType": null, "before": " "}, {"index": 23, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 660, "segment_span": [2, 30], "characterOffsetBegin": 654, "originalText": "points", "ArgType": null, "before": " "}, {"index": 24, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 667, "segment_span": [2, 30], "characterOffsetBegin": 661, "originalText": "better", "ArgType": null, "before": " "}, {"index": 25, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 672, "segment_span": [2, 30], "characterOffsetBegin": 668, "originalText": "than", "ArgType": null, "before": " "}, {"index": 26, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 674, "segment_span": [2, 30], "characterOffsetBegin": 673, "originalText": "(", "ArgType": null, "before": " "}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 677, "segment_span": [2, 30], "characterOffsetBegin": 674, "originalText": "and", "ArgType": null, "before": ""}, {"index": 28, "word": "twice", "lemma": "twice", "after": " ", "pos": "RB", "characterOffsetEnd": 683, "segment_span": [2, 30], "characterOffsetBegin": 678, "originalText": "twice", "ArgType": null, "before": " "}, {"index": 29, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 686, "segment_span": [2, 30], "characterOffsetBegin": 684, "originalText": "as", "ArgType": null, "before": " "}, {"index": 30, "word": "fast", "lemma": "fast", "after": " ", "pos": "JJ", "characterOffsetEnd": 691, "segment_span": [2, 30], "characterOffsetBegin": 687, "originalText": "fast", "ArgType": null, "before": " "}, {"index": 31, "word": "as", "lemma": "as", "after": "", "pos": "IN", "characterOffsetEnd": 694, "segment_span": [30, 36], "characterOffsetBegin": 692, "originalText": "as", "ArgType": null, "before": " "}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 695, "segment_span": [30, 36], "characterOffsetBegin": 694, "originalText": ")", "ArgType": null, "before": ""}, {"index": 33, "word": "extracting", "characterOffsetEnd": 706, "after": " ", "pos": "VBG", "is_root": true, "lemma": "extract", "segment_span": [30, 36], "tense": "G", "characterOffsetBegin": 696, "originalText": "extracting", "ArgType": null, "before": " "}, {"index": 34, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 709, "segment_span": [30, 36], "characterOffsetBegin": 707, "originalText": "on", "ArgType": null, "before": " "}, {"index": 35, "word": "30best", "lemma": "30best", "after": " ", "pos": "CD", "characterOffsetEnd": 716, "segment_span": [30, 36], "characterOffsetBegin": 710, "originalText": "30best", "ArgType": null, "before": " "}, {"index": 36, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 723, "segment_span": [30, 36], "characterOffsetBegin": 717, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 37, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 724, "characterOffsetBegin": 723, "originalText": ".", "ArgType": null, "before": ""}], "text": "Experiments show that this method improves translation quality by over 1 BLEU point on a state-of-the-art tree-to-string system , and is 0.5 points better than ( and twice as fast as ) extracting on 30best parses ."}, {"tokens": [{"index": 1, "word": "When", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 729, "segment_span": [0, 9], "characterOffsetBegin": 725, "originalText": "When", "ArgType": null, "before": " "}, {"index": 2, "word": "combined", "characterOffsetEnd": 738, "after": " ", "pos": "VBN", "is_root": true, "lemma": "combine", "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 730, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 743, "segment_span": [0, 9], "characterOffsetBegin": 739, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 747, "segment_span": [0, 9], "characterOffsetBegin": 744, "originalText": "our", "ArgType": null, "before": " "}, {"index": 5, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 756, "segment_span": [0, 9], "characterOffsetBegin": 748, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 6, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 761, "segment_span": [0, 9], "characterOffsetBegin": 757, "originalText": "work", "ArgType": null, "before": " "}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 764, "segment_span": [0, 9], "characterOffsetBegin": 762, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 777, "segment_span": [0, 9], "characterOffsetBegin": 765, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 9, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 786, "segment_span": [0, 9], "characterOffsetBegin": 778, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 787, "segment_span": [9, 22], "characterOffsetBegin": 786, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 790, "segment_span": [9, 22], "characterOffsetBegin": 788, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 12, "word": "achieves", "characterOffsetEnd": 799, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "achieve", "segment_span": [9, 22], "tense": "Z", "characterOffsetBegin": 791, "originalText": "achieves", "ArgType": "verb", "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 801, "segment_span": [9, 22], "characterOffsetBegin": 800, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "2.5", "lemma": "2.5", "after": " ", "pos": "CD", "characterOffsetEnd": 805, "segment_span": [9, 22], "characterOffsetBegin": 802, "originalText": "2.5", "ArgType": null, "before": " "}, {"index": 15, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 810, "segment_span": [9, 22], "characterOffsetBegin": 806, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 16, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 817, "segment_span": [9, 22], "characterOffsetBegin": 811, "originalText": "points", "ArgType": null, "before": " "}, {"index": 17, "word": "improvement", "lemma": "improvement", "after": " ", "pos": "NN", "characterOffsetEnd": 829, "segment_span": [9, 22], "characterOffsetBegin": 818, "originalText": "improvement", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 834, "segment_span": [9, 22], "characterOffsetBegin": 830, "originalText": "over", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 838, "segment_span": [9, 22], "characterOffsetBegin": 835, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "baseline", "lemma": "baseline", "after": "", "pos": "NN", "characterOffsetEnd": 847, "segment_span": [9, 22], "characterOffsetBegin": 839, "originalText": "baseline", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 848, "segment_span": [9, 22], "characterOffsetBegin": 847, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 852, "segment_span": [9, 22], "characterOffsetBegin": 849, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 857, "segment_span": [22, 32], "characterOffsetBegin": 853, "originalText": "even", "ArgType": null, "before": " "}, {"index": 24, "word": "outperforms", "characterOffsetEnd": 869, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "outperform", "segment_span": [22, 32], "tense": "Z", "characterOffsetBegin": 858, "originalText": "outperforms", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 873, "segment_span": [22, 32], "characterOffsetBegin": 870, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "hierarchical", "lemma": "hierarchical", "after": " ", "pos": "JJ", "characterOffsetEnd": 886, "segment_span": [22, 32], "characterOffsetBegin": 874, "originalText": "hierarchical", "ArgType": null, "before": " "}, {"index": 27, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 893, "segment_span": [22, 32], "characterOffsetBegin": 887, "originalText": "system", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 896, "segment_span": [22, 32], "characterOffsetBegin": 894, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "Hiero", "lemma": "hiero", "after": " ", "pos": "NN", "characterOffsetEnd": 902, "segment_span": [22, 32], "characterOffsetBegin": 897, "originalText": "Hiero", "ArgType": null, "before": " "}, {"index": 30, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 905, "segment_span": [22, 32], "characterOffsetBegin": 903, "originalText": "by", "ArgType": null, "before": " "}, {"index": 31, "word": "0.7", "lemma": "0.7", "after": " ", "pos": "CD", "characterOffsetEnd": 909, "segment_span": [22, 32], "characterOffsetBegin": 906, "originalText": "0.7", "ArgType": null, "before": " "}, {"index": 32, "word": "points", "lemma": "point", "after": "", "pos": "NNS", "characterOffsetEnd": 916, "segment_span": [22, 32], "characterOffsetBegin": 910, "originalText": "points", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 917, "characterOffsetBegin": 916, "originalText": ".", "ArgType": null, "before": ""}], "text": "When combined with our previous work on forest-based decoding , it achieves a 2.5 BLEU points improvement over the baseline , and even outperforms the hierarchical system of Hiero by 0.7 points ."}]}]}, {"num": 1, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "Automatic", "lemma": "Automatic", "after": " ", "pos": "NNP", "characterOffsetEnd": 9, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "Automatic", "ArgType": null, "before": ""}, {"index": 2, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 19], "characterOffsetBegin": 10, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 19], "characterOffsetBegin": 21, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 19], "characterOffsetBegin": 24, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 5, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 41, "segment_span": [0, 19], "characterOffsetBegin": 36, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 44, "segment_span": [0, 19], "characterOffsetBegin": 42, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [0, 19], "characterOffsetBegin": 45, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "fundamental", "lemma": "fundamental", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [0, 19], "characterOffsetBegin": 47, "originalText": "fundamental", "ArgType": null, "before": " "}, {"index": 9, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 19], "characterOffsetBegin": 59, "originalText": "problem", "ArgType": "verb", "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 69, "segment_span": [0, 19], "characterOffsetBegin": 67, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "statistical", "lemma": "statistical", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [0, 19], "characterOffsetBegin": 70, "originalText": "statistical", "ArgType": null, "before": " "}, {"index": 12, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 89, "segment_span": [0, 19], "characterOffsetBegin": 82, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 13, "word": "translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 19], "characterOffsetBegin": 90, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 102, "segment_span": [0, 19], "characterOffsetBegin": 101, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "especially", "lemma": "especially", "after": " ", "pos": "RB", "characterOffsetEnd": 113, "segment_span": [0, 19], "characterOffsetBegin": 103, "originalText": "especially", "ArgType": null, "before": " "}, {"index": 16, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 117, "segment_span": [0, 19], "characterOffsetBegin": 114, "originalText": "for", "ArgType": null, "before": " "}, {"index": 17, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [0, 19], "characterOffsetBegin": 118, "originalText": "many", "ArgType": null, "before": " "}, {"index": 18, "word": "syntax-based", "lemma": "syntax-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 135, "segment_span": [0, 19], "characterOffsetBegin": 123, "originalText": "syntax-based", "ArgType": null, "before": " "}, {"index": 19, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 142, "segment_span": [0, 19], "characterOffsetBegin": 136, "originalText": "models", "ArgType": null, "before": " "}, {"index": 20, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 148, "segment_span": [19, 26], "characterOffsetBegin": 143, "originalText": "where", "ArgType": null, "before": " "}, {"index": 21, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [19, 26], "characterOffsetBegin": 149, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 22, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 166, "segment_span": [19, 26], "characterOffsetBegin": 161, "originalText": "rules", "ArgType": "subj", "before": " "}, {"index": 23, "word": "directly", "lemma": "directly", "after": " ", "pos": "RB", "characterOffsetEnd": 175, "segment_span": [19, 26], "characterOffsetBegin": 167, "originalText": "directly", "ArgType": null, "before": " "}, {"index": 24, "word": "encode", "characterOffsetEnd": 182, "after": " ", "pos": "VBP", "is_root": true, "lemma": "encode", "segment_span": [19, 26], "tense": "P", "characterOffsetBegin": 176, "originalText": "encode", "ArgType": null, "before": " "}, {"index": 25, "word": "linguistic", "lemma": "linguistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 193, "segment_span": [19, 26], "characterOffsetBegin": 183, "originalText": "linguistic", "ArgType": null, "before": " "}, {"index": 26, "word": "knowledge", "lemma": "knowledge", "after": "", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [19, 26], "characterOffsetBegin": 194, "originalText": "knowledge", "ArgType": "dobj", "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 204, "characterOffsetBegin": 203, "originalText": ".", "ArgType": null, "before": ""}], "text": "Automatic extraction of translation rules is a fundamental problem in statistical machine translation , especially for many syntax-based models where translation rules directly encode linguistic knowledge ."}, {"tokens": [{"index": 1, "word": "Typically", "lemma": "typically", "after": "", "pos": "RB", "characterOffsetEnd": 214, "segment_span": [0, 20], "characterOffsetBegin": 205, "originalText": "Typically", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 215, "segment_span": [0, 20], "characterOffsetBegin": 214, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 221, "segment_span": [0, 20], "characterOffsetBegin": 216, "originalText": "these", "ArgType": null, "before": " "}, {"index": 4, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 228, "segment_span": [0, 20], "characterOffsetBegin": 222, "originalText": "models", "ArgType": "subj", "before": " "}, {"index": 5, "word": "extract", "characterOffsetEnd": 236, "after": " ", "pos": "VBP", "is_root": true, "lemma": "extract", "segment_span": [0, 20], "tense": "P", "characterOffsetBegin": 229, "originalText": "extract", "ArgType": "verb", "before": " "}, {"index": 6, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 242, "segment_span": [0, 20], "characterOffsetBegin": 237, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 248, "segment_span": [0, 20], "characterOffsetBegin": 243, "originalText": "using", "ArgType": null, "before": " "}, {"index": 8, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 254, "segment_span": [0, 20], "characterOffsetBegin": 249, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 9, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 260, "segment_span": [0, 20], "characterOffsetBegin": 255, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 265, "segment_span": [0, 20], "characterOffsetBegin": 261, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 270, "segment_span": [0, 20], "characterOffsetBegin": 266, "originalText": "both", "ArgType": null, "before": " "}, {"index": 12, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 273, "segment_span": [0, 20], "characterOffsetBegin": 271, "originalText": "or", "ArgType": null, "before": " "}, {"index": 13, "word": "either", "lemma": "either", "after": " ", "pos": "DT", "characterOffsetEnd": 280, "segment_span": [0, 20], "characterOffsetBegin": 274, "originalText": "either", "ArgType": null, "before": " "}, {"index": 14, "word": "side", "lemma": "side", "after": "", "pos": "NN", "characterOffsetEnd": 285, "segment_span": [0, 20], "characterOffsetBegin": 281, "originalText": "side", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 286, "segment_span": [0, 20], "characterOffsetBegin": 285, "originalText": "(", "ArgType": null, "before": ""}, {"index": 16, "word": "s", "lemma": "s", "after": "", "pos": "NNS", "characterOffsetEnd": 287, "segment_span": [0, 20], "characterOffsetBegin": 286, "originalText": "s", "ArgType": null, "before": ""}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 288, "segment_span": [0, 20], "characterOffsetBegin": 287, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 291, "segment_span": [0, 20], "characterOffsetBegin": 289, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 295, "segment_span": [0, 20], "characterOffsetBegin": 292, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "bitext", "lemma": "bitext", "after": "", "pos": "NN", "characterOffsetEnd": 302, "segment_span": [0, 20], "characterOffsetBegin": 296, "originalText": "bitext", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 303, "characterOffsetBegin": 302, "originalText": ".", "ArgType": null, "before": ""}], "text": "Typically , these models extract rules using parse trees from both or either side ( s ) of the bitext ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 307, "segment_span": [0, 16], "characterOffsetBegin": 304, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "former", "lemma": "former", "after": " ", "pos": "JJ", "characterOffsetEnd": 314, "segment_span": [0, 16], "characterOffsetBegin": 308, "originalText": "former", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": "", "pos": "NN", "characterOffsetEnd": 319, "segment_span": [0, 16], "characterOffsetBegin": 315, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 320, "segment_span": [0, 16], "characterOffsetBegin": 319, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 325, "segment_span": [0, 16], "characterOffsetBegin": 321, "originalText": "with", "ArgType": null, "before": " "}, {"index": 6, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 331, "segment_span": [0, 16], "characterOffsetBegin": 326, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 334, "segment_span": [0, 16], "characterOffsetBegin": 332, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 339, "segment_span": [0, 16], "characterOffsetBegin": 335, "originalText": "both", "ArgType": null, "before": " "}, {"index": 9, "word": "sides", "lemma": "side", "after": "", "pos": "NNS", "characterOffsetEnd": 345, "segment_span": [0, 16], "characterOffsetBegin": 340, "originalText": "sides", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 346, "segment_span": [0, 16], "characterOffsetBegin": 345, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 349, "segment_span": [0, 16], "characterOffsetBegin": 347, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 355, "segment_span": [0, 16], "characterOffsetBegin": 350, "originalText": "often", "ArgType": null, "before": " "}, {"index": 13, "word": "called", "characterOffsetEnd": 362, "after": " ", "pos": "VBN", "is_root": true, "lemma": "call", "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 356, "before": " ", "originalText": "called", "ArgType": null, "is_pass": true}, {"index": 14, "word": "tree-to-tree", "lemma": "tree-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 375, "segment_span": [0, 16], "characterOffsetBegin": 363, "originalText": "tree-to-tree", "ArgType": null, "before": " "}, {"index": 15, "word": "models", "lemma": "model", "after": "", "pos": "NNS", "characterOffsetEnd": 382, "segment_span": [0, 16], "characterOffsetBegin": 376, "originalText": "models", "ArgType": null, "before": " "}, {"index": 16, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 383, "segment_span": [0, 16], "characterOffsetBegin": 382, "originalText": ";", "ArgType": null, "before": ""}, {"index": 17, "word": "while", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 389, "segment_span": [16, 41], "characterOffsetBegin": 384, "originalText": "while", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 393, "segment_span": [16, 41], "characterOffsetBegin": 390, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "latter", "lemma": "latter", "after": " ", "pos": "JJ", "characterOffsetEnd": 400, "segment_span": [16, 41], "characterOffsetBegin": 394, "originalText": "latter", "ArgType": null, "before": " "}, {"index": 20, "word": "case", "lemma": "case", "after": "", "pos": "NN", "characterOffsetEnd": 405, "segment_span": [16, 41], "characterOffsetBegin": 401, "originalText": "case", "ArgType": "subj", "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 406, "segment_span": [16, 41], "characterOffsetBegin": 405, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 411, "segment_span": [16, 41], "characterOffsetBegin": 407, "originalText": "with", "ArgType": null, "before": " "}, {"index": 23, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 417, "segment_span": [16, 41], "characterOffsetBegin": 412, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 24, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 420, "segment_span": [16, 41], "characterOffsetBegin": 418, "originalText": "on", "ArgType": null, "before": " "}, {"index": 25, "word": "either", "lemma": "either", "after": " ", "pos": "CC", "characterOffsetEnd": 427, "segment_span": [16, 41], "characterOffsetBegin": 421, "originalText": "either", "ArgType": null, "before": " "}, {"index": 26, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 434, "segment_span": [16, 41], "characterOffsetBegin": 428, "originalText": "source", "ArgType": null, "before": " "}, {"index": 27, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 437, "segment_span": [16, 41], "characterOffsetBegin": 435, "originalText": "or", "ArgType": null, "before": " "}, {"index": 28, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 444, "segment_span": [16, 41], "characterOffsetBegin": 438, "originalText": "target", "ArgType": null, "before": " "}, {"index": 29, "word": "side", "lemma": "side", "after": "", "pos": "NN", "characterOffsetEnd": 449, "segment_span": [16, 41], "characterOffsetBegin": 445, "originalText": "side", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 450, "segment_span": [16, 41], "characterOffsetBegin": 449, "originalText": ",", "ArgType": null, "before": ""}, {"index": 31, "word": "include", "characterOffsetEnd": 458, "after": " ", "pos": "VBP", "is_root": true, "lemma": "include", "segment_span": [16, 41], "tense": "P", "characterOffsetBegin": 451, "originalText": "include", "ArgType": null, "before": " "}, {"index": 32, "word": "both", "lemma": "both", "after": " ", "pos": "CC", "characterOffsetEnd": 463, "segment_span": [16, 41], "characterOffsetBegin": 459, "originalText": "both", "ArgType": null, "before": " "}, {"index": 33, "word": "treeto-string", "lemma": "treeto-string", "after": " ", "pos": "JJ", "characterOffsetEnd": 477, "segment_span": [16, 41], "characterOffsetBegin": 464, "originalText": "treeto-string", "ArgType": null, "before": " "}, {"index": 34, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 481, "segment_span": [16, 41], "characterOffsetBegin": 478, "originalText": "and", "ArgType": null, "before": " "}, {"index": 35, "word": "string-to-tree", "lemma": "string-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 496, "segment_span": [16, 41], "characterOffsetBegin": 482, "originalText": "string-to-tree", "ArgType": null, "before": " "}, {"index": 36, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 503, "segment_span": [16, 41], "characterOffsetBegin": 497, "originalText": "models", "ArgType": "dobj", "before": " "}, {"index": 37, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 505, "segment_span": [16, 41], "characterOffsetBegin": 504, "originalText": "(", "ArgType": null, "before": " "}, {"index": 38, "word": "see", "lemma": "see", "after": " ", "pos": "VB", "characterOffsetEnd": 508, "segment_span": [16, 41], "characterOffsetBegin": 505, "originalText": "see", "ArgType": null, "before": ""}, {"index": 39, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 514, "segment_span": [16, 41], "characterOffsetBegin": 509, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 40, "word": "1", "lemma": "1", "after": "", "pos": "LS", "characterOffsetEnd": 516, "segment_span": [16, 41], "characterOffsetBegin": 515, "originalText": "1", "ArgType": "dobj", "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 517, "segment_span": [16, 41], "characterOffsetBegin": 516, "originalText": ")", "ArgType": null, "before": ""}, {"index": 42, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 518, "characterOffsetBegin": 517, "originalText": ".", "ArgType": null, "before": ""}], "text": "The former case , with trees on both sides , is often called tree-to-tree models ; while the latter case , with trees on either source or target side , include both treeto-string and string-to-tree models ( see Table 1 ) ."}, {"tokens": [{"index": 1, "word": "Leveraging", "characterOffsetEnd": 529, "after": " ", "pos": "VBG", "is_root": true, "lemma": "leverage", "segment_span": [0, 9], "tense": "G", "characterOffsetBegin": 519, "originalText": "Leveraging", "ArgType": null, "before": " "}, {"index": 2, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 534, "segment_span": [0, 9], "characterOffsetBegin": 530, "originalText": "from", "ArgType": null, "before": " "}, {"index": 3, "word": "structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 545, "segment_span": [0, 9], "characterOffsetBegin": 535, "originalText": "structural", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 549, "segment_span": [0, 9], "characterOffsetBegin": 546, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "linguistic", "lemma": "linguistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 560, "segment_span": [0, 9], "characterOffsetBegin": 550, "originalText": "linguistic", "ArgType": null, "before": " "}, {"index": 6, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 572, "segment_span": [0, 9], "characterOffsetBegin": 561, "originalText": "information", "ArgType": null, "before": " "}, {"index": 7, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 577, "segment_span": [0, 9], "characterOffsetBegin": 573, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 583, "segment_span": [0, 9], "characterOffsetBegin": 578, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 9, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 589, "segment_span": [0, 9], "characterOffsetBegin": 584, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 590, "segment_span": [9, 24], "characterOffsetBegin": 589, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 596, "segment_span": [9, 24], "characterOffsetBegin": 591, "originalText": "these", "ArgType": null, "before": " "}, {"index": 12, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 603, "segment_span": [9, 24], "characterOffsetBegin": 597, "originalText": "models", "ArgType": null, "before": " "}, {"index": 13, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 607, "segment_span": [9, 24], "characterOffsetBegin": 604, "originalText": "are", "ArgType": null, "before": " "}, {"index": 14, "word": "believed", "characterOffsetEnd": 616, "after": " ", "pos": "VBN", "is_root": true, "lemma": "believe", "segment_span": [9, 24], "tense": "N", "characterOffsetBegin": 608, "before": " ", "originalText": "believed", "ArgType": null, "is_pass": true}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 619, "segment_span": [9, 24], "characterOffsetBegin": 617, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 622, "segment_span": [9, 24], "characterOffsetBegin": 620, "originalText": "be", "ArgType": null, "before": " "}, {"index": 17, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 629, "segment_span": [9, 24], "characterOffsetBegin": 623, "originalText": "better", "ArgType": null, "before": " "}, {"index": 18, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 634, "segment_span": [9, 24], "characterOffsetBegin": 630, "originalText": "than", "ArgType": null, "before": " "}, {"index": 19, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 640, "segment_span": [9, 24], "characterOffsetBegin": 635, "originalText": "their", "ArgType": null, "before": " "}, {"index": 20, "word": "phrase-based", "lemma": "phrase-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 653, "segment_span": [9, 24], "characterOffsetBegin": 641, "originalText": "phrase-based", "ArgType": null, "before": " "}, {"index": 21, "word": "counterparts", "lemma": "counterpart", "after": " ", "pos": "NNS", "characterOffsetEnd": 666, "segment_span": [9, 24], "characterOffsetBegin": 654, "originalText": "counterparts", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 669, "segment_span": [9, 24], "characterOffsetBegin": 667, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "JJ", "characterOffsetEnd": 684, "segment_span": [9, 24], "characterOffsetBegin": 670, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 24, "word": "string-to-tree", "lemma": "string-to-tree", "after": "", "pos": "NN", "characterOffsetEnd": 699, "segment_span": [9, 24], "characterOffsetBegin": 685, "originalText": "string-to-tree", "ArgType": null, "before": " "}], "text": "Leveraging from structural and linguistic information from parse trees , these models are believed to be better than their phrase-based counterparts in tree-to-string string-to-tree"}, {"tokens": [{"index": 1, "word": "handling", "characterOffsetEnd": 8, "after": " ", "pos": "VBG", "is_root": true, "lemma": "handle", "segment_span": [0, 5], "tense": "G", "characterOffsetBegin": 0, "originalText": "handling", "ArgType": null, "before": ""}, {"index": 2, "word": "non-local", "lemma": "non-local", "after": " ", "pos": "JJ", "characterOffsetEnd": 18, "segment_span": [0, 5], "characterOffsetBegin": 9, "originalText": "non-local", "ArgType": null, "before": " "}, {"index": 3, "word": "reorderings", "lemma": "reordering", "after": "", "pos": "NNS", "characterOffsetEnd": 30, "segment_span": [0, 5], "characterOffsetBegin": 19, "originalText": "reorderings", "ArgType": "dobj", "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 31, "segment_span": [0, 5], "characterOffsetBegin": 30, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 35, "segment_span": [0, 5], "characterOffsetBegin": 32, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 40, "segment_span": [5, 7], "characterOffsetBegin": 36, "originalText": "have", "ArgType": null, "before": " "}, {"index": 7, "word": "achieved", "characterOffsetEnd": 49, "after": " ", "pos": "VBN", "is_root": true, "lemma": "achieve", "segment_span": [5, 7], "tense": "N", "characterOffsetBegin": 41, "originalText": "achieved", "has_aux": true, "ArgType": null, "before": " "}, {"index": 8, "word": "promising", "lemma": "promising", "after": " ", "pos": "JJ", "characterOffsetEnd": 59, "segment_span": [7, 24], "characterOffsetBegin": 50, "originalText": "promising", "ArgType": null, "before": " "}, {"index": 9, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [7, 24], "characterOffsetBegin": 60, "originalText": "translation", "ArgType": "subj", "before": " "}, {"index": 10, "word": "results", "characterOffsetEnd": 79, "after": "", "pos": "VBZ", "is_root": true, "lemma": "result", "segment_span": [7, 24], "tense": "Z", "characterOffsetBegin": 72, "originalText": "results", "ArgType": null, "before": " "}, {"index": 11, "word": ".1", "lemma": ".1", "after": " ", "pos": "CD", "characterOffsetEnd": 81, "segment_span": [7, 24], "characterOffsetBegin": 79, "originalText": ".1", "ArgType": "dobj", "before": ""}, {"index": 12, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 89, "segment_span": [7, 24], "characterOffsetBegin": 82, "originalText": "However", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 90, "segment_span": [7, 24], "characterOffsetBegin": 89, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 96, "segment_span": [13, 20], "characterOffsetBegin": 91, "originalText": "these", "ArgType": null, "before": " "}, {"index": 15, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 104, "segment_span": [13, 20], "characterOffsetBegin": 97, "originalText": "systems", "ArgType": "subj", "before": " "}, {"index": 16, "word": "suffer", "characterOffsetEnd": 111, "after": " ", "pos": "VBP", "is_root": true, "lemma": "suffer", "segment_span": [13, 20], "tense": "P", "characterOffsetBegin": 105, "originalText": "suffer", "ArgType": null, "before": " "}, {"index": 17, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 116, "segment_span": [13, 20], "characterOffsetBegin": 112, "originalText": "from", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [13, 20], "characterOffsetBegin": 117, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "major", "lemma": "major", "after": " ", "pos": "JJ", "characterOffsetEnd": 124, "segment_span": [13, 20], "characterOffsetBegin": 119, "originalText": "major", "ArgType": null, "before": " "}, {"index": 20, "word": "limitation", "lemma": "limitation", "after": "", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [13, 20], "characterOffsetBegin": 125, "originalText": "limitation", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 136, "segment_span": [7, 24], "characterOffsetBegin": 135, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [7, 24], "characterOffsetBegin": 137, "originalText": "that", "ArgType": "verb", "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 145, "segment_span": [7, 24], "characterOffsetBegin": 142, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [7, 24], "characterOffsetBegin": 146, "originalText": "rule", "ArgType": "subj", "before": " "}, {"index": 25, "word": "extractor", "lemma": "extractor", "after": " ", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [24, 34], "characterOffsetBegin": 151, "originalText": "extractor", "ArgType": "subj", "before": " "}, {"index": 26, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 165, "segment_span": [24, 34], "characterOffsetBegin": 161, "originalText": "only", "ArgType": null, "before": " "}, {"index": 27, "word": "uses", "characterOffsetEnd": 170, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "use", "segment_span": [24, 34], "tense": "Z", "characterOffsetBegin": 166, "originalText": "uses", "ArgType": null, "before": " "}, {"index": 28, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 177, "segment_span": [24, 34], "characterOffsetBegin": 171, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 29, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [24, 34], "characterOffsetBegin": 178, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 30, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 188, "segment_span": [24, 34], "characterOffsetBegin": 184, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 189, "segment_span": [24, 34], "characterOffsetBegin": 188, "originalText": "(", "ArgType": null, "before": ""}, {"index": 32, "word": "s", "lemma": "s", "after": "", "pos": "NNS", "characterOffsetEnd": 190, "segment_span": [24, 34], "characterOffsetBegin": 189, "originalText": "s", "ArgType": null, "before": ""}, {"index": 33, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 191, "segment_span": [24, 34], "characterOffsetBegin": 190, "originalText": ")", "ArgType": null, "before": ""}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 192, "segment_span": [24, 34], "characterOffsetBegin": 191, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 198, "segment_span": [34, 45], "characterOffsetBegin": 193, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 36, "word": "adversely", "lemma": "adversely", "after": " ", "pos": "RB", "characterOffsetEnd": 208, "segment_span": [34, 45], "characterOffsetBegin": 199, "originalText": "adversely", "ArgType": null, "before": " "}, {"index": 37, "word": "affects", "characterOffsetEnd": 216, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "affect", "segment_span": [34, 45], "tense": "Z", "characterOffsetBegin": 209, "originalText": "affects", "ArgType": null, "before": " "}, {"index": 38, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 220, "segment_span": [34, 45], "characterOffsetBegin": 217, "originalText": "the", "ArgType": null, "before": " "}, {"index": 39, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 225, "segment_span": [34, 45], "characterOffsetBegin": 221, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 40, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 229, "segment_span": [34, 45], "characterOffsetBegin": 226, "originalText": "set", "ArgType": null, "before": " "}, {"index": 41, "word": "quality", "lemma": "quality", "after": " ", "pos": "NN", "characterOffsetEnd": 237, "segment_span": [34, 45], "characterOffsetBegin": 230, "originalText": "quality", "ArgType": "dobj", "before": " "}, {"index": 42, "word": "due", "lemma": "due", "after": " ", "pos": "JJ", "characterOffsetEnd": 241, "segment_span": [34, 45], "characterOffsetBegin": 238, "originalText": "due", "ArgType": null, "before": " "}, {"index": 43, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 244, "segment_span": [34, 45], "characterOffsetBegin": 242, "originalText": "to", "ArgType": null, "before": " "}, {"index": 44, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "JJ", "characterOffsetEnd": 252, "segment_span": [34, 45], "characterOffsetBegin": 245, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 45, "word": "errors", "lemma": "error", "after": "", "pos": "NNS", "characterOffsetEnd": 259, "segment_span": [34, 45], "characterOffsetBegin": 253, "originalText": "errors", "ArgType": null, "before": " "}, {"index": 46, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 260, "characterOffsetBegin": 259, "originalText": ".", "ArgType": null, "before": ""}], "text": "handling non-local reorderings , and have achieved promising translation results .1 However , these systems suffer from a major limitation , that the rule extractor only uses 1-best parse tree ( s ) , which adversely affects the rule set quality due to parsing errors ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 263, "segment_span": [0, 4], "characterOffsetBegin": 261, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "make", "characterOffsetEnd": 268, "after": " ", "pos": "VB", "is_root": true, "lemma": "make", "segment_span": [0, 4], "tense": "B", "characterOffsetBegin": 264, "originalText": "make", "ArgType": null, "before": " "}, {"index": 3, "word": "things", "lemma": "thing", "after": " ", "pos": "NNS", "characterOffsetEnd": 275, "segment_span": [0, 4], "characterOffsetBegin": 269, "originalText": "things", "ArgType": "subj", "before": " "}, {"index": 4, "word": "worse", "lemma": "worse", "after": "", "pos": "JJR", "characterOffsetEnd": 281, "segment_span": [0, 4], "characterOffsetBegin": 276, "originalText": "worse", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 282, "segment_span": [4, 23], "characterOffsetBegin": 281, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "modern", "lemma": "modern", "after": " ", "pos": "JJ", "characterOffsetEnd": 289, "segment_span": [4, 23], "characterOffsetBegin": 283, "originalText": "modern", "ArgType": null, "before": " "}, {"index": 7, "word": "statistical", "lemma": "statistical", "after": " ", "pos": "JJ", "characterOffsetEnd": 301, "segment_span": [4, 23], "characterOffsetBegin": 290, "originalText": "statistical", "ArgType": null, "before": " "}, {"index": 8, "word": "parsers", "lemma": "parser", "after": " ", "pos": "NNS", "characterOffsetEnd": 309, "segment_span": [4, 23], "characterOffsetBegin": 302, "originalText": "parsers", "ArgType": null, "before": " "}, {"index": 9, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 313, "segment_span": [4, 23], "characterOffsetBegin": 310, "originalText": "are", "ArgType": null, "before": " "}, {"index": 10, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 319, "segment_span": [4, 23], "characterOffsetBegin": 314, "originalText": "often", "ArgType": null, "before": " "}, {"index": 11, "word": "trained", "characterOffsetEnd": 327, "after": " ", "pos": "VBN", "is_root": true, "lemma": "train", "segment_span": [4, 23], "tense": "N", "characterOffsetBegin": 320, "before": " ", "originalText": "trained", "ArgType": null, "is_pass": true}, {"index": 12, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 330, "segment_span": [4, 23], "characterOffsetBegin": 328, "originalText": "on", "ArgType": null, "before": " "}, {"index": 13, "word": "domains", "lemma": "domain", "after": " ", "pos": "NNS", "characterOffsetEnd": 338, "segment_span": [4, 23], "characterOffsetBegin": 331, "originalText": "domains", "ArgType": null, "before": " "}, {"index": 14, "word": "quite", "lemma": "quite", "after": " ", "pos": "RB", "characterOffsetEnd": 344, "segment_span": [4, 23], "characterOffsetBegin": 339, "originalText": "quite", "ArgType": null, "before": " "}, {"index": 15, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 354, "segment_span": [4, 23], "characterOffsetBegin": 345, "originalText": "different", "ArgType": null, "before": " "}, {"index": 16, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 359, "segment_span": [4, 23], "characterOffsetBegin": 355, "originalText": "from", "ArgType": null, "before": " "}, {"index": 17, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 365, "segment_span": [4, 23], "characterOffsetBegin": 360, "originalText": "those", "ArgType": null, "before": " "}, {"index": 18, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 370, "segment_span": [4, 23], "characterOffsetBegin": 366, "originalText": "used", "ArgType": null, "before": " "}, {"index": 19, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 373, "segment_span": [4, 23], "characterOffsetBegin": 371, "originalText": "in", "ArgType": null, "before": " "}, {"index": 20, "word": "MT.", "lemma": "MT.", "after": " ", "pos": "NNP", "characterOffsetEnd": 377, "segment_span": [4, 23], "characterOffsetBegin": 374, "originalText": "MT.", "ArgType": null, "before": " "}, {"index": 21, "word": "By", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 380, "segment_span": [4, 23], "characterOffsetBegin": 378, "originalText": "By", "ArgType": null, "before": " "}, {"index": 22, "word": "contrast", "lemma": "contrast", "after": "", "pos": "NN", "characterOffsetEnd": 389, "segment_span": [4, 23], "characterOffsetBegin": 381, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 390, "segment_span": [4, 23], "characterOffsetBegin": 389, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "formally", "lemma": "formally", "after": " ", "pos": "RB", "characterOffsetEnd": 399, "segment_span": [23, 47], "characterOffsetBegin": 391, "originalText": "formally", "ArgType": null, "before": " "}, {"index": 25, "word": "syntax-based", "lemma": "syntax-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 412, "segment_span": [23, 47], "characterOffsetBegin": 400, "originalText": "syntax-based", "ArgType": null, "before": " "}, {"index": 26, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 419, "segment_span": [23, 47], "characterOffsetBegin": 413, "originalText": "models", "ArgType": "subj", "before": " "}, {"index": 27, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 421, "segment_span": [23, 47], "characterOffsetBegin": 420, "originalText": "(", "ArgType": null, "before": " "}, {"index": 28, "word": "Chiang", "lemma": "Chiang", "after": "", "pos": "NNP", "characterOffsetEnd": 427, "segment_span": [23, 47], "characterOffsetBegin": 421, "originalText": "Chiang", "ArgType": null, "before": ""}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 428, "segment_span": [23, 47], "characterOffsetBegin": 427, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 433, "segment_span": [23, 47], "characterOffsetBegin": 429, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 434, "segment_span": [23, 47], "characterOffsetBegin": 433, "originalText": ")", "ArgType": null, "before": ""}, {"index": 32, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 437, "segment_span": [23, 47], "characterOffsetBegin": 435, "originalText": "do", "ArgType": null, "before": " "}, {"index": 33, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 441, "segment_span": [23, 47], "characterOffsetBegin": 438, "originalText": "not", "ArgType": null, "before": " "}, {"index": 34, "word": "rely", "characterOffsetEnd": 446, "after": " ", "pos": "VB", "is_root": true, "lemma": "rely", "segment_span": [23, 47], "tense": "B", "characterOffsetBegin": 442, "originalText": "rely", "has_aux": true, "ArgType": null, "before": " "}, {"index": 35, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 449, "segment_span": [23, 47], "characterOffsetBegin": 447, "originalText": "on", "ArgType": null, "before": " "}, {"index": 36, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 455, "segment_span": [23, 47], "characterOffsetBegin": 450, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 37, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 461, "segment_span": [23, 47], "characterOffsetBegin": 456, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 38, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 462, "segment_span": [23, 47], "characterOffsetBegin": 461, "originalText": ",", "ArgType": null, "before": ""}, {"index": 39, "word": "yet", "lemma": "yet", "after": " ", "pos": "RB", "characterOffsetEnd": 466, "segment_span": [23, 47], "characterOffsetBegin": 463, "originalText": "yet", "ArgType": null, "before": " "}, {"index": 40, "word": "usually", "lemma": "usually", "after": " ", "pos": "RB", "characterOffsetEnd": 474, "segment_span": [23, 47], "characterOffsetBegin": 467, "originalText": "usually", "ArgType": null, "before": " "}, {"index": 41, "word": "perform", "lemma": "perform", "after": " ", "pos": "VB", "characterOffsetEnd": 482, "segment_span": [23, 47], "characterOffsetBegin": 475, "originalText": "perform", "ArgType": null, "before": " "}, {"index": 42, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 489, "segment_span": [23, 47], "characterOffsetBegin": 483, "originalText": "better", "ArgType": "dobj", "before": " "}, {"index": 43, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 494, "segment_span": [23, 47], "characterOffsetBegin": 490, "originalText": "than", "ArgType": null, "before": " "}, {"index": 44, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 500, "segment_span": [23, 47], "characterOffsetBegin": 495, "originalText": "these", "ArgType": null, "before": " "}, {"index": 45, "word": "linguistically", "lemma": "linguistically", "after": " ", "pos": "RB", "characterOffsetEnd": 515, "segment_span": [23, 47], "characterOffsetBegin": 501, "originalText": "linguistically", "ArgType": null, "before": " "}, {"index": 46, "word": "sophisticated", "lemma": "sophisticated", "after": " ", "pos": "JJ", "characterOffsetEnd": 529, "segment_span": [23, 47], "characterOffsetBegin": 516, "originalText": "sophisticated", "ArgType": null, "before": " "}, {"index": 47, "word": "counterparts", "lemma": "counterpart", "after": "", "pos": "NNS", "characterOffsetEnd": 542, "segment_span": [23, 47], "characterOffsetBegin": 530, "originalText": "counterparts", "ArgType": null, "before": " "}, {"index": 48, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 543, "characterOffsetBegin": 542, "originalText": ".", "ArgType": null, "before": ""}], "text": "To make things worse , modern statistical parsers are often trained on domains quite different from those used in MT. By contrast , formally syntax-based models ( Chiang , 2005 ) do not rely on parse trees , yet usually perform better than these linguistically sophisticated counterparts ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 546, "segment_span": [0, 4], "characterOffsetBegin": 544, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "alleviate", "characterOffsetEnd": 556, "after": " ", "pos": "VB", "is_root": true, "lemma": "alleviate", "segment_span": [0, 4], "tense": "B", "characterOffsetBegin": 547, "originalText": "alleviate", "ArgType": null, "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 561, "segment_span": [0, 4], "characterOffsetBegin": 557, "originalText": "this", "ArgType": null, "before": " "}, {"index": 4, "word": "problem", "lemma": "problem", "after": "", "pos": "NN", "characterOffsetEnd": 569, "segment_span": [0, 4], "characterOffsetBegin": 562, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 570, "segment_span": [4, 16], "characterOffsetBegin": 569, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 573, "segment_span": [4, 16], "characterOffsetBegin": 571, "originalText": "an", "ArgType": null, "before": " "}, {"index": 7, "word": "obvious", "lemma": "obvious", "after": " ", "pos": "JJ", "characterOffsetEnd": 581, "segment_span": [4, 16], "characterOffsetBegin": 574, "originalText": "obvious", "ArgType": null, "before": " "}, {"index": 8, "word": "idea", "lemma": "idea", "after": " ", "pos": "NN", "characterOffsetEnd": 586, "segment_span": [4, 16], "characterOffsetBegin": 582, "originalText": "idea", "ArgType": "subj", "before": " "}, {"index": 9, "word": "is", "characterOffsetEnd": 589, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [4, 16], "tense": "Z", "characterOffsetBegin": 587, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 592, "segment_span": [4, 16], "characterOffsetBegin": 590, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "extract", "lemma": "extract", "after": " ", "pos": "VB", "characterOffsetEnd": 600, "segment_span": [4, 16], "characterOffsetBegin": 593, "originalText": "extract", "ArgType": null, "before": " "}, {"index": 12, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 606, "segment_span": [4, 16], "characterOffsetBegin": 601, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 611, "segment_span": [4, 16], "characterOffsetBegin": 607, "originalText": "from", "ArgType": null, "before": " "}, {"index": 14, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "NN", "characterOffsetEnd": 618, "segment_span": [4, 16], "characterOffsetBegin": 612, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 15, "word": "parses", "lemma": "parse", "after": " ", "pos": "VBZ", "characterOffsetEnd": 625, "segment_span": [4, 16], "characterOffsetBegin": 619, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 16, "word": "instead", "lemma": "instead", "after": "", "pos": "RB", "characterOffsetEnd": 633, "segment_span": [4, 16], "characterOffsetBegin": 626, "originalText": "instead", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 634, "characterOffsetBegin": 633, "originalText": ".", "ArgType": null, "before": ""}], "text": "To alleviate this problem , an obvious idea is to extract rules from k-best parses instead ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 642, "segment_span": [0, 24], "characterOffsetBegin": 635, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 643, "segment_span": [0, 24], "characterOffsetBegin": 642, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 645, "segment_span": [0, 24], "characterOffsetBegin": 644, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 652, "segment_span": [0, 24], "characterOffsetBegin": 646, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 5, "word": "list", "lemma": "list", "after": "", "pos": "NN", "characterOffsetEnd": 657, "segment_span": [0, 24], "characterOffsetBegin": 653, "originalText": "list", "ArgType": "subj", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 658, "segment_span": [0, 24], "characterOffsetBegin": 657, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 663, "segment_span": [0, 24], "characterOffsetBegin": 659, "originalText": "with", "ArgType": null, "before": " "}, {"index": 8, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 667, "segment_span": [0, 24], "characterOffsetBegin": 664, "originalText": "its", "ArgType": null, "before": " "}, {"index": 9, "word": "limited", "lemma": "limited", "after": " ", "pos": "JJ", "characterOffsetEnd": 675, "segment_span": [0, 24], "characterOffsetBegin": 668, "originalText": "limited", "ArgType": null, "before": " "}, {"index": 10, "word": "scope", "lemma": "scope", "after": "", "pos": "NN", "characterOffsetEnd": 681, "segment_span": [0, 24], "characterOffsetBegin": 676, "originalText": "scope", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 682, "segment_span": [0, 24], "characterOffsetBegin": 681, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "has", "characterOffsetEnd": 686, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 24], "tense": "Z", "characterOffsetBegin": 683, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 13, "word": "too", "lemma": "too", "after": " ", "pos": "RB", "characterOffsetEnd": 690, "segment_span": [0, 24], "characterOffsetBegin": 687, "originalText": "too", "ArgType": null, "before": " "}, {"index": 14, "word": "few", "lemma": "few", "after": " ", "pos": "JJ", "characterOffsetEnd": 694, "segment_span": [0, 24], "characterOffsetBegin": 691, "originalText": "few", "ArgType": null, "before": " "}, {"index": 15, "word": "variations", "lemma": "variation", "after": " ", "pos": "NNS", "characterOffsetEnd": 705, "segment_span": [0, 24], "characterOffsetBegin": 695, "originalText": "variations", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 709, "segment_span": [0, 24], "characterOffsetBegin": 706, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "too", "lemma": "too", "after": " ", "pos": "RB", "characterOffsetEnd": 713, "segment_span": [0, 24], "characterOffsetBegin": 710, "originalText": "too", "ArgType": null, "before": " "}, {"index": 18, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 718, "segment_span": [0, 24], "characterOffsetBegin": 714, "originalText": "many", "ArgType": null, "before": " "}, {"index": 19, "word": "redundancies", "lemma": "redundancy", "after": " ", "pos": "NNS", "characterOffsetEnd": 731, "segment_span": [0, 24], "characterOffsetBegin": 719, "originalText": "redundancies", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 733, "segment_span": [0, 24], "characterOffsetBegin": 732, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "Huang", "lemma": "Huang", "after": "", "pos": "NNP", "characterOffsetEnd": 738, "segment_span": [0, 24], "characterOffsetBegin": 733, "originalText": "Huang", "ArgType": null, "before": ""}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 739, "segment_span": [0, 24], "characterOffsetBegin": 738, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 744, "segment_span": [0, 24], "characterOffsetBegin": 740, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 745, "segment_span": [0, 24], "characterOffsetBegin": 744, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 746, "characterOffsetBegin": 745, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , a k-best list , with its limited scope , has too few variations and too many redundancies ( Huang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 751, "segment_span": [0, 32], "characterOffsetBegin": 747, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "situation", "lemma": "situation", "after": " ", "pos": "NN", "characterOffsetEnd": 761, "segment_span": [0, 32], "characterOffsetBegin": 752, "originalText": "situation", "ArgType": "subj", "before": " "}, {"index": 3, "word": "worsens", "lemma": "worsen", "after": " ", "pos": "VBZ", "characterOffsetEnd": 769, "segment_span": [0, 32], "characterOffsetBegin": 762, "originalText": "worsens", "ArgType": "subj", "before": " "}, {"index": 4, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 774, "segment_span": [0, 32], "characterOffsetBegin": 770, "originalText": "with", "ArgType": null, "before": " "}, {"index": 5, "word": "longer", "lemma": "longer", "after": " ", "pos": "JJR", "characterOffsetEnd": 781, "segment_span": [0, 32], "characterOffsetBegin": 775, "originalText": "longer", "ArgType": null, "before": " "}, {"index": 6, "word": "sentences", "lemma": "sentence", "after": " ", "pos": "NNS", "characterOffsetEnd": 791, "segment_span": [0, 32], "characterOffsetBegin": 782, "originalText": "sentences", "ArgType": null, "before": " "}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 794, "segment_span": [0, 32], "characterOffsetBegin": 792, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 798, "segment_span": [0, 32], "characterOffsetBegin": 795, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 805, "segment_span": [0, 32], "characterOffsetBegin": 799, "originalText": "number", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 808, "segment_span": [0, 32], "characterOffsetBegin": 806, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 817, "segment_span": [0, 32], "characterOffsetBegin": 809, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 12, "word": "parses", "lemma": "parse", "after": " ", "pos": "NNS", "characterOffsetEnd": 824, "segment_span": [0, 32], "characterOffsetBegin": 818, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 13, "word": "grows", "lemma": "grow", "after": " ", "pos": "VBZ", "characterOffsetEnd": 830, "segment_span": [0, 32], "characterOffsetBegin": 825, "originalText": "grows", "ArgType": null, "before": " "}, {"index": 14, "word": "exponentially", "lemma": "exponentially", "after": " ", "pos": "RB", "characterOffsetEnd": 844, "segment_span": [0, 32], "characterOffsetBegin": 831, "originalText": "exponentially", "ArgType": null, "before": " "}, {"index": 15, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 849, "segment_span": [0, 32], "characterOffsetBegin": 845, "originalText": "with", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 853, "segment_span": [0, 32], "characterOffsetBegin": 850, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 862, "segment_span": [0, 32], "characterOffsetBegin": 854, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 18, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 869, "segment_span": [0, 32], "characterOffsetBegin": 863, "originalText": "length", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 873, "segment_span": [0, 32], "characterOffsetBegin": 870, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 875, "segment_span": [0, 32], "characterOffsetBegin": 874, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 882, "segment_span": [0, 32], "characterOffsetBegin": 876, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 22, "word": "list", "lemma": "list", "after": " ", "pos": "NN", "characterOffsetEnd": 887, "segment_span": [0, 32], "characterOffsetBegin": 883, "originalText": "list", "ArgType": null, "before": " "}, {"index": 23, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 892, "segment_span": [0, 32], "characterOffsetBegin": 888, "originalText": "will", "ArgType": null, "before": " "}, {"index": 24, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 897, "segment_span": [0, 32], "characterOffsetBegin": 893, "originalText": "only", "ArgType": null, "before": " "}, {"index": 25, "word": "capture", "characterOffsetEnd": 905, "after": " ", "pos": "VB", "is_root": true, "lemma": "capture", "segment_span": [0, 32], "tense": "B", "characterOffsetBegin": 898, "originalText": "capture", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 907, "segment_span": [0, 32], "characterOffsetBegin": 906, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "tiny", "lemma": "tiny", "after": " ", "pos": "JJ", "characterOffsetEnd": 912, "segment_span": [0, 32], "characterOffsetBegin": 908, "originalText": "tiny", "ArgType": null, "before": " "}, {"index": 28, "word": "fraction", "lemma": "fraction", "after": " ", "pos": "NN", "characterOffsetEnd": 921, "segment_span": [0, 32], "characterOffsetBegin": 913, "originalText": "fraction", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 924, "segment_span": [0, 32], "characterOffsetBegin": 922, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 928, "segment_span": [0, 32], "characterOffsetBegin": 925, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "whole", "lemma": "whole", "after": " ", "pos": "JJ", "characterOffsetEnd": 934, "segment_span": [0, 32], "characterOffsetBegin": 929, "originalText": "whole", "ArgType": null, "before": " "}, {"index": 32, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 940, "segment_span": [0, 32], "characterOffsetBegin": 935, "originalText": "space", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 941, "characterOffsetBegin": 940, "originalText": ".", "ArgType": null, "before": ""}], "text": "This situation worsens with longer sentences as the number of possible parses grows exponentially with the sentence length and a k-best list will only capture a tiny fraction of the whole space ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 944, "segment_span": [0, 11], "characterOffsetBegin": 942, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "addition", "lemma": "addition", "after": "", "pos": "NN", "characterOffsetEnd": 953, "segment_span": [0, 11], "characterOffsetBegin": 945, "originalText": "addition", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 954, "segment_span": [0, 11], "characterOffsetBegin": 953, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 959, "segment_span": [0, 11], "characterOffsetBegin": 955, "originalText": "many", "ArgType": null, "before": " "}, {"index": 5, "word": "subtrees", "lemma": "subtree", "after": " ", "pos": "NNS", "characterOffsetEnd": 968, "segment_span": [0, 11], "characterOffsetBegin": 960, "originalText": "subtrees", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 972, "segment_span": [0, 11], "characterOffsetBegin": 969, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "repeated", "characterOffsetEnd": 981, "after": " ", "pos": "VBN", "is_root": true, "lemma": "repeat", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 973, "before": " ", "originalText": "repeated", "ArgType": null, "is_pass": true}, {"index": 8, "word": "across", "lemma": "across", "after": " ", "pos": "IN", "characterOffsetEnd": 988, "segment_span": [0, 11], "characterOffsetBegin": 982, "originalText": "across", "ArgType": null, "before": " "}, {"index": 9, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 998, "segment_span": [0, 11], "characterOffsetBegin": 989, "originalText": "different", "ArgType": null, "before": " "}, {"index": 10, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 1005, "segment_span": [0, 11], "characterOffsetBegin": 999, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1006, "segment_span": [0, 11], "characterOffsetBegin": 1005, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "so", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 1009, "segment_span": [11, 14], "characterOffsetBegin": 1007, "originalText": "so", "ArgType": null, "before": " "}, {"index": 13, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 1012, "segment_span": [11, 14], "characterOffsetBegin": 1010, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 14, "word": "is", "characterOffsetEnd": 1015, "after": "", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [11, 14], "tense": "Z", "characterOffsetBegin": 1013, "originalText": "is", "ArgType": null, "before": " "}], "text": "In addition , many subtrees are repeated across different parses , so it is"}, {"tokens": [{"index": 1, "word": "1For", "lemma": "1for", "after": " ", "pos": "NN", "characterOffsetEnd": 4, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "1For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 8], "characterOffsetBegin": 5, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "recent", "lemma": "recent", "after": " ", "pos": "JJ", "characterOffsetEnd": 23, "segment_span": [0, 8], "characterOffsetBegin": 17, "originalText": "recent", "ArgType": null, "before": " "}, {"index": 6, "word": "NIST", "lemma": "NIST", "after": " ", "pos": "NNP", "characterOffsetEnd": 28, "segment_span": [0, 8], "characterOffsetBegin": 24, "originalText": "NIST", "ArgType": null, "before": " "}, {"index": 7, "word": "Evaluations", "lemma": "Evaluations", "after": "", "pos": "NNPS", "characterOffsetEnd": 40, "segment_span": [0, 8], "characterOffsetBegin": 29, "originalText": "Evaluations", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 41, "segment_span": [0, 8], "characterOffsetBegin": 40, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 46, "segment_span": [8, 35], "characterOffsetBegin": 42, "originalText": "some", "ArgType": "subj", "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [8, 35], "characterOffsetBegin": 47, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 55, "segment_span": [8, 35], "characterOffsetBegin": 50, "originalText": "these", "ArgType": null, "before": " "}, {"index": 12, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [8, 35], "characterOffsetBegin": 56, "originalText": "models", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 64, "segment_span": [8, 35], "characterOffsetBegin": 63, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 70, "segment_span": [8, 35], "characterOffsetBegin": 64, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 15, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 73, "segment_span": [8, 35], "characterOffsetBegin": 71, "originalText": "et", "ArgType": null, "before": " "}, {"index": 16, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 77, "segment_span": [8, 35], "characterOffsetBegin": 74, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 78, "segment_span": [8, 35], "characterOffsetBegin": 77, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 83, "segment_span": [8, 35], "characterOffsetBegin": 79, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 19, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 84, "segment_span": [8, 35], "characterOffsetBegin": 83, "originalText": ";", "ArgType": null, "before": ""}, {"index": 20, "word": "Quirk", "lemma": "Quirk", "after": " ", "pos": "NNP", "characterOffsetEnd": 90, "segment_span": [8, 35], "characterOffsetBegin": 85, "originalText": "Quirk", "ArgType": null, "before": " "}, {"index": 21, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 93, "segment_span": [8, 35], "characterOffsetBegin": 91, "originalText": "et", "ArgType": null, "before": " "}, {"index": 22, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 97, "segment_span": [8, 35], "characterOffsetBegin": 94, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 98, "segment_span": [8, 35], "characterOffsetBegin": 97, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 103, "segment_span": [8, 35], "characterOffsetBegin": 99, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 25, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 104, "segment_span": [8, 35], "characterOffsetBegin": 103, "originalText": ";", "ArgType": null, "before": ""}, {"index": 26, "word": "Liu", "lemma": "Liu", "after": " ", "pos": "NNP", "characterOffsetEnd": 108, "segment_span": [8, 35], "characterOffsetBegin": 105, "originalText": "Liu", "ArgType": null, "before": " "}, {"index": 27, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 111, "segment_span": [8, 35], "characterOffsetBegin": 109, "originalText": "et", "ArgType": null, "before": " "}, {"index": 28, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 115, "segment_span": [8, 35], "characterOffsetBegin": 112, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 116, "segment_span": [8, 35], "characterOffsetBegin": 115, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 121, "segment_span": [8, 35], "characterOffsetBegin": 117, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 122, "segment_span": [8, 35], "characterOffsetBegin": 121, "originalText": ")", "ArgType": null, "before": ""}, {"index": 32, "word": "ranked", "characterOffsetEnd": 129, "after": " ", "pos": "VBD", "is_root": true, "lemma": "rank", "segment_span": [8, 35], "tense": "D", "characterOffsetBegin": 123, "originalText": "ranked", "ArgType": null, "before": " "}, {"index": 33, "word": "among", "lemma": "among", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [8, 35], "characterOffsetBegin": 130, "originalText": "among", "ArgType": null, "before": " "}, {"index": 34, "word": "top", "lemma": "top", "after": " ", "pos": "JJ", "characterOffsetEnd": 139, "segment_span": [8, 35], "characterOffsetBegin": 136, "originalText": "top", "ArgType": null, "before": " "}, {"index": 35, "word": "10", "lemma": "10", "after": "", "pos": "CD", "characterOffsetEnd": 142, "segment_span": [8, 35], "characterOffsetBegin": 140, "originalText": "10", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": ""}], "text": "1For example , in recent NIST Evaluations , some of these models ( Galley et al. , 2006 ; Quirk et al. , 2005 ; Liu et al. , 2006 ) ranked among top 10 ."}, {"tokens": [{"index": 1, "word": "See", "characterOffsetEnd": 147, "after": " ", "pos": "VB", "is_root": true, "lemma": "see", "segment_span": [0, 2], "tense": "B", "characterOffsetBegin": 144, "originalText": "See", "ArgType": null, "before": " "}, {"index": 2, "word": "http://www.nist.gov/speech/tests/mt/", "lemma": "http://www.nist.gov/speech/tests/mt/", "after": "", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [0, 2], "characterOffsetBegin": 148, "originalText": "http://www.nist.gov/speech/tests/mt/", "ArgType": "dobj", "before": " "}, {"index": 3, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 185, "characterOffsetBegin": 184, "originalText": ".", "ArgType": null, "before": ""}], "text": "See http://www.nist.gov/speech/tests/mt/ ."}, {"tokens": [{"index": 1, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 4, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "also", "ArgType": null, "before": ""}, {"index": 2, "word": "inefficient", "lemma": "inefficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 16, "segment_span": [0, 26], "characterOffsetBegin": 5, "originalText": "inefficient", "ArgType": null, "before": " "}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 19, "segment_span": [0, 26], "characterOffsetBegin": 17, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "extract", "lemma": "extract", "after": " ", "pos": "VB", "characterOffsetEnd": 27, "segment_span": [0, 26], "characterOffsetBegin": 20, "originalText": "extract", "ArgType": null, "before": " "}, {"index": 5, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 33, "segment_span": [0, 26], "characterOffsetBegin": 28, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "separately", "lemma": "separately", "after": " ", "pos": "RB", "characterOffsetEnd": 44, "segment_span": [0, 26], "characterOffsetBegin": 34, "originalText": "separately", "ArgType": null, "before": " "}, {"index": 7, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 26], "characterOffsetBegin": 45, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 26], "characterOffsetBegin": 50, "originalText": "each", "ArgType": null, "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 26], "characterOffsetBegin": 55, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 63, "segment_span": [0, 26], "characterOffsetBegin": 58, "originalText": "these", "ArgType": null, "before": " "}, {"index": 11, "word": "very", "lemma": "very", "after": " ", "pos": "RB", "characterOffsetEnd": 68, "segment_span": [0, 26], "characterOffsetBegin": 64, "originalText": "very", "ArgType": null, "before": " "}, {"index": 12, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 76, "segment_span": [0, 26], "characterOffsetBegin": 69, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 13, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 82, "segment_span": [0, 26], "characterOffsetBegin": 77, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 84, "segment_span": [0, 26], "characterOffsetBegin": 83, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 86, "segment_span": [0, 26], "characterOffsetBegin": 84, "originalText": "or", "ArgType": null, "before": ""}, {"index": 16, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 91, "segment_span": [0, 26], "characterOffsetBegin": 87, "originalText": "from", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [0, 26], "characterOffsetBegin": 92, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "cross-product", "lemma": "cross-product", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [0, 26], "characterOffsetBegin": 96, "originalText": "cross-product", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 112, "segment_span": [0, 26], "characterOffsetBegin": 110, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "k2", "lemma": "k2", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 26], "characterOffsetBegin": 113, "originalText": "k2", "ArgType": null, "before": " "}, {"index": 21, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 123, "segment_span": [0, 26], "characterOffsetBegin": 116, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 22, "word": "tree-pairs", "lemma": "tree-pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 134, "segment_span": [0, 26], "characterOffsetBegin": 124, "originalText": "tree-pairs", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 137, "segment_span": [0, 26], "characterOffsetBegin": 135, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "tree-to-tree", "lemma": "tree-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 150, "segment_span": [0, 26], "characterOffsetBegin": 138, "originalText": "tree-to-tree", "ArgType": null, "before": " "}, {"index": 25, "word": "models", "lemma": "model", "after": "", "pos": "NNS", "characterOffsetEnd": 157, "segment_span": [0, 26], "characterOffsetBegin": 151, "originalText": "models", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 158, "segment_span": [0, 26], "characterOffsetBegin": 157, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 159, "characterOffsetBegin": 158, "originalText": ".", "ArgType": null, "before": ""}], "text": "also inefficient to extract rules separately from each of these very similar trees ( or from the cross-product of k2 similar tree-pairs in tree-to-tree models ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 162, "segment_span": [0, 6], "characterOffsetBegin": 160, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "instead", "lemma": "instead", "after": " ", "pos": "RB", "characterOffsetEnd": 170, "segment_span": [0, 6], "characterOffsetBegin": 163, "originalText": "instead", "ArgType": null, "before": " "}, {"index": 3, "word": "propose", "characterOffsetEnd": 178, "after": " ", "pos": "VBP", "is_root": true, "lemma": "propose", "segment_span": [0, 6], "tense": "P", "characterOffsetBegin": 171, "originalText": "propose", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 180, "segment_span": [0, 6], "characterOffsetBegin": 179, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "novel", "lemma": "novel", "after": " ", "pos": "JJ", "characterOffsetEnd": 186, "segment_span": [0, 6], "characterOffsetBegin": 181, "originalText": "novel", "ArgType": null, "before": " "}, {"index": 6, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 195, "segment_span": [0, 6], "characterOffsetBegin": 187, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 200, "segment_span": [6, 17], "characterOffsetBegin": 196, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 8, "word": "extracts", "characterOffsetEnd": 209, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "extract", "segment_span": [6, 17], "tense": "Z", "characterOffsetBegin": 201, "originalText": "extracts", "ArgType": null, "before": " "}, {"index": 9, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 215, "segment_span": [6, 17], "characterOffsetBegin": 210, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 220, "segment_span": [6, 17], "characterOffsetBegin": 216, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 227, "segment_span": [6, 17], "characterOffsetBegin": 221, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 12, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 235, "segment_span": [6, 17], "characterOffsetBegin": 228, "originalText": "forests", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 237, "segment_span": [6, 17], "characterOffsetBegin": 236, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 244, "segment_span": [6, 17], "characterOffsetBegin": 237, "originalText": "Section", "ArgType": null, "before": ""}, {"index": 15, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 246, "segment_span": [6, 17], "characterOffsetBegin": 245, "originalText": "3", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 247, "segment_span": [6, 17], "characterOffsetBegin": 246, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 248, "segment_span": [6, 17], "characterOffsetBegin": 247, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 254, "segment_span": [17, 26], "characterOffsetBegin": 249, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 19, "word": "compactly", "lemma": "compactly", "after": " ", "pos": "RB", "characterOffsetEnd": 264, "segment_span": [17, 26], "characterOffsetBegin": 255, "originalText": "compactly", "ArgType": null, "before": " "}, {"index": 20, "word": "encodes", "characterOffsetEnd": 272, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "encode", "segment_span": [17, 26], "tense": "Z", "characterOffsetBegin": 265, "originalText": "encodes", "ArgType": null, "before": " "}, {"index": 21, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 277, "segment_span": [17, 26], "characterOffsetBegin": 273, "originalText": "many", "ArgType": null, "before": " "}, {"index": 22, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 282, "segment_span": [17, 26], "characterOffsetBegin": 278, "originalText": "more", "ArgType": null, "before": " "}, {"index": 23, "word": "alternatives", "lemma": "alternative", "after": " ", "pos": "NNS", "characterOffsetEnd": 295, "segment_span": [17, 26], "characterOffsetBegin": 283, "originalText": "alternatives", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 300, "segment_span": [17, 26], "characterOffsetBegin": 296, "originalText": "than", "ArgType": null, "before": " "}, {"index": 25, "word": "kbest", "lemma": "kbest", "after": " ", "pos": "JJ", "characterOffsetEnd": 306, "segment_span": [17, 26], "characterOffsetBegin": 301, "originalText": "kbest", "ArgType": null, "before": " "}, {"index": 26, "word": "lists", "lemma": "list", "after": "", "pos": "NNS", "characterOffsetEnd": 312, "segment_span": [17, 26], "characterOffsetBegin": 307, "originalText": "lists", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 313, "characterOffsetBegin": 312, "originalText": ".", "ArgType": null, "before": ""}], "text": "We instead propose a novel approach that extracts rules from packed forests ( Section 3 ) , which compactly encodes many more alternatives than kbest lists ."}, {"tokens": [{"index": 1, "word": "Experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 325, "segment_span": [0, 6], "characterOffsetBegin": 314, "originalText": "Experiments", "ArgType": "subj", "before": " "}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 327, "segment_span": [0, 6], "characterOffsetBegin": 326, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 334, "segment_span": [0, 6], "characterOffsetBegin": 327, "originalText": "Section", "ArgType": null, "before": ""}, {"index": 4, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 336, "segment_span": [0, 6], "characterOffsetBegin": 335, "originalText": "5", "ArgType": null, "before": " "}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 337, "segment_span": [0, 6], "characterOffsetBegin": 336, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": "show", "characterOffsetEnd": 342, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [0, 6], "tense": "P", "characterOffsetBegin": 338, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 7, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 347, "segment_span": [6, 35], "characterOffsetBegin": 343, "originalText": "that", "ArgType": null, "before": " "}, {"index": 8, "word": "forestbased", "lemma": "forestbased", "after": " ", "pos": "JJ", "characterOffsetEnd": 359, "segment_span": [6, 35], "characterOffsetBegin": 348, "originalText": "forestbased", "ArgType": null, "before": " "}, {"index": 9, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 370, "segment_span": [6, 35], "characterOffsetBegin": 360, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 10, "word": "improves", "characterOffsetEnd": 379, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [6, 35], "tense": "Z", "characterOffsetBegin": 371, "originalText": "improves", "ArgType": null, "before": " "}, {"index": 11, "word": "BLEU", "lemma": "BLEU", "after": " ", "pos": "NNP", "characterOffsetEnd": 384, "segment_span": [6, 35], "characterOffsetBegin": 380, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 12, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 390, "segment_span": [6, 35], "characterOffsetBegin": 385, "originalText": "score", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 393, "segment_span": [6, 35], "characterOffsetBegin": 391, "originalText": "by", "ArgType": null, "before": " "}, {"index": 14, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 398, "segment_span": [6, 35], "characterOffsetBegin": 394, "originalText": "over", "ArgType": null, "before": " "}, {"index": 15, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 400, "segment_span": [6, 35], "characterOffsetBegin": 399, "originalText": "1", "ArgType": null, "before": " "}, {"index": 16, "word": "point", "lemma": "point", "after": " ", "pos": "NN", "characterOffsetEnd": 406, "segment_span": [6, 35], "characterOffsetBegin": 401, "originalText": "point", "ArgType": null, "before": " "}, {"index": 17, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 409, "segment_span": [6, 35], "characterOffsetBegin": 407, "originalText": "on", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 411, "segment_span": [6, 35], "characterOffsetBegin": 410, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 428, "segment_span": [6, 35], "characterOffsetBegin": 412, "originalText": "state-of-the-art", "ArgType": null, "before": " "}, {"index": 20, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "NN", "characterOffsetEnd": 443, "segment_span": [6, 35], "characterOffsetBegin": 429, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 21, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 450, "segment_span": [6, 35], "characterOffsetBegin": 444, "originalText": "system", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 452, "segment_span": [6, 35], "characterOffsetBegin": 451, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "Liu", "lemma": "Liu", "after": " ", "pos": "NNP", "characterOffsetEnd": 455, "segment_span": [6, 35], "characterOffsetBegin": 452, "originalText": "Liu", "ArgType": null, "before": ""}, {"index": 24, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 458, "segment_span": [6, 35], "characterOffsetBegin": 456, "originalText": "et", "ArgType": null, "before": " "}, {"index": 25, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 462, "segment_span": [6, 35], "characterOffsetBegin": 459, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 463, "segment_span": [6, 35], "characterOffsetBegin": 462, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 468, "segment_span": [6, 35], "characterOffsetBegin": 464, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 28, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 469, "segment_span": [6, 35], "characterOffsetBegin": 468, "originalText": ";", "ArgType": null, "before": ""}, {"index": 29, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 472, "segment_span": [6, 35], "characterOffsetBegin": 470, "originalText": "Mi", "ArgType": null, "before": " "}, {"index": 30, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 475, "segment_span": [6, 35], "characterOffsetBegin": 473, "originalText": "et", "ArgType": null, "before": " "}, {"index": 31, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 479, "segment_span": [6, 35], "characterOffsetBegin": 476, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 480, "segment_span": [6, 35], "characterOffsetBegin": 479, "originalText": ",", "ArgType": null, "before": ""}, {"index": 33, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 485, "segment_span": [6, 35], "characterOffsetBegin": 481, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 34, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 486, "segment_span": [6, 35], "characterOffsetBegin": 485, "originalText": ")", "ArgType": null, "before": ""}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 487, "segment_span": [6, 35], "characterOffsetBegin": 486, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 493, "segment_span": [35, 47], "characterOffsetBegin": 488, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 37, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 496, "segment_span": [35, 47], "characterOffsetBegin": 494, "originalText": "is", "ArgType": null, "before": " "}, {"index": 38, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 501, "segment_span": [35, 47], "characterOffsetBegin": 497, "originalText": "also", "ArgType": null, "before": " "}, {"index": 39, "word": "0.5", "lemma": "0.5", "after": " ", "pos": "CD", "characterOffsetEnd": 505, "segment_span": [35, 47], "characterOffsetBegin": 502, "originalText": "0.5", "ArgType": null, "before": " "}, {"index": 40, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 512, "segment_span": [35, 47], "characterOffsetBegin": 506, "originalText": "points", "ArgType": null, "before": " "}, {"index": 41, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 519, "segment_span": [35, 47], "characterOffsetBegin": 513, "originalText": "better", "ArgType": null, "before": " "}, {"index": 42, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 524, "segment_span": [35, 47], "characterOffsetBegin": 520, "originalText": "than", "ArgType": null, "before": " "}, {"index": 43, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 526, "segment_span": [35, 47], "characterOffsetBegin": 525, "originalText": "(", "ArgType": null, "before": " "}, {"index": 44, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 529, "segment_span": [35, 47], "characterOffsetBegin": 526, "originalText": "and", "ArgType": null, "before": ""}, {"index": 45, "word": "twice", "lemma": "twice", "after": " ", "pos": "RB", "characterOffsetEnd": 535, "segment_span": [35, 47], "characterOffsetBegin": 530, "originalText": "twice", "ArgType": null, "before": " "}, {"index": 46, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 538, "segment_span": [35, 47], "characterOffsetBegin": 536, "originalText": "as", "ArgType": null, "before": " "}, {"index": 47, "word": "fast", "lemma": "fast", "after": " ", "pos": "JJ", "characterOffsetEnd": 543, "segment_span": [35, 47], "characterOffsetBegin": 539, "originalText": "fast", "ArgType": null, "before": " "}, {"index": 48, "word": "as", "lemma": "as", "after": "", "pos": "IN", "characterOffsetEnd": 546, "segment_span": [47, 53], "characterOffsetBegin": 544, "originalText": "as", "ArgType": null, "before": " "}, {"index": 49, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 547, "segment_span": [47, 53], "characterOffsetBegin": 546, "originalText": ")", "ArgType": null, "before": ""}, {"index": 50, "word": "extracting", "characterOffsetEnd": 558, "after": " ", "pos": "VBG", "is_root": true, "lemma": "extract", "segment_span": [47, 53], "tense": "G", "characterOffsetBegin": 548, "originalText": "extracting", "ArgType": null, "before": " "}, {"index": 51, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 561, "segment_span": [47, 53], "characterOffsetBegin": 559, "originalText": "on", "ArgType": null, "before": " "}, {"index": 52, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 569, "segment_span": [47, 53], "characterOffsetBegin": 562, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 53, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 576, "segment_span": [47, 53], "characterOffsetBegin": 570, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 54, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 577, "characterOffsetBegin": 576, "originalText": ".", "ArgType": null, "before": ""}], "text": "Experiments ( Section 5 ) show that forestbased extraction improves BLEU score by over 1 point on a state-of-the-art tree-to-string system ( Liu et al. , 2006 ; Mi et al. , 2008 ) , which is also 0.5 points better than ( and twice as fast as ) extracting on 30-best parses ."}, {"tokens": [{"index": 1, "word": "When", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 582, "segment_span": [0, 17], "characterOffsetBegin": 578, "originalText": "When", "ArgType": null, "before": " "}, {"index": 2, "word": "combined", "characterOffsetEnd": 591, "after": " ", "pos": "VBN", "is_root": true, "lemma": "combine", "segment_span": [0, 17], "tense": "N", "characterOffsetBegin": 583, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 596, "segment_span": [0, 17], "characterOffsetBegin": 592, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 600, "segment_span": [0, 17], "characterOffsetBegin": 597, "originalText": "our", "ArgType": null, "before": " "}, {"index": 5, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 609, "segment_span": [0, 17], "characterOffsetBegin": 601, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 6, "word": "orthogonal", "lemma": "orthogonal", "after": " ", "pos": "JJ", "characterOffsetEnd": 620, "segment_span": [0, 17], "characterOffsetBegin": 610, "originalText": "orthogonal", "ArgType": null, "before": " "}, {"index": 7, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 625, "segment_span": [0, 17], "characterOffsetBegin": 621, "originalText": "work", "ArgType": null, "before": " "}, {"index": 8, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 628, "segment_span": [0, 17], "characterOffsetBegin": 626, "originalText": "on", "ArgType": null, "before": " "}, {"index": 9, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 641, "segment_span": [0, 17], "characterOffsetBegin": 629, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 10, "word": "decoding", "lemma": "decoding", "after": " ", "pos": "NN", "characterOffsetEnd": 650, "segment_span": [0, 17], "characterOffsetBegin": 642, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 652, "segment_span": [0, 17], "characterOffsetBegin": 651, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 654, "segment_span": [0, 17], "characterOffsetBegin": 652, "originalText": "Mi", "ArgType": null, "before": ""}, {"index": 13, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 657, "segment_span": [0, 17], "characterOffsetBegin": 655, "originalText": "et", "ArgType": null, "before": " "}, {"index": 14, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 661, "segment_span": [0, 17], "characterOffsetBegin": 658, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 662, "segment_span": [0, 17], "characterOffsetBegin": 661, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 667, "segment_span": [0, 17], "characterOffsetBegin": 663, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 668, "segment_span": [0, 17], "characterOffsetBegin": 667, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 669, "segment_span": [17, 32], "characterOffsetBegin": 668, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 673, "segment_span": [17, 32], "characterOffsetBegin": 670, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "forest-forest", "lemma": "forest-forest", "after": " ", "pos": "JJ", "characterOffsetEnd": 687, "segment_span": [17, 32], "characterOffsetBegin": 674, "originalText": "forest-forest", "ArgType": null, "before": " "}, {"index": 21, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 696, "segment_span": [17, 32], "characterOffsetBegin": 688, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 22, "word": "achieves", "characterOffsetEnd": 705, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "achieve", "segment_span": [17, 32], "tense": "Z", "characterOffsetBegin": 697, "originalText": "achieves", "ArgType": "verb", "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 707, "segment_span": [17, 32], "characterOffsetBegin": 706, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "2.5", "lemma": "2.5", "after": " ", "pos": "CD", "characterOffsetEnd": 711, "segment_span": [17, 32], "characterOffsetBegin": 708, "originalText": "2.5", "ArgType": null, "before": " "}, {"index": 25, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 716, "segment_span": [17, 32], "characterOffsetBegin": 712, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 26, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 723, "segment_span": [17, 32], "characterOffsetBegin": 717, "originalText": "points", "ArgType": null, "before": " "}, {"index": 27, "word": "improvement", "lemma": "improvement", "after": " ", "pos": "NN", "characterOffsetEnd": 735, "segment_span": [17, 32], "characterOffsetBegin": 724, "originalText": "improvement", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 740, "segment_span": [17, 32], "characterOffsetBegin": 736, "originalText": "over", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 744, "segment_span": [17, 32], "characterOffsetBegin": 741, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "baseline", "lemma": "baseline", "after": "", "pos": "NN", "characterOffsetEnd": 753, "segment_span": [17, 32], "characterOffsetBegin": 745, "originalText": "baseline", "ArgType": null, "before": " "}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 754, "segment_span": [17, 32], "characterOffsetBegin": 753, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 758, "segment_span": [17, 32], "characterOffsetBegin": 755, "originalText": "and", "ArgType": null, "before": " "}, {"index": 33, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 763, "segment_span": [32, 47], "characterOffsetBegin": 759, "originalText": "even", "ArgType": null, "before": " "}, {"index": 34, "word": "outperforms", "characterOffsetEnd": 775, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "outperform", "segment_span": [32, 47], "tense": "Z", "characterOffsetBegin": 764, "originalText": "outperforms", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 779, "segment_span": [32, 47], "characterOffsetBegin": 776, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "hierarchical", "lemma": "hierarchical", "after": " ", "pos": "JJ", "characterOffsetEnd": 792, "segment_span": [32, 47], "characterOffsetBegin": 780, "originalText": "hierarchical", "ArgType": null, "before": " "}, {"index": 37, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 799, "segment_span": [32, 47], "characterOffsetBegin": 793, "originalText": "system", "ArgType": "dobj", "before": " "}, {"index": 38, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 802, "segment_span": [32, 47], "characterOffsetBegin": 800, "originalText": "of", "ArgType": null, "before": " "}, {"index": 39, "word": "Hiero", "lemma": "Hiero", "after": "", "pos": "NNP", "characterOffsetEnd": 808, "segment_span": [32, 47], "characterOffsetBegin": 803, "originalText": "Hiero", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 809, "segment_span": [32, 47], "characterOffsetBegin": 808, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 813, "segment_span": [32, 47], "characterOffsetBegin": 810, "originalText": "one", "ArgType": null, "before": " "}, {"index": 42, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 816, "segment_span": [32, 47], "characterOffsetBegin": 814, "originalText": "of", "ArgType": null, "before": " "}, {"index": 43, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 820, "segment_span": [32, 47], "characterOffsetBegin": 817, "originalText": "the", "ArgType": null, "before": " "}, {"index": 44, "word": "best-performing", "lemma": "best-performing", "after": " ", "pos": "JJ", "characterOffsetEnd": 836, "segment_span": [32, 47], "characterOffsetBegin": 821, "originalText": "best-performing", "ArgType": null, "before": " "}, {"index": 45, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 844, "segment_span": [32, 47], "characterOffsetBegin": 837, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 46, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 847, "segment_span": [32, 47], "characterOffsetBegin": 845, "originalText": "to", "ArgType": null, "before": " "}, {"index": 47, "word": "date", "lemma": "date", "after": "", "pos": "NN", "characterOffsetEnd": 852, "segment_span": [32, 47], "characterOffsetBegin": 848, "originalText": "date", "ArgType": null, "before": " "}, {"index": 48, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 853, "characterOffsetBegin": 852, "originalText": ".", "ArgType": null, "before": ""}], "text": "When combined with our previous orthogonal work on forest-based decoding ( Mi et al. , 2008 ) , the forest-forest approach achieves a 2.5 BLEU points improvement over the baseline , and even outperforms the hierarchical system of Hiero , one of the best-performing systems to date ."}, {"tokens": [{"index": 1, "word": "Besides", "lemma": "besides", "after": " ", "pos": "IN", "characterOffsetEnd": 861, "segment_span": [0, 43], "characterOffsetBegin": 854, "originalText": "Besides", "ArgType": null, "before": " "}, {"index": 2, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "JJ", "characterOffsetEnd": 876, "segment_span": [0, 43], "characterOffsetBegin": 862, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 3, "word": "systems", "lemma": "system", "after": "", "pos": "NNS", "characterOffsetEnd": 884, "segment_span": [0, 43], "characterOffsetBegin": 877, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 885, "segment_span": [0, 43], "characterOffsetBegin": 884, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 889, "segment_span": [0, 43], "characterOffsetBegin": 886, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 896, "segment_span": [0, 43], "characterOffsetBegin": 890, "originalText": "method", "ArgType": "subj", "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 899, "segment_span": [0, 43], "characterOffsetBegin": 897, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 904, "segment_span": [0, 43], "characterOffsetBegin": 900, "originalText": "also", "ArgType": null, "before": " "}, {"index": 9, "word": "applicable", "lemma": "applicable", "after": " ", "pos": "JJ", "characterOffsetEnd": 915, "segment_span": [0, 43], "characterOffsetBegin": 905, "originalText": "applicable", "ArgType": "verb", "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 918, "segment_span": [0, 43], "characterOffsetBegin": 916, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 924, "segment_span": [0, 43], "characterOffsetBegin": 919, "originalText": "other", "ArgType": null, "before": " "}, {"index": 12, "word": "paradigms", "lemma": "paradigm", "after": " ", "pos": "NNS", "characterOffsetEnd": 934, "segment_span": [0, 43], "characterOffsetBegin": 925, "originalText": "paradigms", "ArgType": null, "before": " "}, {"index": 13, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 939, "segment_span": [0, 43], "characterOffsetBegin": 935, "originalText": "such", "ArgType": null, "before": " "}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 942, "segment_span": [0, 43], "characterOffsetBegin": 940, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 946, "segment_span": [0, 43], "characterOffsetBegin": 943, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "string-totree", "lemma": "string-totree", "after": " ", "pos": "JJ", "characterOffsetEnd": 960, "segment_span": [0, 43], "characterOffsetBegin": 947, "originalText": "string-totree", "ArgType": null, "before": " "}, {"index": 17, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 967, "segment_span": [0, 43], "characterOffsetBegin": 961, "originalText": "models", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 969, "segment_span": [0, 43], "characterOffsetBegin": 968, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 975, "segment_span": [0, 43], "characterOffsetBegin": 969, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 20, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 978, "segment_span": [0, 43], "characterOffsetBegin": 976, "originalText": "et", "ArgType": null, "before": " "}, {"index": 21, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 982, "segment_span": [0, 43], "characterOffsetBegin": 979, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 983, "segment_span": [0, 43], "characterOffsetBegin": 982, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 988, "segment_span": [0, 43], "characterOffsetBegin": 984, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 989, "segment_span": [0, 43], "characterOffsetBegin": 988, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 995, "segment_span": [24, 32], "characterOffsetBegin": 990, "originalText": "where", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 999, "segment_span": [24, 32], "characterOffsetBegin": 996, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1005, "segment_span": [24, 32], "characterOffsetBegin": 1000, "originalText": "rules", "ArgType": "subj", "before": " "}, {"index": 28, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1009, "segment_span": [24, 32], "characterOffsetBegin": 1006, "originalText": "are", "ArgType": null, "before": " "}, {"index": 29, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1012, "segment_span": [24, 32], "characterOffsetBegin": 1010, "originalText": "in", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1016, "segment_span": [24, 32], "characterOffsetBegin": 1013, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "reverse", "lemma": "reverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 1024, "segment_span": [24, 32], "characterOffsetBegin": 1017, "originalText": "reverse", "ArgType": null, "before": " "}, {"index": 32, "word": "order", "lemma": "order", "after": "", "pos": "NN", "characterOffsetEnd": 1030, "segment_span": [24, 32], "characterOffsetBegin": 1025, "originalText": "order", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1031, "segment_span": [0, 43], "characterOffsetBegin": 1030, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1035, "segment_span": [0, 43], "characterOffsetBegin": 1032, "originalText": "and", "ArgType": null, "before": " "}, {"index": 35, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 1042, "segment_span": [0, 43], "characterOffsetBegin": 1036, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 36, "word": "generalizable", "lemma": "generalizable", "after": " ", "pos": "JJ", "characterOffsetEnd": 1056, "segment_span": [0, 43], "characterOffsetBegin": 1043, "originalText": "generalizable", "ArgType": null, "before": " "}, {"index": 37, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1059, "segment_span": [0, 43], "characterOffsetBegin": 1057, "originalText": "to", "ArgType": null, "before": " "}, {"index": 38, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 1065, "segment_span": [0, 43], "characterOffsetBegin": 1060, "originalText": "pairs", "ArgType": null, "before": " "}, {"index": 39, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1068, "segment_span": [0, 43], "characterOffsetBegin": 1066, "originalText": "of", "ArgType": null, "before": " "}, {"index": 40, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 1076, "segment_span": [0, 43], "characterOffsetBegin": 1069, "originalText": "forests", "ArgType": null, "before": " "}, {"index": 41, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1079, "segment_span": [0, 43], "characterOffsetBegin": 1077, "originalText": "in", "ArgType": null, "before": " "}, {"index": 42, "word": "tree-to-tree", "lemma": "tree-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 1092, "segment_span": [0, 43], "characterOffsetBegin": 1080, "originalText": "tree-to-tree", "ArgType": null, "before": " "}, {"index": 43, "word": "models", "lemma": "model", "after": "", "pos": "NNS", "characterOffsetEnd": 1099, "segment_span": [0, 43], "characterOffsetBegin": 1093, "originalText": "models", "ArgType": null, "before": " "}, {"index": 44, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1100, "characterOffsetBegin": 1099, "originalText": ".", "ArgType": null, "before": ""}], "text": "Besides tree-to-string systems , our method is also applicable to other paradigms such as the string-totree models ( Galley et al. , 2006 ) where the rules are in the reverse order , and easily generalizable to pairs of forests in tree-to-tree models ."}, {"tokens": [{"index": 1, "word": "2", "lemma": "2", "after": " ", "pos": "CD", "characterOffsetEnd": 1, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "2", "ArgType": null, "before": ""}, {"index": 2, "word": "Tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 12, "segment_span": [0, 3], "characterOffsetBegin": 2, "originalText": "Tree-based", "ArgType": null, "before": " "}, {"index": 3, "word": "Translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 3], "characterOffsetBegin": 13, "originalText": "Translation", "ArgType": null, "before": " "}], "text": "2 Tree-based Translation"}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 43], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "review", "characterOffsetEnd": 9, "after": " ", "pos": "VBP", "is_root": true, "lemma": "review", "segment_span": [0, 43], "tense": "P", "characterOffsetBegin": 3, "originalText": "review", "ArgType": "verb", "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 43], "characterOffsetBegin": 10, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 43], "characterOffsetBegin": 13, "originalText": "this", "ArgType": null, "before": " "}, {"index": 5, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 43], "characterOffsetBegin": 18, "originalText": "section", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 29, "segment_span": [0, 43], "characterOffsetBegin": 26, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 43], "characterOffsetBegin": 30, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 8, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 43], "characterOffsetBegin": 41, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 52, "segment_span": [0, 43], "characterOffsetBegin": 50, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 43], "characterOffsetBegin": 53, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 11, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 43], "characterOffsetBegin": 61, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 74, "segment_span": [0, 43], "characterOffsetBegin": 73, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "Liu", "lemma": "Liu", "after": " ", "pos": "NNP", "characterOffsetEnd": 77, "segment_span": [0, 43], "characterOffsetBegin": 74, "originalText": "Liu", "ArgType": null, "before": ""}, {"index": 14, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 80, "segment_span": [0, 43], "characterOffsetBegin": 78, "originalText": "et", "ArgType": null, "before": " "}, {"index": 15, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 84, "segment_span": [0, 43], "characterOffsetBegin": 81, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 85, "segment_span": [0, 43], "characterOffsetBegin": 84, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 90, "segment_span": [0, 43], "characterOffsetBegin": 86, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 18, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 91, "segment_span": [0, 43], "characterOffsetBegin": 90, "originalText": ";", "ArgType": null, "before": ""}, {"index": 19, "word": "Huang", "lemma": "Huang", "after": " ", "pos": "NNP", "characterOffsetEnd": 97, "segment_span": [0, 43], "characterOffsetBegin": 92, "originalText": "Huang", "ArgType": null, "before": " "}, {"index": 20, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 100, "segment_span": [0, 43], "characterOffsetBegin": 98, "originalText": "et", "ArgType": null, "before": " "}, {"index": 21, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 104, "segment_span": [0, 43], "characterOffsetBegin": 101, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 105, "segment_span": [0, 43], "characterOffsetBegin": 104, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [0, 43], "characterOffsetBegin": 106, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 111, "segment_span": [0, 43], "characterOffsetBegin": 110, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 112, "segment_span": [0, 43], "characterOffsetBegin": 111, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 116, "segment_span": [0, 43], "characterOffsetBegin": 113, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 120, "segment_span": [0, 43], "characterOffsetBegin": 117, "originalText": "its", "ArgType": null, "before": " "}, {"index": 28, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 125, "segment_span": [0, 43], "characterOffsetBegin": 121, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 29, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 43], "characterOffsetBegin": 126, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 30, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [0, 43], "characterOffsetBegin": 137, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 148, "segment_span": [0, 43], "characterOffsetBegin": 147, "originalText": "(", "ArgType": null, "before": " "}, {"index": 32, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 154, "segment_span": [0, 43], "characterOffsetBegin": 148, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 33, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 157, "segment_span": [0, 43], "characterOffsetBegin": 155, "originalText": "et", "ArgType": null, "before": " "}, {"index": 34, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 161, "segment_span": [0, 43], "characterOffsetBegin": 158, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 162, "segment_span": [0, 43], "characterOffsetBegin": 161, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 167, "segment_span": [0, 43], "characterOffsetBegin": 163, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 37, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 168, "segment_span": [0, 43], "characterOffsetBegin": 167, "originalText": ";", "ArgType": null, "before": ""}, {"index": 38, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 175, "segment_span": [0, 43], "characterOffsetBegin": 169, "originalText": "Galley", "ArgType": null, "before": " "}, {"index": 39, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 178, "segment_span": [0, 43], "characterOffsetBegin": 176, "originalText": "et", "ArgType": null, "before": " "}, {"index": 40, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 182, "segment_span": [0, 43], "characterOffsetBegin": 179, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 41, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 183, "segment_span": [0, 43], "characterOffsetBegin": 182, "originalText": ",", "ArgType": null, "before": ""}, {"index": 42, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 188, "segment_span": [0, 43], "characterOffsetBegin": 184, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 43, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 189, "segment_span": [0, 43], "characterOffsetBegin": 188, "originalText": ")", "ArgType": null, "before": ""}, {"index": 44, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 190, "characterOffsetBegin": 189, "originalText": ".", "ArgType": null, "before": ""}], "text": "We review in this section the tree-based approach to machine translation ( Liu et al. , 2006 ; Huang et al. , 2006 ) , and its rule extraction algorithm ( Galley et al. , 2004 ; Galley et al. , 2006 ) ."}]}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 7, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "Current", "ArgType": null, "before": ""}, {"index": 2, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 18, "segment_span": [0, 13], "characterOffsetBegin": 8, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 3, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 13], "characterOffsetBegin": 19, "originalText": "systems", "ArgType": "subj", "before": " "}, {"index": 4, "word": "perform", "characterOffsetEnd": 34, "after": " ", "pos": "VBP", "is_root": true, "lemma": "perform", "segment_span": [0, 13], "tense": "P", "characterOffsetBegin": 27, "originalText": "perform", "ArgType": "verb", "before": " "}, {"index": 5, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [0, 13], "characterOffsetBegin": 35, "originalText": "translation", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 47, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 53, "segment_span": [0, 13], "characterOffsetBegin": 50, "originalText": "two", "ArgType": null, "before": " "}, {"index": 8, "word": "separate", "lemma": "separate", "after": " ", "pos": "JJ", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 54, "originalText": "separate", "ArgType": null, "before": " "}, {"index": 9, "word": "steps", "lemma": "step", "after": "", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [0, 13], "characterOffsetBegin": 63, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 69, "segment_span": [0, 13], "characterOffsetBegin": 68, "originalText": ":", "ArgType": null, "before": ""}, {"index": 11, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 13], "characterOffsetBegin": 70, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 81, "segment_span": [0, 13], "characterOffsetBegin": 78, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [0, 13], "characterOffsetBegin": 82, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ".", "ArgType": null, "before": ""}], "text": "Current tree-based systems perform translation in two separate steps : parsing and decoding ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 95, "segment_span": [0, 14], "characterOffsetBegin": 92, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 14], "characterOffsetBegin": 96, "originalText": "input", "ArgType": null, "before": " "}, {"index": 3, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [0, 14], "characterOffsetBegin": 102, "originalText": "string", "ArgType": null, "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 111, "segment_span": [0, 14], "characterOffsetBegin": 109, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 117, "segment_span": [0, 14], "characterOffsetBegin": 112, "originalText": "first", "ArgType": null, "before": " "}, {"index": 6, "word": "parsed", "characterOffsetEnd": 124, "after": " ", "pos": "VBN", "is_root": true, "lemma": "parse", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 118, "before": " ", "originalText": "parsed", "ArgType": null, "is_pass": true}, {"index": 7, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [0, 14], "characterOffsetBegin": 125, "originalText": "by", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 129, "segment_span": [0, 14], "characterOffsetBegin": 128, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "parser", "lemma": "parser", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 14], "characterOffsetBegin": 130, "originalText": "parser", "ArgType": null, "before": " "}, {"index": 10, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 141, "segment_span": [0, 14], "characterOffsetBegin": 137, "originalText": "into", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 143, "segment_span": [0, 14], "characterOffsetBegin": 142, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 150, "segment_span": [0, 14], "characterOffsetBegin": 144, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [0, 14], "characterOffsetBegin": 151, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 156, "segment_span": [0, 14], "characterOffsetBegin": 155, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 162, "segment_span": [14, 24], "characterOffsetBegin": 157, "originalText": "which", "ArgType": null, "before": " "}, {"index": 16, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 167, "segment_span": [14, 24], "characterOffsetBegin": 163, "originalText": "will", "ArgType": null, "before": " "}, {"index": 17, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 172, "segment_span": [14, 24], "characterOffsetBegin": 168, "originalText": "then", "ArgType": null, "before": " "}, {"index": 18, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 175, "segment_span": [14, 24], "characterOffsetBegin": 173, "originalText": "be", "ArgType": null, "before": " "}, {"index": 19, "word": "converted", "characterOffsetEnd": 185, "after": " ", "pos": "VBN", "is_root": true, "lemma": "convert", "segment_span": [14, 24], "tense": "N", "characterOffsetBegin": 176, "before": " ", "originalText": "converted", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 188, "segment_span": [14, 24], "characterOffsetBegin": 186, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 190, "segment_span": [14, 24], "characterOffsetBegin": 189, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 197, "segment_span": [14, 24], "characterOffsetBegin": 191, "originalText": "target", "ArgType": null, "before": " "}, {"index": 23, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [14, 24], "characterOffsetBegin": 198, "originalText": "language", "ArgType": null, "before": " "}, {"index": 24, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 213, "segment_span": [14, 24], "characterOffsetBegin": 207, "originalText": "string", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 216, "segment_span": [24, 32], "characterOffsetBegin": 214, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "applying", "characterOffsetEnd": 225, "after": " ", "pos": "VBG", "is_root": true, "lemma": "apply", "segment_span": [24, 32], "tense": "G", "characterOffsetBegin": 217, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 227, "segment_span": [24, 32], "characterOffsetBegin": 226, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 231, "segment_span": [24, 32], "characterOffsetBegin": 228, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 234, "segment_span": [24, 32], "characterOffsetBegin": 232, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "JJ", "characterOffsetEnd": 249, "segment_span": [24, 32], "characterOffsetBegin": 235, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 31, "word": "transformation", "lemma": "transformation", "after": " ", "pos": "NN", "characterOffsetEnd": 264, "segment_span": [24, 32], "characterOffsetBegin": 250, "originalText": "transformation", "ArgType": null, "before": " "}, {"index": 32, "word": "rules", "lemma": "rule", "after": "", "pos": "NNS", "characterOffsetEnd": 270, "segment_span": [24, 32], "characterOffsetBegin": 265, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 271, "characterOffsetBegin": 270, "originalText": ".", "ArgType": null, "before": ""}], "text": "The input string is first parsed by a parser into a 1-best tree , which will then be converted to a target language string by applying a set of tree-to-string transformation rules ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 275, "segment_span": [0, 13], "characterOffsetBegin": 272, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [0, 13], "characterOffsetBegin": 276, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 284, "segment_span": [0, 13], "characterOffsetBegin": 283, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "consider", "characterOffsetEnd": 293, "after": " ", "pos": "VBP", "is_root": true, "lemma": "consider", "segment_span": [0, 13], "tense": "P", "characterOffsetBegin": 285, "originalText": "consider", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 297, "segment_span": [0, 13], "characterOffsetBegin": 294, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 307, "segment_span": [0, 13], "characterOffsetBegin": 298, "originalText": "following", "ArgType": null, "before": " "}, {"index": 7, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 315, "segment_span": [0, 13], "characterOffsetBegin": 308, "originalText": "example", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "translating", "lemma": "translate", "after": " ", "pos": "VBG", "characterOffsetEnd": 327, "segment_span": [0, 13], "characterOffsetBegin": 316, "originalText": "translating", "ArgType": null, "before": " "}, {"index": 9, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 332, "segment_span": [0, 13], "characterOffsetBegin": 328, "originalText": "from", "ArgType": null, "before": " "}, {"index": 10, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 340, "segment_span": [0, 13], "characterOffsetBegin": 333, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 343, "segment_span": [0, 13], "characterOffsetBegin": 341, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "English", "lemma": "English", "after": "", "pos": "NNP", "characterOffsetEnd": 351, "segment_span": [0, 13], "characterOffsetBegin": 344, "originalText": "English", "ArgType": null, "before": " "}, {"index": 13, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 352, "segment_span": [0, 13], "characterOffsetBegin": 351, "originalText": ":", "ArgType": null, "before": ""}, {"index": 14, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 354, "segment_span": [13, 24], "characterOffsetBegin": 353, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 15, "word": "Bush", "lemma": "Bush", "after": " ", "pos": "NNP", "characterOffsetEnd": 358, "segment_span": [13, 24], "characterOffsetBegin": 354, "originalText": "Bush", "ArgType": "subj", "before": ""}, {"index": 16, "word": "held", "characterOffsetEnd": 363, "after": " ", "pos": "VBD", "is_root": true, "lemma": "hold", "segment_span": [13, 24], "tense": "D", "characterOffsetBegin": 359, "originalText": "held", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 365, "segment_span": [13, 24], "characterOffsetBegin": 364, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "meeting2", "lemma": "meeting2", "after": " ", "pos": "NN", "characterOffsetEnd": 374, "segment_span": [13, 24], "characterOffsetBegin": 366, "originalText": "meeting2", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 379, "segment_span": [13, 24], "characterOffsetBegin": 375, "originalText": "with", "ArgType": null, "before": " "}, {"index": 20, "word": "Sharon1", "lemma": "sharon1", "after": "", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [13, 24], "characterOffsetBegin": 380, "originalText": "Sharon1", "ArgType": null, "before": " "}, {"index": 21, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 388, "segment_span": [13, 24], "characterOffsetBegin": 387, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 22, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 395, "segment_span": [13, 24], "characterOffsetBegin": 389, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 23, "word": "2", "lemma": "2", "after": " ", "pos": "CD", "characterOffsetEnd": 397, "segment_span": [13, 24], "characterOffsetBegin": 396, "originalText": "2", "ArgType": null, "before": " "}, {"index": 24, "word": "shows", "lemma": "show", "after": " ", "pos": "VBZ", "characterOffsetEnd": 403, "segment_span": [13, 24], "characterOffsetBegin": 398, "originalText": "shows", "ArgType": null, "before": " "}, {"index": 25, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 407, "segment_span": [24, 28], "characterOffsetBegin": 404, "originalText": "how", "ArgType": null, "before": " "}, {"index": 26, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 412, "segment_span": [24, 28], "characterOffsetBegin": 408, "originalText": "this", "ArgType": null, "before": " "}, {"index": 27, "word": "process", "lemma": "process", "after": " ", "pos": "NN", "characterOffsetEnd": 420, "segment_span": [24, 28], "characterOffsetBegin": 413, "originalText": "process", "ArgType": "subj", "before": " "}, {"index": 28, "word": "works", "characterOffsetEnd": 426, "after": "", "pos": "VBZ", "is_root": true, "lemma": "work", "segment_span": [24, 28], "tense": "Z", "characterOffsetBegin": 421, "originalText": "works", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 427, "characterOffsetBegin": 426, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , consider the following example translating from Chinese to English : `` Bush held a meeting2 with Sharon1 '' Figure 2 shows how this process works ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 431, "segment_span": [0, 17], "characterOffsetBegin": 428, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 439, "segment_span": [0, 17], "characterOffsetBegin": 432, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 3, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 448, "segment_span": [0, 17], "characterOffsetBegin": 440, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 450, "segment_span": [0, 17], "characterOffsetBegin": 449, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 451, "segment_span": [0, 17], "characterOffsetBegin": 450, "originalText": "a", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 452, "segment_span": [0, 17], "characterOffsetBegin": 451, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 455, "segment_span": [0, 17], "characterOffsetBegin": 453, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 461, "segment_span": [0, 17], "characterOffsetBegin": 456, "originalText": "first", "ArgType": null, "before": " "}, {"index": 9, "word": "parsed", "characterOffsetEnd": 468, "after": " ", "pos": "VBN", "is_root": true, "lemma": "parse", "segment_span": [0, 17], "tense": "N", "characterOffsetBegin": 462, "before": " ", "originalText": "parsed", "ArgType": null, "is_pass": true}, {"index": 10, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 473, "segment_span": [0, 17], "characterOffsetBegin": 469, "originalText": "into", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 475, "segment_span": [0, 17], "characterOffsetBegin": 474, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 481, "segment_span": [0, 17], "characterOffsetBegin": 476, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 486, "segment_span": [0, 17], "characterOffsetBegin": 482, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 488, "segment_span": [0, 17], "characterOffsetBegin": 487, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "b", "lemma": "b", "after": "", "pos": "NN", "characterOffsetEnd": 489, "segment_span": [0, 17], "characterOffsetBegin": 488, "originalText": "b", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 490, "segment_span": [0, 17], "characterOffsetBegin": 489, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 491, "segment_span": [0, 17], "characterOffsetBegin": 490, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 497, "segment_span": [17, 28], "characterOffsetBegin": 492, "originalText": "which", "ArgType": null, "before": " "}, {"index": 19, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 502, "segment_span": [17, 28], "characterOffsetBegin": 498, "originalText": "will", "ArgType": null, "before": " "}, {"index": 20, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 505, "segment_span": [17, 28], "characterOffsetBegin": 503, "originalText": "be", "ArgType": null, "before": " "}, {"index": 21, "word": "converted", "characterOffsetEnd": 515, "after": " ", "pos": "VBN", "is_root": true, "lemma": "convert", "segment_span": [17, 28], "tense": "N", "characterOffsetBegin": 506, "before": " ", "originalText": "converted", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 22, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 520, "segment_span": [17, 28], "characterOffsetBegin": 516, "originalText": "into", "ArgType": null, "before": " "}, {"index": 23, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 523, "segment_span": [17, 28], "characterOffsetBegin": 521, "originalText": "an", "ArgType": null, "before": " "}, {"index": 24, "word": "English", "lemma": "english", "after": " ", "pos": "JJ", "characterOffsetEnd": 531, "segment_span": [17, 28], "characterOffsetBegin": 524, "originalText": "English", "ArgType": null, "before": " "}, {"index": 25, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 538, "segment_span": [17, 28], "characterOffsetBegin": 532, "originalText": "string", "ArgType": null, "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 541, "segment_span": [17, 28], "characterOffsetBegin": 539, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "5", "lemma": "5", "after": " ", "pos": "CD", "characterOffsetEnd": 543, "segment_span": [17, 28], "characterOffsetBegin": 542, "originalText": "5", "ArgType": null, "before": " "}, {"index": 28, "word": "steps", "lemma": "step", "after": "", "pos": "NNS", "characterOffsetEnd": 549, "segment_span": [17, 28], "characterOffsetBegin": 544, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 550, "characterOffsetBegin": 549, "originalText": ".", "ArgType": null, "before": ""}], "text": "The Chinese sentence ( a ) is first parsed into a parse tree ( b ) , which will be converted into an English string in 5 steps ."}, {"tokens": [{"index": 1, "word": "First", "lemma": "first", "after": "", "pos": "RB", "characterOffsetEnd": 556, "segment_span": [0, 16], "characterOffsetBegin": 551, "originalText": "First", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 557, "segment_span": [0, 16], "characterOffsetBegin": 556, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 560, "segment_span": [0, 16], "characterOffsetBegin": 558, "originalText": "at", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 564, "segment_span": [0, 16], "characterOffsetBegin": 561, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 569, "segment_span": [0, 16], "characterOffsetBegin": 565, "originalText": "root", "ArgType": null, "before": " "}, {"index": 6, "word": "node", "lemma": "node", "after": "", "pos": "NN", "characterOffsetEnd": 574, "segment_span": [0, 16], "characterOffsetBegin": 570, "originalText": "node", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 575, "segment_span": [0, 16], "characterOffsetBegin": 574, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 578, "segment_span": [0, 16], "characterOffsetBegin": 576, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 9, "word": "apply", "characterOffsetEnd": 584, "after": " ", "pos": "VBP", "is_root": true, "lemma": "apply", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 579, "originalText": "apply", "ArgType": "verb", "before": " "}, {"index": 10, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 589, "segment_span": [0, 16], "characterOffsetBegin": 585, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 11, "word": "r1", "lemma": "r1", "after": " ", "pos": "NN", "characterOffsetEnd": 592, "segment_span": [0, 16], "characterOffsetBegin": 590, "originalText": "r1", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "characterOffsetEnd": 598, "segment_span": [0, 16], "characterOffsetBegin": 593, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 601, "segment_span": [0, 16], "characterOffsetBegin": 599, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 608, "segment_span": [0, 16], "characterOffsetBegin": 602, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 15, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 610, "segment_span": [0, 16], "characterOffsetBegin": 609, "originalText": "1", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 611, "segment_span": [0, 16], "characterOffsetBegin": 610, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 617, "segment_span": [16, 34], "characterOffsetBegin": 612, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 18, "word": "translates", "characterOffsetEnd": 628, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "translate", "segment_span": [16, 34], "tense": "Z", "characterOffsetBegin": 618, "originalText": "translates", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 632, "segment_span": [16, 34], "characterOffsetBegin": 629, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 640, "segment_span": [16, 34], "characterOffsetBegin": 633, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 21, "word": "coordination", "lemma": "coordination", "after": " ", "pos": "NN", "characterOffsetEnd": 653, "segment_span": [16, 34], "characterOffsetBegin": 641, "originalText": "coordination", "ArgType": null, "before": " "}, {"index": 22, "word": "construction", "lemma": "construction", "after": " ", "pos": "NN", "characterOffsetEnd": 666, "segment_span": [16, 34], "characterOffsetBegin": 654, "originalText": "construction", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 668, "segment_span": [16, 34], "characterOffsetBegin": 667, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 669, "segment_span": [16, 34], "characterOffsetBegin": 668, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": ""}, {"index": 25, "word": "...", "lemma": "...", "after": " ", "pos": ":", "characterOffsetEnd": 672, "segment_span": [16, 34], "characterOffsetBegin": 669, "originalText": "...", "ArgType": null, "before": ""}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 676, "segment_span": [16, 34], "characterOffsetBegin": 673, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "...", "lemma": "...", "after": "", "pos": ":", "characterOffsetEnd": 680, "segment_span": [16, 34], "characterOffsetBegin": 677, "originalText": "...", "ArgType": null, "before": " "}, {"index": 28, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 681, "segment_span": [16, 34], "characterOffsetBegin": 680, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 682, "segment_span": [16, 34], "characterOffsetBegin": 681, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 687, "segment_span": [16, 34], "characterOffsetBegin": 683, "originalText": "into", "ArgType": null, "before": " "}, {"index": 31, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 690, "segment_span": [16, 34], "characterOffsetBegin": 688, "originalText": "an", "ArgType": null, "before": " "}, {"index": 32, "word": "English", "lemma": "english", "after": " ", "pos": "JJ", "characterOffsetEnd": 698, "segment_span": [16, 34], "characterOffsetBegin": 691, "originalText": "English", "ArgType": null, "before": " "}, {"index": 33, "word": "prepositional", "lemma": "prepositional", "after": " ", "pos": "JJ", "characterOffsetEnd": 712, "segment_span": [16, 34], "characterOffsetBegin": 699, "originalText": "prepositional", "ArgType": null, "before": " "}, {"index": 34, "word": "phrase", "lemma": "phrase", "after": "", "pos": "NN", "characterOffsetEnd": 719, "segment_span": [16, 34], "characterOffsetBegin": 713, "originalText": "phrase", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 720, "characterOffsetBegin": 719, "originalText": ".", "ArgType": null, "before": ""}], "text": "First , at the root node , we apply rule r1 shown in Figure 1 , which translates the Chinese coordination construction ( `` ... and ... '' ) into an English prepositional phrase ."}, {"tokens": [{"index": 1, "word": "Then", "lemma": "then", "after": "", "pos": "RB", "characterOffsetEnd": 725, "segment_span": [0, 16], "characterOffsetBegin": 721, "originalText": "Then", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 726, "segment_span": [0, 16], "characterOffsetBegin": 725, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 731, "segment_span": [0, 16], "characterOffsetBegin": 727, "originalText": "from", "ArgType": null, "before": " "}, {"index": 4, "word": "step", "lemma": "step", "after": " ", "pos": "NN", "characterOffsetEnd": 736, "segment_span": [0, 16], "characterOffsetBegin": 732, "originalText": "step", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 738, "segment_span": [0, 16], "characterOffsetBegin": 737, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "c", "lemma": "c", "after": "", "pos": "NN", "characterOffsetEnd": 739, "segment_span": [0, 16], "characterOffsetBegin": 738, "originalText": "c", "ArgType": null, "before": ""}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 740, "segment_span": [0, 16], "characterOffsetBegin": 739, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 743, "segment_span": [0, 16], "characterOffsetBegin": 741, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 9, "word": "continue", "characterOffsetEnd": 752, "after": " ", "pos": "VBP", "is_root": true, "lemma": "continue", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 744, "originalText": "continue", "ArgType": "verb", "before": " "}, {"index": 10, "word": "applying", "lemma": "apply", "after": " ", "pos": "VBG", "characterOffsetEnd": 761, "segment_span": [0, 16], "characterOffsetBegin": 753, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 11, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 767, "segment_span": [0, 16], "characterOffsetBegin": 762, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 770, "segment_span": [0, 16], "characterOffsetBegin": 768, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "untranslated", "lemma": "untranslated", "after": " ", "pos": "JJ", "characterOffsetEnd": 783, "segment_span": [0, 16], "characterOffsetBegin": 771, "originalText": "untranslated", "ArgType": null, "before": " "}, {"index": 14, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 791, "segment_span": [0, 16], "characterOffsetBegin": 784, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 15, "word": "subtrees", "lemma": "subtree", "after": "", "pos": "NNS", "characterOffsetEnd": 800, "segment_span": [0, 16], "characterOffsetBegin": 792, "originalText": "subtrees", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 801, "segment_span": [0, 16], "characterOffsetBegin": 800, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "until", "lemma": "until", "after": " ", "pos": "IN", "characterOffsetEnd": 807, "segment_span": [16, 28], "characterOffsetBegin": 802, "originalText": "until", "ArgType": null, "before": " "}, {"index": 18, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 810, "segment_span": [16, 28], "characterOffsetBegin": 808, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 19, "word": "get", "characterOffsetEnd": 814, "after": " ", "pos": "VBP", "is_root": true, "lemma": "get", "segment_span": [16, 28], "tense": "P", "characterOffsetBegin": 811, "originalText": "get", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 818, "segment_span": [16, 28], "characterOffsetBegin": 815, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 827, "segment_span": [16, 28], "characterOffsetBegin": 819, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 22, "word": "English", "lemma": "English", "after": " ", "pos": "NNP", "characterOffsetEnd": 835, "segment_span": [16, 28], "characterOffsetBegin": 828, "originalText": "English", "ArgType": null, "before": " "}, {"index": 23, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 847, "segment_span": [16, 28], "characterOffsetBegin": 836, "originalText": "translation", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 850, "segment_span": [16, 28], "characterOffsetBegin": 848, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 852, "segment_span": [16, 28], "characterOffsetBegin": 851, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 853, "segment_span": [16, 28], "characterOffsetBegin": 852, "originalText": "e", "ArgType": null, "before": ""}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 854, "segment_span": [16, 28], "characterOffsetBegin": 853, "originalText": ")", "ArgType": null, "before": ""}, {"index": 28, "word": ".2", "lemma": ".2", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": "NN", "characterOffsetEnd": 856, "segment_span": [16, 28], "characterOffsetBegin": 854, "originalText": ".2", "ArgType": null, "before": ""}], "text": "Then , from step ( c ) we continue applying rules to untranslated Chinese subtrees , until we get the complete English translation in ( e ) .2"}, {"tokens": [{"index": 1, "word": "2We", "lemma": "2we", "after": " ", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "2We", "ArgType": null, "before": ""}, {"index": 2, "word": "swap", "lemma": "swap", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 23], "characterOffsetBegin": 4, "originalText": "swap", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 23], "characterOffsetBegin": 9, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 19, "segment_span": [0, 23], "characterOffsetBegin": 13, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 23, "segment_span": [0, 23], "characterOffsetBegin": 20, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "2-best", "lemma": "2-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 30, "segment_span": [0, 23], "characterOffsetBegin": 24, "originalText": "2-best", "ArgType": null, "before": " "}, {"index": 7, "word": "parses", "lemma": "parse", "after": " ", "pos": "NNS", "characterOffsetEnd": 37, "segment_span": [0, 23], "characterOffsetBegin": 31, "originalText": "parses", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 40, "segment_span": [0, 23], "characterOffsetBegin": 38, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 44, "segment_span": [0, 23], "characterOffsetBegin": 41, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 23], "characterOffsetBegin": 45, "originalText": "example", "ArgType": null, "before": " "}, {"index": 11, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 61, "segment_span": [0, 23], "characterOffsetBegin": 53, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 12, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 23], "characterOffsetBegin": 62, "originalText": "from", "ArgType": null, "before": " "}, {"index": 13, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 70, "segment_span": [0, 23], "characterOffsetBegin": 67, "originalText": "our", "ArgType": null, "before": " "}, {"index": 14, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "JJR", "characterOffsetEnd": 78, "segment_span": [0, 23], "characterOffsetBegin": 71, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 15, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 23], "characterOffsetBegin": 79, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 86, "segment_span": [0, 23], "characterOffsetBegin": 85, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 88, "segment_span": [0, 23], "characterOffsetBegin": 86, "originalText": "Mi", "ArgType": null, "before": ""}, {"index": 18, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 91, "segment_span": [0, 23], "characterOffsetBegin": 89, "originalText": "et", "ArgType": null, "before": " "}, {"index": 19, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 95, "segment_span": [0, 23], "characterOffsetBegin": 92, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 96, "segment_span": [0, 23], "characterOffsetBegin": 95, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 101, "segment_span": [0, 23], "characterOffsetBegin": 97, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 102, "segment_span": [0, 23], "characterOffsetBegin": 101, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 103, "segment_span": [0, 23], "characterOffsetBegin": 102, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [23, 36], "characterOffsetBegin": 104, "originalText": "since", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [23, 36], "characterOffsetBegin": 110, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 121, "segment_span": [23, 36], "characterOffsetBegin": 114, "originalText": "current", "ArgType": null, "before": " "}, {"index": 27, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 128, "segment_span": [23, 36], "characterOffsetBegin": 122, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 28, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [23, 36], "characterOffsetBegin": 129, "originalText": "parse", "ArgType": "subj", "before": " "}, {"index": 29, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 137, "segment_span": [23, 36], "characterOffsetBegin": 135, "originalText": "is", "ArgType": null, "before": " "}, {"index": 30, "word": "easier", "lemma": "easier", "after": " ", "pos": "JJR", "characterOffsetEnd": 144, "segment_span": [23, 36], "characterOffsetBegin": 138, "originalText": "easier", "ArgType": null, "before": " "}, {"index": 31, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 147, "segment_span": [23, 36], "characterOffsetBegin": 145, "originalText": "to", "ArgType": null, "before": " "}, {"index": 32, "word": "illustrate", "lemma": "illustrate", "after": " ", "pos": "VB", "characterOffsetEnd": 158, "segment_span": [23, 36], "characterOffsetBegin": 148, "originalText": "illustrate", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 162, "segment_span": [23, 36], "characterOffsetBegin": 159, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [23, 36], "characterOffsetBegin": 163, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 35, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 178, "segment_span": [23, 36], "characterOffsetBegin": 168, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 36, "word": "algorithm", "lemma": "algorithm", "after": "", "pos": "NN", "characterOffsetEnd": 188, "segment_span": [23, 36], "characterOffsetBegin": 179, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 37, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 189, "characterOffsetBegin": 188, "originalText": ".", "ArgType": null, "before": ""}], "text": "2We swap the 1-best and 2-best parses of the example sentence from our earlier paper ( Mi et al. , 2008 ) , since the current 1-best parse is easier to illustrate the rule extraction algorithm ."}, {"tokens": [{"index": 1, "word": "Sh", "lemma": "sh", "after": "", "pos": "NN", "characterOffsetEnd": 2, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "Sh", "ArgType": null, "before": ""}, {"index": 2, "word": "\u00c2\u00af", "lemma": "\u00c2\u00af", "after": "", "pos": "CD", "characterOffsetEnd": 3, "segment_span": [0, 14], "characterOffsetBegin": 2, "originalText": "\u00c2\u00af", "ArgType": null, "before": ""}, {"index": 3, "word": "al", "lemma": "al", "after": "", "pos": "NNP", "characterOffsetEnd": 5, "segment_span": [0, 14], "characterOffsetBegin": 3, "originalText": "al", "ArgType": null, "before": ""}, {"index": 4, "word": "\u00c2\u00b4", "lemma": "\u00c2\u00b4", "after": "", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 14], "characterOffsetBegin": 5, "originalText": "\u00c2\u00b4", "ArgType": null, "before": ""}, {"index": 5, "word": "ong", "lemma": "ong", "after": " ", "pos": "NNP", "characterOffsetEnd": 9, "segment_span": [0, 14], "characterOffsetBegin": 6, "originalText": "ong", "ArgType": null, "before": ""}, {"index": 6, "word": "Bush", "lemma": "Bush", "after": " ", "pos": "NNP", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 10, "originalText": "Bush", "ArgType": "subj", "before": " "}, {"index": 7, "word": "held", "characterOffsetEnd": 19, "after": " ", "pos": "VBD", "is_root": true, "lemma": "hold", "segment_span": [0, 14], "tense": "D", "characterOffsetBegin": 15, "originalText": "held", "ArgType": "verb", "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 14], "characterOffsetBegin": 20, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "meeting", "lemma": "meeting", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 14], "characterOffsetBegin": 22, "originalText": "meeting", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 14], "characterOffsetBegin": 30, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "Sharon", "lemma": "Sharon", "after": " ", "pos": "NNP", "characterOffsetEnd": 41, "segment_span": [0, 14], "characterOffsetBegin": 35, "originalText": "Sharon", "ArgType": null, "before": " "}, {"index": 12, "word": "More", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 46, "segment_span": [0, 14], "characterOffsetBegin": 42, "originalText": "More", "ArgType": null, "before": " "}, {"index": 13, "word": "formally", "lemma": "formally", "after": "", "pos": "RB", "characterOffsetEnd": 55, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": "formally", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 56, "segment_span": [0, 14], "characterOffsetBegin": 55, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [14, 109], "characterOffsetBegin": 57, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 60, "segment_span": [14, 109], "characterOffsetBegin": 59, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "tree-to-string", "lemma": "tree-to-string", "after": "", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [14, 109], "characterOffsetBegin": 60, "originalText": "tree-to-string", "ArgType": null, "before": ""}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 75, "segment_span": [14, 109], "characterOffsetBegin": 74, "originalText": ")", "ArgType": null, "before": ""}, {"index": 19, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [14, 109], "characterOffsetBegin": 76, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 20, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [14, 109], "characterOffsetBegin": 88, "originalText": "rule", "ArgType": "subj", "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 94, "segment_span": [14, 109], "characterOffsetBegin": 93, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 100, "segment_span": [14, 109], "characterOffsetBegin": 94, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 23, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 103, "segment_span": [14, 109], "characterOffsetBegin": 101, "originalText": "et", "ArgType": null, "before": " "}, {"index": 24, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 107, "segment_span": [14, 109], "characterOffsetBegin": 104, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 108, "segment_span": [14, 109], "characterOffsetBegin": 107, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 113, "segment_span": [14, 109], "characterOffsetBegin": 109, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 27, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 114, "segment_span": [14, 109], "characterOffsetBegin": 113, "originalText": ";", "ArgType": null, "before": ""}, {"index": 28, "word": "Huang", "lemma": "Huang", "after": " ", "pos": "NNP", "characterOffsetEnd": 120, "segment_span": [14, 109], "characterOffsetBegin": 115, "originalText": "Huang", "ArgType": null, "before": " "}, {"index": 29, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 123, "segment_span": [14, 109], "characterOffsetBegin": 121, "originalText": "et", "ArgType": null, "before": " "}, {"index": 30, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 127, "segment_span": [14, 109], "characterOffsetBegin": 124, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 128, "segment_span": [14, 109], "characterOffsetBegin": 127, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 133, "segment_span": [14, 109], "characterOffsetBegin": 129, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 33, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 134, "segment_span": [14, 109], "characterOffsetBegin": 133, "originalText": ")", "ArgType": null, "before": ""}, {"index": 34, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 137, "segment_span": [14, 109], "characterOffsetBegin": 135, "originalText": "is", "ArgType": null, "before": " "}, {"index": 35, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 139, "segment_span": [14, 109], "characterOffsetBegin": 138, "originalText": "a", "ArgType": null, "before": " "}, {"index": 36, "word": "tuple", "lemma": "tuple", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [14, 109], "characterOffsetBegin": 140, "originalText": "tuple", "ArgType": null, "before": " "}, {"index": 37, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 147, "segment_span": [14, 109], "characterOffsetBegin": 146, "originalText": "(", "ArgType": null, "before": " "}, {"index": 38, "word": "lhs", "lemma": "lh", "after": "", "pos": "NNS", "characterOffsetEnd": 150, "segment_span": [14, 109], "characterOffsetBegin": 147, "originalText": "lhs", "ArgType": null, "before": ""}, {"index": 39, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 151, "segment_span": [14, 109], "characterOffsetBegin": 150, "originalText": "(", "ArgType": null, "before": ""}, {"index": 40, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [14, 109], "characterOffsetBegin": 151, "originalText": "r", "ArgType": null, "before": ""}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 153, "segment_span": [14, 109], "characterOffsetBegin": 152, "originalText": ")", "ArgType": null, "before": ""}, {"index": 42, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 154, "segment_span": [14, 109], "characterOffsetBegin": 153, "originalText": ",", "ArgType": null, "before": ""}, {"index": 43, "word": "rhs", "lemma": "rhs", "after": "", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [14, 109], "characterOffsetBegin": 155, "originalText": "rhs", "ArgType": null, "before": " "}, {"index": 44, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 159, "segment_span": [14, 109], "characterOffsetBegin": 158, "originalText": "(", "ArgType": null, "before": ""}, {"index": 45, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [14, 109], "characterOffsetBegin": 159, "originalText": "r", "ArgType": null, "before": ""}, {"index": 46, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 161, "segment_span": [14, 109], "characterOffsetBegin": 160, "originalText": ")", "ArgType": null, "before": ""}, {"index": 47, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 162, "segment_span": [14, 109], "characterOffsetBegin": 161, "originalText": ",", "ArgType": null, "before": ""}, {"index": 48, "word": "0", "lemma": "0", "after": "", "pos": "CD", "characterOffsetEnd": 164, "segment_span": [14, 109], "characterOffsetBegin": 163, "originalText": "0", "ArgType": null, "before": " "}, {"index": 49, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 165, "segment_span": [14, 109], "characterOffsetBegin": 164, "originalText": "(", "ArgType": null, "before": ""}, {"index": 50, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 166, "segment_span": [14, 109], "characterOffsetBegin": 165, "originalText": "r", "ArgType": null, "before": ""}, {"index": 51, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 167, "segment_span": [14, 109], "characterOffsetBegin": 166, "originalText": ")", "ArgType": null, "before": ""}, {"index": 52, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 168, "segment_span": [14, 109], "characterOffsetBegin": 167, "originalText": ")", "ArgType": null, "before": ""}, {"index": 53, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 169, "segment_span": [14, 109], "characterOffsetBegin": 168, "originalText": ",", "ArgType": null, "before": ""}, {"index": 54, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 175, "segment_span": [53, 108], "characterOffsetBegin": 170, "originalText": "where", "ArgType": null, "before": " "}, {"index": 55, "word": "lhs", "lemma": "lh", "after": "", "pos": "NNS", "characterOffsetEnd": 179, "segment_span": [53, 108], "characterOffsetBegin": 176, "originalText": "lhs", "ArgType": "subj", "before": " "}, {"index": 56, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 180, "segment_span": [53, 108], "characterOffsetBegin": 179, "originalText": "(", "ArgType": null, "before": ""}, {"index": 57, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 181, "segment_span": [53, 108], "characterOffsetBegin": 180, "originalText": "r", "ArgType": null, "before": ""}, {"index": 58, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 182, "segment_span": [53, 108], "characterOffsetBegin": 181, "originalText": ")", "ArgType": null, "before": ""}, {"index": 59, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 185, "segment_span": [53, 108], "characterOffsetBegin": 183, "originalText": "is", "ArgType": null, "before": " "}, {"index": 60, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 189, "segment_span": [53, 108], "characterOffsetBegin": 186, "originalText": "the", "ArgType": null, "before": " "}, {"index": 61, "word": "sourceside", "lemma": "sourceside", "after": " ", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [53, 108], "characterOffsetBegin": 190, "originalText": "sourceside", "ArgType": null, "before": " "}, {"index": 62, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 205, "segment_span": [53, 108], "characterOffsetBegin": 201, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 63, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 214, "segment_span": [53, 108], "characterOffsetBegin": 206, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 64, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 215, "segment_span": [53, 108], "characterOffsetBegin": 214, "originalText": ",", "ArgType": null, "before": ""}, {"index": 65, "word": "whose", "lemma": "whose", "after": " ", "pos": "WP$", "characterOffsetEnd": 221, "segment_span": [64, 78], "characterOffsetBegin": 216, "originalText": "whose", "ArgType": null, "before": " "}, {"index": 66, "word": "internal", "lemma": "internal", "after": " ", "pos": "JJ", "characterOffsetEnd": 230, "segment_span": [64, 78], "characterOffsetBegin": 222, "originalText": "internal", "ArgType": null, "before": " "}, {"index": 67, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 236, "segment_span": [64, 78], "characterOffsetBegin": 231, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 68, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 240, "segment_span": [64, 78], "characterOffsetBegin": 237, "originalText": "are", "ArgType": null, "before": " "}, {"index": 69, "word": "labeled", "characterOffsetEnd": 248, "after": " ", "pos": "VBN", "is_root": true, "lemma": "label", "segment_span": [64, 78], "tense": "N", "characterOffsetBegin": 241, "before": " ", "originalText": "labeled", "ArgType": null, "is_pass": true}, {"index": 70, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 251, "segment_span": [64, 78], "characterOffsetBegin": 249, "originalText": "by", "ArgType": null, "before": " "}, {"index": 71, "word": "nonterminal", "lemma": "nonterminal", "after": " ", "pos": "JJ", "characterOffsetEnd": 263, "segment_span": [64, 78], "characterOffsetBegin": 252, "originalText": "nonterminal", "ArgType": null, "before": " "}, {"index": 72, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 271, "segment_span": [64, 78], "characterOffsetBegin": 264, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 73, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 273, "segment_span": [64, 78], "characterOffsetBegin": 272, "originalText": "(", "ArgType": null, "before": " "}, {"index": 74, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 277, "segment_span": [64, 78], "characterOffsetBegin": 273, "originalText": "like", "ArgType": null, "before": ""}, {"index": 75, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 280, "segment_span": [64, 78], "characterOffsetBegin": 278, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 76, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 284, "segment_span": [64, 78], "characterOffsetBegin": 281, "originalText": "and", "ArgType": null, "before": " "}, {"index": 77, "word": "VP", "lemma": "vp", "after": "", "pos": "NN", "characterOffsetEnd": 287, "segment_span": [64, 78], "characterOffsetBegin": 285, "originalText": "VP", "ArgType": null, "before": " "}, {"index": 78, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 288, "segment_span": [64, 78], "characterOffsetBegin": 287, "originalText": ")", "ArgType": null, "before": ""}, {"index": 79, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 289, "segment_span": [53, 108], "characterOffsetBegin": 288, "originalText": ",", "ArgType": null, "before": ""}, {"index": 80, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 293, "segment_span": [53, 108], "characterOffsetBegin": 290, "originalText": "and", "ArgType": null, "before": " "}, {"index": 81, "word": "whose", "lemma": "whose", "after": " ", "pos": "WP$", "characterOffsetEnd": 299, "segment_span": [53, 108], "characterOffsetBegin": 294, "originalText": "whose", "ArgType": null, "before": " "}, {"index": 82, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 308, "segment_span": [53, 108], "characterOffsetBegin": 300, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 83, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 314, "segment_span": [53, 108], "characterOffsetBegin": 309, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 84, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 318, "segment_span": [53, 108], "characterOffsetBegin": 315, "originalText": "are", "ArgType": null, "before": " "}, {"index": 85, "word": "labeled", "lemma": "label", "after": " ", "pos": "VBN", "characterOffsetEnd": 326, "segment_span": [53, 108], "characterOffsetBegin": 319, "originalText": "labeled", "ArgType": null, "before": " "}, {"index": 86, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 329, "segment_span": [53, 108], "characterOffsetBegin": 327, "originalText": "by", "ArgType": null, "before": " "}, {"index": 87, "word": "sourcelanguage", "lemma": "sourcelanguage", "after": " ", "pos": "NN", "characterOffsetEnd": 344, "segment_span": [53, 108], "characterOffsetBegin": 330, "originalText": "sourcelanguage", "ArgType": null, "before": " "}, {"index": 88, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 350, "segment_span": [53, 108], "characterOffsetBegin": 345, "originalText": "words", "ArgType": null, "before": " "}, {"index": 89, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 352, "segment_span": [53, 108], "characterOffsetBegin": 351, "originalText": "(", "ArgType": null, "before": " "}, {"index": 90, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 356, "segment_span": [53, 108], "characterOffsetBegin": 352, "originalText": "like", "ArgType": null, "before": ""}, {"index": 91, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 358, "segment_span": [53, 108], "characterOffsetBegin": 357, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 92, "word": "y\u00cb\u0087u", "lemma": "y\u00cb\u0087u", "after": "", "pos": "FW", "characterOffsetEnd": 361, "segment_span": [53, 108], "characterOffsetBegin": 358, "originalText": "y\u00cb\u0087u", "ArgType": null, "before": ""}, {"index": 93, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 362, "segment_span": [53, 108], "characterOffsetBegin": 361, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 94, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 363, "segment_span": [53, 108], "characterOffsetBegin": 362, "originalText": ")", "ArgType": null, "before": ""}, {"index": 95, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 366, "segment_span": [53, 108], "characterOffsetBegin": 364, "originalText": "or", "ArgType": null, "before": " "}, {"index": 96, "word": "variables", "lemma": "variable", "after": " ", "pos": "NNS", "characterOffsetEnd": 376, "segment_span": [53, 108], "characterOffsetBegin": 367, "originalText": "variables", "ArgType": null, "before": " "}, {"index": 97, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 381, "segment_span": [53, 108], "characterOffsetBegin": 377, "originalText": "from", "ArgType": null, "before": " "}, {"index": 98, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 383, "segment_span": [53, 108], "characterOffsetBegin": 382, "originalText": "a", "ArgType": null, "before": " "}, {"index": 99, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [53, 108], "characterOffsetBegin": 384, "originalText": "set", "ArgType": null, "before": " "}, {"index": 100, "word": "X", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 389, "segment_span": [53, 108], "characterOffsetBegin": 388, "originalText": "X", "ArgType": null, "before": " "}, {"index": 101, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 391, "segment_span": [53, 108], "characterOffsetBegin": 390, "originalText": "=", "ArgType": null, "before": " "}, {"index": 102, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 393, "segment_span": [53, 108], "characterOffsetBegin": 392, "originalText": "{", "ArgType": null, "before": " "}, {"index": 103, "word": "x1", "lemma": "x1", "after": "", "pos": "NN", "characterOffsetEnd": 395, "segment_span": [53, 108], "characterOffsetBegin": 393, "originalText": "x1", "ArgType": null, "before": ""}, {"index": 104, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 396, "segment_span": [53, 108], "characterOffsetBegin": 395, "originalText": ",", "ArgType": null, "before": ""}, {"index": 105, "word": "x2", "lemma": "x2", "after": "", "pos": "NN", "characterOffsetEnd": 399, "segment_span": [53, 108], "characterOffsetBegin": 397, "originalText": "x2", "ArgType": null, "before": " "}, {"index": 106, "word": ",", "lemma": ",", "after": "", "pos": ",", "characterOffsetEnd": 400, "segment_span": [53, 108], "characterOffsetBegin": 399, "originalText": ",", "ArgType": null, "before": ""}, {"index": 107, "word": "...", "lemma": "...", "after": "", "pos": ":", "characterOffsetEnd": 403, "segment_span": [53, 108], "characterOffsetBegin": 400, "originalText": "...", "ArgType": null, "before": ""}, {"index": 108, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 404, "segment_span": [53, 108], "characterOffsetBegin": 403, "originalText": "}", "ArgType": null, "before": ""}, {"index": 109, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 405, "segment_span": [14, 109], "characterOffsetBegin": 404, "originalText": ";", "ArgType": null, "before": ""}, {"index": 110, "word": "rhs", "lemma": "rh", "after": "", "pos": "NNS", "characterOffsetEnd": 409, "segment_span": [109, 142], "characterOffsetBegin": 406, "originalText": "rhs", "ArgType": "subj", "before": " "}, {"index": 111, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 410, "segment_span": [109, 142], "characterOffsetBegin": 409, "originalText": "(", "ArgType": null, "before": ""}, {"index": 112, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 411, "segment_span": [109, 142], "characterOffsetBegin": 410, "originalText": "r", "ArgType": null, "before": ""}, {"index": 113, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 412, "segment_span": [109, 142], "characterOffsetBegin": 411, "originalText": ")", "ArgType": null, "before": ""}, {"index": 114, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 415, "segment_span": [109, 142], "characterOffsetBegin": 413, "originalText": "is", "ArgType": null, "before": " "}, {"index": 115, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 419, "segment_span": [109, 142], "characterOffsetBegin": 416, "originalText": "the", "ArgType": null, "before": " "}, {"index": 116, "word": "target-side", "lemma": "target-side", "after": " ", "pos": "NN", "characterOffsetEnd": 431, "segment_span": [109, 142], "characterOffsetBegin": 420, "originalText": "target-side", "ArgType": null, "before": " "}, {"index": 117, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 438, "segment_span": [109, 142], "characterOffsetBegin": 432, "originalText": "string", "ArgType": null, "before": " "}, {"index": 118, "word": "expressed", "lemma": "express", "after": " ", "pos": "VBN", "characterOffsetEnd": 448, "segment_span": [109, 142], "characterOffsetBegin": 439, "originalText": "expressed", "ArgType": null, "before": " "}, {"index": 119, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 451, "segment_span": [109, 142], "characterOffsetBegin": 449, "originalText": "in", "ArgType": null, "before": " "}, {"index": 120, "word": "target-language", "lemma": "target-language", "after": " ", "pos": "JJ", "characterOffsetEnd": 467, "segment_span": [109, 142], "characterOffsetBegin": 452, "originalText": "target-language", "ArgType": null, "before": " "}, {"index": 121, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 473, "segment_span": [109, 142], "characterOffsetBegin": 468, "originalText": "words", "ArgType": null, "before": " "}, {"index": 122, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 475, "segment_span": [109, 142], "characterOffsetBegin": 474, "originalText": "(", "ArgType": null, "before": " "}, {"index": 123, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 479, "segment_span": [109, 142], "characterOffsetBegin": 475, "originalText": "like", "ArgType": null, "before": ""}, {"index": 124, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 481, "segment_span": [109, 142], "characterOffsetBegin": 480, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 125, "word": "with", "lemma": "with", "after": "", "pos": "IN", "characterOffsetEnd": 485, "segment_span": [109, 142], "characterOffsetBegin": 481, "originalText": "with", "ArgType": null, "before": ""}, {"index": 126, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 486, "segment_span": [109, 142], "characterOffsetBegin": 485, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 127, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 487, "segment_span": [109, 142], "characterOffsetBegin": 486, "originalText": ")", "ArgType": null, "before": ""}, {"index": 128, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 491, "segment_span": [109, 142], "characterOffsetBegin": 488, "originalText": "and", "ArgType": null, "before": " "}, {"index": 129, "word": "variables", "lemma": "variable", "after": "", "pos": "NNS", "characterOffsetEnd": 501, "segment_span": [109, 142], "characterOffsetBegin": 492, "originalText": "variables", "ArgType": "subj", "before": " "}, {"index": 130, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 502, "segment_span": [109, 142], "characterOffsetBegin": 501, "originalText": ";", "ArgType": null, "before": ""}, {"index": 131, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 506, "segment_span": [109, 142], "characterOffsetBegin": 503, "originalText": "and", "ArgType": null, "before": " "}, {"index": 132, "word": "0", "lemma": "0", "after": "", "pos": "CD", "characterOffsetEnd": 508, "segment_span": [109, 142], "characterOffsetBegin": 507, "originalText": "0", "ArgType": null, "before": " "}, {"index": 133, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 509, "segment_span": [109, 142], "characterOffsetBegin": 508, "originalText": "(", "ArgType": null, "before": ""}, {"index": 134, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 510, "segment_span": [109, 142], "characterOffsetBegin": 509, "originalText": "r", "ArgType": null, "before": ""}, {"index": 135, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 511, "segment_span": [109, 142], "characterOffsetBegin": 510, "originalText": ")", "ArgType": null, "before": ""}, {"index": 136, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 514, "segment_span": [109, 142], "characterOffsetBegin": 512, "originalText": "is", "ArgType": null, "before": " "}, {"index": 137, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 516, "segment_span": [109, 142], "characterOffsetBegin": 515, "originalText": "a", "ArgType": null, "before": " "}, {"index": 138, "word": "mapping", "lemma": "mapping", "after": " ", "pos": "NN", "characterOffsetEnd": 524, "segment_span": [109, 142], "characterOffsetBegin": 517, "originalText": "mapping", "ArgType": null, "before": " "}, {"index": 139, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 529, "segment_span": [109, 142], "characterOffsetBegin": 525, "originalText": "from", "ArgType": null, "before": " "}, {"index": 140, "word": "X", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 531, "segment_span": [109, 142], "characterOffsetBegin": 530, "originalText": "X", "ArgType": null, "before": " "}, {"index": 141, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 534, "segment_span": [109, 142], "characterOffsetBegin": 532, "originalText": "to", "ArgType": null, "before": " "}, {"index": 142, "word": "nonterminals", "lemma": "nonterminal", "after": "", "pos": "NNS", "characterOffsetEnd": 547, "segment_span": [109, 142], "characterOffsetBegin": 535, "originalText": "nonterminals", "ArgType": null, "before": " "}, {"index": 143, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 548, "characterOffsetBegin": 547, "originalText": ".", "ArgType": null, "before": ""}], "text": "Sh \u00c2\u00af al \u00c2\u00b4 ong Bush held a meeting with Sharon More formally , a ( tree-to-string ) translation rule ( Galley et al. , 2004 ; Huang et al. , 2006 ) is a tuple ( lhs ( r ) , rhs ( r ) , 0 ( r ) ) , where lhs ( r ) is the sourceside tree fragment , whose internal nodes are labeled by nonterminal symbols ( like NP and VP ) , and whose frontier nodes are labeled by sourcelanguage words ( like `` y\u00cb\u0087u '' ) or variables from a set X = -LCB- x1 , x2 , ... -RCB- ; rhs ( r ) is the target-side string expressed in target-language words ( like `` with '' ) and variables ; and 0 ( r ) is a mapping from X to nonterminals ."}, {"tokens": [{"index": 1, "word": "Each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 553, "segment_span": [0, 21], "characterOffsetBegin": 549, "originalText": "Each", "ArgType": null, "before": " "}, {"index": 2, "word": "variable", "lemma": "variable", "after": " ", "pos": "JJ", "characterOffsetEnd": 562, "segment_span": [0, 21], "characterOffsetBegin": 554, "originalText": "variable", "ArgType": null, "before": " "}, {"index": 3, "word": "xi", "lemma": "xi", "after": " ", "pos": "NN", "characterOffsetEnd": 565, "segment_span": [0, 21], "characterOffsetBegin": 563, "originalText": "xi", "ArgType": null, "before": " "}, {"index": 4, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 567, "segment_span": [0, 21], "characterOffsetBegin": 566, "originalText": "E", "ArgType": null, "before": " "}, {"index": 5, "word": "X", "lemma": "x", "after": " ", "pos": "NN", "characterOffsetEnd": 569, "segment_span": [0, 21], "characterOffsetBegin": 568, "originalText": "X", "ArgType": "subj", "before": " "}, {"index": 6, "word": "occurs", "characterOffsetEnd": 576, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "occur", "segment_span": [0, 21], "tense": "Z", "characterOffsetBegin": 570, "originalText": "occurs", "ArgType": "verb", "before": " "}, {"index": 7, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 584, "segment_span": [0, 21], "characterOffsetBegin": 577, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 8, "word": "once", "lemma": "once", "after": " ", "pos": "RB", "characterOffsetEnd": 589, "segment_span": [0, 21], "characterOffsetBegin": 585, "originalText": "once", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 592, "segment_span": [0, 21], "characterOffsetBegin": 590, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "lhs", "lemma": "lh", "after": "", "pos": "NNS", "characterOffsetEnd": 596, "segment_span": [0, 21], "characterOffsetBegin": 593, "originalText": "lhs", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 597, "segment_span": [0, 21], "characterOffsetBegin": 596, "originalText": "(", "ArgType": null, "before": ""}, {"index": 12, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 598, "segment_span": [0, 21], "characterOffsetBegin": 597, "originalText": "r", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 599, "segment_span": [0, 21], "characterOffsetBegin": 598, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 603, "segment_span": [0, 21], "characterOffsetBegin": 600, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 611, "segment_span": [0, 21], "characterOffsetBegin": 604, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 16, "word": "once", "lemma": "once", "after": " ", "pos": "RB", "characterOffsetEnd": 616, "segment_span": [0, 21], "characterOffsetBegin": 612, "originalText": "once", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 619, "segment_span": [0, 21], "characterOffsetBegin": 617, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "rhs", "lemma": "rhs", "after": "", "pos": "NN", "characterOffsetEnd": 623, "segment_span": [0, 21], "characterOffsetBegin": 620, "originalText": "rhs", "ArgType": null, "before": " "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 624, "segment_span": [0, 21], "characterOffsetBegin": 623, "originalText": "(", "ArgType": null, "before": ""}, {"index": 20, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 625, "segment_span": [0, 21], "characterOffsetBegin": 624, "originalText": "r", "ArgType": null, "before": ""}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 626, "segment_span": [0, 21], "characterOffsetBegin": 625, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 627, "characterOffsetBegin": 626, "originalText": ".", "ArgType": null, "before": ""}], "text": "Each variable xi E X occurs exactly once in lhs ( r ) and exactly once in rhs ( r ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 631, "segment_span": [0, 9], "characterOffsetBegin": 628, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 639, "segment_span": [0, 9], "characterOffsetBegin": 632, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 640, "segment_span": [0, 9], "characterOffsetBegin": 639, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 644, "segment_span": [0, 9], "characterOffsetBegin": 641, "originalText": "for", "ArgType": null, "before": " "}, {"index": 5, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 649, "segment_span": [0, 9], "characterOffsetBegin": 645, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 6, "word": "r1", "lemma": "r1", "after": " ", "pos": "NN", "characterOffsetEnd": 652, "segment_span": [0, 9], "characterOffsetBegin": 650, "originalText": "r1", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 655, "segment_span": [0, 9], "characterOffsetBegin": 653, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 662, "segment_span": [0, 9], "characterOffsetBegin": 656, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 9, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 664, "segment_span": [0, 9], "characterOffsetBegin": 663, "originalText": "1", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ",", "characterOffsetEnd": 665, "characterOffsetBegin": 664, "originalText": ",", "ArgType": null, "before": ""}], "text": "For example , for rule r1 in Figure 1 ,"}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "These", "ArgType": null, "before": ""}, {"index": 2, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 11, "segment_span": [0, 20], "characterOffsetBegin": 6, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 15, "segment_span": [0, 20], "characterOffsetBegin": 12, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "being", "lemma": "be", "after": " ", "pos": "VBG", "characterOffsetEnd": 21, "segment_span": [0, 20], "characterOffsetBegin": 16, "originalText": "being", "ArgType": null, "before": " "}, {"index": 5, "word": "used", "characterOffsetEnd": 26, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 22, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 20], "characterOffsetBegin": 27, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 20], "characterOffsetBegin": 30, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "reverse", "lemma": "reverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 41, "segment_span": [0, 20], "characterOffsetBegin": 34, "originalText": "reverse", "ArgType": null, "before": " "}, {"index": 9, "word": "direction", "lemma": "direction", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 42, "originalText": "direction", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 20], "characterOffsetBegin": 52, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 20], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "string-to-tree", "lemma": "string-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [0, 20], "characterOffsetBegin": 59, "originalText": "string-to-tree", "ArgType": null, "before": " "}, {"index": 13, "word": "transducers", "lemma": "transducer", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 74, "originalText": "transducers", "ArgType": null, "before": " "}, {"index": 14, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [0, 20], "characterOffsetBegin": 86, "originalText": "in", "ArgType": null, "before": " "}, {"index": 15, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 95, "segment_span": [0, 20], "characterOffsetBegin": 89, "originalText": "Galley", "ArgType": null, "before": " "}, {"index": 16, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 98, "segment_span": [0, 20], "characterOffsetBegin": 96, "originalText": "et", "ArgType": null, "before": " "}, {"index": 17, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 102, "segment_span": [0, 20], "characterOffsetBegin": 99, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 104, "segment_span": [0, 20], "characterOffsetBegin": 103, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 108, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "2004", "ArgType": null, "before": ""}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 109, "segment_span": [0, 20], "characterOffsetBegin": 108, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 110, "characterOffsetBegin": 109, "originalText": ".", "ArgType": null, "before": ""}], "text": "These rules are being used in the reverse direction of the string-to-tree transducers in Galley et al. ( 2004 ) ."}], "title": "2.1 Tree-to-String System"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 6, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "now", "ArgType": null, "before": " "}, {"index": 3, "word": "briefly", "lemma": "briefly", "after": " ", "pos": "RB", "characterOffsetEnd": 14, "segment_span": [0, 4], "characterOffsetBegin": 7, "originalText": "briefly", "ArgType": null, "before": " "}, {"index": 4, "word": "explain", "characterOffsetEnd": 22, "after": " ", "pos": "VB", "is_root": true, "lemma": "explain", "segment_span": [0, 4], "tense": "B", "characterOffsetBegin": 15, "originalText": "explain", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 26, "segment_span": [4, 26], "characterOffsetBegin": 23, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [4, 26], "characterOffsetBegin": 27, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [4, 26], "characterOffsetBegin": 37, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 46, "segment_span": [4, 26], "characterOffsetBegin": 40, "originalText": "Galley", "ArgType": null, "before": " "}, {"index": 9, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 49, "segment_span": [4, 26], "characterOffsetBegin": 47, "originalText": "et", "ArgType": null, "before": " "}, {"index": 10, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 53, "segment_span": [4, 26], "characterOffsetBegin": 50, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 55, "segment_span": [4, 26], "characterOffsetBegin": 54, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 59, "segment_span": [4, 26], "characterOffsetBegin": 55, "originalText": "2004", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 60, "segment_span": [4, 26], "characterOffsetBegin": 59, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 65, "segment_span": [4, 26], "characterOffsetBegin": 61, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 15, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 69, "segment_span": [4, 26], "characterOffsetBegin": 66, "originalText": "can", "ArgType": null, "before": " "}, {"index": 16, "word": "extract", "characterOffsetEnd": 77, "after": " ", "pos": "VB", "is_root": true, "lemma": "extract", "segment_span": [4, 26], "tense": "B", "characterOffsetBegin": 70, "originalText": "extract", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 83, "segment_span": [4, 26], "characterOffsetBegin": 78, "originalText": "these", "ArgType": null, "before": " "}, {"index": 18, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [4, 26], "characterOffsetBegin": 84, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 19, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 101, "segment_span": [4, 26], "characterOffsetBegin": 96, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 106, "segment_span": [4, 26], "characterOffsetBegin": 102, "originalText": "from", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 108, "segment_span": [4, 26], "characterOffsetBegin": 107, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "word-aligned", "lemma": "word-aligned", "after": " ", "pos": "JJ", "characterOffsetEnd": 121, "segment_span": [4, 26], "characterOffsetBegin": 109, "originalText": "word-aligned", "ArgType": null, "before": " "}, {"index": 23, "word": "bitext", "lemma": "bitext", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [4, 26], "characterOffsetBegin": 122, "originalText": "bitext", "ArgType": null, "before": " "}, {"index": 24, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 133, "segment_span": [4, 26], "characterOffsetBegin": 129, "originalText": "with", "ArgType": null, "before": " "}, {"index": 25, "word": "source-side", "lemma": "source-side", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [4, 26], "characterOffsetBegin": 134, "originalText": "source-side", "ArgType": null, "before": " "}, {"index": 26, "word": "parses", "characterOffsetEnd": 152, "after": "", "pos": "VBZ", "is_root": true, "lemma": "parse", "segment_span": [4, 26], "tense": "Z", "characterOffsetBegin": 146, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 153, "characterOffsetBegin": 152, "originalText": ".", "ArgType": null, "before": ""}], "text": "We now briefly explain the algorithm of Galley et al. ( 2004 ) that can extract these translation rules from a word-aligned bitext with source-side parses ."}, {"tokens": [{"index": 1, "word": "Consider", "characterOffsetEnd": 162, "after": " ", "pos": "VB", "is_root": true, "lemma": "consider", "segment_span": [0, 6], "tense": "B", "characterOffsetBegin": 154, "originalText": "Consider", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 166, "segment_span": [0, 6], "characterOffsetBegin": 163, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 174, "segment_span": [0, 6], "characterOffsetBegin": 167, "originalText": "example", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 177, "segment_span": [0, 6], "characterOffsetBegin": 175, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 184, "segment_span": [0, 6], "characterOffsetBegin": 178, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 6, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 186, "segment_span": [0, 6], "characterOffsetBegin": 185, "originalText": "3", "ArgType": null, "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 187, "characterOffsetBegin": 186, "originalText": ".", "ArgType": null, "before": ""}], "text": "Consider the example in Figure 3 ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 191, "segment_span": [0, 6], "characterOffsetBegin": 188, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "basic", "lemma": "basic", "after": " ", "pos": "JJ", "characterOffsetEnd": 197, "segment_span": [0, 6], "characterOffsetBegin": 192, "originalText": "basic", "ArgType": null, "before": " "}, {"index": 3, "word": "idea", "lemma": "idea", "after": " ", "pos": "NN", "characterOffsetEnd": 202, "segment_span": [0, 6], "characterOffsetBegin": 198, "originalText": "idea", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "characterOffsetEnd": 205, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 6], "tense": "Z", "characterOffsetBegin": 203, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 208, "segment_span": [0, 6], "characterOffsetBegin": 206, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "decompose", "lemma": "decompose", "after": " ", "pos": "VB", "characterOffsetEnd": 218, "segment_span": [0, 6], "characterOffsetBegin": 209, "originalText": "decompose", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 222, "segment_span": [6, 19], "characterOffsetBegin": 219, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 229, "segment_span": [6, 19], "characterOffsetBegin": 223, "originalText": "source", "ArgType": "subj", "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 231, "segment_span": [6, 19], "characterOffsetBegin": 230, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "Chinese", "lemma": "chinese", "after": "", "pos": "JJ", "characterOffsetEnd": 238, "segment_span": [6, 19], "characterOffsetBegin": 231, "originalText": "Chinese", "ArgType": null, "before": ""}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 239, "segment_span": [6, 19], "characterOffsetBegin": 238, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": "parse", "characterOffsetEnd": 245, "after": " ", "pos": "VBP", "is_root": true, "lemma": "parse", "segment_span": [6, 19], "tense": "P", "characterOffsetBegin": 240, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 13, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 250, "segment_span": [6, 19], "characterOffsetBegin": 246, "originalText": "into", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 252, "segment_span": [6, 19], "characterOffsetBegin": 251, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "series", "lemma": "series", "after": " ", "pos": "NN", "characterOffsetEnd": 259, "segment_span": [6, 19], "characterOffsetBegin": 253, "originalText": "series", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 262, "segment_span": [6, 19], "characterOffsetBegin": 260, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [6, 19], "characterOffsetBegin": 263, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 18, "word": "fragments", "lemma": "fragment", "after": "", "pos": "NNS", "characterOffsetEnd": 277, "segment_span": [6, 19], "characterOffsetBegin": 268, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 278, "segment_span": [6, 19], "characterOffsetBegin": 277, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 283, "segment_span": [19, 31], "characterOffsetBegin": 279, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 286, "segment_span": [19, 31], "characterOffsetBegin": 284, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 292, "segment_span": [19, 31], "characterOffsetBegin": 287, "originalText": "which", "ArgType": null, "before": " "}, {"index": 23, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 297, "segment_span": [19, 31], "characterOffsetBegin": 293, "originalText": "will", "ArgType": null, "before": " "}, {"index": 24, "word": "form", "characterOffsetEnd": 302, "after": " ", "pos": "VB", "is_root": true, "lemma": "form", "segment_span": [19, 31], "tense": "B", "characterOffsetBegin": 298, "originalText": "form", "has_aux": true, "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 304, "segment_span": [19, 31], "characterOffsetBegin": 303, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 309, "segment_span": [19, 31], "characterOffsetBegin": 305, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 27, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 314, "segment_span": [19, 31], "characterOffsetBegin": 310, "originalText": "with", "ArgType": null, "before": " "}, {"index": 28, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 318, "segment_span": [19, 31], "characterOffsetBegin": 315, "originalText": "its", "ArgType": null, "before": " "}, {"index": 29, "word": "corresponding", "lemma": "corresponding", "after": " ", "pos": "JJ", "characterOffsetEnd": 332, "segment_span": [19, 31], "characterOffsetBegin": 319, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 30, "word": "English", "lemma": "English", "after": " ", "pos": "NNP", "characterOffsetEnd": 340, "segment_span": [19, 31], "characterOffsetBegin": 333, "originalText": "English", "ArgType": null, "before": " "}, {"index": 31, "word": "translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 352, "segment_span": [19, 31], "characterOffsetBegin": 341, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 353, "characterOffsetBegin": 352, "originalText": ".", "ArgType": null, "before": ""}], "text": "The basic idea is to decompose the source ( Chinese ) parse into a series of tree fragments , each of which will form a rule with its corresponding English translation ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 361, "segment_span": [0, 27], "characterOffsetBegin": 354, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 362, "segment_span": [0, 27], "characterOffsetBegin": 361, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 366, "segment_span": [0, 27], "characterOffsetBegin": 363, "originalText": "not", "ArgType": null, "before": " "}, {"index": 4, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 372, "segment_span": [0, 27], "characterOffsetBegin": 367, "originalText": "every", "ArgType": null, "before": " "}, {"index": 5, "word": "fragmentation", "lemma": "fragmentation", "after": " ", "pos": "NN", "characterOffsetEnd": 386, "segment_span": [0, 27], "characterOffsetBegin": 373, "originalText": "fragmentation", "ArgType": null, "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 390, "segment_span": [0, 27], "characterOffsetBegin": 387, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 393, "segment_span": [0, 27], "characterOffsetBegin": 391, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "used", "characterOffsetEnd": 398, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 27], "tense": "N", "characterOffsetBegin": 394, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 402, "segment_span": [0, 27], "characterOffsetBegin": 399, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 407, "segment_span": [0, 27], "characterOffsetBegin": 403, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 11, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 418, "segment_span": [0, 27], "characterOffsetBegin": 408, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 419, "segment_span": [0, 27], "characterOffsetBegin": 418, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 425, "segment_span": [0, 27], "characterOffsetBegin": 420, "originalText": "since", "ArgType": null, "before": " "}, {"index": 14, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 428, "segment_span": [0, 27], "characterOffsetBegin": 426, "originalText": "it", "ArgType": null, "before": " "}, {"index": 15, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 432, "segment_span": [0, 27], "characterOffsetBegin": 429, "originalText": "may", "ArgType": null, "before": " "}, {"index": 16, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 435, "segment_span": [0, 27], "characterOffsetBegin": 433, "originalText": "or", "ArgType": null, "before": " "}, {"index": 17, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 439, "segment_span": [0, 27], "characterOffsetBegin": 436, "originalText": "may", "ArgType": null, "before": " "}, {"index": 18, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 443, "segment_span": [0, 27], "characterOffsetBegin": 440, "originalText": "not", "ArgType": null, "before": " "}, {"index": 19, "word": "respect", "lemma": "respect", "after": " ", "pos": "VB", "characterOffsetEnd": 451, "segment_span": [0, 27], "characterOffsetBegin": 444, "originalText": "respect", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 455, "segment_span": [0, 27], "characterOffsetBegin": 452, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "alignment", "lemma": "alignment", "after": " ", "pos": "NN", "characterOffsetEnd": 465, "segment_span": [0, 27], "characterOffsetBegin": 456, "originalText": "alignment", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 469, "segment_span": [0, 27], "characterOffsetBegin": 466, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "reordering", "lemma": "reordering", "after": " ", "pos": "NN", "characterOffsetEnd": 480, "segment_span": [0, 27], "characterOffsetBegin": 470, "originalText": "reordering", "ArgType": null, "before": " "}, {"index": 24, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 488, "segment_span": [0, 27], "characterOffsetBegin": 481, "originalText": "between", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 492, "segment_span": [0, 27], "characterOffsetBegin": 489, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 496, "segment_span": [0, 27], "characterOffsetBegin": 493, "originalText": "two", "ArgType": null, "before": " "}, {"index": 27, "word": "languages", "lemma": "language", "after": "", "pos": "NNS", "characterOffsetEnd": 506, "segment_span": [0, 27], "characterOffsetBegin": 497, "originalText": "languages", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 507, "characterOffsetBegin": 506, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , not every fragmentation can be used for rule extraction , since it may or may not respect the alignment and reordering between the two languages ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 510, "segment_span": [0, 30], "characterOffsetBegin": 508, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 513, "segment_span": [0, 30], "characterOffsetBegin": 511, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "say", "characterOffsetEnd": 517, "after": " ", "pos": "VBP", "is_root": true, "lemma": "say", "segment_span": [0, 30], "tense": "P", "characterOffsetBegin": 514, "originalText": "say", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 519, "segment_span": [3, 29], "characterOffsetBegin": 518, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "fragmentation", "lemma": "fragmentation", "after": " ", "pos": "NN", "characterOffsetEnd": 533, "segment_span": [3, 29], "characterOffsetBegin": 520, "originalText": "fragmentation", "ArgType": "subj", "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 536, "segment_span": [3, 29], "characterOffsetBegin": 534, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "well-formed", "lemma": "well-formed", "after": " ", "pos": "JJ", "characterOffsetEnd": 548, "segment_span": [3, 29], "characterOffsetBegin": 537, "originalText": "well-formed", "ArgType": null, "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 553, "segment_span": [3, 29], "characterOffsetBegin": 549, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "respect", "lemma": "respect", "after": " ", "pos": "NN", "characterOffsetEnd": 561, "segment_span": [3, 29], "characterOffsetBegin": 554, "originalText": "respect", "ArgType": null, "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 564, "segment_span": [3, 29], "characterOffsetBegin": 562, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 567, "segment_span": [3, 29], "characterOffsetBegin": 565, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "alignment", "lemma": "alignment", "after": " ", "pos": "NN", "characterOffsetEnd": 577, "segment_span": [3, 29], "characterOffsetBegin": 568, "originalText": "alignment", "ArgType": null, "before": " "}, {"index": 13, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 580, "segment_span": [3, 29], "characterOffsetBegin": 578, "originalText": "if", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 584, "segment_span": [3, 29], "characterOffsetBegin": 581, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 589, "segment_span": [3, 29], "characterOffsetBegin": 585, "originalText": "root", "ArgType": null, "before": " "}, {"index": 16, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 594, "segment_span": [3, 29], "characterOffsetBegin": 590, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 597, "segment_span": [3, 29], "characterOffsetBegin": 595, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 603, "segment_span": [3, 29], "characterOffsetBegin": 598, "originalText": "every", "ArgType": null, "before": " "}, {"index": 19, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 608, "segment_span": [3, 29], "characterOffsetBegin": 604, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 20, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 617, "segment_span": [3, 29], "characterOffsetBegin": 609, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 21, "word": "corresponds", "lemma": "correspond", "after": " ", "pos": "VBZ", "characterOffsetEnd": 629, "segment_span": [3, 29], "characterOffsetBegin": 618, "originalText": "corresponds", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 632, "segment_span": [3, 29], "characterOffsetBegin": 630, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 634, "segment_span": [3, 29], "characterOffsetBegin": 633, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "contiguous", "lemma": "contiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 645, "segment_span": [3, 29], "characterOffsetBegin": 635, "originalText": "contiguous", "ArgType": null, "before": " "}, {"index": 25, "word": "span", "lemma": "span", "after": " ", "pos": "NN", "characterOffsetEnd": 650, "segment_span": [3, 29], "characterOffsetBegin": 646, "originalText": "span", "ArgType": null, "before": " "}, {"index": 26, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 653, "segment_span": [3, 29], "characterOffsetBegin": 651, "originalText": "on", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 657, "segment_span": [3, 29], "characterOffsetBegin": 654, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 664, "segment_span": [3, 29], "characterOffsetBegin": 658, "originalText": "target", "ArgType": null, "before": " "}, {"index": 29, "word": "side", "lemma": "side", "after": "", "pos": "NN", "characterOffsetEnd": 669, "segment_span": [3, 29], "characterOffsetBegin": 665, "originalText": "side", "ArgType": null, "before": " "}, {"index": 30, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 670, "segment_span": [0, 30], "characterOffsetBegin": 669, "originalText": ";", "ArgType": null, "before": ""}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 674, "segment_span": [30, 33], "characterOffsetBegin": 671, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "intuition", "lemma": "intuition", "after": " ", "pos": "NN", "characterOffsetEnd": 684, "segment_span": [30, 33], "characterOffsetBegin": 675, "originalText": "intuition", "ArgType": "subj", "before": " "}, {"index": 33, "word": "is", "characterOffsetEnd": 687, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [30, 33], "tense": "Z", "characterOffsetBegin": 685, "originalText": "is", "ArgType": null, "before": " "}, {"index": 34, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 692, "segment_span": [33, 53], "characterOffsetBegin": 688, "originalText": "that", "ArgType": null, "before": " "}, {"index": 35, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 698, "segment_span": [33, 53], "characterOffsetBegin": 693, "originalText": "there", "ArgType": null, "before": " "}, {"index": 36, "word": "is", "characterOffsetEnd": 701, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [33, 53], "tense": "Z", "characterOffsetBegin": 699, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 37, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 703, "segment_span": [33, 53], "characterOffsetBegin": 702, "originalText": "a", "ArgType": null, "before": " "}, {"index": 38, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 705, "segment_span": [33, 53], "characterOffsetBegin": 704, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 39, "word": "translational", "lemma": "translational", "after": " ", "pos": "JJ", "characterOffsetEnd": 718, "segment_span": [33, 53], "characterOffsetBegin": 705, "originalText": "translational", "ArgType": null, "before": ""}, {"index": 40, "word": "equivalence", "lemma": "equivalence", "after": "", "pos": "JJ", "characterOffsetEnd": 730, "segment_span": [33, 53], "characterOffsetBegin": 719, "originalText": "equivalence", "ArgType": "subj", "before": " "}, {"index": 41, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 731, "segment_span": [33, 53], "characterOffsetBegin": 730, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 42, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 739, "segment_span": [33, 53], "characterOffsetBegin": 732, "originalText": "between", "ArgType": null, "before": " "}, {"index": 43, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 743, "segment_span": [33, 53], "characterOffsetBegin": 740, "originalText": "the", "ArgType": null, "before": " "}, {"index": 44, "word": "subtree", "lemma": "subtree", "after": " ", "pos": "NN", "characterOffsetEnd": 751, "segment_span": [33, 53], "characterOffsetBegin": 744, "originalText": "subtree", "ArgType": null, "before": " "}, {"index": 45, "word": "rooted", "lemma": "root", "after": " ", "pos": "VBN", "characterOffsetEnd": 758, "segment_span": [33, 53], "characterOffsetBegin": 752, "originalText": "rooted", "ArgType": null, "before": " "}, {"index": 46, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 761, "segment_span": [33, 53], "characterOffsetBegin": 759, "originalText": "at", "ArgType": null, "before": " "}, {"index": 47, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 765, "segment_span": [33, 53], "characterOffsetBegin": 762, "originalText": "the", "ArgType": null, "before": " "}, {"index": 48, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 770, "segment_span": [33, 53], "characterOffsetBegin": 766, "originalText": "node", "ArgType": null, "before": " "}, {"index": 49, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 774, "segment_span": [33, 53], "characterOffsetBegin": 771, "originalText": "and", "ArgType": null, "before": " "}, {"index": 50, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 778, "segment_span": [33, 53], "characterOffsetBegin": 775, "originalText": "the", "ArgType": null, "before": " "}, {"index": 51, "word": "corresponding", "lemma": "corresponding", "after": " ", "pos": "JJ", "characterOffsetEnd": 792, "segment_span": [33, 53], "characterOffsetBegin": 779, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 52, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 799, "segment_span": [33, 53], "characterOffsetBegin": 793, "originalText": "target", "ArgType": null, "before": " "}, {"index": 53, "word": "span", "lemma": "span", "after": "", "pos": "NN", "characterOffsetEnd": 804, "segment_span": [33, 53], "characterOffsetBegin": 800, "originalText": "span", "ArgType": null, "before": " "}, {"index": 54, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 805, "characterOffsetBegin": 804, "originalText": ".", "ArgType": null, "before": ""}], "text": "So we say a fragmentation is well-formed with respect to an alignment if the root node of every tree fragment corresponds to a contiguous span on the target side ; the intuition is that there is a `` translational equivalence '' between the subtree rooted at the node and the corresponding target span ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 809, "segment_span": [0, 17], "characterOffsetBegin": 806, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 817, "segment_span": [0, 17], "characterOffsetBegin": 810, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 818, "segment_span": [0, 17], "characterOffsetBegin": 817, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 821, "segment_span": [0, 17], "characterOffsetBegin": 819, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 828, "segment_span": [0, 17], "characterOffsetBegin": 822, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 6, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 830, "segment_span": [0, 17], "characterOffsetBegin": 829, "originalText": "3", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 831, "segment_span": [0, 17], "characterOffsetBegin": 830, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 836, "segment_span": [0, 17], "characterOffsetBegin": 832, "originalText": "each", "ArgType": null, "before": " "}, {"index": 9, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 841, "segment_span": [0, 17], "characterOffsetBegin": 837, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 844, "segment_span": [0, 17], "characterOffsetBegin": 842, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "annotated", "lemma": "annotated", "after": " ", "pos": "JJ", "characterOffsetEnd": 854, "segment_span": [0, 17], "characterOffsetBegin": 845, "originalText": "annotated", "ArgType": "verb", "before": " "}, {"index": 12, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 859, "segment_span": [0, 17], "characterOffsetBegin": 855, "originalText": "with", "ArgType": null, "before": " "}, {"index": 13, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 863, "segment_span": [0, 17], "characterOffsetBegin": 860, "originalText": "its", "ArgType": null, "before": " "}, {"index": 14, "word": "corresponding", "lemma": "corresponding", "after": " ", "pos": "JJ", "characterOffsetEnd": 877, "segment_span": [0, 17], "characterOffsetBegin": 864, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 15, "word": "English", "lemma": "English", "after": " ", "pos": "NNP", "characterOffsetEnd": 885, "segment_span": [0, 17], "characterOffsetBegin": 878, "originalText": "English", "ArgType": null, "before": " "}, {"index": 16, "word": "span", "lemma": "span", "after": "", "pos": "NN", "characterOffsetEnd": 890, "segment_span": [0, 17], "characterOffsetBegin": 886, "originalText": "span", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 891, "segment_span": [0, 17], "characterOffsetBegin": 890, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 897, "segment_span": [17, 32], "characterOffsetBegin": 892, "originalText": "where", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 901, "segment_span": [17, 32], "characterOffsetBegin": 898, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 904, "segment_span": [17, 32], "characterOffsetBegin": 902, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 21, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 909, "segment_span": [17, 32], "characterOffsetBegin": 905, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 22, "word": "maps", "characterOffsetEnd": 914, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "map", "segment_span": [17, 32], "tense": "Z", "characterOffsetBegin": 910, "originalText": "maps", "ArgType": null, "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 917, "segment_span": [17, 32], "characterOffsetBegin": 915, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 919, "segment_span": [17, 32], "characterOffsetBegin": 918, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "noncontiguous", "lemma": "noncontiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 933, "segment_span": [17, 32], "characterOffsetBegin": 920, "originalText": "noncontiguous", "ArgType": null, "before": " "}, {"index": 26, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 937, "segment_span": [17, 32], "characterOffsetBegin": 934, "originalText": "one", "ArgType": null, "before": " "}, {"index": 27, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 939, "segment_span": [17, 32], "characterOffsetBegin": 938, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 28, "word": "Bush", "lemma": "Bush", "after": " ", "pos": "NNP", "characterOffsetEnd": 943, "segment_span": [17, 32], "characterOffsetBegin": 939, "originalText": "Bush", "ArgType": null, "before": ""}, {"index": 29, "word": "U", "lemma": "U", "after": " ", "pos": "NNP", "characterOffsetEnd": 945, "segment_span": [17, 32], "characterOffsetBegin": 944, "originalText": "U", "ArgType": null, "before": " "}, {"index": 30, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 950, "segment_span": [17, 32], "characterOffsetBegin": 946, "originalText": "with", "ArgType": null, "before": " "}, {"index": 31, "word": "Sharon", "lemma": "Sharon", "after": "", "pos": "NNP", "characterOffsetEnd": 957, "segment_span": [17, 32], "characterOffsetBegin": 951, "originalText": "Sharon", "ArgType": null, "before": " "}, {"index": 32, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 958, "segment_span": [17, 32], "characterOffsetBegin": 957, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 959, "characterOffsetBegin": 958, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , in Figure 3 , each node is annotated with its corresponding English span , where the NP node maps to a noncontiguous one `` Bush U with Sharon '' ."}, {"tokens": [{"index": 1, "word": "More", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 964, "segment_span": [0, 8], "characterOffsetBegin": 960, "originalText": "More", "ArgType": null, "before": " "}, {"index": 2, "word": "formally", "lemma": "formally", "after": "", "pos": "RB", "characterOffsetEnd": 973, "segment_span": [0, 8], "characterOffsetBegin": 965, "originalText": "formally", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 974, "segment_span": [0, 8], "characterOffsetBegin": 973, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 977, "segment_span": [0, 8], "characterOffsetBegin": 975, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "need", "characterOffsetEnd": 982, "after": " ", "pos": "VBP", "is_root": true, "lemma": "need", "segment_span": [0, 8], "tense": "P", "characterOffsetBegin": 978, "originalText": "need", "ArgType": "verb", "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 984, "segment_span": [0, 8], "characterOffsetBegin": 983, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "precise", "lemma": "precise", "after": " ", "pos": "JJ", "characterOffsetEnd": 992, "segment_span": [0, 8], "characterOffsetBegin": 985, "originalText": "precise", "ArgType": null, "before": " "}, {"index": 8, "word": "formulation", "lemma": "formulation", "after": " ", "pos": "NN", "characterOffsetEnd": 1004, "segment_span": [0, 8], "characterOffsetBegin": 993, "originalText": "formulation", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1007, "segment_span": [8, 21], "characterOffsetBegin": 1005, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "handle", "characterOffsetEnd": 1014, "after": " ", "pos": "VB", "is_root": true, "lemma": "handle", "segment_span": [8, 21], "tense": "B", "characterOffsetBegin": 1008, "originalText": "handle", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1018, "segment_span": [8, 21], "characterOffsetBegin": 1015, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "cases", "lemma": "case", "after": " ", "pos": "NNS", "characterOffsetEnd": 1024, "segment_span": [8, 21], "characterOffsetBegin": 1019, "originalText": "cases", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1027, "segment_span": [8, 21], "characterOffsetBegin": 1025, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "one-to-many", "lemma": "one-to-many", "after": "", "pos": "NN", "characterOffsetEnd": 1039, "segment_span": [8, 21], "characterOffsetBegin": 1028, "originalText": "one-to-many", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1040, "segment_span": [8, 21], "characterOffsetBegin": 1039, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "many-to-one", "lemma": "many-to-one", "after": "", "pos": "NN", "characterOffsetEnd": 1052, "segment_span": [8, 21], "characterOffsetBegin": 1041, "originalText": "many-to-one", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1053, "segment_span": [8, 21], "characterOffsetBegin": 1052, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1057, "segment_span": [8, 21], "characterOffsetBegin": 1054, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "many-to-many", "lemma": "many-to-many", "after": " ", "pos": "JJ", "characterOffsetEnd": 1070, "segment_span": [8, 21], "characterOffsetBegin": 1058, "originalText": "many-to-many", "ArgType": null, "before": " "}, {"index": 20, "word": "alignment", "lemma": "alignment", "after": " ", "pos": "NN", "characterOffsetEnd": 1080, "segment_span": [8, 21], "characterOffsetBegin": 1071, "originalText": "alignment", "ArgType": null, "before": " "}, {"index": 21, "word": "links", "lemma": "link", "after": "", "pos": "NNS", "characterOffsetEnd": 1086, "segment_span": [8, 21], "characterOffsetBegin": 1081, "originalText": "links", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1087, "characterOffsetBegin": 1086, "originalText": ".", "ArgType": null, "before": ""}], "text": "More formally , we need a precise formulation to handle the cases of one-to-many , many-to-one , and many-to-many alignment links ."}, {"tokens": [{"index": 1, "word": "Given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 1093, "segment_span": [0, 12], "characterOffsetBegin": 1088, "originalText": "Given", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1095, "segment_span": [0, 12], "characterOffsetBegin": 1094, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "sourcetarget", "lemma": "sourcetarget", "after": " ", "pos": "JJ", "characterOffsetEnd": 1108, "segment_span": [0, 12], "characterOffsetBegin": 1096, "originalText": "sourcetarget", "ArgType": null, "before": " "}, {"index": 4, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 1117, "segment_span": [0, 12], "characterOffsetBegin": 1109, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 5, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 1122, "segment_span": [0, 12], "characterOffsetBegin": 1118, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1124, "segment_span": [0, 12], "characterOffsetBegin": 1123, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "u", "lemma": "u", "after": "", "pos": "NN", "characterOffsetEnd": 1125, "segment_span": [0, 12], "characterOffsetBegin": 1124, "originalText": "u", "ArgType": null, "before": ""}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1126, "segment_span": [0, 12], "characterOffsetBegin": 1125, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "T", "lemma": "t", "after": "", "pos": "NN", "characterOffsetEnd": 1128, "segment_span": [0, 12], "characterOffsetBegin": 1127, "originalText": "T", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1129, "segment_span": [0, 12], "characterOffsetBegin": 1128, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1134, "segment_span": [0, 12], "characterOffsetBegin": 1130, "originalText": "with", "ArgType": null, "before": " "}, {"index": 12, "word": "alignment", "lemma": "alignment", "after": " ", "pos": "NN", "characterOffsetEnd": 1144, "segment_span": [0, 12], "characterOffsetBegin": 1135, "originalText": "alignment", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 1146, "segment_span": [12, 39], "characterOffsetBegin": 1145, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1147, "segment_span": [12, 39], "characterOffsetBegin": 1146, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1151, "segment_span": [12, 39], "characterOffsetBegin": 1148, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1153, "segment_span": [12, 39], "characterOffsetBegin": 1152, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "target", "lemma": "target", "after": "", "pos": "NN", "characterOffsetEnd": 1159, "segment_span": [12, 39], "characterOffsetBegin": 1153, "originalText": "target", "ArgType": null, "before": ""}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1160, "segment_span": [12, 39], "characterOffsetBegin": 1159, "originalText": ")", "ArgType": null, "before": ""}, {"index": 19, "word": "span", "lemma": "span", "after": " ", "pos": "NN", "characterOffsetEnd": 1165, "segment_span": [12, 39], "characterOffsetBegin": 1161, "originalText": "span", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1168, "segment_span": [12, 39], "characterOffsetBegin": 1166, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 1173, "segment_span": [12, 39], "characterOffsetBegin": 1169, "originalText": "node", "ArgType": null, "before": " "}, {"index": 22, "word": "v", "lemma": "v", "after": " ", "pos": "LS", "characterOffsetEnd": 1175, "segment_span": [12, 39], "characterOffsetBegin": 1174, "originalText": "v", "ArgType": "subj", "before": " "}, {"index": 23, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1178, "segment_span": [12, 39], "characterOffsetBegin": 1176, "originalText": "is", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1182, "segment_span": [12, 39], "characterOffsetBegin": 1179, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 1186, "segment_span": [12, 39], "characterOffsetBegin": 1183, "originalText": "set", "ArgType": null, "before": " "}, {"index": 26, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1189, "segment_span": [12, 39], "characterOffsetBegin": 1187, "originalText": "of", "ArgType": null, "before": " "}, {"index": 27, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 1196, "segment_span": [12, 39], "characterOffsetBegin": 1190, "originalText": "target", "ArgType": null, "before": " "}, {"index": 28, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 1202, "segment_span": [12, 39], "characterOffsetBegin": 1197, "originalText": "words", "ArgType": null, "before": " "}, {"index": 29, "word": "aligned", "lemma": "align", "after": " ", "pos": "VBN", "characterOffsetEnd": 1210, "segment_span": [12, 39], "characterOffsetBegin": 1203, "originalText": "aligned", "ArgType": null, "before": " "}, {"index": 30, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1213, "segment_span": [12, 39], "characterOffsetBegin": 1211, "originalText": "to", "ArgType": null, "before": " "}, {"index": 31, "word": "leaf", "lemma": "leaf", "after": " ", "pos": "NN", "characterOffsetEnd": 1218, "segment_span": [12, 39], "characterOffsetBegin": 1214, "originalText": "leaf", "ArgType": null, "before": " "}, {"index": 32, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 1224, "segment_span": [12, 39], "characterOffsetBegin": 1219, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 33, "word": "yield", "lemma": "yield", "after": "", "pos": "VBP", "characterOffsetEnd": 1230, "segment_span": [12, 39], "characterOffsetBegin": 1225, "originalText": "yield", "ArgType": null, "before": " "}, {"index": 34, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1231, "segment_span": [12, 39], "characterOffsetBegin": 1230, "originalText": "(", "ArgType": null, "before": ""}, {"index": 35, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 1232, "segment_span": [12, 39], "characterOffsetBegin": 1231, "originalText": "v", "ArgType": null, "before": ""}, {"index": 36, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1233, "segment_span": [12, 39], "characterOffsetBegin": 1232, "originalText": ")", "ArgType": null, "before": ""}, {"index": 37, "word": "under", "lemma": "under", "after": " ", "pos": "IN", "characterOffsetEnd": 1239, "segment_span": [12, 39], "characterOffsetBegin": 1234, "originalText": "under", "ArgType": null, "before": " "}, {"index": 38, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 1244, "segment_span": [12, 39], "characterOffsetBegin": 1240, "originalText": "node", "ArgType": null, "before": " "}, {"index": 39, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 1246, "segment_span": [12, 39], "characterOffsetBegin": 1245, "originalText": "v", "ArgType": null, "before": " "}, {"index": 40, "word": ":", "lemma": ":", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ":", "characterOffsetEnd": 1247, "characterOffsetBegin": 1246, "originalText": ":", "ArgType": null, "before": ""}], "text": "Given a sourcetarget sentence pair ( u , T ) with alignment a , the ( target ) span of node v is the set of target words aligned to leaf nodes yield ( v ) under node v :"}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 23], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 12, "segment_span": [0, 23], "characterOffsetBegin": 11, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 15, "segment_span": [0, 23], "characterOffsetBegin": 13, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 22, "segment_span": [0, 23], "characterOffsetBegin": 16, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 6, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 24, "segment_span": [0, 23], "characterOffsetBegin": 23, "originalText": "3", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [0, 23], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "every", "ArgType": null, "before": " "}, {"index": 9, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 23], "characterOffsetBegin": 32, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 23], "characterOffsetBegin": 37, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 23], "characterOffsetBegin": 40, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 23], "characterOffsetBegin": 44, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 23], "characterOffsetBegin": 50, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 57, "segment_span": [0, 23], "characterOffsetBegin": 55, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "annotated", "lemma": "annotated", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [0, 23], "characterOffsetBegin": 58, "originalText": "annotated", "ArgType": "verb", "before": " "}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 23], "characterOffsetBegin": 68, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 76, "segment_span": [0, 23], "characterOffsetBegin": 73, "originalText": "its", "ArgType": null, "before": " "}, {"index": 18, "word": "corresponding", "lemma": "corresponding", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [0, 23], "characterOffsetBegin": 77, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 19, "word": "span", "lemma": "span", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [0, 23], "characterOffsetBegin": 91, "originalText": "span", "ArgType": null, "before": " "}, {"index": 20, "word": "below", "lemma": "below", "after": " ", "pos": "IN", "characterOffsetEnd": 101, "segment_span": [0, 23], "characterOffsetBegin": 96, "originalText": "below", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 105, "segment_span": [0, 23], "characterOffsetBegin": 102, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "node", "lemma": "node", "after": "", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 23], "characterOffsetBegin": 106, "originalText": "node", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 111, "segment_span": [0, 23], "characterOffsetBegin": 110, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 117, "segment_span": [23, 34], "characterOffsetBegin": 112, "originalText": "where", "ArgType": null, "before": " "}, {"index": 25, "word": "most", "lemma": "most", "after": " ", "pos": "RBS", "characterOffsetEnd": 122, "segment_span": [23, 34], "characterOffsetBegin": 118, "originalText": "most", "ArgType": null, "before": " "}, {"index": 26, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 128, "segment_span": [23, 34], "characterOffsetBegin": 123, "originalText": "nodes", "ArgType": "subj", "before": " "}, {"index": 27, "word": "have", "characterOffsetEnd": 133, "after": " ", "pos": "VBP", "is_root": true, "lemma": "have", "segment_span": [23, 34], "tense": "P", "characterOffsetBegin": 129, "originalText": "have", "ArgType": null, "before": " "}, {"index": 28, "word": "contiguous", "lemma": "contiguous", "after": " ", "pos": "JJ", "characterOffsetEnd": 144, "segment_span": [23, 34], "characterOffsetBegin": 134, "originalText": "contiguous", "ArgType": null, "before": " "}, {"index": 29, "word": "spans", "lemma": "span", "after": " ", "pos": "NNS", "characterOffsetEnd": 150, "segment_span": [23, 34], "characterOffsetBegin": 145, "originalText": "spans", "ArgType": "dobj", "before": " "}, {"index": 30, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 157, "segment_span": [23, 34], "characterOffsetBegin": 151, "originalText": "except", "ArgType": null, "before": " "}, {"index": 31, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 161, "segment_span": [23, 34], "characterOffsetBegin": 158, "originalText": "for", "ArgType": null, "before": " "}, {"index": 32, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 165, "segment_span": [23, 34], "characterOffsetBegin": 162, "originalText": "the", "ArgType": null, "before": " "}, {"index": 33, "word": "NP", "lemma": "np", "after": " ", "pos": "NN", "characterOffsetEnd": 168, "segment_span": [23, 34], "characterOffsetBegin": 166, "originalText": "NP", "ArgType": null, "before": " "}, {"index": 34, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 173, "segment_span": [23, 34], "characterOffsetBegin": 169, "originalText": "node", "ArgType": null, "before": " "}, {"index": 35, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 179, "segment_span": [34, 46], "characterOffsetBegin": 174, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 36, "word": "maps", "characterOffsetEnd": 184, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "map", "segment_span": [34, 46], "tense": "Z", "characterOffsetBegin": 180, "originalText": "maps", "ArgType": null, "before": " "}, {"index": 37, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 187, "segment_span": [34, 46], "characterOffsetBegin": 185, "originalText": "to", "ArgType": null, "before": " "}, {"index": 38, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 189, "segment_span": [34, 46], "characterOffsetBegin": 188, "originalText": "a", "ArgType": null, "before": " "}, {"index": 39, "word": "gapped", "lemma": "gapped", "after": " ", "pos": "JJ", "characterOffsetEnd": 196, "segment_span": [34, 46], "characterOffsetBegin": 190, "originalText": "gapped", "ArgType": null, "before": " "}, {"index": 40, "word": "phrase", "lemma": "phrase", "after": " ", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [34, 46], "characterOffsetBegin": 197, "originalText": "phrase", "ArgType": null, "before": " "}, {"index": 41, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 205, "segment_span": [34, 46], "characterOffsetBegin": 204, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 42, "word": "Bush", "lemma": "Bush", "after": " ", "pos": "NNP", "characterOffsetEnd": 209, "segment_span": [34, 46], "characterOffsetBegin": 205, "originalText": "Bush", "ArgType": null, "before": ""}, {"index": 43, "word": "U", "lemma": "U", "after": " ", "pos": "NNP", "characterOffsetEnd": 211, "segment_span": [34, 46], "characterOffsetBegin": 210, "originalText": "U", "ArgType": null, "before": " "}, {"index": 44, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 216, "segment_span": [34, 46], "characterOffsetBegin": 212, "originalText": "with", "ArgType": null, "before": " "}, {"index": 45, "word": "Sharon", "lemma": "Sharon", "after": "", "pos": "NNP", "characterOffsetEnd": 223, "segment_span": [34, 46], "characterOffsetBegin": 217, "originalText": "Sharon", "ArgType": null, "before": " "}, {"index": 46, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 224, "segment_span": [34, 46], "characterOffsetBegin": 223, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 47, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 225, "characterOffsetBegin": 224, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , in Figure 3 , every node in the parse tree is annotated with its corresponding span below the node , where most nodes have contiguous spans except for the NP node which maps to a gapped phrase `` Bush U with Sharon '' ."}, {"tokens": [{"index": 1, "word": "But", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 229, "segment_span": [0, 10], "characterOffsetBegin": 226, "originalText": "But", "ArgType": null, "before": " "}, {"index": 2, "word": "contiguity", "lemma": "contiguity", "after": " ", "pos": "NN", "characterOffsetEnd": 240, "segment_span": [0, 10], "characterOffsetBegin": 230, "originalText": "contiguity", "ArgType": "subj", "before": " "}, {"index": 3, "word": "alone", "lemma": "alone", "after": " ", "pos": "RB", "characterOffsetEnd": 246, "segment_span": [0, 10], "characterOffsetBegin": 241, "originalText": "alone", "ArgType": null, "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 249, "segment_span": [0, 10], "characterOffsetBegin": 247, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 253, "segment_span": [0, 10], "characterOffsetBegin": 250, "originalText": "not", "ArgType": null, "before": " "}, {"index": 6, "word": "enough", "lemma": "enough", "after": " ", "pos": "JJ", "characterOffsetEnd": 260, "segment_span": [0, 10], "characterOffsetBegin": 254, "originalText": "enough", "ArgType": "verb", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 263, "segment_span": [0, 10], "characterOffsetBegin": 261, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "ensure", "lemma": "ensure", "after": " ", "pos": "VB", "characterOffsetEnd": 270, "segment_span": [0, 10], "characterOffsetBegin": 264, "originalText": "ensure", "ArgType": null, "before": " "}, {"index": 9, "word": "well-formedness", "lemma": "well-formedness", "after": "", "pos": "JJ", "characterOffsetEnd": 286, "segment_span": [0, 10], "characterOffsetBegin": 271, "originalText": "well-formedness", "ArgType": "dobj", "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 287, "segment_span": [0, 10], "characterOffsetBegin": 286, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 293, "segment_span": [10, 26], "characterOffsetBegin": 288, "originalText": "since", "ArgType": null, "before": " "}, {"index": 12, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 299, "segment_span": [10, 26], "characterOffsetBegin": 294, "originalText": "there", "ArgType": null, "before": " "}, {"index": 13, "word": "might", "lemma": "might", "after": " ", "pos": "MD", "characterOffsetEnd": 305, "segment_span": [10, 26], "characterOffsetBegin": 300, "originalText": "might", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 308, "segment_span": [10, 26], "characterOffsetBegin": 306, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 314, "segment_span": [10, 26], "has_aux": true, "characterOffsetBegin": 309, "originalText": "words", "ArgType": null, "before": " "}, {"index": 16, "word": "within", "lemma": "within", "after": " ", "pos": "IN", "characterOffsetEnd": 321, "segment_span": [10, 26], "characterOffsetBegin": 315, "originalText": "within", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 325, "segment_span": [10, 26], "characterOffsetBegin": 322, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "span", "lemma": "span", "after": " ", "pos": "NN", "characterOffsetEnd": 330, "segment_span": [10, 26], "characterOffsetBegin": 326, "originalText": "span", "ArgType": null, "before": " "}, {"index": 19, "word": "aligned", "lemma": "align", "after": " ", "pos": "VBN", "characterOffsetEnd": 338, "segment_span": [10, 26], "characterOffsetBegin": 331, "originalText": "aligned", "ArgType": null, "before": " "}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 341, "segment_span": [10, 26], "characterOffsetBegin": 339, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 348, "segment_span": [10, 26], "characterOffsetBegin": 342, "originalText": "source", "ArgType": null, "before": " "}, {"index": 22, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 354, "segment_span": [10, 26], "characterOffsetBegin": 349, "originalText": "words", "ArgType": null, "before": " "}, {"index": 23, "word": "uncovered", "lemma": "uncover", "after": " ", "pos": "VBN", "characterOffsetEnd": 364, "segment_span": [10, 26], "characterOffsetBegin": 355, "originalText": "uncovered", "ArgType": null, "before": " "}, {"index": 24, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 367, "segment_span": [10, 26], "characterOffsetBegin": 365, "originalText": "by", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 371, "segment_span": [10, 26], "characterOffsetBegin": 368, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "node", "lemma": "node", "after": "", "pos": "NN", "characterOffsetEnd": 376, "segment_span": [10, 26], "characterOffsetBegin": 372, "originalText": "node", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 377, "characterOffsetBegin": 376, "originalText": ".", "ArgType": null, "before": ""}], "text": "But contiguity alone is not enough to ensure well-formedness , since there might be words within the span aligned to source words uncovered by the node ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 380, "segment_span": [0, 4], "characterOffsetBegin": 378, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 383, "segment_span": [0, 4], "characterOffsetBegin": 381, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 388, "segment_span": [0, 4], "characterOffsetBegin": 384, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "define", "characterOffsetEnd": 395, "after": " ", "pos": "VBP", "is_root": true, "lemma": "define", "segment_span": [0, 4], "tense": "P", "characterOffsetBegin": 389, "originalText": "define", "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 397, "segment_span": [4, 13], "characterOffsetBegin": 396, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "span", "lemma": "span", "after": " ", "pos": "NN", "characterOffsetEnd": 402, "segment_span": [4, 13], "characterOffsetBegin": 398, "originalText": "span", "ArgType": "subj", "before": " "}, {"index": 7, "word": "s", "characterOffsetEnd": 404, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [4, 13], "tense": "Z", "characterOffsetBegin": 403, "originalText": "s", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 407, "segment_span": [4, 13], "characterOffsetBegin": 405, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 410, "segment_span": [4, 13], "characterOffsetBegin": 408, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "faithful", "lemma": "faithful", "after": " ", "pos": "JJ", "characterOffsetEnd": 419, "segment_span": [4, 13], "characterOffsetBegin": 411, "originalText": "faithful", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 422, "segment_span": [4, 13], "characterOffsetBegin": 420, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 427, "segment_span": [4, 13], "characterOffsetBegin": 423, "originalText": "node", "ArgType": null, "before": " "}, {"index": 13, "word": "v", "lemma": "v", "after": " ", "pos": "LS", "characterOffsetEnd": 429, "segment_span": [4, 13], "characterOffsetBegin": 428, "originalText": "v", "ArgType": null, "before": " "}, {"index": 14, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 432, "segment_span": [13, 28], "characterOffsetBegin": 430, "originalText": "if", "ArgType": null, "before": " "}, {"index": 15, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 438, "segment_span": [13, 28], "characterOffsetBegin": 433, "originalText": "every", "ArgType": null, "before": " "}, {"index": 16, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 443, "segment_span": [13, 28], "characterOffsetBegin": 439, "originalText": "word", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 446, "segment_span": [13, 28], "characterOffsetBegin": 444, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 449, "segment_span": [13, 28], "characterOffsetBegin": 447, "originalText": "it", "ArgType": null, "before": " "}, {"index": 19, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 452, "segment_span": [13, 28], "characterOffsetBegin": 450, "originalText": "is", "ArgType": null, "before": " "}, {"index": 20, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 457, "segment_span": [13, 28], "characterOffsetBegin": 453, "originalText": "only", "ArgType": null, "before": " "}, {"index": 21, "word": "aligned", "characterOffsetEnd": 465, "after": " ", "pos": "VBN", "is_root": true, "lemma": "align", "segment_span": [13, 28], "tense": "N", "characterOffsetBegin": 458, "before": " ", "originalText": "aligned", "ArgType": null, "is_pass": true}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 468, "segment_span": [13, 28], "characterOffsetBegin": 466, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 474, "segment_span": [13, 28], "characterOffsetBegin": 469, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 24, "word": "dominated", "lemma": "dominate", "after": " ", "pos": "VBN", "characterOffsetEnd": 484, "segment_span": [13, 28], "characterOffsetBegin": 475, "originalText": "dominated", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 487, "segment_span": [13, 28], "characterOffsetBegin": 485, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 489, "segment_span": [13, 28], "characterOffsetBegin": 488, "originalText": "v", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 490, "segment_span": [13, 28], "characterOffsetBegin": 489, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "i.e.", "lemma": "i.e.", "after": "", "pos": "FW", "characterOffsetEnd": 495, "segment_span": [13, 28], "characterOffsetBegin": 491, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 29, "word": ":", "lemma": ":", "after": "\u0000\u0000\u0000\u0000", "pos": ":", "characterOffsetEnd": 496, "characterOffsetBegin": 495, "originalText": ":", "ArgType": null, "before": ""}], "text": "So we also define a span s to be faithful to node v if every word in it is only aligned to nodes dominated by v , i.e. :"}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "For", "ArgType": null, "before": ""}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 22], "characterOffsetBegin": 4, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 12, "segment_span": [0, 22], "characterOffsetBegin": 11, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "sibling", "lemma": "sibling", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 22], "characterOffsetBegin": 13, "originalText": "sibling", "ArgType": null, "before": " "}, {"index": 5, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [0, 22], "characterOffsetBegin": 21, "originalText": "nodes", "ArgType": "subj", "before": " "}, {"index": 6, "word": "VV", "lemma": "vv", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 22], "characterOffsetBegin": 27, "originalText": "VV", "ArgType": "verb", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 33, "segment_span": [0, 22], "characterOffsetBegin": 30, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "AS", "lemma": "as", "after": " ", "pos": "JJ", "characterOffsetEnd": 36, "segment_span": [0, 22], "characterOffsetBegin": 34, "originalText": "AS", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 22], "characterOffsetBegin": 37, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 22], "characterOffsetBegin": 40, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 22], "characterOffsetBegin": 44, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 12, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 53, "segment_span": [0, 22], "characterOffsetBegin": 49, "originalText": "have", "ArgType": null, "before": " "}, {"index": 13, "word": "non-faithful", "lemma": "non-faithful", "after": " ", "pos": "JJ", "characterOffsetEnd": 66, "segment_span": [0, 22], "characterOffsetBegin": 54, "originalText": "non-faithful", "ArgType": null, "before": " "}, {"index": 14, "word": "spans", "lemma": "span", "after": " ", "pos": "NNS", "characterOffsetEnd": 72, "segment_span": [0, 22], "characterOffsetBegin": 67, "originalText": "spans", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 74, "segment_span": [0, 22], "characterOffsetBegin": 73, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "crossed", "lemma": "cross", "after": " ", "pos": "VBN", "characterOffsetEnd": 81, "segment_span": [0, 22], "characterOffsetBegin": 74, "originalText": "crossed", "ArgType": null, "before": ""}, {"index": 17, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 85, "segment_span": [0, 22], "characterOffsetBegin": 82, "originalText": "out", "ArgType": null, "before": " "}, {"index": 18, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [0, 22], "characterOffsetBegin": 86, "originalText": "in", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 92, "segment_span": [0, 22], "characterOffsetBegin": 89, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "Figure", "lemma": "figure", "after": "", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [0, 22], "characterOffsetBegin": 93, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 100, "segment_span": [0, 22], "characterOffsetBegin": 99, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 101, "segment_span": [0, 22], "characterOffsetBegin": 100, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "because", "lemma": "because", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [22, 43], "characterOffsetBegin": 102, "originalText": "because", "ArgType": null, "before": " "}, {"index": 24, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 114, "segment_span": [22, 43], "characterOffsetBegin": 110, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 25, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 119, "segment_span": [22, 43], "characterOffsetBegin": 115, "originalText": "both", "ArgType": null, "before": " "}, {"index": 26, "word": "map", "lemma": "map", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [22, 43], "characterOffsetBegin": 120, "originalText": "map", "ArgType": null, "before": " "}, {"index": 27, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 126, "segment_span": [22, 43], "characterOffsetBegin": 124, "originalText": "to", "ArgType": null, "before": " "}, {"index": 28, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 128, "segment_span": [22, 43], "characterOffsetBegin": 127, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 29, "word": "held", "lemma": "hold", "after": "", "pos": "VBN", "characterOffsetEnd": 132, "segment_span": [22, 43], "characterOffsetBegin": 128, "originalText": "held", "ArgType": null, "before": ""}, {"index": 30, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 133, "segment_span": [22, 43], "characterOffsetBegin": 132, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 134, "segment_span": [22, 43], "characterOffsetBegin": 133, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "thus", "lemma": "thus", "after": " ", "pos": "RB", "characterOffsetEnd": 139, "segment_span": [22, 43], "characterOffsetBegin": 135, "originalText": "thus", "ArgType": null, "before": " "}, {"index": 33, "word": "neither", "lemma": "neither", "after": " ", "pos": "DT", "characterOffsetEnd": 147, "segment_span": [22, 43], "characterOffsetBegin": 140, "originalText": "neither", "ArgType": null, "before": " "}, {"index": 34, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 150, "segment_span": [22, 43], "characterOffsetBegin": 148, "originalText": "of", "ArgType": null, "before": " "}, {"index": 35, "word": "them", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 155, "segment_span": [22, 43], "characterOffsetBegin": 151, "originalText": "them", "ArgType": null, "before": " "}, {"index": 36, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 159, "segment_span": [22, 43], "characterOffsetBegin": 156, "originalText": "can", "ArgType": null, "before": " "}, {"index": 37, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 162, "segment_span": [22, 43], "characterOffsetBegin": 160, "originalText": "be", "ArgType": null, "before": " "}, {"index": 38, "word": "translated", "lemma": "translate", "after": " ", "pos": "VBN", "characterOffsetEnd": 173, "segment_span": [22, 43], "characterOffsetBegin": 163, "originalText": "translated", "ArgType": null, "before": " "}, {"index": 39, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 176, "segment_span": [22, 43], "characterOffsetBegin": 174, "originalText": "to", "ArgType": null, "before": " "}, {"index": 40, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 178, "segment_span": [22, 43], "characterOffsetBegin": 177, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 41, "word": "held", "lemma": "hold", "after": "", "pos": "VBN", "characterOffsetEnd": 182, "segment_span": [22, 43], "characterOffsetBegin": 178, "originalText": "held", "ArgType": null, "before": ""}, {"index": 42, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 183, "segment_span": [22, 43], "characterOffsetBegin": 182, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 43, "word": "alone", "lemma": "alone", "after": "", "pos": "RB", "characterOffsetEnd": 189, "segment_span": [22, 43], "characterOffsetBegin": 184, "originalText": "alone", "ArgType": null, "before": " "}, {"index": 44, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 190, "characterOffsetBegin": 189, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , sibling nodes VV and AS in the tree have non-faithful spans ( crossed out in the Figure ) , because they both map to `` held '' , thus neither of them can be translated to `` held '' alone ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 193, "segment_span": [0, 15], "characterOffsetBegin": 191, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 198, "segment_span": [0, 15], "characterOffsetBegin": 194, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "case", "lemma": "case", "after": "", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [0, 15], "characterOffsetBegin": 199, "originalText": "case", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 204, "segment_span": [0, 15], "characterOffsetBegin": 203, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 206, "segment_span": [0, 15], "characterOffsetBegin": 205, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "larger", "lemma": "larger", "after": " ", "pos": "JJR", "characterOffsetEnd": 213, "segment_span": [0, 15], "characterOffsetBegin": 207, "originalText": "larger", "ArgType": null, "before": " "}, {"index": 7, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [0, 15], "characterOffsetBegin": 214, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 8, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 227, "segment_span": [0, 15], "characterOffsetBegin": 219, "originalText": "fragment", "ArgType": "subj", "before": " "}, {"index": 9, "word": "rooted", "lemma": "root", "after": " ", "pos": "VBN", "characterOffsetEnd": 234, "segment_span": [0, 15], "characterOffsetBegin": 228, "originalText": "rooted", "ArgType": null, "before": " "}, {"index": 10, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 237, "segment_span": [0, 15], "characterOffsetBegin": 235, "originalText": "at", "ArgType": null, "before": " "}, {"index": 11, "word": "VPB", "lemma": "VPB", "after": " ", "pos": "NNP", "characterOffsetEnd": 241, "segment_span": [0, 15], "characterOffsetBegin": 238, "originalText": "VPB", "ArgType": null, "before": " "}, {"index": 12, "word": "has", "characterOffsetEnd": 245, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 15], "tense": "Z", "characterOffsetBegin": 242, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 248, "segment_span": [0, 15], "characterOffsetBegin": 246, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 251, "segment_span": [0, 15], "characterOffsetBegin": 249, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "extracted", "lemma": "extract", "after": "", "pos": "VBN", "characterOffsetEnd": 261, "segment_span": [0, 15], "characterOffsetBegin": 252, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 262, "characterOffsetBegin": 261, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this case , a larger tree fragment rooted at VPB has to be extracted ."}, {"tokens": [{"index": 1, "word": "Nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 268, "segment_span": [0, 16], "characterOffsetBegin": 263, "originalText": "Nodes", "ArgType": "subj", "before": " "}, {"index": 2, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 273, "segment_span": [0, 16], "characterOffsetBegin": 269, "originalText": "with", "ArgType": null, "before": " "}, {"index": 3, "word": "non-empty", "lemma": "non-empty", "after": "", "pos": "JJ", "characterOffsetEnd": 283, "segment_span": [0, 16], "characterOffsetBegin": 274, "originalText": "non-empty", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 284, "segment_span": [0, 16], "characterOffsetBegin": 283, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "contiguous", "lemma": "contiguous", "after": "", "pos": "JJ", "characterOffsetEnd": 295, "segment_span": [0, 16], "characterOffsetBegin": 285, "originalText": "contiguous", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 296, "segment_span": [0, 16], "characterOffsetBegin": 295, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 300, "segment_span": [0, 16], "characterOffsetBegin": 297, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "faithful", "lemma": "faithful", "after": " ", "pos": "JJ", "characterOffsetEnd": 309, "segment_span": [0, 16], "characterOffsetBegin": 301, "originalText": "faithful", "ArgType": null, "before": " "}, {"index": 9, "word": "spans", "lemma": "span", "after": " ", "pos": "NNS", "characterOffsetEnd": 315, "segment_span": [0, 16], "characterOffsetBegin": 310, "originalText": "spans", "ArgType": null, "before": " "}, {"index": 10, "word": "form", "characterOffsetEnd": 320, "after": " ", "pos": "VBP", "is_root": true, "lemma": "form", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 316, "originalText": "form", "ArgType": "verb", "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 324, "segment_span": [0, 16], "characterOffsetBegin": 321, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 335, "segment_span": [0, 16], "characterOffsetBegin": 325, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 13, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 339, "segment_span": [0, 16], "characterOffsetBegin": 336, "originalText": "set", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 341, "segment_span": [0, 16], "characterOffsetBegin": 340, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "shaded", "lemma": "shaded", "after": " ", "pos": "JJ", "characterOffsetEnd": 347, "segment_span": [0, 16], "characterOffsetBegin": 341, "originalText": "shaded", "ArgType": null, "before": ""}, {"index": 16, "word": "nodes", "lemma": "node", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": "NNS", "characterOffsetEnd": 353, "segment_span": [0, 16], "characterOffsetBegin": 348, "originalText": "nodes", "ArgType": null, "before": " "}], "text": "Nodes with non-empty , contiguous , and faithful spans form the admissible set ( shaded nodes"}, {"tokens": [{"index": 1, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 33], "characterOffsetBegin": 0, "originalText": "in", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 6, "segment_span": [0, 33], "characterOffsetBegin": 3, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "figure", "lemma": "figure", "after": "", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 33], "characterOffsetBegin": 7, "originalText": "figure", "ArgType": null, "before": " "}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 14, "segment_span": [0, 33], "characterOffsetBegin": 13, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 15, "segment_span": [0, 33], "characterOffsetBegin": 14, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 21, "segment_span": [5, 32], "characterOffsetBegin": 16, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 7, "word": "serve", "characterOffsetEnd": 27, "after": " ", "pos": "VBP", "is_root": true, "lemma": "serve", "segment_span": [5, 32], "tense": "P", "characterOffsetBegin": 22, "originalText": "serve", "ArgType": null, "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [5, 32], "characterOffsetBegin": 28, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [5, 32], "characterOffsetBegin": 31, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 10, "word": "cut-points", "lemma": "cut-point", "after": " ", "pos": "NNS", "characterOffsetEnd": 51, "segment_span": [5, 32], "characterOffsetBegin": 41, "originalText": "cut-points", "ArgType": null, "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 55, "segment_span": [5, 32], "characterOffsetBegin": 52, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [5, 32], "characterOffsetBegin": 56, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 13, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [5, 32], "characterOffsetBegin": 61, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 14, "word": ".3", "lemma": ".3", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [5, 32], "characterOffsetBegin": 71, "originalText": ".3", "ArgType": null, "before": ""}, {"index": 15, "word": "With", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 78, "segment_span": [5, 32], "characterOffsetBegin": 74, "originalText": "With", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 82, "segment_span": [5, 32], "characterOffsetBegin": 79, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [5, 32], "characterOffsetBegin": 83, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 18, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [5, 32], "characterOffsetBegin": 94, "originalText": "set", "ArgType": null, "before": " "}, {"index": 19, "word": "computed", "lemma": "compute", "after": "", "pos": "VBD", "characterOffsetEnd": 106, "segment_span": [5, 32], "characterOffsetBegin": 98, "originalText": "computed", "ArgType": "subj", "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 107, "segment_span": [5, 32], "characterOffsetBegin": 106, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 112, "segment_span": [5, 32], "characterOffsetBegin": 108, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 22, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [5, 32], "characterOffsetBegin": 113, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 23, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 126, "segment_span": [5, 32], "characterOffsetBegin": 124, "originalText": "is", "ArgType": null, "before": " "}, {"index": 24, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 129, "segment_span": [5, 32], "characterOffsetBegin": 127, "originalText": "as", "ArgType": null, "before": " "}, {"index": 25, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 136, "segment_span": [5, 32], "characterOffsetBegin": 130, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 26, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 139, "segment_span": [5, 32], "characterOffsetBegin": 137, "originalText": "as", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 141, "segment_span": [5, 32], "characterOffsetBegin": 140, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "depth-first", "lemma": "depth-first", "after": " ", "pos": "JJ", "characterOffsetEnd": 153, "segment_span": [5, 32], "characterOffsetBegin": 142, "originalText": "depth-first", "ArgType": null, "before": " "}, {"index": 29, "word": "traversal", "lemma": "traversal", "after": " ", "pos": "NN", "characterOffsetEnd": 163, "segment_span": [5, 32], "characterOffsetBegin": 154, "originalText": "traversal", "ArgType": null, "before": " "}, {"index": 30, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 168, "segment_span": [5, 32], "characterOffsetBegin": 164, "originalText": "from", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 172, "segment_span": [5, 32], "characterOffsetBegin": 169, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "root", "lemma": "root", "after": "", "pos": "NN", "characterOffsetEnd": 177, "segment_span": [5, 32], "characterOffsetBegin": 173, "originalText": "root", "ArgType": null, "before": " "}, {"index": 33, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 178, "segment_span": [0, 33], "characterOffsetBegin": 177, "originalText": ":", "ArgType": null, "before": ""}, {"index": 34, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 181, "segment_span": [33, 62], "characterOffsetBegin": 179, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 35, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 183, "segment_span": [33, 62], "characterOffsetBegin": 182, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 36, "word": "cut", "characterOffsetEnd": 186, "after": "", "pos": "VBD", "is_root": true, "lemma": "cut", "segment_span": [33, 62], "tense": "D", "characterOffsetBegin": 183, "originalText": "cut", "ArgType": null, "before": ""}, {"index": 37, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 187, "segment_span": [33, 62], "characterOffsetBegin": 186, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 38, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 191, "segment_span": [33, 62], "characterOffsetBegin": 188, "originalText": "the", "ArgType": null, "before": " "}, {"index": 39, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 196, "segment_span": [33, 62], "characterOffsetBegin": 192, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 40, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 199, "segment_span": [33, 62], "characterOffsetBegin": 197, "originalText": "at", "ArgType": null, "before": " "}, {"index": 41, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 203, "segment_span": [33, 62], "characterOffsetBegin": 200, "originalText": "all", "ArgType": null, "before": " "}, {"index": 42, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 214, "segment_span": [33, 62], "characterOffsetBegin": 204, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 43, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 220, "segment_span": [33, 62], "characterOffsetBegin": 215, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 44, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 223, "segment_span": [43, 54], "characterOffsetBegin": 221, "originalText": "to", "ArgType": null, "before": " "}, {"index": 45, "word": "form", "characterOffsetEnd": 228, "after": " ", "pos": "VB", "is_root": true, "lemma": "form", "segment_span": [43, 54], "tense": "B", "characterOffsetBegin": 224, "originalText": "form", "ArgType": null, "before": " "}, {"index": 46, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 233, "segment_span": [43, 54], "characterOffsetBegin": 229, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 47, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 243, "segment_span": [43, 54], "characterOffsetBegin": 234, "originalText": "fragments", "ArgType": "dobj", "before": " "}, {"index": 48, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 247, "segment_span": [43, 54], "characterOffsetBegin": 244, "originalText": "and", "ArgType": null, "before": " "}, {"index": 49, "word": "extract", "lemma": "extract", "after": " ", "pos": "NN", "characterOffsetEnd": 255, "segment_span": [43, 54], "characterOffsetBegin": 248, "originalText": "extract", "ArgType": null, "before": " "}, {"index": 50, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 257, "segment_span": [43, 54], "characterOffsetBegin": 256, "originalText": "a", "ArgType": null, "before": " "}, {"index": 51, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 262, "segment_span": [43, 54], "characterOffsetBegin": 258, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 52, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 266, "segment_span": [43, 54], "characterOffsetBegin": 263, "originalText": "for", "ArgType": null, "before": " "}, {"index": 53, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 271, "segment_span": [43, 54], "characterOffsetBegin": 267, "originalText": "each", "ArgType": null, "before": " "}, {"index": 54, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 280, "segment_span": [43, 54], "characterOffsetBegin": 272, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 55, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 281, "segment_span": [33, 62], "characterOffsetBegin": 280, "originalText": ",", "ArgType": null, "before": ""}, {"index": 56, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 286, "segment_span": [33, 62], "characterOffsetBegin": 282, "originalText": "with", "ArgType": null, "before": " "}, {"index": 57, "word": "variables", "lemma": "variable", "after": " ", "pos": "NNS", "characterOffsetEnd": 296, "segment_span": [33, 62], "characterOffsetBegin": 287, "originalText": "variables", "ArgType": null, "before": " "}, {"index": 58, "word": "matching", "lemma": "match", "after": " ", "pos": "VBG", "characterOffsetEnd": 305, "segment_span": [33, 62], "characterOffsetBegin": 297, "originalText": "matching", "ArgType": null, "before": " "}, {"index": 59, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 309, "segment_span": [33, 62], "characterOffsetBegin": 306, "originalText": "the", "ArgType": null, "before": " "}, {"index": 60, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 320, "segment_span": [33, 62], "characterOffsetBegin": 310, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 61, "word": "descendant", "lemma": "descendant", "after": " ", "pos": "NN", "characterOffsetEnd": 331, "segment_span": [33, 62], "characterOffsetBegin": 321, "originalText": "descendant", "ArgType": null, "before": " "}, {"index": 62, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 337, "segment_span": [33, 62], "characterOffsetBegin": 332, "originalText": "nodes", "ArgType": "dobj", "before": " "}, {"index": 63, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 338, "characterOffsetBegin": 337, "originalText": ".", "ArgType": null, "before": ""}], "text": "in the figure ) , which serve as potential cut-points for rule extraction .3 With the admissible set computed , rule extraction is as simple as a depth-first traversal from the root : we `` cut '' the tree at all admissible nodes to form tree fragments and extract a rule for each fragment , with variables matching the admissible descendant nodes ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 342, "segment_span": [0, 14], "characterOffsetBegin": 339, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 350, "segment_span": [0, 14], "characterOffsetBegin": 343, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 351, "segment_span": [0, 14], "characterOffsetBegin": 350, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 355, "segment_span": [0, 14], "characterOffsetBegin": 352, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 360, "segment_span": [0, 14], "characterOffsetBegin": 356, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 363, "segment_span": [0, 14], "characterOffsetBegin": 361, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 370, "segment_span": [0, 14], "characterOffsetBegin": 364, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 8, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 372, "segment_span": [0, 14], "characterOffsetBegin": 371, "originalText": "3", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 375, "segment_span": [0, 14], "characterOffsetBegin": 373, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "cut", "characterOffsetEnd": 379, "after": " ", "pos": "VBN", "is_root": true, "lemma": "cut", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 376, "before": " ", "originalText": "cut", "ArgType": null, "is_pass": true}, {"index": 11, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 384, "segment_span": [0, 14], "characterOffsetBegin": 380, "originalText": "into", "ArgType": null, "before": " "}, {"index": 12, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 386, "segment_span": [0, 14], "characterOffsetBegin": 385, "originalText": "6", "ArgType": null, "before": " "}, {"index": 13, "word": "pieces", "lemma": "piece", "after": "", "pos": "NNS", "characterOffsetEnd": 393, "segment_span": [0, 14], "characterOffsetBegin": 387, "originalText": "pieces", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 394, "segment_span": [0, 14], "characterOffsetBegin": 393, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 399, "segment_span": [14, 24], "characterOffsetBegin": 395, "originalText": "each", "ArgType": "subj", "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 402, "segment_span": [14, 24], "characterOffsetBegin": 400, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 408, "segment_span": [14, 24], "characterOffsetBegin": 403, "originalText": "which", "ArgType": null, "before": " "}, {"index": 18, "word": "corresponds", "characterOffsetEnd": 420, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "correspond", "segment_span": [14, 24], "tense": "Z", "characterOffsetBegin": 409, "originalText": "corresponds", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 423, "segment_span": [14, 24], "characterOffsetBegin": 421, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 425, "segment_span": [14, 24], "characterOffsetBegin": 424, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 430, "segment_span": [14, 24], "characterOffsetBegin": 426, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 22, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 433, "segment_span": [14, 24], "characterOffsetBegin": 431, "originalText": "on", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 437, "segment_span": [14, 24], "characterOffsetBegin": 434, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "right", "lemma": "right", "after": "", "pos": "NN", "characterOffsetEnd": 443, "segment_span": [14, 24], "characterOffsetBegin": 438, "originalText": "right", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 444, "characterOffsetBegin": 443, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , the tree in Figure 3 is cut into 6 pieces , each of which corresponds to a rule on the right ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 450, "segment_span": [0, 8], "characterOffsetBegin": 445, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 460, "segment_span": [0, 8], "characterOffsetBegin": 451, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 3, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 466, "segment_span": [0, 8], "characterOffsetBegin": 461, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 4, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 470, "segment_span": [0, 8], "characterOffsetBegin": 467, "originalText": "are", "ArgType": null, "before": " "}, {"index": 5, "word": "called", "characterOffsetEnd": 477, "after": " ", "pos": "VBN", "is_root": true, "lemma": "call", "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 471, "before": " ", "originalText": "called", "ArgType": null, "is_pass": true}, {"index": 6, "word": "minimal", "lemma": "minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 485, "segment_span": [0, 8], "characterOffsetBegin": 478, "originalText": "minimal", "ArgType": null, "before": " "}, {"index": 7, "word": "rules", "lemma": "rule", "after": "", "pos": "NNS", "characterOffsetEnd": 491, "segment_span": [0, 8], "characterOffsetBegin": 486, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 492, "segment_span": [0, 8], "characterOffsetBegin": 491, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 498, "segment_span": [8, 35], "characterOffsetBegin": 493, "originalText": "which", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 502, "segment_span": [8, 35], "characterOffsetBegin": 499, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 505, "segment_span": [8, 35], "characterOffsetBegin": 503, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "glued", "characterOffsetEnd": 511, "after": " ", "pos": "VBN", "is_root": true, "lemma": "glue", "segment_span": [8, 35], "tense": "N", "characterOffsetBegin": 506, "before": " ", "originalText": "glued", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 13, "word": "together", "lemma": "together", "after": " ", "pos": "RB", "characterOffsetEnd": 520, "segment_span": [8, 35], "characterOffsetBegin": 512, "originalText": "together", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 523, "segment_span": [8, 35], "characterOffsetBegin": 521, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "form", "lemma": "form", "after": " ", "pos": "VB", "characterOffsetEnd": 528, "segment_span": [8, 35], "characterOffsetBegin": 524, "originalText": "form", "ArgType": null, "before": " "}, {"index": 16, "word": "composed", "lemma": "compose", "after": " ", "pos": "VBN", "characterOffsetEnd": 537, "segment_span": [8, 35], "characterOffsetBegin": 529, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 17, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 543, "segment_span": [8, 35], "characterOffsetBegin": 538, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 548, "segment_span": [8, 35], "characterOffsetBegin": 544, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "larger", "lemma": "larger", "after": " ", "pos": "JJR", "characterOffsetEnd": 555, "segment_span": [8, 35], "characterOffsetBegin": 549, "originalText": "larger", "ArgType": null, "before": " "}, {"index": 20, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 560, "segment_span": [8, 35], "characterOffsetBegin": 556, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 21, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 570, "segment_span": [8, 35], "characterOffsetBegin": 561, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 572, "segment_span": [8, 35], "characterOffsetBegin": 571, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 576, "segment_span": [8, 35], "characterOffsetBegin": 572, "originalText": "e.g.", "ArgType": null, "before": ""}, {"index": 24, "word": "r1", "lemma": "r1", "after": " ", "pos": "FW", "characterOffsetEnd": 579, "segment_span": [8, 35], "characterOffsetBegin": 577, "originalText": "r1", "ArgType": null, "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 582, "segment_span": [8, 35], "characterOffsetBegin": 580, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "Fig.", "lemma": "fig.", "after": " ", "pos": "NN", "characterOffsetEnd": 587, "segment_span": [8, 35], "characterOffsetBegin": 583, "originalText": "Fig.", "ArgType": null, "before": " "}, {"index": 27, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 589, "segment_span": [8, 35], "characterOffsetBegin": 588, "originalText": "1", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 590, "segment_span": [8, 35], "characterOffsetBegin": 589, "originalText": ")", "ArgType": null, "before": ""}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 592, "segment_span": [8, 35], "characterOffsetBegin": 591, "originalText": "(", "ArgType": null, "before": " "}, {"index": 30, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 598, "segment_span": [8, 35], "characterOffsetBegin": 592, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 31, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 601, "segment_span": [8, 35], "characterOffsetBegin": 599, "originalText": "et", "ArgType": null, "before": " "}, {"index": 32, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 605, "segment_span": [8, 35], "characterOffsetBegin": 602, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 606, "segment_span": [8, 35], "characterOffsetBegin": 605, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 611, "segment_span": [8, 35], "characterOffsetBegin": 607, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 612, "segment_span": [8, 35], "characterOffsetBegin": 611, "originalText": ")", "ArgType": null, "before": ""}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 613, "characterOffsetBegin": 612, "originalText": ".", "ArgType": null, "before": ""}], "text": "These extracted rules are called minimal rules , which can be glued together to form composed rules with larger tree fragments ( e.g. r1 in Fig. 1 ) ( Galley et al. , 2006 ) ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 617, "segment_span": [0, 5], "characterOffsetBegin": 614, "originalText": "Our", "ArgType": null, "before": " "}, {"index": 2, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 629, "segment_span": [0, 5], "characterOffsetBegin": 618, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 3, "word": "use", "characterOffsetEnd": 633, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 5], "tense": "P", "characterOffsetBegin": 630, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 4, "word": "composed", "lemma": "compose", "after": " ", "pos": "VBN", "characterOffsetEnd": 642, "segment_span": [0, 5], "characterOffsetBegin": 634, "originalText": "composed", "ArgType": null, "before": " "}, {"index": 5, "word": "rules", "lemma": "rule", "after": "", "pos": "NNS", "characterOffsetEnd": 648, "segment_span": [0, 5], "characterOffsetBegin": 643, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": "\u0000\u0000\u0000\u0000", "pos": ".", "characterOffsetEnd": 649, "characterOffsetBegin": 648, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our experiments use composed rules ."}], "title": "2.2 Tree-to-String Rule Extraction"}], "title": "1 Introduction"}, {"num": 4, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 6, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "now", "ArgType": null, "before": " "}, {"index": 3, "word": "extend", "characterOffsetEnd": 13, "after": " ", "pos": "VBP", "is_root": true, "lemma": "extend", "segment_span": [0, 10], "tense": "P", "characterOffsetBegin": 7, "originalText": "extend", "ArgType": "verb", "before": " "}, {"index": 4, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 24, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 5, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 35, "segment_span": [0, 10], "characterOffsetBegin": 25, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 6, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 10], "characterOffsetBegin": 36, "originalText": "algorithm", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 50, "segment_span": [0, 10], "characterOffsetBegin": 46, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 10], "characterOffsetBegin": 51, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 63, "segment_span": [0, 10], "characterOffsetBegin": 55, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 10, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 10], "characterOffsetBegin": 64, "originalText": "section", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 74, "segment_span": [10, 21], "characterOffsetBegin": 72, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "work", "characterOffsetEnd": 79, "after": " ", "pos": "VB", "is_root": true, "lemma": "work", "segment_span": [10, 21], "tense": "B", "characterOffsetBegin": 75, "originalText": "work", "ArgType": null, "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [10, 21], "characterOffsetBegin": 80, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [10, 21], "characterOffsetBegin": 85, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [10, 21], "characterOffsetBegin": 87, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 16, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [10, 21], "characterOffsetBegin": 94, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 17, "word": "representing", "lemma": "represent", "after": " ", "pos": "VBG", "characterOffsetEnd": 113, "segment_span": [10, 21], "characterOffsetBegin": 101, "originalText": "representing", "ArgType": null, "before": " "}, {"index": 18, "word": "exponentially", "lemma": "exponentially", "after": " ", "pos": "RB", "characterOffsetEnd": 127, "segment_span": [10, 21], "characterOffsetBegin": 114, "originalText": "exponentially", "ArgType": null, "before": " "}, {"index": 19, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 132, "segment_span": [10, 21], "characterOffsetBegin": 128, "originalText": "many", "ArgType": null, "before": " "}, {"index": 20, "word": "parse", "lemma": "parse", "after": " ", "pos": "VBP", "characterOffsetEnd": 138, "segment_span": [10, 21], "characterOffsetBegin": 133, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 21, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 144, "segment_span": [10, 21], "characterOffsetBegin": 139, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 145, "characterOffsetBegin": 144, "originalText": ".", "ArgType": null, "before": ""}], "text": "We now extend tree-based extraction algorithm from the previous section to work with a packed forest representing exponentially many parse trees ."}]}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Informally", "lemma": "informally", "after": "", "pos": "RB", "characterOffsetEnd": 10, "segment_span": [0, 45], "characterOffsetBegin": 0, "originalText": "Informally", "ArgType": null, "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 11, "segment_span": [0, 45], "characterOffsetBegin": 10, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 13, "segment_span": [0, 45], "characterOffsetBegin": 12, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 20, "segment_span": [0, 45], "characterOffsetBegin": 14, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 5, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 45], "characterOffsetBegin": 21, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 6, "word": "forest", "lemma": "forest", "after": "", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 45], "characterOffsetBegin": 27, "originalText": "forest", "ArgType": "subj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 34, "segment_span": [0, 45], "characterOffsetBegin": 33, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 37, "segment_span": [0, 45], "characterOffsetBegin": 35, "originalText": "or", "ArgType": null, "before": " "}, {"index": 9, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 45], "characterOffsetBegin": 38, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 45], "characterOffsetBegin": 45, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "short", "lemma": "short", "after": "", "pos": "JJ", "characterOffsetEnd": 53, "segment_span": [0, 45], "characterOffsetBegin": 48, "originalText": "short", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [0, 45], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 57, "segment_span": [0, 45], "characterOffsetBegin": 55, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 59, "segment_span": [0, 45], "characterOffsetBegin": 58, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "compact", "lemma": "compact", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [0, 45], "characterOffsetBegin": 60, "originalText": "compact", "ArgType": null, "before": " "}, {"index": 16, "word": "representation", "lemma": "representation", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 45], "characterOffsetBegin": 68, "originalText": "representation", "ArgType": "verb", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 85, "segment_span": [0, 45], "characterOffsetBegin": 83, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "all", "lemma": "all", "after": " ", "pos": "PDT", "characterOffsetEnd": 89, "segment_span": [0, 45], "characterOffsetBegin": 86, "originalText": "all", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [0, 45], "characterOffsetBegin": 90, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "derivations", "lemma": "derivation", "after": " ", "pos": "NNS", "characterOffsetEnd": 105, "segment_span": [0, 45], "characterOffsetBegin": 94, "originalText": "derivations", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 107, "segment_span": [0, 45], "characterOffsetBegin": 106, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "i.e.", "lemma": "i.e.", "after": "", "pos": "FW", "characterOffsetEnd": 111, "segment_span": [0, 45], "characterOffsetBegin": 107, "originalText": "i.e.", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 112, "segment_span": [0, 45], "characterOffsetBegin": 111, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "parse", "lemma": "parse", "after": " ", "pos": "VB", "characterOffsetEnd": 118, "segment_span": [0, 45], "characterOffsetBegin": 113, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 25, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 124, "segment_span": [0, 45], "characterOffsetBegin": 119, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 125, "segment_span": [0, 45], "characterOffsetBegin": 124, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 129, "segment_span": [0, 45], "characterOffsetBegin": 126, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 131, "segment_span": [0, 45], "characterOffsetBegin": 130, "originalText": "a", "ArgType": null, "before": " "}, {"index": 29, "word": "given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 137, "segment_span": [0, 45], "characterOffsetBegin": 132, "originalText": "given", "ArgType": null, "before": " "}, {"index": 30, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [0, 45], "characterOffsetBegin": 138, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 31, "word": "under", "lemma": "under", "after": " ", "pos": "IN", "characterOffsetEnd": 152, "segment_span": [0, 45], "characterOffsetBegin": 147, "originalText": "under", "ArgType": null, "before": " "}, {"index": 32, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 154, "segment_span": [0, 45], "characterOffsetBegin": 153, "originalText": "a", "ArgType": null, "before": " "}, {"index": 33, "word": "context-free", "lemma": "context-free", "after": " ", "pos": "JJ", "characterOffsetEnd": 167, "segment_span": [0, 45], "characterOffsetBegin": 155, "originalText": "context-free", "ArgType": null, "before": " "}, {"index": 34, "word": "grammar", "lemma": "grammar", "after": " ", "pos": "NN", "characterOffsetEnd": 175, "segment_span": [0, 45], "characterOffsetBegin": 168, "originalText": "grammar", "ArgType": null, "before": " "}, {"index": 35, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 177, "segment_span": [0, 45], "characterOffsetBegin": 176, "originalText": "(", "ArgType": null, "before": " "}, {"index": 36, "word": "Earley", "lemma": "earley", "after": "", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [0, 45], "characterOffsetBegin": 177, "originalText": "Earley", "ArgType": null, "before": ""}, {"index": 37, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 184, "segment_span": [0, 45], "characterOffsetBegin": 183, "originalText": ",", "ArgType": null, "before": ""}, {"index": 38, "word": "1970", "lemma": "1970", "after": "", "pos": "CD", "characterOffsetEnd": 189, "segment_span": [0, 45], "characterOffsetBegin": 185, "originalText": "1970", "ArgType": null, "before": " "}, {"index": 39, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 190, "segment_span": [0, 45], "characterOffsetBegin": 189, "originalText": ";", "ArgType": null, "before": ""}, {"index": 40, "word": "Billot", "lemma": "Billot", "after": " ", "pos": "NNP", "characterOffsetEnd": 197, "segment_span": [0, 45], "characterOffsetBegin": 191, "originalText": "Billot", "ArgType": null, "before": " "}, {"index": 41, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 201, "segment_span": [0, 45], "characterOffsetBegin": 198, "originalText": "and", "ArgType": null, "before": " "}, {"index": 42, "word": "Lang", "lemma": "Lang", "after": "", "pos": "NNP", "characterOffsetEnd": 206, "segment_span": [0, 45], "characterOffsetBegin": 202, "originalText": "Lang", "ArgType": null, "before": " "}, {"index": 43, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 207, "segment_span": [0, 45], "characterOffsetBegin": 206, "originalText": ",", "ArgType": null, "before": ""}, {"index": 44, "word": "1989", "lemma": "1989", "after": "", "pos": "CD", "characterOffsetEnd": 212, "segment_span": [0, 45], "characterOffsetBegin": 208, "originalText": "1989", "ArgType": null, "before": " "}, {"index": 45, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 213, "segment_span": [0, 45], "characterOffsetBegin": 212, "originalText": ")", "ArgType": null, "before": ""}, {"index": 46, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 214, "characterOffsetBegin": 213, "originalText": ".", "ArgType": null, "before": ""}], "text": "Informally , a packed parse forest , or forest in short , is a compact representation of all the derivations ( i.e. , parse trees ) for a given sentence under a context-free grammar ( Earley , 1970 ; Billot and Lang , 1989 ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 218, "segment_span": [0, 32], "characterOffsetBegin": 215, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 226, "segment_span": [0, 32], "characterOffsetBegin": 219, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 227, "segment_span": [0, 32], "characterOffsetBegin": 226, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "consider", "characterOffsetEnd": 236, "after": " ", "pos": "VB", "is_root": true, "lemma": "consider", "segment_span": [0, 32], "tense": "B", "characterOffsetBegin": 228, "originalText": "consider", "ArgType": null, "before": " "}, {"index": 5, "word": "again", "lemma": "again", "after": " ", "pos": "RB", "characterOffsetEnd": 242, "segment_span": [0, 32], "characterOffsetBegin": 237, "originalText": "again", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 246, "segment_span": [0, 32], "characterOffsetBegin": 243, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 254, "segment_span": [0, 32], "characterOffsetBegin": 247, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 8, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 263, "segment_span": [0, 32], "characterOffsetBegin": 255, "originalText": "sentence", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 266, "segment_span": [0, 32], "characterOffsetBegin": 264, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "Example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 274, "segment_span": [0, 32], "characterOffsetBegin": 267, "originalText": "Example", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 276, "segment_span": [0, 32], "characterOffsetBegin": 275, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 277, "segment_span": [0, 32], "characterOffsetBegin": 276, "originalText": "1", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 278, "segment_span": [0, 32], "characterOffsetBegin": 277, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "above", "lemma": "above", "after": "", "pos": "IN", "characterOffsetEnd": 284, "segment_span": [0, 32], "characterOffsetBegin": 279, "originalText": "above", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 285, "segment_span": [0, 32], "characterOffsetBegin": 284, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 291, "segment_span": [15, 23], "characterOffsetBegin": 286, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 17, "word": "has", "characterOffsetEnd": 295, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [15, 23], "tense": "Z", "characterOffsetBegin": 292, "originalText": "has", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 297, "segment_span": [15, 23], "characterOffsetBegin": 296, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 299, "segment_span": [15, 23], "characterOffsetBegin": 297, "originalText": "at", "ArgType": null, "before": ""}, {"index": 20, "word": "least", "lemma": "least", "after": "", "pos": "JJS", "characterOffsetEnd": 305, "segment_span": [15, 23], "characterOffsetBegin": 300, "originalText": "least", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 306, "segment_span": [15, 23], "characterOffsetBegin": 305, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 310, "segment_span": [15, 23], "characterOffsetBegin": 307, "originalText": "two", "ArgType": null, "before": " "}, {"index": 23, "word": "readings", "lemma": "reading", "after": " ", "pos": "NNS", "characterOffsetEnd": 319, "segment_span": [15, 23], "characterOffsetBegin": 311, "originalText": "readings", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "depending", "lemma": "depend", "after": " ", "pos": "VBG", "characterOffsetEnd": 329, "segment_span": [23, 31], "characterOffsetBegin": 320, "originalText": "depending", "ArgType": null, "before": " "}, {"index": 25, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 332, "segment_span": [23, 31], "characterOffsetBegin": 330, "originalText": "on", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 336, "segment_span": [23, 31], "characterOffsetBegin": 333, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "part-ofspeech", "lemma": "part-ofspeech", "after": " ", "pos": "NN", "characterOffsetEnd": 350, "segment_span": [23, 31], "characterOffsetBegin": 337, "originalText": "part-ofspeech", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 353, "segment_span": [23, 31], "characterOffsetBegin": 351, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 357, "segment_span": [23, 31], "characterOffsetBegin": 354, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 362, "segment_span": [23, 31], "characterOffsetBegin": 358, "originalText": "word", "ArgType": null, "before": " "}, {"index": 31, "word": "y\u00cb\u0087u", "lemma": "y\u00cb\u0087u", "after": "", "pos": "NN", "characterOffsetEnd": 366, "segment_span": [23, 31], "characterOffsetBegin": 363, "originalText": "y\u00cb\u0087u", "ArgType": null, "before": " "}, {"index": 32, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 367, "segment_span": [0, 32], "characterOffsetBegin": 366, "originalText": ":", "ArgType": null, "before": ""}, {"index": 33, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 370, "segment_span": [32, 44], "characterOffsetBegin": 368, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 34, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 374, "segment_span": [32, 44], "characterOffsetBegin": 371, "originalText": "can", "ArgType": null, "before": " "}, {"index": 35, "word": "be", "characterOffsetEnd": 377, "after": " ", "pos": "VB", "is_root": true, "lemma": "be", "segment_span": [32, 44], "tense": "B", "characterOffsetBegin": 375, "originalText": "be", "has_aux": true, "ArgType": null, "before": " "}, {"index": 36, "word": "either", "lemma": "either", "after": " ", "pos": "CC", "characterOffsetEnd": 384, "segment_span": [32, 44], "characterOffsetBegin": 378, "originalText": "either", "ArgType": null, "before": " "}, {"index": 37, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 386, "segment_span": [32, 44], "characterOffsetBegin": 385, "originalText": "a", "ArgType": null, "before": " "}, {"index": 38, "word": "conjunction", "lemma": "conjunction", "after": " ", "pos": "NN", "characterOffsetEnd": 398, "segment_span": [32, 44], "characterOffsetBegin": 387, "originalText": "conjunction", "ArgType": null, "before": " "}, {"index": 39, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 400, "segment_span": [32, 44], "characterOffsetBegin": 399, "originalText": "(", "ArgType": null, "before": " "}, {"index": 40, "word": "CC", "lemma": "cc", "after": " ", "pos": "NN", "characterOffsetEnd": 402, "segment_span": [32, 44], "characterOffsetBegin": 400, "originalText": "CC", "ArgType": null, "before": ""}, {"index": 41, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 404, "segment_span": [32, 44], "characterOffsetBegin": 403, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 42, "word": "and", "lemma": "and", "after": "", "pos": "CC", "characterOffsetEnd": 407, "segment_span": [32, 44], "characterOffsetBegin": 404, "originalText": "and", "ArgType": null, "before": ""}, {"index": 43, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 408, "segment_span": [32, 44], "characterOffsetBegin": 407, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 44, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 409, "segment_span": [32, 44], "characterOffsetBegin": 408, "originalText": ")", "ArgType": null, "before": ""}, {"index": 45, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 412, "segment_span": [44, 76], "characterOffsetBegin": 410, "originalText": "as", "ArgType": null, "before": " "}, {"index": 46, "word": "shown", "characterOffsetEnd": 418, "after": " ", "pos": "VBN", "is_root": true, "lemma": "show", "segment_span": [44, 76], "tense": "N", "characterOffsetBegin": 413, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 47, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 421, "segment_span": [44, 76], "characterOffsetBegin": 419, "originalText": "in", "ArgType": null, "before": " "}, {"index": 48, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 428, "segment_span": [44, 76], "characterOffsetBegin": 422, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 49, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 430, "segment_span": [44, 76], "characterOffsetBegin": 429, "originalText": "3", "ArgType": null, "before": " "}, {"index": 50, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 431, "segment_span": [44, 76], "characterOffsetBegin": 430, "originalText": ",", "ArgType": null, "before": ""}, {"index": 51, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 434, "segment_span": [44, 76], "characterOffsetBegin": 432, "originalText": "or", "ArgType": null, "before": " "}, {"index": 52, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 436, "segment_span": [44, 76], "characterOffsetBegin": 435, "originalText": "a", "ArgType": null, "before": " "}, {"index": 53, "word": "preposition", "lemma": "preposition", "after": " ", "pos": "NN", "characterOffsetEnd": 448, "segment_span": [44, 76], "characterOffsetBegin": 437, "originalText": "preposition", "ArgType": null, "before": " "}, {"index": 54, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 450, "segment_span": [44, 76], "characterOffsetBegin": 449, "originalText": "(", "ArgType": null, "before": " "}, {"index": 55, "word": "P", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 451, "segment_span": [44, 76], "characterOffsetBegin": 450, "originalText": "P", "ArgType": null, "before": ""}, {"index": 56, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 453, "segment_span": [44, 76], "characterOffsetBegin": 452, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 57, "word": "with", "lemma": "with", "after": "", "pos": "IN", "characterOffsetEnd": 457, "segment_span": [44, 76], "characterOffsetBegin": 453, "originalText": "with", "ArgType": null, "before": ""}, {"index": 58, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 458, "segment_span": [44, 76], "characterOffsetBegin": 457, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 59, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 459, "segment_span": [44, 76], "characterOffsetBegin": 458, "originalText": ")", "ArgType": null, "before": ""}, {"index": 60, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 462, "segment_span": [44, 76], "characterOffsetBegin": 460, "originalText": "as", "ArgType": null, "before": " "}, {"index": 61, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "characterOffsetEnd": 468, "segment_span": [44, 76], "characterOffsetBegin": 463, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 62, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 471, "segment_span": [44, 76], "characterOffsetBegin": 469, "originalText": "in", "ArgType": null, "before": " "}, {"index": 63, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 478, "segment_span": [44, 76], "characterOffsetBegin": 472, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 64, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 480, "segment_span": [44, 76], "characterOffsetBegin": 479, "originalText": "5", "ArgType": null, "before": " "}, {"index": 65, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 481, "segment_span": [44, 76], "characterOffsetBegin": 480, "originalText": ",", "ArgType": null, "before": ""}, {"index": 66, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 486, "segment_span": [44, 76], "characterOffsetBegin": 482, "originalText": "with", "ArgType": null, "before": " "}, {"index": 67, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 491, "segment_span": [44, 76], "characterOffsetBegin": 487, "originalText": "only", "ArgType": null, "before": " "}, {"index": 68, "word": "PP", "lemma": "pp", "after": " ", "pos": "NN", "characterOffsetEnd": 494, "segment_span": [44, 76], "characterOffsetBegin": 492, "originalText": "PP", "ArgType": null, "before": " "}, {"index": 69, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 498, "segment_span": [44, 76], "characterOffsetBegin": 495, "originalText": "and", "ArgType": null, "before": " "}, {"index": 70, "word": "VPB", "lemma": "vpb", "after": " ", "pos": "NN", "characterOffsetEnd": 502, "segment_span": [44, 76], "characterOffsetBegin": 499, "originalText": "VPB", "ArgType": null, "before": " "}, {"index": 71, "word": "swapped", "lemma": "swap", "after": " ", "pos": "VBD", "characterOffsetEnd": 510, "segment_span": [44, 76], "characterOffsetBegin": 503, "originalText": "swapped", "ArgType": null, "before": " "}, {"index": 72, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 515, "segment_span": [44, 76], "characterOffsetBegin": 511, "originalText": "from", "ArgType": null, "before": " "}, {"index": 73, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 519, "segment_span": [44, 76], "characterOffsetBegin": 516, "originalText": "the", "ArgType": null, "before": " "}, {"index": 74, "word": "English", "lemma": "English", "after": " ", "pos": "NNP", "characterOffsetEnd": 527, "segment_span": [44, 76], "characterOffsetBegin": 520, "originalText": "English", "ArgType": null, "before": " "}, {"index": 75, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 532, "segment_span": [44, 76], "characterOffsetBegin": 528, "originalText": "word", "ArgType": null, "before": " "}, {"index": 76, "word": "order", "lemma": "order", "after": "", "pos": "NN", "characterOffsetEnd": 538, "segment_span": [44, 76], "characterOffsetBegin": 533, "originalText": "order", "ArgType": null, "before": " "}, {"index": 77, "word": ".", "lemma": ".", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ".", "characterOffsetEnd": 539, "characterOffsetBegin": 538, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , consider again the Chinese sentence in Example ( 1 ) above , which has ( at least ) two readings depending on the part-ofspeech of the word y\u00cb\u0087u : it can be either a conjunction ( CC `` and '' ) as shown in Figure 3 , or a preposition ( P `` with '' ) as shown in Figure 5 , with only PP and VPB swapped from the English word order ."}, {"tokens": [{"index": 1, "word": "3Admissible", "lemma": "3admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 11, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "3Admissible", "ArgType": null, "before": ""}, {"index": 2, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 12], "characterOffsetBegin": 12, "originalText": "set", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 17, "segment_span": [0, 12], "characterOffsetBegin": 16, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "Wang", "lemma": "Wang", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 12], "characterOffsetBegin": 17, "originalText": "Wang", "ArgType": null, "before": ""}, {"index": 5, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 24, "segment_span": [0, 12], "characterOffsetBegin": 22, "originalText": "et", "ArgType": null, "before": " "}, {"index": 6, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 28, "segment_span": [0, 12], "characterOffsetBegin": 25, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 29, "segment_span": [0, 12], "characterOffsetBegin": 28, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 34, "segment_span": [0, 12], "characterOffsetBegin": 30, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 35, "segment_span": [0, 12], "characterOffsetBegin": 34, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 38, "segment_span": [0, 12], "characterOffsetBegin": 36, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 43, "segment_span": [0, 12], "characterOffsetBegin": 39, "originalText": "also", "ArgType": null, "before": " "}, {"index": 12, "word": "known", "characterOffsetEnd": 49, "after": " ", "pos": "VBN", "is_root": true, "lemma": "know", "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 44, "before": " ", "originalText": "known", "ArgType": null, "is_pass": true}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [12, 24], "characterOffsetBegin": 50, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 54, "segment_span": [12, 24], "characterOffsetBegin": 53, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 15, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [12, 24], "characterOffsetBegin": 54, "originalText": "frontier", "ArgType": null, "before": ""}, {"index": 16, "word": "set", "lemma": "set", "after": "", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [12, 24], "characterOffsetBegin": 63, "originalText": "set", "ArgType": null, "before": " "}, {"index": 17, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 67, "segment_span": [12, 24], "characterOffsetBegin": 66, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 69, "segment_span": [12, 24], "characterOffsetBegin": 68, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 75, "segment_span": [12, 24], "characterOffsetBegin": 69, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 20, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 78, "segment_span": [12, 24], "characterOffsetBegin": 76, "originalText": "et", "ArgType": null, "before": " "}, {"index": 21, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 82, "segment_span": [12, 24], "characterOffsetBegin": 79, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 83, "segment_span": [12, 24], "characterOffsetBegin": 82, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 88, "segment_span": [12, 24], "characterOffsetBegin": 84, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 89, "segment_span": [12, 24], "characterOffsetBegin": 88, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 90, "characterOffsetBegin": 89, "originalText": ".", "ArgType": null, "before": ""}], "text": "3Admissible set ( Wang et al. , 2007 ) is also known as `` frontier set '' ( Galley et al. , 2004 ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [0, 19], "characterOffsetBegin": 91, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "simplicity", "lemma": "simplicity", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 19], "characterOffsetBegin": 95, "originalText": "simplicity", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [0, 19], "characterOffsetBegin": 106, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "presentation", "lemma": "presentation", "after": "", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 19], "characterOffsetBegin": 109, "originalText": "presentation", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 122, "segment_span": [0, 19], "characterOffsetBegin": 121, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 125, "segment_span": [0, 19], "characterOffsetBegin": 123, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "assume", "characterOffsetEnd": 132, "after": " ", "pos": "VBP", "is_root": true, "lemma": "assume", "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 126, "originalText": "assume", "ArgType": "verb", "before": " "}, {"index": 8, "word": "every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 138, "segment_span": [7, 18], "characterOffsetBegin": 133, "originalText": "every", "ArgType": null, "before": " "}, {"index": 9, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [7, 18], "characterOffsetBegin": 139, "originalText": "target", "ArgType": null, "before": " "}, {"index": 10, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [7, 18], "characterOffsetBegin": 146, "originalText": "word", "ArgType": null, "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 153, "segment_span": [7, 18], "characterOffsetBegin": 151, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "aligned", "characterOffsetEnd": 161, "after": " ", "pos": "VBN", "is_root": true, "lemma": "align", "segment_span": [7, 18], "tense": "N", "characterOffsetBegin": 154, "before": " ", "originalText": "aligned", "ArgType": null, "is_pass": true}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 164, "segment_span": [7, 18], "characterOffsetBegin": 162, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 167, "segment_span": [7, 18], "characterOffsetBegin": 165, "originalText": "at", "ArgType": null, "before": " "}, {"index": 15, "word": "least", "lemma": "least", "after": " ", "pos": "JJS", "characterOffsetEnd": 173, "segment_span": [7, 18], "characterOffsetBegin": 168, "originalText": "least", "ArgType": null, "before": " "}, {"index": 16, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 177, "segment_span": [7, 18], "characterOffsetBegin": 174, "originalText": "one", "ArgType": null, "before": " "}, {"index": 17, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [7, 18], "characterOffsetBegin": 178, "originalText": "source", "ArgType": null, "before": " "}, {"index": 18, "word": "word", "lemma": "word", "after": "", "pos": "NN", "characterOffsetEnd": 189, "segment_span": [7, 18], "characterOffsetBegin": 185, "originalText": "word", "ArgType": null, "before": " "}, {"index": 19, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 190, "segment_span": [0, 19], "characterOffsetBegin": 189, "originalText": ";", "ArgType": null, "before": ""}, {"index": 20, "word": "see", "characterOffsetEnd": 194, "after": " ", "pos": "VB", "is_root": true, "lemma": "see", "segment_span": [19, 26], "tense": "B", "characterOffsetBegin": 191, "originalText": "see", "ArgType": null, "before": " "}, {"index": 21, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 201, "segment_span": [19, 26], "characterOffsetBegin": 195, "originalText": "Galley", "ArgType": null, "before": " "}, {"index": 22, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 204, "segment_span": [19, 26], "characterOffsetBegin": 202, "originalText": "et", "ArgType": null, "before": " "}, {"index": 23, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 208, "segment_span": [19, 26], "characterOffsetBegin": 205, "originalText": "al.", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 210, "segment_span": [19, 26], "characterOffsetBegin": 209, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 214, "segment_span": [19, 26], "characterOffsetBegin": 210, "originalText": "2006", "ArgType": null, "before": ""}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 215, "segment_span": [19, 26], "characterOffsetBegin": 214, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 219, "segment_span": [26, 31], "characterOffsetBegin": 216, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "handling", "characterOffsetEnd": 228, "after": " ", "pos": "VBG", "is_root": true, "lemma": "handle", "segment_span": [26, 31], "tense": "G", "characterOffsetBegin": 220, "originalText": "handling", "ArgType": null, "before": " "}, {"index": 29, "word": "unaligned", "lemma": "unaligned", "after": " ", "pos": "JJ", "characterOffsetEnd": 238, "segment_span": [26, 31], "characterOffsetBegin": 229, "originalText": "unaligned", "ArgType": null, "before": " "}, {"index": 30, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 245, "segment_span": [26, 31], "characterOffsetBegin": 239, "originalText": "target", "ArgType": null, "before": " "}, {"index": 31, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 251, "segment_span": [26, 31], "characterOffsetBegin": 246, "originalText": "words", "ArgType": "dobj", "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "\u0000\u0000\u0000\u0000", "pos": ".", "characterOffsetEnd": 252, "characterOffsetBegin": 251, "originalText": ".", "ArgType": null, "before": ""}], "text": "For simplicity of presentation , we assume every target word is aligned to at least one source word ; see Galley et al. ( 2006 ) for handling unaligned target words ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 5, "segment_span": [0, 11], "characterOffsetBegin": 0, "originalText": "These", "ArgType": null, "before": ""}, {"index": 2, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 9, "segment_span": [0, 11], "characterOffsetBegin": 6, "originalText": "two", "ArgType": null, "before": " "}, {"index": 3, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 11], "characterOffsetBegin": 10, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 4, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 11], "characterOffsetBegin": 16, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 25, "segment_span": [0, 11], "characterOffsetBegin": 22, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 28, "segment_span": [0, 11], "characterOffsetBegin": 26, "originalText": "be", "ArgType": null, "before": " "}, {"index": 7, "word": "represented", "characterOffsetEnd": 40, "after": " ", "pos": "VBN", "is_root": true, "lemma": "represent", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 29, "before": " ", "originalText": "represented", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [0, 11], "characterOffsetBegin": 41, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 44, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "single", "ArgType": null, "before": " "}, {"index": 11, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [11, 30], "characterOffsetBegin": 60, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "sharing", "characterOffsetEnd": 70, "after": " ", "pos": "VBG", "is_root": true, "lemma": "share", "segment_span": [11, 30], "tense": "G", "characterOffsetBegin": 63, "originalText": "sharing", "ArgType": null, "before": " "}, {"index": 14, "word": "common", "lemma": "common", "after": " ", "pos": "JJ", "characterOffsetEnd": 77, "segment_span": [11, 30], "characterOffsetBegin": 71, "originalText": "common", "ArgType": null, "before": " "}, {"index": 15, "word": "subtrees", "lemma": "subtree", "after": " ", "pos": "NNS", "characterOffsetEnd": 86, "segment_span": [11, 30], "characterOffsetBegin": 78, "originalText": "subtrees", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 91, "segment_span": [11, 30], "characterOffsetBegin": 87, "originalText": "such", "ArgType": null, "before": " "}, {"index": 17, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [11, 30], "characterOffsetBegin": 92, "originalText": "as", "ArgType": null, "before": " "}, {"index": 18, "word": "NPB0", "lemma": "npb0", "after": "", "pos": "NN", "characterOffsetEnd": 99, "segment_span": [11, 30], "characterOffsetBegin": 95, "originalText": "NPB0", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 100, "segment_span": [11, 30], "characterOffsetBegin": 99, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 102, "segment_span": [11, 30], "characterOffsetBegin": 101, "originalText": "1", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 106, "segment_span": [11, 30], "characterOffsetBegin": 103, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "VPB3", "lemma": "vpb3", "after": "", "pos": "NN", "characterOffsetEnd": 111, "segment_span": [11, 30], "characterOffsetBegin": 107, "originalText": "VPB3", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 112, "segment_span": [11, 30], "characterOffsetBegin": 111, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "6", "lemma": "6", "after": "", "pos": "CD", "characterOffsetEnd": 114, "segment_span": [11, 30], "characterOffsetBegin": 113, "originalText": "6", "ArgType": null, "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 115, "segment_span": [11, 30], "characterOffsetBegin": 114, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [11, 30], "characterOffsetBegin": 116, "originalText": "as", "ArgType": null, "before": " "}, {"index": 27, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "characterOffsetEnd": 124, "segment_span": [11, 30], "characterOffsetBegin": 119, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 28, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 127, "segment_span": [11, 30], "characterOffsetBegin": 125, "originalText": "in", "ArgType": null, "before": " "}, {"index": 29, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 134, "segment_span": [11, 30], "characterOffsetBegin": 128, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 30, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 136, "segment_span": [11, 30], "characterOffsetBegin": 135, "originalText": "4", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 137, "characterOffsetBegin": 136, "originalText": ".", "ArgType": null, "before": ""}], "text": "These two parse trees can be represented as a single forest by sharing common subtrees such as NPB0 , 1 and VPB3 , 6 , as shown in Figure 4 ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "PDT", "characterOffsetEnd": 142, "segment_span": [0, 17], "characterOffsetBegin": 138, "originalText": "Such", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 144, "segment_span": [0, 17], "characterOffsetBegin": 143, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [0, 17], "characterOffsetBegin": 145, "originalText": "forest", "ArgType": "subj", "before": " "}, {"index": 4, "word": "has", "characterOffsetEnd": 155, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 152, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 157, "segment_span": [0, 17], "characterOffsetBegin": 156, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [0, 17], "characterOffsetBegin": 158, "originalText": "structure", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 170, "segment_span": [0, 17], "characterOffsetBegin": 168, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 172, "segment_span": [0, 17], "characterOffsetBegin": 171, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "hypergraph", "lemma": "hypergraph", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [0, 17], "characterOffsetBegin": 173, "originalText": "hypergraph", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 185, "segment_span": [0, 17], "characterOffsetBegin": 184, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "Huang", "lemma": "huang", "after": " ", "pos": "NN", "characterOffsetEnd": 190, "segment_span": [0, 17], "characterOffsetBegin": 185, "originalText": "Huang", "ArgType": null, "before": ""}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 194, "segment_span": [0, 17], "characterOffsetBegin": 191, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "Chiang", "lemma": "Chiang", "after": "", "pos": "NNP", "characterOffsetEnd": 201, "segment_span": [0, 17], "characterOffsetBegin": 195, "originalText": "Chiang", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 202, "segment_span": [0, 17], "characterOffsetBegin": 201, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 207, "segment_span": [0, 17], "characterOffsetBegin": 203, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 208, "segment_span": [0, 17], "characterOffsetBegin": 207, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 209, "segment_span": [0, 17], "characterOffsetBegin": 208, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 215, "segment_span": [17, 37], "characterOffsetBegin": 210, "originalText": "where", "ArgType": null, "before": " "}, {"index": 19, "word": "items", "lemma": "item", "after": " ", "pos": "NNS", "characterOffsetEnd": 221, "segment_span": [17, 37], "characterOffsetBegin": 216, "originalText": "items", "ArgType": null, "before": " "}, {"index": 20, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 226, "segment_span": [17, 37], "characterOffsetBegin": 222, "originalText": "like", "ArgType": null, "before": " "}, {"index": 21, "word": "NP0", "lemma": "np0", "after": "", "pos": "NN", "characterOffsetEnd": 230, "segment_span": [17, 37], "characterOffsetBegin": 227, "originalText": "NP0", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 231, "segment_span": [17, 37], "characterOffsetBegin": 230, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 233, "segment_span": [22, 26], "characterOffsetBegin": 232, "originalText": "3", "ArgType": null, "before": " "}, {"index": 24, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 237, "segment_span": [22, 26], "characterOffsetBegin": 234, "originalText": "are", "ArgType": null, "before": " "}, {"index": 25, "word": "called", "characterOffsetEnd": 244, "after": " ", "pos": "VBN", "is_root": true, "lemma": "call", "segment_span": [22, 26], "tense": "N", "characterOffsetBegin": 238, "before": " ", "originalText": "called", "ArgType": null, "is_pass": true}, {"index": 26, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 250, "segment_span": [22, 26], "characterOffsetBegin": 245, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 251, "segment_span": [17, 37], "characterOffsetBegin": 250, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "whose", "lemma": "whose", "after": " ", "pos": "WP$", "characterOffsetEnd": 257, "segment_span": [27, 33], "characterOffsetBegin": 252, "originalText": "whose", "ArgType": null, "before": " "}, {"index": 29, "word": "indices", "lemma": "index", "after": " ", "pos": "NNS", "characterOffsetEnd": 265, "segment_span": [27, 33], "characterOffsetBegin": 258, "originalText": "indices", "ArgType": "subj", "before": " "}, {"index": 30, "word": "denote", "characterOffsetEnd": 272, "after": " ", "pos": "VBP", "is_root": true, "lemma": "denote", "segment_span": [27, 33], "tense": "P", "characterOffsetBegin": 266, "originalText": "denote", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 276, "segment_span": [27, 33], "characterOffsetBegin": 273, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [27, 33], "characterOffsetBegin": 277, "originalText": "source", "ArgType": null, "before": " "}, {"index": 33, "word": "span", "lemma": "span", "after": "", "pos": "NN", "characterOffsetEnd": 288, "segment_span": [27, 33], "characterOffsetBegin": 284, "originalText": "span", "ArgType": "dobj", "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 289, "segment_span": [17, 37], "characterOffsetBegin": 288, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 293, "segment_span": [17, 37], "characterOffsetBegin": 290, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 306, "segment_span": [17, 37], "characterOffsetBegin": 294, "originalText": "combinations", "ArgType": null, "before": " "}, {"index": 37, "word": "like", "lemma": "like", "after": "", "pos": "IN", "characterOffsetEnd": 311, "segment_span": [17, 37], "characterOffsetBegin": 307, "originalText": "like", "ArgType": null, "before": " "}], "text": "Such a forest has a structure of a hypergraph ( Huang and Chiang , 2005 ) , where items like NP0 , 3 are called nodes , whose indices denote the source span , and combinations like"}, {"tokens": [{"index": 1, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "we", "ArgType": "subj", "before": ""}, {"index": 2, "word": "call", "characterOffsetEnd": 7, "after": " ", "pos": "VBP", "is_root": true, "lemma": "call", "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 3, "originalText": "call", "ArgType": "verb", "before": " "}, {"index": 3, "word": "hyperedges", "lemma": "hyperedge", "after": "", "pos": "NNS", "characterOffsetEnd": 18, "segment_span": [0, 3], "characterOffsetBegin": 8, "originalText": "hyperedges", "ArgType": "dobj", "before": " "}, {"index": 4, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 19, "characterOffsetBegin": 18, "originalText": ".", "ArgType": null, "before": ""}], "text": "we call hyperedges ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 22, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "denote", "characterOffsetEnd": 29, "after": " ", "pos": "VBP", "is_root": true, "lemma": "denote", "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 23, "originalText": "denote", "ArgType": "verb", "before": " "}, {"index": 3, "word": "head", "lemma": "head", "after": "", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 11], "characterOffsetBegin": 30, "originalText": "head", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 35, "segment_span": [0, 11], "characterOffsetBegin": 34, "originalText": "(", "ArgType": null, "before": ""}, {"index": 5, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 36, "segment_span": [0, 11], "characterOffsetBegin": 35, "originalText": "e", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 37, "segment_span": [0, 11], "characterOffsetBegin": 36, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 41, "segment_span": [0, 11], "characterOffsetBegin": 38, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "tails", "lemma": "tail", "after": "", "pos": "NNS", "characterOffsetEnd": 47, "segment_span": [0, 11], "characterOffsetBegin": 42, "originalText": "tails", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 48, "segment_span": [0, 11], "characterOffsetBegin": 47, "originalText": "(", "ArgType": null, "before": ""}, {"index": 10, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 49, "segment_span": [0, 11], "characterOffsetBegin": 48, "originalText": "e", "ArgType": null, "before": ""}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 50, "segment_span": [0, 11], "characterOffsetBegin": 49, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 53, "segment_span": [11, 23], "characterOffsetBegin": 51, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 56, "segment_span": [11, 23], "characterOffsetBegin": 54, "originalText": "be", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [11, 23], "characterOffsetBegin": 57, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "consequent", "lemma": "consequent", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [11, 23], "characterOffsetBegin": 61, "originalText": "consequent", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 75, "segment_span": [11, 23], "characterOffsetBegin": 72, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "antecedant", "lemma": "antecedant", "after": " ", "pos": "JJ", "characterOffsetEnd": 86, "segment_span": [11, 23], "characterOffsetBegin": 76, "originalText": "antecedant", "ArgType": null, "before": " "}, {"index": 18, "word": "items", "lemma": "item", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [11, 23], "characterOffsetBegin": 87, "originalText": "items", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [11, 23], "characterOffsetBegin": 93, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "hyperedge", "lemma": "hyperedge", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [11, 23], "characterOffsetBegin": 96, "originalText": "hyperedge", "ArgType": null, "before": " "}, {"index": 21, "word": "e", "lemma": "e", "after": "", "pos": "SYM", "characterOffsetEnd": 107, "segment_span": [11, 23], "characterOffsetBegin": 106, "originalText": "e", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 108, "segment_span": [11, 23], "characterOffsetBegin": 107, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 121, "segment_span": [11, 23], "characterOffsetBegin": 109, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 122, "characterOffsetBegin": 121, "originalText": ".", "ArgType": null, "before": ""}], "text": "We denote head ( e ) and tails ( e ) to be the consequent and antecedant items of hyperedge e , respectively ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 126, "segment_span": [0, 2], "characterOffsetBegin": 123, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [0, 2], "characterOffsetBegin": 127, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": "", "pos": ",", "characterOffsetEnd": 135, "characterOffsetBegin": 134, "originalText": ",", "ArgType": null, "before": ""}], "text": "For example ,"}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 24], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 24], "characterOffsetBegin": 3, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "denote", "characterOffsetEnd": 14, "after": " ", "pos": "VBP", "is_root": true, "lemma": "denote", "segment_span": [0, 24], "tense": "P", "characterOffsetBegin": 8, "originalText": "denote", "ArgType": "verb", "before": " "}, {"index": 4, "word": "BS", "lemma": "bs", "after": "", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 24], "characterOffsetBegin": 15, "originalText": "BS", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 18, "segment_span": [0, 24], "characterOffsetBegin": 17, "originalText": "(", "ArgType": null, "before": ""}, {"index": 6, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 19, "segment_span": [0, 24], "characterOffsetBegin": 18, "originalText": "v", "ArgType": null, "before": ""}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 20, "segment_span": [0, 24], "characterOffsetBegin": 19, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 23, "segment_span": [0, 24], "characterOffsetBegin": 21, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 26, "segment_span": [0, 24], "characterOffsetBegin": 24, "originalText": "be", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 24], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 24], "characterOffsetBegin": 31, "originalText": "set", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [0, 24], "characterOffsetBegin": 35, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "incoming", "lemma": "incoming", "after": " ", "pos": "JJ", "characterOffsetEnd": 46, "segment_span": [0, 24], "characterOffsetBegin": 38, "originalText": "incoming", "ArgType": null, "before": " "}, {"index": 14, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 57, "segment_span": [0, 24], "characterOffsetBegin": 47, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 24], "characterOffsetBegin": 58, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 24], "characterOffsetBegin": 61, "originalText": "node", "ArgType": null, "before": " "}, {"index": 17, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 67, "segment_span": [0, 24], "characterOffsetBegin": 66, "originalText": "v", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 68, "segment_span": [0, 24], "characterOffsetBegin": 67, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "being", "lemma": "be", "after": " ", "pos": "VBG", "characterOffsetEnd": 74, "segment_span": [0, 24], "characterOffsetBegin": 69, "originalText": "being", "ArgType": null, "before": " "}, {"index": 20, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 84, "segment_span": [0, 24], "characterOffsetBegin": 75, "originalText": "different", "ArgType": null, "before": " "}, {"index": 21, "word": "ways", "lemma": "way", "after": " ", "pos": "NNS", "characterOffsetEnd": 89, "segment_span": [0, 24], "characterOffsetBegin": 85, "originalText": "ways", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 92, "segment_span": [0, 24], "characterOffsetBegin": 90, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "deriving", "lemma": "derive", "after": " ", "pos": "VBG", "characterOffsetEnd": 101, "segment_span": [0, 24], "characterOffsetBegin": 93, "originalText": "deriving", "ArgType": null, "before": " "}, {"index": 24, "word": "it", "lemma": "it", "after": "", "pos": "PRP", "characterOffsetEnd": 104, "segment_span": [0, 24], "characterOffsetBegin": 102, "originalText": "it", "ArgType": "dobj", "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 105, "characterOffsetBegin": 104, "originalText": ".", "ArgType": null, "before": ""}], "text": "We also denote BS ( v ) to be the set of incoming hyperedges of node v , being different ways of deriving it ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [0, 19], "characterOffsetBegin": 106, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [0, 19], "characterOffsetBegin": 110, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 118, "segment_span": [0, 19], "characterOffsetBegin": 117, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [0, 19], "characterOffsetBegin": 119, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 128, "segment_span": [0, 19], "characterOffsetBegin": 122, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 6, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 130, "segment_span": [0, 19], "characterOffsetBegin": 129, "originalText": "4", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 131, "segment_span": [0, 19], "characterOffsetBegin": 130, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "BS", "lemma": "bs", "after": "", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [0, 19], "characterOffsetBegin": 132, "originalText": "BS", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 135, "segment_span": [0, 19], "characterOffsetBegin": 134, "originalText": "(", "ArgType": null, "before": ""}, {"index": 10, "word": "IP0", "lemma": "ip0", "after": "", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [0, 19], "characterOffsetBegin": 135, "originalText": "IP0", "ArgType": null, "before": ""}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 139, "segment_span": [0, 19], "characterOffsetBegin": 138, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "6", "lemma": "6", "after": "", "pos": "CD", "characterOffsetEnd": 141, "segment_span": [0, 19], "characterOffsetBegin": 140, "originalText": "6", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 142, "segment_span": [0, 19], "characterOffsetBegin": 141, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 144, "segment_span": [0, 19], "characterOffsetBegin": 143, "originalText": "=", "ArgType": null, "before": " "}, {"index": 15, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 146, "segment_span": [0, 19], "characterOffsetBegin": 145, "originalText": "{", "ArgType": null, "before": " "}, {"index": 16, "word": "e1", "lemma": "e1", "after": "", "pos": "NN", "characterOffsetEnd": 148, "segment_span": [0, 19], "characterOffsetBegin": 146, "originalText": "e1", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 149, "segment_span": [0, 19], "characterOffsetBegin": 148, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "e2", "lemma": "e2", "after": "", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [0, 19], "characterOffsetBegin": 150, "originalText": "e2", "ArgType": null, "before": " "}, {"index": 19, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 153, "segment_span": [0, 19], "characterOffsetBegin": 152, "originalText": "}", "ArgType": null, "before": ""}, {"index": 20, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 154, "characterOffsetBegin": 153, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , in Figure 4 , BS ( IP0 , 6 ) = -LCB- e1 , e2 -RCB- ."}], "title": "3.1 Packed Forest"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 4, "segment_span": [0, 16], "characterOffsetBegin": 0, "originalText": "Like", "ArgType": null, "before": ""}, {"index": 2, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 7, "segment_span": [0, 16], "characterOffsetBegin": 5, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 18, "segment_span": [0, 16], "characterOffsetBegin": 8, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 4, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 16], "characterOffsetBegin": 19, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 30, "segment_span": [0, 16], "characterOffsetBegin": 29, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 33, "segment_span": [0, 16], "characterOffsetBegin": 31, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "extract", "characterOffsetEnd": 41, "after": " ", "pos": "VBP", "is_root": true, "lemma": "extract", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 34, "originalText": "extract", "ArgType": "verb", "before": " "}, {"index": 8, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 47, "segment_span": [0, 16], "characterOffsetBegin": 42, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 52, "segment_span": [0, 16], "characterOffsetBegin": 48, "originalText": "from", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 16], "characterOffsetBegin": 53, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 61, "segment_span": [0, 16], "characterOffsetBegin": 55, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 12, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 16], "characterOffsetBegin": 62, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 13, "word": "F", "lemma": "f", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 16], "characterOffsetBegin": 69, "originalText": "F", "ArgType": null, "before": " "}, {"index": 14, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 73, "segment_span": [0, 16], "characterOffsetBegin": 71, "originalText": "in", "ArgType": null, "before": " "}, {"index": 15, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 77, "segment_span": [0, 16], "characterOffsetBegin": 74, "originalText": "two", "ArgType": null, "before": " "}, {"index": 16, "word": "steps", "lemma": "step", "after": "", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [0, 16], "characterOffsetBegin": 78, "originalText": "steps", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 84, "characterOffsetBegin": 83, "originalText": ":", "ArgType": null, "before": ""}], "text": "Like in tree-based extraction , we extract rules from a packed forest F in two steps :"}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "(", "ArgType": null, "before": ""}, {"index": 2, "word": "1", "lemma": "1", "after": "", "pos": "LS", "characterOffsetEnd": 2, "segment_span": [0, 22], "characterOffsetBegin": 1, "originalText": "1", "ArgType": null, "before": ""}, {"index": 3, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 3, "segment_span": [0, 22], "characterOffsetBegin": 2, "originalText": ")", "ArgType": null, "before": ""}, {"index": 4, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 22], "characterOffsetBegin": 4, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 5, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 22], "characterOffsetBegin": 15, "originalText": "set", "ArgType": null, "before": " "}, {"index": 6, "word": "computation", "lemma": "computation", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 22], "characterOffsetBegin": 19, "originalText": "computation", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 32, "segment_span": [0, 22], "characterOffsetBegin": 31, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 37, "segment_span": [0, 22], "characterOffsetBegin": 32, "originalText": "where", "ArgType": null, "before": ""}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 40, "segment_span": [0, 22], "characterOffsetBegin": 38, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "cut", "lemma": "cut", "after": "", "pos": "VB", "characterOffsetEnd": 44, "segment_span": [0, 22], "characterOffsetBegin": 41, "originalText": "cut", "ArgType": null, "before": " "}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 45, "segment_span": [0, 22], "characterOffsetBegin": 44, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 46, "segment_span": [0, 22], "characterOffsetBegin": 45, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 50, "segment_span": [0, 22], "characterOffsetBegin": 47, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 52, "segment_span": [0, 22], "characterOffsetBegin": 51, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "2", "lemma": "2", "after": "", "pos": "LS", "characterOffsetEnd": 53, "segment_span": [0, 22], "characterOffsetBegin": 52, "originalText": "2", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 54, "segment_span": [0, 22], "characterOffsetBegin": 53, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "fragmentation", "lemma": "fragmentation", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 22], "characterOffsetBegin": 55, "originalText": "fragmentation", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 70, "segment_span": [0, 22], "characterOffsetBegin": 69, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 73, "segment_span": [0, 22], "characterOffsetBegin": 70, "originalText": "how", "ArgType": null, "before": ""}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 76, "segment_span": [0, 22], "characterOffsetBegin": 74, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "cut", "lemma": "cut", "after": "", "pos": "VB", "characterOffsetEnd": 80, "segment_span": [0, 22], "characterOffsetBegin": 77, "originalText": "cut", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 81, "segment_span": [0, 22], "characterOffsetBegin": 80, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 82, "characterOffsetBegin": 81, "originalText": ".", "ArgType": null, "before": ""}], "text": "( 1 ) admissible set computation ( where to cut ) , and ( 2 ) fragmentation ( how to cut ) ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "turns", "characterOffsetEnd": 8, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "turn", "segment_span": [0, 3], "tense": "Z", "characterOffsetBegin": 3, "originalText": "turns", "ArgType": "verb", "before": " "}, {"index": 3, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 12, "segment_span": [0, 3], "characterOffsetBegin": 9, "originalText": "out", "ArgType": null, "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 17, "segment_span": [3, 15], "characterOffsetBegin": 13, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [3, 15], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "exact", "lemma": "exact", "after": " ", "pos": "JJ", "characterOffsetEnd": 27, "segment_span": [3, 15], "characterOffsetBegin": 22, "originalText": "exact", "ArgType": null, "before": " "}, {"index": 7, "word": "formulation", "lemma": "formulation", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [3, 15], "characterOffsetBegin": 28, "originalText": "formulation", "ArgType": "subj", "before": " "}, {"index": 8, "word": "developed", "characterOffsetEnd": 49, "after": " ", "pos": "VBD", "is_root": true, "lemma": "develop", "segment_span": [3, 15], "tense": "D", "characterOffsetBegin": 40, "originalText": "developed", "ArgType": null, "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 53, "segment_span": [3, 15], "characterOffsetBegin": 50, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 64, "segment_span": [3, 15], "characterOffsetBegin": 54, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 11, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [3, 15], "characterOffsetBegin": 65, "originalText": "set", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [3, 15], "characterOffsetBegin": 69, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [3, 15], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 86, "segment_span": [3, 15], "characterOffsetBegin": 76, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 15, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [3, 15], "characterOffsetBegin": 87, "originalText": "case", "ArgType": null, "before": " "}, {"index": 16, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 95, "segment_span": [15, 24], "characterOffsetBegin": 92, "originalText": "can", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 98, "segment_span": [15, 24], "characterOffsetBegin": 96, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "applied", "characterOffsetEnd": 106, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [15, 24], "tense": "N", "characterOffsetBegin": 99, "before": " ", "originalText": "applied", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 109, "segment_span": [15, 24], "characterOffsetBegin": 107, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 111, "segment_span": [15, 24], "characterOffsetBegin": 110, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [15, 24], "characterOffsetBegin": 112, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 22, "word": "without", "lemma": "without", "after": " ", "pos": "IN", "characterOffsetEnd": 126, "segment_span": [15, 24], "characterOffsetBegin": 119, "originalText": "without", "ArgType": null, "before": " "}, {"index": 23, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 130, "segment_span": [15, 24], "characterOffsetBegin": 127, "originalText": "any", "ArgType": null, "before": " "}, {"index": 24, "word": "change", "lemma": "change", "after": "", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [15, 24], "characterOffsetBegin": 131, "originalText": "change", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 138, "characterOffsetBegin": 137, "originalText": ".", "ArgType": null, "before": ""}], "text": "It turns out that the exact formulation developed for admissible set in the tree-based case can be applied to a forest without any change ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 142, "segment_span": [0, 10], "characterOffsetBegin": 139, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "fragmentation", "lemma": "fragmentation", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [0, 10], "characterOffsetBegin": 143, "originalText": "fragmentation", "ArgType": null, "before": " "}, {"index": 3, "word": "step", "lemma": "step", "after": "", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [0, 10], "characterOffsetBegin": 157, "originalText": "step", "ArgType": "subj", "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 162, "segment_span": [0, 10], "characterOffsetBegin": 161, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "however", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 170, "segment_span": [0, 10], "characterOffsetBegin": 163, "originalText": "however", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 171, "segment_span": [0, 10], "characterOffsetBegin": 170, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "becomes", "characterOffsetEnd": 179, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "become", "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 172, "originalText": "becomes", "ArgType": "verb", "before": " "}, {"index": 8, "word": "much", "lemma": "much", "after": " ", "pos": "RB", "characterOffsetEnd": 184, "segment_span": [0, 10], "characterOffsetBegin": 180, "originalText": "much", "ArgType": null, "before": " "}, {"index": 9, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 189, "segment_span": [0, 10], "characterOffsetBegin": 185, "originalText": "more", "ArgType": null, "before": " "}, {"index": 10, "word": "involved", "lemma": "involve", "after": " ", "pos": "VBN", "characterOffsetEnd": 198, "segment_span": [0, 10], "characterOffsetBegin": 190, "originalText": "involved", "ArgType": null, "before": " "}, {"index": 11, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 204, "segment_span": [10, 23], "characterOffsetBegin": 199, "originalText": "since", "ArgType": null, "before": " "}, {"index": 12, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 207, "segment_span": [10, 23], "characterOffsetBegin": 205, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 13, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 211, "segment_span": [10, 23], "characterOffsetBegin": 208, "originalText": "now", "ArgType": null, "before": " "}, {"index": 14, "word": "face", "characterOffsetEnd": 216, "after": " ", "pos": "VBP", "is_root": true, "lemma": "face", "segment_span": [10, 23], "tense": "P", "characterOffsetBegin": 212, "originalText": "face", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 218, "segment_span": [10, 23], "characterOffsetBegin": 217, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "choice", "lemma": "choice", "after": " ", "pos": "NN", "characterOffsetEnd": 225, "segment_span": [10, 23], "characterOffsetBegin": 219, "originalText": "choice", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 228, "segment_span": [10, 23], "characterOffsetBegin": 226, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 237, "segment_span": [10, 23], "characterOffsetBegin": 229, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 19, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 243, "segment_span": [10, 23], "characterOffsetBegin": 238, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 20, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 254, "segment_span": [10, 23], "characterOffsetBegin": 244, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 21, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 257, "segment_span": [10, 23], "characterOffsetBegin": 255, "originalText": "at", "ArgType": null, "before": " "}, {"index": 22, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 262, "segment_span": [10, 23], "characterOffsetBegin": 258, "originalText": "each", "ArgType": null, "before": " "}, {"index": 23, "word": "node", "lemma": "node", "after": "", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [10, 23], "characterOffsetBegin": 263, "originalText": "node", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 268, "characterOffsetBegin": 267, "originalText": ".", "ArgType": null, "before": ""}], "text": "The fragmentation step , however , becomes much more involved since we now face a choice of multiple parse hyperedges at each node ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 271, "segment_span": [0, 7], "characterOffsetBegin": 269, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 277, "segment_span": [0, 7], "characterOffsetBegin": 272, "originalText": "other", "ArgType": null, "before": " "}, {"index": 3, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 283, "segment_span": [0, 7], "characterOffsetBegin": 278, "originalText": "words", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 284, "segment_span": [0, 7], "characterOffsetBegin": 283, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 287, "segment_span": [0, 7], "characterOffsetBegin": 285, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 6, "word": "becomes", "characterOffsetEnd": 295, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "become", "segment_span": [0, 7], "tense": "Z", "characterOffsetBegin": 288, "originalText": "becomes", "ArgType": "verb", "before": " "}, {"index": 7, "word": "nondeterministic", "lemma": "nondeterministic", "after": " ", "pos": "JJ", "characterOffsetEnd": 312, "segment_span": [0, 7], "characterOffsetBegin": 296, "originalText": "nondeterministic", "ArgType": null, "before": " "}, {"index": 8, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 316, "segment_span": [7, 18], "characterOffsetBegin": 313, "originalText": "how", "ArgType": null, "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 319, "segment_span": [7, 18], "characterOffsetBegin": 317, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "``", "lemma": "``", "after": "", "pos": "``", "characterOffsetEnd": 321, "segment_span": [7, 18], "characterOffsetBegin": 320, "originalText": "\u00e2\u0080\u009c", "ArgType": null, "before": " "}, {"index": 11, "word": "cut", "characterOffsetEnd": 324, "after": "", "pos": "VB", "is_root": true, "lemma": "cut", "segment_span": [7, 18], "tense": "B", "characterOffsetBegin": 321, "originalText": "cut", "ArgType": null, "before": ""}, {"index": 12, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 325, "segment_span": [7, 18], "characterOffsetBegin": 324, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 327, "segment_span": [7, 18], "characterOffsetBegin": 326, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 334, "segment_span": [7, 18], "characterOffsetBegin": 328, "originalText": "forest", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 339, "segment_span": [7, 18], "characterOffsetBegin": 335, "originalText": "into", "ArgType": null, "before": " "}, {"index": 16, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 344, "segment_span": [7, 18], "characterOffsetBegin": 340, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 17, "word": "fragments", "lemma": "fragment", "after": "", "pos": "NNS", "characterOffsetEnd": 354, "segment_span": [7, 18], "characterOffsetBegin": 345, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 355, "segment_span": [7, 18], "characterOffsetBegin": 354, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 361, "segment_span": [18, 35], "characterOffsetBegin": 356, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 20, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 364, "segment_span": [18, 35], "characterOffsetBegin": 362, "originalText": "is", "ArgType": null, "before": " "}, {"index": 21, "word": "analogous", "lemma": "analogous", "after": " ", "pos": "JJ", "characterOffsetEnd": 374, "segment_span": [18, 35], "characterOffsetBegin": 365, "originalText": "analogous", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 377, "segment_span": [18, 35], "characterOffsetBegin": 375, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 381, "segment_span": [18, 35], "characterOffsetBegin": 378, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "non-deterministic", "lemma": "non-deterministic", "after": " ", "pos": "JJ", "characterOffsetEnd": 399, "segment_span": [18, 35], "characterOffsetBegin": 382, "originalText": "non-deterministic", "ArgType": null, "before": " "}, {"index": 25, "word": "pattern-match", "lemma": "pattern-match", "after": " ", "pos": "NN", "characterOffsetEnd": 413, "segment_span": [18, 35], "characterOffsetBegin": 400, "originalText": "pattern-match", "ArgType": null, "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 416, "segment_span": [18, 35], "characterOffsetBegin": 414, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 429, "segment_span": [18, 35], "characterOffsetBegin": 417, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 28, "word": "decoding", "lemma": "decoding", "after": " ", "pos": "NN", "characterOffsetEnd": 438, "segment_span": [18, 35], "characterOffsetBegin": 430, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 440, "segment_span": [18, 35], "characterOffsetBegin": 439, "originalText": "(", "ArgType": null, "before": " "}, {"index": 30, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 442, "segment_span": [18, 35], "characterOffsetBegin": 440, "originalText": "Mi", "ArgType": null, "before": ""}, {"index": 31, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 445, "segment_span": [18, 35], "characterOffsetBegin": 443, "originalText": "et", "ArgType": null, "before": " "}, {"index": 32, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 449, "segment_span": [18, 35], "characterOffsetBegin": 446, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 450, "segment_span": [18, 35], "characterOffsetBegin": 449, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 455, "segment_span": [18, 35], "characterOffsetBegin": 451, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 35, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 456, "segment_span": [18, 35], "characterOffsetBegin": 455, "originalText": ")", "ArgType": null, "before": ""}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 457, "characterOffsetBegin": 456, "originalText": ".", "ArgType": null, "before": ""}], "text": "In other words , it becomes nondeterministic how to `` cut '' a forest into tree fragments , which is analogous to the non-deterministic pattern-match in forest-based decoding ( Mi et al. , 2008 ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 461, "segment_span": [0, 17], "characterOffsetBegin": 458, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 469, "segment_span": [0, 17], "characterOffsetBegin": 462, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 475, "segment_span": [0, 17], "characterOffsetBegin": 470, "originalText": "there", "ArgType": null, "before": " "}, {"index": 4, "word": "are", "characterOffsetEnd": 479, "after": " ", "pos": "VBP", "is_root": true, "lemma": "be", "segment_span": [0, 17], "tense": "P", "characterOffsetBegin": 476, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 5, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 483, "segment_span": [0, 17], "characterOffsetBegin": 480, "originalText": "two", "ArgType": null, "before": " "}, {"index": 6, "word": "parse", "lemma": "parse", "after": " ", "pos": "JJ", "characterOffsetEnd": 489, "segment_span": [0, 17], "characterOffsetBegin": 484, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 7, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 500, "segment_span": [0, 17], "characterOffsetBegin": 490, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 8, "word": "e1", "lemma": "e1", "after": " ", "pos": "NN", "characterOffsetEnd": 503, "segment_span": [0, 17], "characterOffsetBegin": 501, "originalText": "e1", "ArgType": "subj", "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 507, "segment_span": [0, 17], "characterOffsetBegin": 504, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "e2", "lemma": "e2", "after": " ", "pos": "NN", "characterOffsetEnd": 510, "segment_span": [0, 17], "characterOffsetBegin": 508, "originalText": "e2", "ArgType": null, "before": " "}, {"index": 11, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 513, "segment_span": [0, 17], "characterOffsetBegin": 511, "originalText": "at", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 517, "segment_span": [0, 17], "characterOffsetBegin": 514, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 522, "segment_span": [0, 17], "characterOffsetBegin": 518, "originalText": "root", "ArgType": null, "before": " "}, {"index": 14, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 527, "segment_span": [0, 17], "characterOffsetBegin": 523, "originalText": "node", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 530, "segment_span": [0, 17], "characterOffsetBegin": 528, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 537, "segment_span": [0, 17], "characterOffsetBegin": 531, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 17, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 539, "segment_span": [0, 17], "characterOffsetBegin": 538, "originalText": "4", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 540, "characterOffsetBegin": 539, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example there are two parse hyperedges e1 and e2 at the root node in Figure 4 ."}, {"tokens": [{"index": 1, "word": "When", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 545, "segment_span": [0, 10], "characterOffsetBegin": 541, "originalText": "When", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 548, "segment_span": [0, 10], "characterOffsetBegin": 546, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "follow", "characterOffsetEnd": 555, "after": " ", "pos": "VBP", "is_root": true, "lemma": "follow", "segment_span": [0, 10], "tense": "P", "characterOffsetBegin": 549, "originalText": "follow", "ArgType": null, "before": " "}, {"index": 4, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 559, "segment_span": [0, 10], "characterOffsetBegin": 556, "originalText": "one", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 562, "segment_span": [0, 10], "characterOffsetBegin": 560, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "them", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 567, "segment_span": [0, 10], "characterOffsetBegin": 563, "originalText": "them", "ArgType": null, "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 570, "segment_span": [0, 10], "characterOffsetBegin": 568, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "grow", "lemma": "grow", "after": " ", "pos": "VB", "characterOffsetEnd": 575, "segment_span": [0, 10], "characterOffsetBegin": 571, "originalText": "grow", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 577, "segment_span": [0, 10], "characterOffsetBegin": 576, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 586, "segment_span": [0, 10], "characterOffsetBegin": 578, "originalText": "fragment", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 587, "segment_span": [10, 23], "characterOffsetBegin": 586, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 593, "segment_span": [10, 23], "characterOffsetBegin": 588, "originalText": "there", "ArgType": null, "before": " "}, {"index": 13, "word": "again", "lemma": "again", "after": " ", "pos": "RB", "characterOffsetEnd": 599, "segment_span": [10, 23], "characterOffsetBegin": 594, "originalText": "again", "ArgType": null, "before": " "}, {"index": 14, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 604, "segment_span": [10, 23], "characterOffsetBegin": 600, "originalText": "will", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 607, "segment_span": [10, 23], "characterOffsetBegin": 605, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "multiple", "lemma": "multiple", "after": " ", "pos": "JJ", "characterOffsetEnd": 616, "segment_span": [10, 23], "characterOffsetBegin": 608, "originalText": "multiple", "ArgType": null, "before": " "}, {"index": 17, "word": "choices", "lemma": "choice", "after": " ", "pos": "NNS", "characterOffsetEnd": 624, "segment_span": [10, 23], "has_aux": true, "characterOffsetBegin": 617, "originalText": "choices", "ArgType": null, "before": " "}, {"index": 18, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 627, "segment_span": [10, 23], "characterOffsetBegin": 625, "originalText": "at", "ArgType": null, "before": " "}, {"index": 19, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 632, "segment_span": [10, 23], "characterOffsetBegin": 628, "originalText": "each", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 635, "segment_span": [10, 23], "characterOffsetBegin": 633, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 639, "segment_span": [10, 23], "characterOffsetBegin": 636, "originalText": "its", "ArgType": null, "before": " "}, {"index": 22, "word": "tail", "lemma": "tail", "after": " ", "pos": "NN", "characterOffsetEnd": 644, "segment_span": [10, 23], "characterOffsetBegin": 640, "originalText": "tail", "ArgType": null, "before": " "}, {"index": 23, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 650, "segment_span": [10, 23], "characterOffsetBegin": 645, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 651, "characterOffsetBegin": 650, "originalText": ".", "ArgType": null, "before": ""}], "text": "When we follow one of them to grow a fragment , there again will be multiple choices at each of its tail nodes ."}, {"tokens": [{"index": 1, "word": "Like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 656, "segment_span": [0, 12], "characterOffsetBegin": 652, "originalText": "Like", "ArgType": null, "before": " "}, {"index": 2, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 659, "segment_span": [0, 12], "characterOffsetBegin": 657, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 670, "segment_span": [0, 12], "characterOffsetBegin": 660, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 4, "word": "case", "lemma": "case", "after": "", "pos": "NN", "characterOffsetEnd": 675, "segment_span": [0, 12], "characterOffsetBegin": 671, "originalText": "case", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 676, "segment_span": [0, 12], "characterOffsetBegin": 675, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 678, "segment_span": [0, 12], "characterOffsetBegin": 677, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 687, "segment_span": [0, 12], "characterOffsetBegin": 679, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 690, "segment_span": [0, 12], "characterOffsetBegin": 688, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "said", "characterOffsetEnd": 695, "after": " ", "pos": "VBN", "is_root": true, "lemma": "say", "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 691, "before": " ", "originalText": "said", "ArgType": null, "is_pass": true}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 698, "segment_span": [0, 12], "characterOffsetBegin": 696, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 701, "segment_span": [0, 12], "characterOffsetBegin": 699, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 710, "segment_span": [0, 12], "characterOffsetBegin": 702, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 13, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 713, "segment_span": [12, 19], "characterOffsetBegin": 711, "originalText": "if", "ArgType": null, "before": " "}, {"index": 14, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 717, "segment_span": [12, 19], "characterOffsetBegin": 714, "originalText": "all", "ArgType": null, "before": " "}, {"index": 15, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 721, "segment_span": [12, 19], "characterOffsetBegin": 718, "originalText": "its", "ArgType": null, "before": " "}, {"index": 16, "word": "leaf", "lemma": "leaf", "after": " ", "pos": "NN", "characterOffsetEnd": 726, "segment_span": [12, 19], "characterOffsetBegin": 722, "originalText": "leaf", "ArgType": null, "before": " "}, {"index": 17, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 732, "segment_span": [12, 19], "characterOffsetBegin": 727, "originalText": "nodes", "ArgType": "subj", "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 736, "segment_span": [12, 19], "characterOffsetBegin": 733, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "admissible", "lemma": "admissible", "after": "", "pos": "JJ", "characterOffsetEnd": 747, "segment_span": [12, 19], "characterOffsetBegin": 737, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 748, "characterOffsetBegin": 747, "originalText": ".", "ArgType": null, "before": ""}], "text": "Like in tree-based case , a fragment is said to be complete if all its leaf nodes are admissible ."}, {"tokens": [{"index": 1, "word": "Otherwise", "lemma": "otherwise", "after": "", "pos": "RB", "characterOffsetEnd": 758, "segment_span": [0, 14], "characterOffsetBegin": 749, "originalText": "Otherwise", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 759, "segment_span": [0, 14], "characterOffsetBegin": 758, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 762, "segment_span": [0, 14], "characterOffsetBegin": 760, "originalText": "an", "ArgType": null, "before": " "}, {"index": 4, "word": "incomplete", "lemma": "incomplete", "after": " ", "pos": "JJ", "characterOffsetEnd": 773, "segment_span": [0, 14], "characterOffsetBegin": 763, "originalText": "incomplete", "ArgType": null, "before": " "}, {"index": 5, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 782, "segment_span": [0, 14], "characterOffsetBegin": 774, "originalText": "fragment", "ArgType": "subj", "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 786, "segment_span": [0, 14], "characterOffsetBegin": 783, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "grow", "characterOffsetEnd": 791, "after": " ", "pos": "VB", "is_root": true, "lemma": "grow", "segment_span": [0, 14], "tense": "B", "characterOffsetBegin": 787, "originalText": "grow", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 794, "segment_span": [0, 14], "characterOffsetBegin": 792, "originalText": "at", "ArgType": null, "before": " "}, {"index": 9, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 798, "segment_span": [0, 14], "characterOffsetBegin": 795, "originalText": "any", "ArgType": null, "before": " "}, {"index": 10, "word": "non-admissible", "lemma": "non-admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 813, "segment_span": [0, 14], "characterOffsetBegin": 799, "originalText": "non-admissible", "ArgType": null, "before": " "}, {"index": 11, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 822, "segment_span": [0, 14], "characterOffsetBegin": 814, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 12, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 827, "segment_span": [0, 14], "characterOffsetBegin": 823, "originalText": "node", "ArgType": null, "before": " "}, {"index": 13, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 829, "segment_span": [0, 14], "characterOffsetBegin": 828, "originalText": "v", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 830, "segment_span": [0, 14], "characterOffsetBegin": 829, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 836, "segment_span": [14, 27], "characterOffsetBegin": 831, "originalText": "where", "ArgType": null, "before": " "}, {"index": 16, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 846, "segment_span": [14, 27], "characterOffsetBegin": 837, "originalText": "following", "ArgType": null, "before": " "}, {"index": 17, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 851, "segment_span": [14, 27], "characterOffsetBegin": 847, "originalText": "each", "ArgType": null, "before": " "}, {"index": 18, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 857, "segment_span": [14, 27], "characterOffsetBegin": 852, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 19, "word": "hyperedge", "lemma": "hyperedge", "after": " ", "pos": "NN", "characterOffsetEnd": 867, "segment_span": [14, 27], "characterOffsetBegin": 858, "originalText": "hyperedge", "ArgType": null, "before": " "}, {"index": 20, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 870, "segment_span": [14, 27], "characterOffsetBegin": 868, "originalText": "at", "ArgType": null, "before": " "}, {"index": 21, "word": "v", "lemma": "v", "after": " ", "pos": "LS", "characterOffsetEnd": 872, "segment_span": [14, 27], "characterOffsetBegin": 871, "originalText": "v", "ArgType": null, "before": " "}, {"index": 22, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 877, "segment_span": [14, 27], "characterOffsetBegin": 873, "originalText": "will", "ArgType": null, "before": " "}, {"index": 23, "word": "split", "characterOffsetEnd": 883, "after": " ", "pos": "VB", "is_root": true, "lemma": "split", "segment_span": [14, 27], "tense": "B", "characterOffsetBegin": 878, "originalText": "split", "has_aux": true, "ArgType": null, "before": " "}, {"index": 24, "word": "off", "lemma": "off", "after": " ", "pos": "RP", "characterOffsetEnd": 887, "segment_span": [14, 27], "characterOffsetBegin": 884, "originalText": "off", "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 889, "segment_span": [14, 27], "characterOffsetBegin": 888, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 893, "segment_span": [14, 27], "characterOffsetBegin": 890, "originalText": "new", "ArgType": null, "before": " "}, {"index": 27, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 902, "segment_span": [14, 27], "characterOffsetBegin": 894, "originalText": "fragment", "ArgType": "dobj", "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 903, "characterOffsetBegin": 902, "originalText": ".", "ArgType": null, "before": ""}], "text": "Otherwise , an incomplete fragment can grow at any non-admissible frontier node v , where following each parse hyperedge at v will split off a new fragment ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 907, "segment_span": [0, 39], "characterOffsetBegin": 904, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 915, "segment_span": [0, 39], "characterOffsetBegin": 908, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 916, "segment_span": [0, 39], "characterOffsetBegin": 915, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 926, "segment_span": [0, 39], "characterOffsetBegin": 917, "originalText": "following", "ArgType": null, "before": " "}, {"index": 5, "word": "e2", "lemma": "e2", "after": " ", "pos": "NN", "characterOffsetEnd": 929, "segment_span": [0, 39], "characterOffsetBegin": 927, "originalText": "e2", "ArgType": "subj", "before": " "}, {"index": 6, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 932, "segment_span": [0, 39], "characterOffsetBegin": 930, "originalText": "at", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 936, "segment_span": [0, 39], "characterOffsetBegin": 933, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 941, "segment_span": [0, 39], "characterOffsetBegin": 937, "originalText": "root", "ArgType": null, "before": " "}, {"index": 9, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 946, "segment_span": [0, 39], "characterOffsetBegin": 942, "originalText": "node", "ArgType": null, "before": " "}, {"index": 10, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 951, "segment_span": [0, 39], "characterOffsetBegin": 947, "originalText": "will", "ArgType": null, "before": " "}, {"index": 11, "word": "immediately", "lemma": "immediately", "after": " ", "pos": "RB", "characterOffsetEnd": 963, "segment_span": [0, 39], "characterOffsetBegin": 952, "originalText": "immediately", "ArgType": null, "before": " "}, {"index": 12, "word": "lead", "characterOffsetEnd": 968, "after": " ", "pos": "VB", "is_root": true, "lemma": "lead", "segment_span": [0, 39], "tense": "B", "characterOffsetBegin": 964, "originalText": "lead", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 13, "word": "us", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 971, "segment_span": [0, 39], "characterOffsetBegin": 969, "originalText": "us", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 974, "segment_span": [0, 39], "characterOffsetBegin": 972, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 978, "segment_span": [0, 39], "characterOffsetBegin": 975, "originalText": "two", "ArgType": null, "before": " "}, {"index": 16, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 989, "segment_span": [0, 39], "characterOffsetBegin": 979, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 17, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 995, "segment_span": [0, 39], "characterOffsetBegin": 990, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 996, "segment_span": [0, 39], "characterOffsetBegin": 995, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "NPB0", "lemma": "npb0", "after": "", "pos": "NN", "characterOffsetEnd": 1001, "segment_span": [0, 39], "characterOffsetBegin": 997, "originalText": "NPB0", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1002, "segment_span": [0, 39], "characterOffsetBegin": 1001, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 1004, "segment_span": [0, 39], "characterOffsetBegin": 1003, "originalText": "1", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1008, "segment_span": [0, 39], "characterOffsetBegin": 1005, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "VP1", "lemma": "vp1", "after": "", "pos": "NN", "characterOffsetEnd": 1012, "segment_span": [0, 39], "characterOffsetBegin": 1009, "originalText": "VP1", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1013, "segment_span": [0, 39], "characterOffsetBegin": 1012, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 1015, "segment_span": [0, 39], "characterOffsetBegin": 1014, "originalText": "6", "ArgType": null, "before": " "}, {"index": 26, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1017, "segment_span": [0, 39], "characterOffsetBegin": 1016, "originalText": "(", "ArgType": null, "before": " "}, {"index": 27, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1019, "segment_span": [0, 39], "characterOffsetBegin": 1017, "originalText": "we", "ArgType": "subj", "before": ""}, {"index": 28, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 1024, "segment_span": [0, 39], "characterOffsetBegin": 1020, "originalText": "will", "ArgType": null, "before": " "}, {"index": 29, "word": "highlight", "lemma": "highlight", "after": " ", "pos": "VB", "characterOffsetEnd": 1034, "segment_span": [0, 39], "characterOffsetBegin": 1025, "originalText": "highlight", "ArgType": null, "before": " "}, {"index": 30, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 1045, "segment_span": [0, 39], "characterOffsetBegin": 1035, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 31, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 1051, "segment_span": [0, 39], "characterOffsetBegin": 1046, "originalText": "nodes", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1054, "segment_span": [0, 39], "characterOffsetBegin": 1052, "originalText": "by", "ArgType": null, "before": " "}, {"index": 33, "word": "gray", "lemma": "gray", "after": " ", "pos": "JJ", "characterOffsetEnd": 1059, "segment_span": [0, 39], "characterOffsetBegin": 1055, "originalText": "gray", "ArgType": null, "before": " "}, {"index": 34, "word": "shades", "lemma": "shades", "after": " ", "pos": "NNS", "characterOffsetEnd": 1066, "segment_span": [0, 39], "characterOffsetBegin": 1060, "originalText": "shades", "ArgType": null, "before": " "}, {"index": 35, "word": "Algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 1076, "segment_span": [0, 39], "characterOffsetBegin": 1067, "originalText": "Algorithm", "ArgType": null, "before": " "}, {"index": 36, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 1078, "segment_span": [0, 39], "characterOffsetBegin": 1077, "originalText": "1", "ArgType": null, "before": " "}, {"index": 37, "word": "Forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1091, "segment_span": [0, 39], "characterOffsetBegin": 1079, "originalText": "Forest-based", "ArgType": null, "before": " "}, {"index": 38, "word": "Rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 1096, "segment_span": [0, 39], "characterOffsetBegin": 1092, "originalText": "Rule", "ArgType": null, "before": " "}, {"index": 39, "word": "Extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 1107, "segment_span": [0, 39], "characterOffsetBegin": 1097, "originalText": "Extraction", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": "\u0000\u0000\u0000\u0000", "pos": ".", "characterOffsetEnd": 1108, "characterOffsetBegin": 1107, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , following e2 at the root node will immediately lead us to two admissible nodes , NPB0 , 1 and VP1 , 6 ( we will highlight admissible nodes by gray shades Algorithm 1 Forest-based Rule Extraction ."}, {"tokens": [{"index": 1, "word": "Input", "lemma": "input", "after": "", "pos": "NN", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Input", "ArgType": null, "before": ""}, {"index": 2, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 6, "segment_span": [0, 20], "characterOffsetBegin": 5, "originalText": ":", "ArgType": null, "before": ""}, {"index": 3, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 20], "characterOffsetBegin": 7, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 4, "word": "F", "lemma": "f", "after": "", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 20], "characterOffsetBegin": 14, "originalText": "F", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 20], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 17, "originalText": "target", "ArgType": null, "before": " "}, {"index": 7, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 8, "word": "T", "lemma": "t", "after": "", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 20], "characterOffsetBegin": 33, "originalText": "T", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 20], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 39, "segment_span": [0, 20], "characterOffsetBegin": 36, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "alignment", "lemma": "alignment", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 20], "characterOffsetBegin": 40, "originalText": "alignment", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 51, "segment_span": [0, 20], "characterOffsetBegin": 50, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "Output", "lemma": "output", "after": "", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 20], "characterOffsetBegin": 52, "originalText": "Output", "ArgType": null, "before": " "}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 59, "segment_span": [0, 20], "characterOffsetBegin": 58, "originalText": ":", "ArgType": null, "before": ""}, {"index": 15, "word": "minimal", "lemma": "minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [0, 20], "characterOffsetBegin": 60, "originalText": "minimal", "ArgType": null, "before": " "}, {"index": 16, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 20], "characterOffsetBegin": 68, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 17, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 76, "segment_span": [0, 20], "characterOffsetBegin": 73, "originalText": "set", "ArgType": null, "before": " "}, {"index": 18, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 20], "characterOffsetBegin": 77, "originalText": "R", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 80, "segment_span": [0, 20], "characterOffsetBegin": 79, "originalText": "1", "ArgType": null, "before": " "}, {"index": 20, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 81, "segment_span": [0, 20], "characterOffsetBegin": 80, "originalText": ":", "ArgType": null, "before": ""}, {"index": 21, "word": "admset", "lemma": "admset", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [20, 53], "characterOffsetBegin": 82, "originalText": "admset", "ArgType": null, "before": " "}, {"index": 22, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "CD", "characterOffsetEnd": 90, "segment_span": [20, 53], "characterOffsetBegin": 89, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 23, "word": "ADMISSIBLE", "lemma": "admissible", "after": "", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [20, 53], "characterOffsetBegin": 91, "originalText": "ADMISSIBLE", "ArgType": "subj", "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 102, "segment_span": [20, 53], "characterOffsetBegin": 101, "originalText": "(", "ArgType": null, "before": ""}, {"index": 25, "word": "F", "lemma": "f", "after": "", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [20, 53], "characterOffsetBegin": 102, "originalText": "F", "ArgType": null, "before": ""}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 104, "segment_span": [20, 53], "characterOffsetBegin": 103, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "T", "lemma": "t", "after": "", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [20, 53], "characterOffsetBegin": 105, "originalText": "T", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 107, "segment_span": [20, 53], "characterOffsetBegin": 106, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "a", "lemma": "a", "after": "", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [20, 53], "characterOffsetBegin": 108, "originalText": "a", "ArgType": null, "before": " "}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 110, "segment_span": [20, 53], "characterOffsetBegin": 109, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 112, "segment_span": [20, 53], "characterOffsetBegin": 111, "originalText": ">", "ArgType": null, "before": " "}, {"index": 32, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 123, "segment_span": [20, 53], "characterOffsetBegin": 113, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 33, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 127, "segment_span": [20, 53], "characterOffsetBegin": 124, "originalText": "set", "ArgType": null, "before": " "}, {"index": 34, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 129, "segment_span": [20, 53], "characterOffsetBegin": 128, "originalText": "2", "ArgType": null, "before": " "}, {"index": 35, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 130, "segment_span": [20, 53], "characterOffsetBegin": 129, "originalText": ":", "ArgType": null, "before": ""}, {"index": 36, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 134, "segment_span": [20, 53], "characterOffsetBegin": 131, "originalText": "for", "ArgType": null, "before": " "}, {"index": 37, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 139, "segment_span": [20, 53], "characterOffsetBegin": 135, "originalText": "each", "ArgType": null, "before": " "}, {"index": 38, "word": "v", "lemma": "v", "after": " ", "pos": "LS", "characterOffsetEnd": 141, "segment_span": [37, 52], "characterOffsetBegin": 140, "originalText": "v", "ArgType": null, "before": " "}, {"index": 39, "word": "\u00e2\u0088\u0088", "lemma": "\u00e2\u0088\u0088", "after": " ", "pos": "FW", "characterOffsetEnd": 143, "segment_span": [37, 52], "characterOffsetBegin": 142, "originalText": "\u00e2\u0088\u0088", "ArgType": null, "before": " "}, {"index": 40, "word": "admset", "lemma": "admset", "after": " ", "pos": "FW", "characterOffsetEnd": 150, "segment_span": [37, 52], "characterOffsetBegin": 144, "originalText": "admset", "ArgType": "subj", "before": " "}, {"index": 41, "word": "do", "characterOffsetEnd": 153, "after": " ", "pos": "VBP", "is_root": true, "lemma": "do", "segment_span": [37, 52], "tense": "P", "characterOffsetBegin": 151, "originalText": "do", "ArgType": null, "before": " "}, {"index": 42, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 155, "segment_span": [37, 52], "characterOffsetBegin": 154, "originalText": "3", "ArgType": "dobj", "before": " "}, {"index": 43, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 156, "segment_span": [37, 52], "characterOffsetBegin": 155, "originalText": ":", "ArgType": null, "before": ""}, {"index": 44, "word": "open", "lemma": "open", "after": " ", "pos": "JJ", "characterOffsetEnd": 161, "segment_span": [37, 52], "characterOffsetBegin": 157, "originalText": "open", "ArgType": null, "before": " "}, {"index": 45, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "NN", "characterOffsetEnd": 163, "segment_span": [37, 52], "characterOffsetBegin": 162, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 46, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 165, "segment_span": [37, 52], "characterOffsetBegin": 164, "originalText": "0", "ArgType": null, "before": " "}, {"index": 47, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 167, "segment_span": [37, 52], "characterOffsetBegin": 166, "originalText": ">", "ArgType": null, "before": " "}, {"index": 48, "word": "queue", "lemma": "queue", "after": " ", "pos": "NN", "characterOffsetEnd": 173, "segment_span": [37, 52], "characterOffsetBegin": 168, "originalText": "queue", "ArgType": null, "before": " "}, {"index": 49, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 176, "segment_span": [37, 52], "characterOffsetBegin": 174, "originalText": "of", "ArgType": null, "before": " "}, {"index": 50, "word": "active", "lemma": "active", "after": " ", "pos": "JJ", "characterOffsetEnd": 183, "segment_span": [37, 52], "characterOffsetBegin": 177, "originalText": "active", "ArgType": null, "before": " "}, {"index": 51, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 193, "segment_span": [37, 52], "characterOffsetBegin": 184, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 52, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 195, "segment_span": [37, 52], "characterOffsetBegin": 194, "originalText": "4", "ArgType": null, "before": " "}, {"index": 53, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 196, "segment_span": [20, 53], "characterOffsetBegin": 195, "originalText": ":", "ArgType": null, "before": ""}, {"index": 54, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 200, "segment_span": [53, 189], "characterOffsetBegin": 197, "originalText": "for", "ArgType": null, "before": " "}, {"index": 55, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 205, "segment_span": [53, 189], "characterOffsetBegin": 201, "originalText": "each", "ArgType": null, "before": " "}, {"index": 56, "word": "e", "lemma": "e", "after": " ", "pos": "SYM", "characterOffsetEnd": 207, "segment_span": [53, 189], "characterOffsetBegin": 206, "originalText": "e", "ArgType": null, "before": " "}, {"index": 57, "word": "\u00e2\u0088\u0088", "lemma": "\u00e2\u0088\u0088", "after": " ", "pos": "CD", "characterOffsetEnd": 209, "segment_span": [53, 189], "characterOffsetBegin": 208, "originalText": "\u00e2\u0088\u0088", "ArgType": null, "before": " "}, {"index": 58, "word": "BS", "lemma": "bs", "after": "", "pos": "NN", "characterOffsetEnd": 212, "segment_span": [53, 189], "characterOffsetBegin": 210, "originalText": "BS", "ArgType": "subj", "before": " "}, {"index": 59, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 213, "segment_span": [53, 189], "characterOffsetBegin": 212, "originalText": "(", "ArgType": null, "before": ""}, {"index": 60, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 214, "segment_span": [53, 189], "characterOffsetBegin": 213, "originalText": "v", "ArgType": null, "before": ""}, {"index": 61, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 215, "segment_span": [53, 189], "characterOffsetBegin": 214, "originalText": ")", "ArgType": null, "before": ""}, {"index": 62, "word": "do", "characterOffsetEnd": 218, "after": " ", "pos": "VBP", "is_root": true, "lemma": "do", "segment_span": [53, 189], "tense": "P", "characterOffsetBegin": 216, "originalText": "do", "ArgType": null, "before": " "}, {"index": 63, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 220, "segment_span": [53, 189], "characterOffsetBegin": 219, "originalText": ">", "ArgType": null, "before": " "}, {"index": 64, "word": "incoming", "lemma": "incoming", "after": " ", "pos": "JJ", "characterOffsetEnd": 229, "segment_span": [53, 189], "characterOffsetBegin": 221, "originalText": "incoming", "ArgType": null, "before": " "}, {"index": 65, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 240, "segment_span": [53, 189], "characterOffsetBegin": 230, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 66, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 242, "segment_span": [53, 189], "characterOffsetBegin": 241, "originalText": "5", "ArgType": null, "before": " "}, {"index": 67, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 243, "segment_span": [53, 189], "characterOffsetBegin": 242, "originalText": ":", "ArgType": null, "before": ""}, {"index": 68, "word": "front", "lemma": "front", "after": " ", "pos": "JJ", "characterOffsetEnd": 249, "segment_span": [53, 189], "characterOffsetBegin": 244, "originalText": "front", "ArgType": null, "before": " "}, {"index": 69, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "NN", "characterOffsetEnd": 251, "segment_span": [53, 189], "characterOffsetBegin": 250, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 70, "word": "tails", "lemma": "tail", "after": "", "pos": "NNS", "characterOffsetEnd": 257, "segment_span": [53, 189], "characterOffsetBegin": 252, "originalText": "tails", "ArgType": null, "before": " "}, {"index": 71, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 258, "segment_span": [53, 189], "characterOffsetBegin": 257, "originalText": "(", "ArgType": null, "before": ""}, {"index": 72, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 259, "segment_span": [53, 189], "characterOffsetBegin": 258, "originalText": "e", "ArgType": null, "before": ""}, {"index": 73, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 260, "segment_span": [53, 189], "characterOffsetBegin": 259, "originalText": ")", "ArgType": null, "before": ""}, {"index": 74, "word": "\\", "lemma": "\\", "after": " ", "pos": "CD", "characterOffsetEnd": 262, "segment_span": [53, 189], "characterOffsetBegin": 261, "originalText": "\\", "ArgType": null, "before": " "}, {"index": 75, "word": "admset", "lemma": "admset", "after": " ", "pos": "JJ", "characterOffsetEnd": 269, "segment_span": [53, 189], "characterOffsetBegin": 263, "originalText": "admset", "ArgType": null, "before": " "}, {"index": 76, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 271, "segment_span": [53, 189], "characterOffsetBegin": 270, "originalText": ">", "ArgType": null, "before": " "}, {"index": 77, "word": "initial", "lemma": "initial", "after": " ", "pos": "JJ", "characterOffsetEnd": 279, "segment_span": [53, 189], "characterOffsetBegin": 272, "originalText": "initial", "ArgType": null, "before": " "}, {"index": 78, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 288, "segment_span": [53, 189], "characterOffsetBegin": 280, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 79, "word": "6", "lemma": "6", "after": "", "pos": "CD", "characterOffsetEnd": 290, "segment_span": [53, 189], "characterOffsetBegin": 289, "originalText": "6", "ArgType": null, "before": " "}, {"index": 80, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 291, "segment_span": [53, 189], "characterOffsetBegin": 290, "originalText": ":", "ArgType": null, "before": ""}, {"index": 81, "word": "open.append", "lemma": "open.append", "after": "", "pos": "NN", "characterOffsetEnd": 303, "segment_span": [53, 189], "characterOffsetBegin": 292, "originalText": "open.append", "ArgType": null, "before": " "}, {"index": 82, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 304, "segment_span": [53, 189], "characterOffsetBegin": 303, "originalText": "(", "ArgType": null, "before": ""}, {"index": 83, "word": "h", "lemma": "h", "after": "", "pos": "NN", "characterOffsetEnd": 305, "segment_span": [53, 189], "characterOffsetBegin": 304, "originalText": "h", "ArgType": null, "before": ""}, {"index": 84, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 306, "segment_span": [53, 189], "characterOffsetBegin": 305, "originalText": "{", "ArgType": null, "before": ""}, {"index": 85, "word": "e", "lemma": "e", "after": "", "pos": "SYM", "characterOffsetEnd": 307, "segment_span": [53, 189], "characterOffsetBegin": 306, "originalText": "e", "ArgType": null, "before": ""}, {"index": 86, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 308, "segment_span": [53, 189], "characterOffsetBegin": 307, "originalText": "}", "ArgType": null, "before": ""}, {"index": 87, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 309, "segment_span": [53, 189], "characterOffsetBegin": 308, "originalText": ",", "ArgType": null, "before": ""}, {"index": 88, "word": "fronti", "lemma": "fronti", "after": "", "pos": "NN", "characterOffsetEnd": 316, "segment_span": [53, 189], "characterOffsetBegin": 310, "originalText": "fronti", "ArgType": null, "before": " "}, {"index": 89, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 317, "segment_span": [53, 189], "characterOffsetBegin": 316, "originalText": ")", "ArgType": null, "before": ""}, {"index": 90, "word": "7", "lemma": "7", "after": "", "pos": "CD", "characterOffsetEnd": 319, "segment_span": [53, 189], "characterOffsetBegin": 318, "originalText": "7", "ArgType": null, "before": " "}, {"index": 91, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 320, "segment_span": [53, 189], "characterOffsetBegin": 319, "originalText": ":", "ArgType": null, "before": ""}, {"index": 92, "word": "while", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 326, "segment_span": [53, 189], "characterOffsetBegin": 321, "originalText": "while", "ArgType": null, "before": " "}, {"index": 93, "word": "open", "lemma": "open", "after": " ", "pos": "JJ", "characterOffsetEnd": 331, "segment_span": [53, 189], "characterOffsetBegin": 327, "originalText": "open", "ArgType": null, "before": " "}, {"index": 94, "word": "=", "lemma": "=", "after": "", "pos": "JJ", "characterOffsetEnd": 333, "segment_span": [53, 189], "characterOffsetBegin": 332, "originalText": "=", "ArgType": null, "before": " "}, {"index": 95, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 334, "segment_span": [53, 189], "characterOffsetBegin": 333, "originalText": "6", "ArgType": null, "before": ""}, {"index": 96, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 336, "segment_span": [53, 189], "characterOffsetBegin": 335, "originalText": "0", "ArgType": null, "before": " "}, {"index": 97, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 339, "segment_span": [53, 189], "characterOffsetBegin": 337, "originalText": "do", "ArgType": null, "before": " "}, {"index": 98, "word": "8", "lemma": "8", "after": "", "pos": "CD", "characterOffsetEnd": 341, "segment_span": [53, 189], "characterOffsetBegin": 340, "originalText": "8", "ArgType": null, "before": " "}, {"index": 99, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 342, "segment_span": [53, 189], "characterOffsetBegin": 341, "originalText": ":", "ArgType": null, "before": ""}, {"index": 100, "word": "hfrag", "lemma": "hfrag", "after": "", "pos": "NN", "characterOffsetEnd": 348, "segment_span": [53, 189], "characterOffsetBegin": 343, "originalText": "hfrag", "ArgType": null, "before": " "}, {"index": 101, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 349, "segment_span": [53, 189], "characterOffsetBegin": 348, "originalText": ",", "ArgType": null, "before": ""}, {"index": 102, "word": "fronti", "lemma": "fronti", "after": " ", "pos": "NN", "characterOffsetEnd": 356, "segment_span": [53, 189], "characterOffsetBegin": 350, "originalText": "fronti", "ArgType": null, "before": " "}, {"index": 103, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "CD", "characterOffsetEnd": 358, "segment_span": [53, 189], "characterOffsetBegin": 357, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 104, "word": "open.pop", "lemma": "open.pop", "after": "", "pos": "NN", "characterOffsetEnd": 367, "segment_span": [53, 189], "characterOffsetBegin": 359, "originalText": "open.pop", "ArgType": null, "before": " "}, {"index": 105, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 368, "segment_span": [53, 189], "characterOffsetBegin": 367, "originalText": "(", "ArgType": null, "before": ""}, {"index": 106, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 369, "segment_span": [53, 189], "characterOffsetBegin": 368, "originalText": ")", "ArgType": null, "before": ""}, {"index": 107, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 371, "segment_span": [53, 189], "characterOffsetBegin": 370, "originalText": ">", "ArgType": null, "before": " "}, {"index": 108, "word": "active", "lemma": "active", "after": " ", "pos": "JJ", "characterOffsetEnd": 378, "segment_span": [53, 189], "characterOffsetBegin": 372, "originalText": "active", "ArgType": null, "before": " "}, {"index": 109, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [53, 189], "characterOffsetBegin": 379, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 110, "word": "9", "lemma": "9", "after": "", "pos": "CD", "characterOffsetEnd": 389, "segment_span": [53, 189], "characterOffsetBegin": 388, "originalText": "9", "ArgType": null, "before": " "}, {"index": 111, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 390, "segment_span": [53, 189], "characterOffsetBegin": 389, "originalText": ":", "ArgType": null, "before": ""}, {"index": 112, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 393, "segment_span": [53, 189], "characterOffsetBegin": 391, "originalText": "if", "ArgType": null, "before": " "}, {"index": 113, "word": "front", "lemma": "front", "after": " ", "pos": "NN", "characterOffsetEnd": 399, "segment_span": [53, 189], "characterOffsetBegin": 394, "originalText": "front", "ArgType": "subj", "before": " "}, {"index": 114, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 401, "segment_span": [53, 189], "characterOffsetBegin": 400, "originalText": "=", "ArgType": null, "before": " "}, {"index": 115, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 403, "segment_span": [53, 189], "characterOffsetBegin": 402, "originalText": "0", "ArgType": null, "before": " "}, {"index": 116, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 408, "segment_span": [53, 189], "characterOffsetBegin": 404, "originalText": "then", "ArgType": null, "before": " "}, {"index": 117, "word": "10", "lemma": "10", "after": "", "pos": "CD", "characterOffsetEnd": 411, "segment_span": [53, 189], "characterOffsetBegin": 409, "originalText": "10", "ArgType": "dobj", "before": " "}, {"index": 118, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 412, "segment_span": [53, 189], "characterOffsetBegin": 411, "originalText": ":", "ArgType": null, "before": ""}, {"index": 119, "word": "generate", "lemma": "generate", "after": " ", "pos": "VB", "characterOffsetEnd": 421, "segment_span": [53, 189], "characterOffsetBegin": 413, "originalText": "generate", "ArgType": null, "before": " "}, {"index": 120, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 423, "segment_span": [53, 189], "characterOffsetBegin": 422, "originalText": "a", "ArgType": null, "before": " "}, {"index": 121, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 428, "segment_span": [53, 189], "characterOffsetBegin": 424, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 122, "word": "r", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 430, "segment_span": [53, 189], "characterOffsetBegin": 429, "originalText": "r", "ArgType": null, "before": " "}, {"index": 123, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 436, "segment_span": [53, 189], "characterOffsetBegin": 431, "originalText": "using", "ArgType": null, "before": " "}, {"index": 124, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 445, "segment_span": [53, 189], "characterOffsetBegin": 437, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 125, "word": "frag", "lemma": "frag", "after": " ", "pos": "NN", "characterOffsetEnd": 450, "segment_span": [53, 189], "characterOffsetBegin": 446, "originalText": "frag", "ArgType": "dobj", "before": " "}, {"index": 126, "word": "11", "lemma": "11", "after": "", "pos": "CD", "characterOffsetEnd": 453, "segment_span": [53, 189], "characterOffsetBegin": 451, "originalText": "11", "ArgType": null, "before": " "}, {"index": 127, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 454, "segment_span": [53, 189], "characterOffsetBegin": 453, "originalText": ":", "ArgType": null, "before": ""}, {"index": 128, "word": "R.append", "lemma": "r.append", "after": "", "pos": "NN", "characterOffsetEnd": 463, "segment_span": [53, 189], "characterOffsetBegin": 455, "originalText": "R.append", "ArgType": null, "before": " "}, {"index": 129, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 464, "segment_span": [53, 189], "characterOffsetBegin": 463, "originalText": "(", "ArgType": null, "before": ""}, {"index": 130, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 465, "segment_span": [53, 189], "characterOffsetBegin": 464, "originalText": "r", "ArgType": null, "before": ""}, {"index": 131, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 466, "segment_span": [53, 189], "characterOffsetBegin": 465, "originalText": ")", "ArgType": null, "before": ""}, {"index": 132, "word": "12", "lemma": "12", "after": "", "pos": "CD", "characterOffsetEnd": 469, "segment_span": [53, 189], "characterOffsetBegin": 467, "originalText": "12", "ArgType": null, "before": " "}, {"index": 133, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 470, "segment_span": [53, 189], "characterOffsetBegin": 469, "originalText": ":", "ArgType": null, "before": ""}, {"index": 134, "word": "else", "lemma": "else", "after": " ", "pos": "RB", "characterOffsetEnd": 475, "segment_span": [53, 189], "characterOffsetBegin": 471, "originalText": "else", "ArgType": null, "before": " "}, {"index": 135, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 477, "segment_span": [53, 189], "characterOffsetBegin": 476, "originalText": ">", "ArgType": null, "before": " "}, {"index": 136, "word": "incomplete", "lemma": "incomplete", "after": "", "pos": "JJ", "characterOffsetEnd": 488, "segment_span": [53, 189], "characterOffsetBegin": 478, "originalText": "incomplete", "ArgType": null, "before": " "}, {"index": 137, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 489, "segment_span": [53, 189], "characterOffsetBegin": 488, "originalText": ":", "ArgType": null, "before": ""}, {"index": 138, "word": "further", "lemma": "further", "after": " ", "pos": "RB", "characterOffsetEnd": 497, "segment_span": [53, 189], "characterOffsetBegin": 490, "originalText": "further", "ArgType": null, "before": " "}, {"index": 139, "word": "expand", "lemma": "expand", "after": " ", "pos": "VB", "characterOffsetEnd": 504, "segment_span": [53, 189], "characterOffsetBegin": 498, "originalText": "expand", "ArgType": null, "before": " "}, {"index": 140, "word": "13", "lemma": "13", "after": "", "pos": "CD", "characterOffsetEnd": 507, "segment_span": [53, 189], "characterOffsetBegin": 505, "originalText": "13", "ArgType": "dobj", "before": " "}, {"index": 141, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 508, "segment_span": [53, 189], "characterOffsetBegin": 507, "originalText": ":", "ArgType": null, "before": ""}, {"index": 142, "word": "u", "lemma": "u", "after": " ", "pos": "FW", "characterOffsetEnd": 510, "segment_span": [53, 189], "characterOffsetBegin": 509, "originalText": "u", "ArgType": null, "before": " "}, {"index": 143, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "FW", "characterOffsetEnd": 512, "segment_span": [53, 189], "characterOffsetBegin": 511, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 144, "word": "front.pop", "lemma": "front.pop", "after": "", "pos": "NN", "characterOffsetEnd": 522, "segment_span": [53, 189], "characterOffsetBegin": 513, "originalText": "front.pop", "ArgType": null, "before": " "}, {"index": 145, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 523, "segment_span": [53, 189], "characterOffsetBegin": 522, "originalText": "(", "ArgType": null, "before": ""}, {"index": 146, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 524, "segment_span": [53, 189], "characterOffsetBegin": 523, "originalText": ")", "ArgType": null, "before": ""}, {"index": 147, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 526, "segment_span": [53, 189], "characterOffsetBegin": 525, "originalText": ">", "ArgType": null, "before": " "}, {"index": 148, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 528, "segment_span": [53, 189], "characterOffsetBegin": 527, "originalText": "a", "ArgType": null, "before": " "}, {"index": 149, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 537, "segment_span": [53, 189], "characterOffsetBegin": 529, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 150, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 542, "segment_span": [53, 189], "characterOffsetBegin": 538, "originalText": "node", "ArgType": null, "before": " "}, {"index": 151, "word": "14", "lemma": "14", "after": "", "pos": "CD", "characterOffsetEnd": 545, "segment_span": [53, 189], "characterOffsetBegin": 543, "originalText": "14", "ArgType": null, "before": " "}, {"index": 152, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 546, "segment_span": [53, 189], "characterOffsetBegin": 545, "originalText": ":", "ArgType": null, "before": ""}, {"index": 153, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 550, "segment_span": [53, 189], "characterOffsetBegin": 547, "originalText": "for", "ArgType": null, "before": " "}, {"index": 154, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 555, "segment_span": [53, 189], "characterOffsetBegin": 551, "originalText": "each", "ArgType": null, "before": " "}, {"index": 155, "word": "e", "lemma": "e", "after": " ", "pos": "SYM", "characterOffsetEnd": 557, "segment_span": [53, 189], "characterOffsetBegin": 556, "originalText": "e", "ArgType": null, "before": " "}, {"index": 156, "word": "\u00e2\u0088\u0088", "lemma": "\u00e2\u0088\u0088", "after": " ", "pos": "CD", "characterOffsetEnd": 559, "segment_span": [53, 189], "characterOffsetBegin": 558, "originalText": "\u00e2\u0088\u0088", "ArgType": null, "before": " "}, {"index": 157, "word": "BS", "lemma": "bs", "after": "", "pos": "NN", "characterOffsetEnd": 562, "segment_span": [53, 189], "characterOffsetBegin": 560, "originalText": "BS", "ArgType": "subj", "before": " "}, {"index": 158, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 563, "segment_span": [53, 189], "characterOffsetBegin": 562, "originalText": "(", "ArgType": null, "before": ""}, {"index": 159, "word": "u", "lemma": "u", "after": "", "pos": "NN", "characterOffsetEnd": 564, "segment_span": [53, 189], "characterOffsetBegin": 563, "originalText": "u", "ArgType": null, "before": ""}, {"index": 160, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 565, "segment_span": [53, 189], "characterOffsetBegin": 564, "originalText": ")", "ArgType": null, "before": ""}, {"index": 161, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 568, "segment_span": [53, 189], "characterOffsetBegin": 566, "originalText": "do", "ArgType": null, "before": " "}, {"index": 162, "word": "15", "lemma": "15", "after": "", "pos": "CD", "characterOffsetEnd": 571, "segment_span": [53, 189], "characterOffsetBegin": 569, "originalText": "15", "ArgType": "dobj", "before": " "}, {"index": 163, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 572, "segment_span": [53, 189], "characterOffsetBegin": 571, "originalText": ":", "ArgType": null, "before": ""}, {"index": 164, "word": "front", "lemma": "front", "after": "", "pos": "JJ", "characterOffsetEnd": 578, "segment_span": [53, 189], "characterOffsetBegin": 573, "originalText": "front", "ArgType": null, "before": " "}, {"index": 165, "word": "\u00e2\u0080\u00b2", "lemma": "\u00e2\u0080\u00b2", "after": " ", "pos": "NN", "characterOffsetEnd": 579, "segment_span": [53, 189], "characterOffsetBegin": 578, "originalText": "\u00e2\u0080\u00b2", "ArgType": null, "before": ""}, {"index": 166, "word": "\u00e2\u0086\u0090", "lemma": "\u00e2\u0086\u0090", "after": " ", "pos": "CD", "characterOffsetEnd": 581, "segment_span": [53, 189], "characterOffsetBegin": 580, "originalText": "\u00e2\u0086\u0090", "ArgType": null, "before": " "}, {"index": 167, "word": "front", "lemma": "front", "after": " ", "pos": "JJ", "characterOffsetEnd": 587, "segment_span": [53, 189], "characterOffsetBegin": 582, "originalText": "front", "ArgType": null, "before": " "}, {"index": 168, "word": "\u00e2\u0088\u00aa", "lemma": "\u00e2\u0088\u00aa", "after": " ", "pos": "NN", "characterOffsetEnd": 589, "segment_span": [53, 189], "characterOffsetBegin": 588, "originalText": "\u00e2\u0088\u00aa", "ArgType": null, "before": " "}, {"index": 169, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 591, "segment_span": [53, 189], "characterOffsetBegin": 590, "originalText": "(", "ArgType": null, "before": " "}, {"index": 170, "word": "tails", "lemma": "tail", "after": "", "pos": "NNS", "characterOffsetEnd": 596, "segment_span": [53, 189], "characterOffsetBegin": 591, "originalText": "tails", "ArgType": null, "before": ""}, {"index": 171, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 597, "segment_span": [53, 189], "characterOffsetBegin": 596, "originalText": "(", "ArgType": null, "before": ""}, {"index": 172, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 598, "segment_span": [53, 189], "characterOffsetBegin": 597, "originalText": "e", "ArgType": null, "before": ""}, {"index": 173, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 599, "segment_span": [53, 189], "characterOffsetBegin": 598, "originalText": ")", "ArgType": null, "before": ""}, {"index": 174, "word": "\\", "lemma": "\\", "after": " ", "pos": "NN", "characterOffsetEnd": 601, "segment_span": [53, 189], "characterOffsetBegin": 600, "originalText": "\\", "ArgType": null, "before": " "}, {"index": 175, "word": "admset", "lemma": "admset", "after": "", "pos": "NN", "characterOffsetEnd": 608, "segment_span": [53, 189], "characterOffsetBegin": 602, "originalText": "admset", "ArgType": null, "before": " "}, {"index": 176, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 609, "segment_span": [53, 189], "characterOffsetBegin": 608, "originalText": ")", "ArgType": null, "before": ""}, {"index": 177, "word": "16", "lemma": "16", "after": "", "pos": "CD", "characterOffsetEnd": 612, "segment_span": [53, 189], "characterOffsetBegin": 610, "originalText": "16", "ArgType": null, "before": " "}, {"index": 178, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 613, "segment_span": [53, 189], "characterOffsetBegin": 612, "originalText": ":", "ArgType": null, "before": ""}, {"index": 179, "word": "open.append", "lemma": "open.append", "after": "", "pos": "NN", "characterOffsetEnd": 625, "segment_span": [53, 189], "characterOffsetBegin": 614, "originalText": "open.append", "ArgType": null, "before": " "}, {"index": 180, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 626, "segment_span": [53, 189], "characterOffsetBegin": 625, "originalText": "(", "ArgType": null, "before": ""}, {"index": 181, "word": "hfrag", "lemma": "hfrag", "after": " ", "pos": "NN", "characterOffsetEnd": 631, "segment_span": [53, 189], "characterOffsetBegin": 626, "originalText": "hfrag", "ArgType": null, "before": ""}, {"index": 182, "word": "\u00e2\u0088\u00aa", "lemma": "\u00e2\u0088\u00aa", "after": " ", "pos": "CD", "characterOffsetEnd": 633, "segment_span": [53, 189], "characterOffsetBegin": 632, "originalText": "\u00e2\u0088\u00aa", "ArgType": null, "before": " "}, {"index": 183, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 635, "segment_span": [53, 189], "characterOffsetBegin": 634, "originalText": "{", "ArgType": null, "before": " "}, {"index": 184, "word": "e", "lemma": "e", "after": "", "pos": "SYM", "characterOffsetEnd": 636, "segment_span": [53, 189], "characterOffsetBegin": 635, "originalText": "e", "ArgType": null, "before": ""}, {"index": 185, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 637, "segment_span": [53, 189], "characterOffsetBegin": 636, "originalText": "}", "ArgType": null, "before": ""}, {"index": 186, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 638, "segment_span": [53, 189], "characterOffsetBegin": 637, "originalText": ",", "ArgType": null, "before": ""}, {"index": 187, "word": "front", "lemma": "front", "after": "", "pos": "JJ", "characterOffsetEnd": 644, "segment_span": [53, 189], "characterOffsetBegin": 639, "originalText": "front", "ArgType": null, "before": " "}, {"index": 188, "word": "\u00e2\u0080\u00b2", "lemma": "\u00e2\u0080\u00b2", "after": "", "pos": "NN", "characterOffsetEnd": 645, "segment_span": [53, 189], "characterOffsetBegin": 644, "originalText": "\u00e2\u0080\u00b2", "ArgType": null, "before": ""}, {"index": 189, "word": "i", "lemma": "i", "after": "", "pos": "LS", "characterOffsetEnd": 646, "segment_span": [53, 189], "characterOffsetBegin": 645, "originalText": "i", "ArgType": null, "before": ""}, {"index": 190, "word": ")", "lemma": "-rrb-", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": "-RRB-", "characterOffsetEnd": 647, "characterOffsetBegin": 646, "originalText": ")", "ArgType": null, "before": ""}], "text": "Input : forest F , target sentence T , and alignment a Output : minimal rule set R 1 : admset \u00e2\u0086\u0090 ADMISSIBLE ( F , T , a ) > admissible set 2 : for each v \u00e2\u0088\u0088 admset do 3 : open \u00e2\u0086\u0090 0 > queue of active fragments 4 : for each e \u00e2\u0088\u0088 BS ( v ) do > incoming hyperedges 5 : front \u00e2\u0086\u0090 tails ( e ) \\ admset > initial frontier 6 : open.append ( h -LCB- e -RCB- , fronti ) 7 : while open = 6 0 do 8 : hfrag , fronti \u00e2\u0086\u0090 open.pop ( ) > active fragment 9 : if front = 0 then 10 : generate a rule r using fragment frag 11 : R.append ( r ) 12 : else > incomplete : further expand 13 : u \u00e2\u0086\u0090 front.pop ( ) > a frontier node 14 : for each e \u00e2\u0088\u0088 BS ( u ) do 15 : front \u00e2\u0080\u00b2 \u00e2\u0086\u0090 front \u00e2\u0088\u00aa ( tails ( e ) \\ admset ) 16 : open.append ( hfrag \u00e2\u0088\u00aa -LCB- e -RCB- , front \u00e2\u0080\u00b2 i )"}, {"tokens": [{"index": 1, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "in", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "section", "ArgType": null, "before": " "}, {"index": 4, "word": "like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 16, "originalText": "like", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "Figures", "lemma": "figure", "after": " ", "pos": "NNS", "characterOffsetEnd": 31, "segment_span": [0, 10], "characterOffsetBegin": 24, "originalText": "Figures", "ArgType": null, "before": " "}, {"index": 7, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 33, "segment_span": [0, 10], "characterOffsetBegin": 32, "originalText": "3", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 37, "segment_span": [0, 10], "characterOffsetBegin": 34, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 39, "segment_span": [0, 10], "characterOffsetBegin": 38, "originalText": "4", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 39, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 41, "characterOffsetBegin": 40, "originalText": ".", "ArgType": null, "before": ""}], "text": "in this section like in Figures 3 and 4 ) ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 44, "segment_span": [0, 32], "characterOffsetBegin": 42, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [0, 32], "characterOffsetBegin": 45, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 32], "characterOffsetBegin": 50, "originalText": "fragment", "ArgType": "subj", "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 59, "segment_span": [0, 32], "characterOffsetBegin": 58, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "frag1", "lemma": "frag1", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 32], "characterOffsetBegin": 60, "originalText": "frag1", "ArgType": null, "before": " "}, {"index": 6, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [0, 32], "characterOffsetBegin": 66, "originalText": "=", "ArgType": null, "before": " "}, {"index": 7, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 69, "segment_span": [0, 32], "characterOffsetBegin": 68, "originalText": "{", "ArgType": null, "before": " "}, {"index": 8, "word": "e2", "lemma": "e2", "after": "", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 32], "characterOffsetBegin": 69, "originalText": "e2", "ArgType": null, "before": ""}, {"index": 9, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 72, "segment_span": [0, 32], "characterOffsetBegin": 71, "originalText": "}", "ArgType": null, "before": ""}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 73, "segment_span": [0, 32], "characterOffsetBegin": 72, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 76, "segment_span": [0, 32], "characterOffsetBegin": 74, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 80, "segment_span": [0, 32], "characterOffsetBegin": 77, "originalText": "now", "ArgType": null, "before": " "}, {"index": 13, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 89, "segment_span": [0, 32], "characterOffsetBegin": 81, "originalText": "complete", "ArgType": "verb", "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 93, "segment_span": [0, 32], "characterOffsetBegin": 90, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 96, "segment_span": [0, 32], "characterOffsetBegin": 94, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 16, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 100, "segment_span": [0, 32], "characterOffsetBegin": 97, "originalText": "can", "ArgType": null, "before": " "}, {"index": 17, "word": "extract", "lemma": "extract", "after": " ", "pos": "VB", "characterOffsetEnd": 108, "segment_span": [0, 32], "characterOffsetBegin": 101, "originalText": "extract", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [0, 32], "characterOffsetBegin": 109, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "rule", "lemma": "rule", "after": "", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [0, 32], "characterOffsetBegin": 111, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 116, "segment_span": [0, 32], "characterOffsetBegin": 115, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "IP", "lemma": "IP", "after": " ", "pos": "NNP", "characterOffsetEnd": 119, "segment_span": [0, 32], "characterOffsetBegin": 117, "originalText": "IP", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 121, "segment_span": [0, 32], "characterOffsetBegin": 120, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "x1", "lemma": "x1", "after": "", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [0, 32], "characterOffsetBegin": 121, "originalText": "x1", "ArgType": null, "before": ""}, {"index": 24, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 124, "segment_span": [0, 32], "characterOffsetBegin": 123, "originalText": ":", "ArgType": null, "before": ""}, {"index": 25, "word": "NPB", "lemma": "npb", "after": " ", "pos": "NN", "characterOffsetEnd": 127, "segment_span": [0, 32], "characterOffsetBegin": 124, "originalText": "NPB", "ArgType": null, "before": ""}, {"index": 26, "word": "x2", "lemma": "x2", "after": "", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [0, 32], "characterOffsetBegin": 128, "originalText": "x2", "ArgType": null, "before": " "}, {"index": 27, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 131, "segment_span": [0, 32], "characterOffsetBegin": 130, "originalText": ":", "ArgType": null, "before": ""}, {"index": 28, "word": "VP", "lemma": "vp", "after": "", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [0, 32], "characterOffsetBegin": 131, "originalText": "VP", "ArgType": null, "before": ""}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 134, "segment_span": [0, 32], "characterOffsetBegin": 133, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "\u00e2\u0086\u0092", "lemma": "\u00e2\u0086\u0092", "after": " ", "pos": "CD", "characterOffsetEnd": 136, "segment_span": [0, 32], "characterOffsetBegin": 135, "originalText": "\u00e2\u0086\u0092", "ArgType": null, "before": " "}, {"index": 31, "word": "x1", "lemma": "x1", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [0, 32], "characterOffsetBegin": 137, "originalText": "x1", "ArgType": null, "before": " "}, {"index": 32, "word": "x2", "lemma": "x2", "after": "", "pos": "NN", "characterOffsetEnd": 142, "segment_span": [0, 32], "characterOffsetBegin": 140, "originalText": "x2", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 143, "characterOffsetBegin": 142, "originalText": ".", "ArgType": null, "before": ""}], "text": "So this fragment , frag1 = -LCB- e2 -RCB- , is now complete and we can extract a rule , IP ( x1 : NPB x2 : VP ) \u00e2\u0086\u0092 x1 x2 ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 151, "segment_span": [0, 16], "characterOffsetBegin": 144, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 152, "segment_span": [0, 16], "characterOffsetBegin": 151, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 162, "segment_span": [0, 16], "characterOffsetBegin": 153, "originalText": "following", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 166, "segment_span": [0, 16], "characterOffsetBegin": 163, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 172, "segment_span": [0, 16], "characterOffsetBegin": 167, "originalText": "other", "ArgType": null, "before": " "}, {"index": 6, "word": "hyperedge", "lemma": "hyperedge", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [0, 16], "characterOffsetBegin": 173, "originalText": "hyperedge", "ArgType": null, "before": " "}, {"index": 7, "word": "e1", "lemma": "e1", "after": " ", "pos": "NN", "characterOffsetEnd": 185, "segment_span": [0, 16], "characterOffsetBegin": 183, "originalText": "e1", "ArgType": null, "before": " "}, {"index": 8, "word": "IP0", "lemma": "ip0", "after": "", "pos": "NN", "characterOffsetEnd": 189, "segment_span": [0, 16], "characterOffsetBegin": 186, "originalText": "IP0", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 190, "segment_span": [0, 16], "characterOffsetBegin": 189, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 192, "segment_span": [0, 16], "characterOffsetBegin": 191, "originalText": "6", "ArgType": null, "before": " "}, {"index": 11, "word": "\u00e2\u0086\u0092", "lemma": "\u00e2\u0086\u0092", "after": " ", "pos": "CD", "characterOffsetEnd": 194, "segment_span": [0, 16], "characterOffsetBegin": 193, "originalText": "\u00e2\u0086\u0092", "ArgType": null, "before": " "}, {"index": 12, "word": "NP0", "lemma": "np0", "after": "", "pos": "NN", "characterOffsetEnd": 198, "segment_span": [0, 16], "characterOffsetBegin": 195, "originalText": "NP0", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 199, "segment_span": [0, 16], "characterOffsetBegin": 198, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 201, "segment_span": [0, 16], "characterOffsetBegin": 200, "originalText": "3", "ArgType": null, "before": " "}, {"index": 15, "word": "VPB3", "lemma": "vpb3", "after": "", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [0, 16], "characterOffsetBegin": 202, "originalText": "VPB3", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 207, "segment_span": [0, 16], "characterOffsetBegin": 206, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 209, "segment_span": [16, 35], "characterOffsetBegin": 208, "originalText": "6", "ArgType": "subj", "before": " "}, {"index": 18, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 214, "segment_span": [16, 35], "characterOffsetBegin": 210, "originalText": "will", "ArgType": null, "before": " "}, {"index": 19, "word": "leave", "characterOffsetEnd": 220, "after": " ", "pos": "VB", "is_root": true, "lemma": "leave", "segment_span": [16, 35], "tense": "B", "characterOffsetBegin": 215, "originalText": "leave", "has_aux": true, "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 224, "segment_span": [16, 35], "characterOffsetBegin": 221, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 228, "segment_span": [16, 35], "characterOffsetBegin": 225, "originalText": "new", "ArgType": null, "before": " "}, {"index": 22, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 237, "segment_span": [16, 35], "characterOffsetBegin": 229, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 23, "word": "frag2", "lemma": "frag2", "after": " ", "pos": "NN", "characterOffsetEnd": 243, "segment_span": [16, 35], "characterOffsetBegin": 238, "originalText": "frag2", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 245, "segment_span": [16, 35], "characterOffsetBegin": 244, "originalText": "=", "ArgType": null, "before": " "}, {"index": 25, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 247, "segment_span": [16, 35], "characterOffsetBegin": 246, "originalText": "{", "ArgType": null, "before": " "}, {"index": 26, "word": "e1", "lemma": "e1", "after": "", "pos": "NN", "characterOffsetEnd": 249, "segment_span": [16, 35], "characterOffsetBegin": 247, "originalText": "e1", "ArgType": null, "before": ""}, {"index": 27, "word": "-RCB-", "lemma": "-rcb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 250, "segment_span": [16, 35], "characterOffsetBegin": 249, "originalText": "}", "ArgType": null, "before": ""}, {"index": 28, "word": "incomplete", "lemma": "incomplete", "after": " ", "pos": "JJ", "characterOffsetEnd": 261, "segment_span": [16, 35], "characterOffsetBegin": 251, "originalText": "incomplete", "ArgType": null, "before": " "}, {"index": 29, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 266, "segment_span": [16, 35], "characterOffsetBegin": 262, "originalText": "with", "ArgType": null, "before": " "}, {"index": 30, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 270, "segment_span": [16, 35], "characterOffsetBegin": 267, "originalText": "one", "ArgType": null, "before": " "}, {"index": 31, "word": "non-admissible", "lemma": "non-admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 285, "segment_span": [16, 35], "characterOffsetBegin": 271, "originalText": "non-admissible", "ArgType": null, "before": " "}, {"index": 32, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 290, "segment_span": [16, 35], "characterOffsetBegin": 286, "originalText": "node", "ArgType": null, "before": " "}, {"index": 33, "word": "NP0", "lemma": "np0", "after": "", "pos": "NN", "characterOffsetEnd": 294, "segment_span": [16, 35], "characterOffsetBegin": 291, "originalText": "NP0", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 295, "segment_span": [16, 35], "characterOffsetBegin": 294, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "3", "lemma": "3", "after": "", "pos": "CD", "characterOffsetEnd": 297, "segment_span": [16, 35], "characterOffsetBegin": 296, "originalText": "3", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 298, "characterOffsetBegin": 297, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , following the other hyperedge e1 IP0 , 6 \u00e2\u0086\u0092 NP0 , 3 VPB3 , 6 will leave the new fragment frag2 = -LCB- e1 -RCB- incomplete with one non-admissible node NP0 , 3 ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 301, "segment_span": [0, 7], "characterOffsetBegin": 299, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 306, "segment_span": [0, 7], "characterOffsetBegin": 302, "originalText": "then", "ArgType": null, "before": " "}, {"index": 3, "word": "grow", "characterOffsetEnd": 311, "after": " ", "pos": "VBP", "is_root": true, "lemma": "grow", "segment_span": [0, 7], "tense": "P", "characterOffsetBegin": 307, "originalText": "grow", "ArgType": "verb", "before": " "}, {"index": 4, "word": "frag2", "lemma": "frag2", "after": " ", "pos": "NN", "characterOffsetEnd": 317, "segment_span": [0, 7], "characterOffsetBegin": 312, "originalText": "frag2", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 320, "segment_span": [0, 7], "characterOffsetBegin": 318, "originalText": "at", "ArgType": null, "before": " "}, {"index": 6, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 325, "segment_span": [0, 7], "characterOffsetBegin": 321, "originalText": "this", "ArgType": null, "before": " "}, {"index": 7, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 330, "segment_span": [0, 7], "characterOffsetBegin": 326, "originalText": "node", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 333, "segment_span": [7, 38], "characterOffsetBegin": 331, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "choosing", "characterOffsetEnd": 342, "after": " ", "pos": "VBG", "is_root": true, "lemma": "choose", "segment_span": [7, 38], "tense": "G", "characterOffsetBegin": 334, "originalText": "choosing", "ArgType": null, "before": " "}, {"index": 10, "word": "hyperedge", "lemma": "hyperedge", "after": " ", "pos": "NN", "characterOffsetEnd": 352, "segment_span": [7, 38], "characterOffsetBegin": 343, "originalText": "hyperedge", "ArgType": null, "before": " "}, {"index": 11, "word": "e3", "lemma": "e3", "after": " ", "pos": "NN", "characterOffsetEnd": 355, "segment_span": [7, 38], "characterOffsetBegin": 353, "originalText": "e3", "ArgType": null, "before": " "}, {"index": 12, "word": "NP0", "lemma": "np0", "after": "", "pos": "NN", "characterOffsetEnd": 359, "segment_span": [7, 38], "characterOffsetBegin": 356, "originalText": "NP0", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 360, "segment_span": [7, 38], "characterOffsetBegin": 359, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 362, "segment_span": [7, 38], "characterOffsetBegin": 361, "originalText": "3", "ArgType": null, "before": " "}, {"index": 15, "word": "\u00e2\u0086\u0092", "lemma": "\u00e2\u0086\u0092", "after": " ", "pos": "NN", "characterOffsetEnd": 364, "segment_span": [7, 38], "characterOffsetBegin": 363, "originalText": "\u00e2\u0086\u0092", "ArgType": null, "before": " "}, {"index": 16, "word": "NPB0", "lemma": "npb0", "after": "", "pos": "NN", "characterOffsetEnd": 369, "segment_span": [7, 38], "characterOffsetBegin": 365, "originalText": "NPB0", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 370, "segment_span": [7, 38], "characterOffsetBegin": 369, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 372, "segment_span": [7, 38], "characterOffsetBegin": 371, "originalText": "1", "ArgType": null, "before": " "}, {"index": 19, "word": "CC1", "lemma": "cc1", "after": "", "pos": "NN", "characterOffsetEnd": 376, "segment_span": [7, 38], "characterOffsetBegin": 373, "originalText": "CC1", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 377, "segment_span": [7, 38], "characterOffsetBegin": 376, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2", "lemma": "2", "after": " ", "pos": "CD", "characterOffsetEnd": 379, "segment_span": [7, 38], "characterOffsetBegin": 378, "originalText": "2", "ArgType": null, "before": " "}, {"index": 22, "word": "NPB2", "lemma": "npb2", "after": "", "pos": "NN", "characterOffsetEnd": 384, "segment_span": [7, 38], "characterOffsetBegin": 380, "originalText": "NPB2", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 385, "segment_span": [7, 38], "characterOffsetBegin": 384, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 387, "segment_span": [7, 38], "characterOffsetBegin": 386, "originalText": "3", "ArgType": null, "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 389, "segment_span": [7, 38], "characterOffsetBegin": 388, "originalText": ",", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 393, "segment_span": [7, 38], "characterOffsetBegin": 390, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "spin", "lemma": "spin", "after": " ", "pos": "VB", "characterOffsetEnd": 398, "segment_span": [7, 38], "characterOffsetBegin": 394, "originalText": "spin", "ArgType": null, "before": " "}, {"index": 28, "word": "off", "lemma": "off", "after": " ", "pos": "RP", "characterOffsetEnd": 402, "segment_span": [7, 38], "characterOffsetBegin": 399, "originalText": "off", "ArgType": null, "before": " "}, {"index": 29, "word": "anew", "lemma": "anew", "after": " ", "pos": "RB", "characterOffsetEnd": 407, "segment_span": [7, 38], "characterOffsetBegin": 403, "originalText": "anew", "ArgType": null, "before": " "}, {"index": 30, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 416, "segment_span": [7, 38], "characterOffsetBegin": 408, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 31, "word": "frag3", "lemma": "frag3", "after": " ", "pos": "NN", "characterOffsetEnd": 422, "segment_span": [7, 38], "characterOffsetBegin": 417, "originalText": "frag3", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 424, "segment_span": [7, 38], "characterOffsetBegin": 423, "originalText": "=", "ArgType": null, "before": " "}, {"index": 33, "word": "-LCB-", "lemma": "-lcb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 426, "segment_span": [7, 38], "characterOffsetBegin": 425, "originalText": "{", "ArgType": null, "before": " "}, {"index": 34, "word": "e1", "lemma": "e1", "after": "", "pos": "NN", "characterOffsetEnd": 428, "segment_span": [7, 38], "characterOffsetBegin": 426, "originalText": "e1", "ArgType": null, "before": ""}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 429, "segment_span": [7, 38], "characterOffsetBegin": 428, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "e3", "lemma": "e3", "after": "", "pos": "NN", "characterOffsetEnd": 432, "segment_span": [7, 38], "characterOffsetBegin": 430, "originalText": "e3", "ArgType": null, "before": " "}, {"index": 37, "word": "-RCB-", "lemma": "-rcb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 433, "segment_span": [7, 38], "characterOffsetBegin": 432, "originalText": "}", "ArgType": null, "before": ""}, {"index": 38, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 434, "segment_span": [7, 38], "characterOffsetBegin": 433, "originalText": ",", "ArgType": null, "before": ""}, {"index": 39, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 440, "segment_span": [38, 42], "characterOffsetBegin": 435, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 40, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 443, "segment_span": [38, 42], "characterOffsetBegin": 441, "originalText": "is", "ArgType": null, "before": " "}, {"index": 41, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 447, "segment_span": [38, 42], "characterOffsetBegin": 444, "originalText": "now", "ArgType": null, "before": " "}, {"index": 42, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 456, "segment_span": [38, 42], "characterOffsetBegin": 448, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 43, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 462, "segment_span": [42, 50], "characterOffsetBegin": 457, "originalText": "since", "ArgType": null, "before": " "}, {"index": 44, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 466, "segment_span": [42, 50], "characterOffsetBegin": 463, "originalText": "all", "ArgType": null, "before": " "}, {"index": 45, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 470, "segment_span": [42, 50], "characterOffsetBegin": 467, "originalText": "its", "ArgType": null, "before": " "}, {"index": 46, "word": "four", "lemma": "four", "after": " ", "pos": "CD", "characterOffsetEnd": 475, "segment_span": [42, 50], "characterOffsetBegin": 471, "originalText": "four", "ArgType": null, "before": " "}, {"index": 47, "word": "leaf", "lemma": "leaf", "after": " ", "pos": "NN", "characterOffsetEnd": 480, "segment_span": [42, 50], "characterOffsetBegin": 476, "originalText": "leaf", "ArgType": null, "before": " "}, {"index": 48, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 486, "segment_span": [42, 50], "characterOffsetBegin": 481, "originalText": "nodes", "ArgType": "subj", "before": " "}, {"index": 49, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 490, "segment_span": [42, 50], "characterOffsetBegin": 487, "originalText": "are", "ArgType": null, "before": " "}, {"index": 50, "word": "admissible", "lemma": "admissible", "after": "", "pos": "JJ", "characterOffsetEnd": 501, "segment_span": [42, 50], "characterOffsetBegin": 491, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 51, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 502, "characterOffsetBegin": 501, "originalText": ".", "ArgType": null, "before": ""}], "text": "We then grow frag2 at this node by choosing hyperedge e3 NP0 , 3 \u00e2\u0086\u0092 NPB0 , 1 CC1 , 2 NPB2 , 3 , and spin off anew fragment frag3 = -LCB- e1 , e3 -RCB- , which is now complete since all its four leaf nodes are admissible ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 505, "segment_span": [0, 8], "characterOffsetBegin": 503, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 510, "segment_span": [0, 8], "characterOffsetBegin": 506, "originalText": "then", "ArgType": null, "before": " "}, {"index": 3, "word": "extract", "characterOffsetEnd": 518, "after": " ", "pos": "VBP", "is_root": true, "lemma": "extract", "segment_span": [0, 8], "tense": "P", "characterOffsetBegin": 511, "originalText": "extract", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 520, "segment_span": [0, 8], "characterOffsetBegin": 519, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 525, "segment_span": [0, 8], "characterOffsetBegin": 521, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 530, "segment_span": [0, 8], "characterOffsetBegin": 526, "originalText": "with", "ArgType": null, "before": " "}, {"index": 7, "word": "four", "lemma": "four", "after": " ", "pos": "CD", "characterOffsetEnd": 535, "segment_span": [0, 8], "characterOffsetBegin": 531, "originalText": "four", "ArgType": null, "before": " "}, {"index": 8, "word": "variables", "lemma": "variable", "after": "", "pos": "NNS", "characterOffsetEnd": 545, "segment_span": [0, 8], "characterOffsetBegin": 536, "originalText": "variables", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": "\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ":", "characterOffsetEnd": 546, "characterOffsetBegin": 545, "originalText": ":", "ArgType": null, "before": ""}], "text": "We then extract a rule with four variables :"}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "procedure", "lemma": "procedure", "after": " ", "pos": "NN", "characterOffsetEnd": 14, "segment_span": [0, 14], "characterOffsetBegin": 5, "originalText": "procedure", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 17, "segment_span": [0, 14], "characterOffsetBegin": 15, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "formalized", "characterOffsetEnd": 28, "after": " ", "pos": "VBN", "is_root": true, "lemma": "formalize", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 18, "before": " ", "originalText": "formalized", "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 31, "segment_span": [0, 14], "characterOffsetBegin": 29, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 33, "segment_span": [0, 14], "characterOffsetBegin": 32, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "breadth-first", "lemma": "breadth-first", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [0, 14], "characterOffsetBegin": 34, "originalText": "breadth-first", "ArgType": null, "before": " "}, {"index": 8, "word": "search", "lemma": "search", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 14], "characterOffsetBegin": 48, "originalText": "search", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 56, "segment_span": [0, 14], "characterOffsetBegin": 55, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "BFS", "lemma": "bfs", "after": "", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 14], "characterOffsetBegin": 56, "originalText": "BFS", "ArgType": null, "before": ""}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 60, "segment_span": [0, 14], "characterOffsetBegin": 59, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 14], "characterOffsetBegin": 61, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "Pseudocode", "lemma": "pseudocode", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 14], "characterOffsetBegin": 64, "originalText": "Pseudocode", "ArgType": null, "before": " "}, {"index": 14, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 76, "segment_span": [0, 14], "characterOffsetBegin": 75, "originalText": "1", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 77, "characterOffsetBegin": 76, "originalText": ".", "ArgType": null, "before": ""}], "text": "This procedure is formalized by a breadth-first search ( BFS ) in Pseudocode 1 ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 81, "segment_span": [0, 23], "characterOffsetBegin": 78, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "basic", "lemma": "basic", "after": " ", "pos": "JJ", "characterOffsetEnd": 87, "segment_span": [0, 23], "characterOffsetBegin": 82, "originalText": "basic", "ArgType": null, "before": " "}, {"index": 3, "word": "idea", "lemma": "idea", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [0, 23], "characterOffsetBegin": 88, "originalText": "idea", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "characterOffsetEnd": 95, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 23], "tense": "Z", "characterOffsetBegin": 93, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 98, "segment_span": [0, 23], "characterOffsetBegin": 96, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "visit", "lemma": "visit", "after": " ", "pos": "VB", "characterOffsetEnd": 104, "segment_span": [0, 23], "characterOffsetBegin": 99, "originalText": "visit", "ArgType": null, "before": " "}, {"index": 7, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 109, "segment_span": [0, 23], "characterOffsetBegin": 105, "originalText": "each", "ArgType": null, "before": " "}, {"index": 8, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [0, 23], "characterOffsetBegin": 110, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 9, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [0, 23], "characterOffsetBegin": 119, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 10, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 125, "segment_span": [0, 23], "characterOffsetBegin": 124, "originalText": "v", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 126, "segment_span": [0, 23], "characterOffsetBegin": 125, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 130, "segment_span": [0, 23], "characterOffsetBegin": 127, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "keep", "lemma": "keep", "after": " ", "pos": "VB", "characterOffsetEnd": 135, "segment_span": [0, 23], "characterOffsetBegin": 131, "originalText": "keep", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 137, "segment_span": [0, 23], "characterOffsetBegin": 136, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "queue", "lemma": "queue", "after": " ", "pos": "NN", "characterOffsetEnd": 143, "segment_span": [0, 23], "characterOffsetBegin": 138, "originalText": "queue", "ArgType": "subj", "before": " "}, {"index": 16, "word": "open", "lemma": "open", "after": " ", "pos": "NN", "characterOffsetEnd": 148, "segment_span": [0, 23], "characterOffsetBegin": 144, "originalText": "open", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 151, "segment_span": [0, 23], "characterOffsetBegin": 149, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "actively", "lemma": "actively", "after": " ", "pos": "RB", "characterOffsetEnd": 160, "segment_span": [0, 23], "characterOffsetBegin": 152, "originalText": "actively", "ArgType": null, "before": " "}, {"index": 19, "word": "growing", "lemma": "grow", "after": " ", "pos": "VBG", "characterOffsetEnd": 168, "segment_span": [0, 23], "characterOffsetBegin": 161, "originalText": "growing", "ArgType": null, "before": " "}, {"index": 20, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 178, "segment_span": [0, 23], "characterOffsetBegin": 169, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 21, "word": "rooted", "lemma": "root", "after": " ", "pos": "VBN", "characterOffsetEnd": 185, "segment_span": [0, 23], "characterOffsetBegin": 179, "originalText": "rooted", "ArgType": null, "before": " "}, {"index": 22, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 188, "segment_span": [0, 23], "characterOffsetBegin": 186, "originalText": "at", "ArgType": null, "before": " "}, {"index": 23, "word": "v", "lemma": "v", "after": "", "pos": "LS", "characterOffsetEnd": 190, "segment_span": [0, 23], "characterOffsetBegin": 189, "originalText": "v", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 191, "characterOffsetBegin": 190, "originalText": ".", "ArgType": null, "before": ""}], "text": "The basic idea is to visit each frontier node v , and keep a queue open of actively growing fragments rooted at v ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 194, "segment_span": [0, 12], "characterOffsetBegin": 192, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "keep", "characterOffsetEnd": 199, "after": " ", "pos": "VBP", "is_root": true, "lemma": "keep", "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 195, "originalText": "keep", "ArgType": "verb", "before": " "}, {"index": 3, "word": "expanding", "lemma": "expand", "after": " ", "pos": "VBG", "characterOffsetEnd": 209, "segment_span": [0, 12], "characterOffsetBegin": 200, "originalText": "expanding", "ArgType": null, "before": " "}, {"index": 4, "word": "incomplete", "lemma": "incomplete", "after": " ", "pos": "JJ", "characterOffsetEnd": 220, "segment_span": [0, 12], "characterOffsetBegin": 210, "originalText": "incomplete", "ArgType": null, "before": " "}, {"index": 5, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 230, "segment_span": [0, 12], "characterOffsetBegin": 221, "originalText": "fragments", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [0, 12], "characterOffsetBegin": 231, "originalText": "from", "ArgType": null, "before": " "}, {"index": 7, "word": "open", "lemma": "open", "after": "", "pos": "JJ", "characterOffsetEnd": 240, "segment_span": [0, 12], "characterOffsetBegin": 236, "originalText": "open", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 241, "segment_span": [0, 12], "characterOffsetBegin": 240, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 245, "segment_span": [0, 12], "characterOffsetBegin": 242, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "extract", "lemma": "extract", "after": " ", "pos": "NN", "characterOffsetEnd": 253, "segment_span": [0, 12], "characterOffsetBegin": 246, "originalText": "extract", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 255, "segment_span": [0, 12], "characterOffsetBegin": 254, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 260, "segment_span": [0, 12], "characterOffsetBegin": 256, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 263, "segment_span": [12, 22], "characterOffsetBegin": 261, "originalText": "if", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 265, "segment_span": [12, 22], "characterOffsetBegin": 264, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 274, "segment_span": [12, 22], "characterOffsetBegin": 266, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 16, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [12, 22], "characterOffsetBegin": 275, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 17, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 286, "segment_span": [12, 22], "characterOffsetBegin": 284, "originalText": "is", "ArgType": null, "before": " "}, {"index": 18, "word": "found", "characterOffsetEnd": 292, "after": " ", "pos": "VBN", "is_root": true, "lemma": "find", "segment_span": [12, 22], "tense": "N", "characterOffsetBegin": 287, "before": " ", "originalText": "found", "ArgType": null, "is_pass": true}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 294, "segment_span": [12, 22], "characterOffsetBegin": 293, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 298, "segment_span": [12, 22], "characterOffsetBegin": 294, "originalText": "line", "ArgType": null, "before": ""}, {"index": 21, "word": "10", "lemma": "10", "after": "", "pos": "CD", "characterOffsetEnd": 301, "segment_span": [12, 22], "characterOffsetBegin": 299, "originalText": "10", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 302, "segment_span": [12, 22], "characterOffsetBegin": 301, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 303, "characterOffsetBegin": 302, "originalText": ".", "ArgType": null, "before": ""}], "text": "We keep expanding incomplete fragments from open , and extract a rule if a complete fragment is found ( line 10 ) ."}, {"tokens": [{"index": 1, "word": "Each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 308, "segment_span": [0, 9], "characterOffsetBegin": 304, "originalText": "Each", "ArgType": null, "before": " "}, {"index": 2, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 317, "segment_span": [0, 9], "characterOffsetBegin": 309, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 320, "segment_span": [0, 9], "characterOffsetBegin": 318, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "associated", "characterOffsetEnd": 331, "after": " ", "pos": "VBN", "is_root": true, "lemma": "associate", "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 321, "before": " ", "originalText": "associated", "ArgType": null, "is_pass": true}, {"index": 5, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 336, "segment_span": [0, 9], "characterOffsetBegin": 332, "originalText": "with", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 338, "segment_span": [0, 9], "characterOffsetBegin": 337, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 347, "segment_span": [0, 9], "characterOffsetBegin": 339, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 349, "segment_span": [0, 9], "characterOffsetBegin": 348, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "variable", "lemma": "variable", "after": "", "pos": "NN", "characterOffsetEnd": 357, "segment_span": [0, 9], "characterOffsetBegin": 349, "originalText": "variable", "ArgType": null, "before": ""}], "text": "Each fragment is associated with a frontier ( variable"}, {"tokens": [{"index": 1, "word": "front", "lemma": "front", "after": " ", "pos": "NN", "characterOffsetEnd": 5, "segment_span": [0, 22], "characterOffsetBegin": 0, "originalText": "front", "ArgType": null, "before": ""}, {"index": 2, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 8, "segment_span": [0, 22], "characterOffsetBegin": 6, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 22], "characterOffsetBegin": 9, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "Pseudocode", "lemma": "pseudocode", "after": "", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 22], "characterOffsetBegin": 13, "originalText": "Pseudocode", "ArgType": null, "before": " "}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 24, "segment_span": [0, 22], "characterOffsetBegin": 23, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [0, 22], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "being", "lemma": "be", "after": " ", "pos": "VBG", "characterOffsetEnd": 31, "segment_span": [0, 22], "characterOffsetBegin": 26, "originalText": "being", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 35, "segment_span": [0, 22], "characterOffsetBegin": 32, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "subset", "lemma": "subset", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 22], "characterOffsetBegin": 36, "originalText": "subset", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 22], "characterOffsetBegin": 43, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "nonadmissible", "lemma": "nonadmissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 59, "segment_span": [0, 22], "characterOffsetBegin": 46, "originalText": "nonadmissible", "ArgType": null, "before": " "}, {"index": 12, "word": "leaf", "lemma": "leaf", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [0, 22], "characterOffsetBegin": 60, "originalText": "leaf", "ArgType": null, "before": " "}, {"index": 13, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [0, 22], "characterOffsetBegin": 65, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 72, "segment_span": [0, 22], "characterOffsetBegin": 71, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "recall", "lemma": "recall", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [0, 22], "characterOffsetBegin": 72, "originalText": "recall", "ArgType": null, "before": ""}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 83, "segment_span": [15, 21], "characterOffsetBegin": 79, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "expansion", "lemma": "expansion", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [15, 21], "characterOffsetBegin": 84, "originalText": "expansion", "ArgType": "subj", "before": " "}, {"index": 18, "word": "stops", "characterOffsetEnd": 99, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "stop", "segment_span": [15, 21], "tense": "Z", "characterOffsetBegin": 94, "originalText": "stops", "ArgType": null, "before": " "}, {"index": 19, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [15, 21], "characterOffsetBegin": 100, "originalText": "at", "ArgType": null, "before": " "}, {"index": 20, "word": "admissible", "lemma": "admissible", "after": " ", "pos": "JJ", "characterOffsetEnd": 113, "segment_span": [15, 21], "characterOffsetBegin": 103, "originalText": "admissible", "ArgType": null, "before": " "}, {"index": 21, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [15, 21], "characterOffsetBegin": 114, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 120, "segment_span": [0, 22], "characterOffsetBegin": 119, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 121, "characterOffsetBegin": 120, "originalText": ".", "ArgType": null, "before": ""}], "text": "front in the Pseudocode ) , being the subset of nonadmissible leaf nodes ( recall that expansion stops at admissible nodes ) ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [0, 26], "characterOffsetBegin": 122, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 129, "segment_span": [0, 26], "characterOffsetBegin": 125, "originalText": "each", "ArgType": null, "before": " "}, {"index": 3, "word": "initial", "lemma": "initial", "after": " ", "pos": "JJ", "characterOffsetEnd": 137, "segment_span": [0, 26], "characterOffsetBegin": 130, "originalText": "initial", "ArgType": null, "before": " "}, {"index": 4, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 146, "segment_span": [0, 26], "characterOffsetBegin": 138, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 5, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 152, "segment_span": [0, 26], "characterOffsetBegin": 147, "originalText": "along", "ArgType": null, "before": " "}, {"index": 6, "word": "hyperedge", "lemma": "hyperedge", "after": " ", "pos": "NN", "characterOffsetEnd": 162, "segment_span": [0, 26], "characterOffsetBegin": 153, "originalText": "hyperedge", "ArgType": null, "before": " "}, {"index": 7, "word": "e", "lemma": "e", "after": " ", "pos": "SYM", "characterOffsetEnd": 164, "segment_span": [0, 26], "characterOffsetBegin": 163, "originalText": "e", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 167, "segment_span": [0, 26], "characterOffsetBegin": 165, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "associated", "characterOffsetEnd": 178, "after": " ", "pos": "VBN", "is_root": true, "lemma": "associate", "segment_span": [0, 26], "tense": "N", "characterOffsetBegin": 168, "before": " ", "originalText": "associated", "ArgType": null, "is_pass": true}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 183, "segment_span": [0, 26], "characterOffsetBegin": 179, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 186, "segment_span": [0, 26], "characterOffsetBegin": 184, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "initial", "lemma": "initial", "after": " ", "pos": "JJ", "characterOffsetEnd": 194, "segment_span": [0, 26], "characterOffsetBegin": 187, "originalText": "initial", "ArgType": null, "before": " "}, {"index": 13, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [0, 26], "characterOffsetBegin": 195, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 205, "segment_span": [0, 26], "characterOffsetBegin": 204, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 209, "segment_span": [0, 26], "characterOffsetBegin": 205, "originalText": "line", "ArgType": null, "before": ""}, {"index": 16, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 211, "segment_span": [0, 26], "characterOffsetBegin": 210, "originalText": "5", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 212, "segment_span": [0, 26], "characterOffsetBegin": 211, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 213, "segment_span": [0, 26], "characterOffsetBegin": 212, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "front", "lemma": "front", "after": " ", "pos": "NN", "characterOffsetEnd": 219, "segment_span": [0, 26], "characterOffsetBegin": 214, "originalText": "front", "ArgType": null, "before": " "}, {"index": 20, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 221, "segment_span": [0, 26], "characterOffsetBegin": 220, "originalText": "=", "ArgType": null, "before": " "}, {"index": 21, "word": "tails", "lemma": "tail", "after": "", "pos": "NNS", "characterOffsetEnd": 227, "segment_span": [0, 26], "characterOffsetBegin": 222, "originalText": "tails", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 228, "segment_span": [0, 26], "characterOffsetBegin": 227, "originalText": "(", "ArgType": null, "before": ""}, {"index": 23, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 229, "segment_span": [0, 26], "characterOffsetBegin": 228, "originalText": "e", "ArgType": null, "before": ""}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 230, "segment_span": [0, 26], "characterOffsetBegin": 229, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "\\", "lemma": "\\", "after": " ", "pos": "NN", "characterOffsetEnd": 232, "segment_span": [0, 26], "characterOffsetBegin": 231, "originalText": "\\", "ArgType": null, "before": " "}, {"index": 26, "word": "admset", "lemma": "admset", "after": "", "pos": "NN", "characterOffsetEnd": 239, "segment_span": [0, 26], "characterOffsetBegin": 233, "originalText": "admset", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 240, "characterOffsetBegin": 239, "originalText": ".", "ArgType": null, "before": ""}], "text": "So each initial fragment along hyperedge e is associated with an initial frontier ( line 5 ) , front = tails ( e ) \\ admset ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 242, "segment_span": [0, 14], "characterOffsetBegin": 241, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 251, "segment_span": [0, 14], "characterOffsetBegin": 243, "originalText": "fragment", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 254, "segment_span": [0, 14], "characterOffsetBegin": 252, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 263, "segment_span": [0, 14], "characterOffsetBegin": 255, "originalText": "complete", "ArgType": "verb", "before": " "}, {"index": 5, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 266, "segment_span": [4, 9], "characterOffsetBegin": 264, "originalText": "if", "ArgType": null, "before": " "}, {"index": 6, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 270, "segment_span": [4, 9], "characterOffsetBegin": 267, "originalText": "its", "ArgType": null, "before": " "}, {"index": 7, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 279, "segment_span": [4, 9], "characterOffsetBegin": 271, "originalText": "frontier", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 282, "segment_span": [4, 9], "characterOffsetBegin": 280, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 288, "segment_span": [4, 9], "characterOffsetBegin": 283, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 290, "segment_span": [0, 14], "characterOffsetBegin": 289, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 294, "segment_span": [0, 14], "characterOffsetBegin": 290, "originalText": "line", "ArgType": null, "before": ""}, {"index": 12, "word": "9", "lemma": "9", "after": "", "pos": "CD", "characterOffsetEnd": 296, "segment_span": [0, 14], "characterOffsetBegin": 295, "originalText": "9", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 297, "segment_span": [0, 14], "characterOffsetBegin": 296, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 298, "segment_span": [0, 14], "characterOffsetBegin": 297, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "otherwise", "lemma": "otherwise", "after": " ", "pos": "RB", "characterOffsetEnd": 308, "segment_span": [14, 43], "characterOffsetBegin": 299, "originalText": "otherwise", "ArgType": null, "before": " "}, {"index": 16, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 311, "segment_span": [14, 43], "characterOffsetBegin": 309, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 17, "word": "pop", "characterOffsetEnd": 315, "after": " ", "pos": "VBP", "is_root": true, "lemma": "pop", "segment_span": [14, 43], "tense": "P", "characterOffsetBegin": 312, "originalText": "pop", "ArgType": null, "before": " "}, {"index": 18, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 319, "segment_span": [14, 43], "characterOffsetBegin": 316, "originalText": "one", "ArgType": null, "before": " "}, {"index": 19, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 328, "segment_span": [14, 43], "characterOffsetBegin": 320, "originalText": "frontier", "ArgType": null, "before": " "}, {"index": 20, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 333, "segment_span": [14, 43], "characterOffsetBegin": 329, "originalText": "node", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "u", "lemma": "u", "after": " ", "pos": "NN", "characterOffsetEnd": 335, "segment_span": [14, 43], "characterOffsetBegin": 334, "originalText": "u", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 338, "segment_span": [14, 43], "characterOffsetBegin": 336, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "expand", "lemma": "expand", "after": "", "pos": "VB", "characterOffsetEnd": 345, "segment_span": [14, 43], "characterOffsetBegin": 339, "originalText": "expand", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 346, "segment_span": [14, 43], "characterOffsetBegin": 345, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "spin", "characterOffsetEnd": 351, "after": " ", "pos": "VB", "is_root": true, "lemma": "spin", "segment_span": [24, 28], "tense": "B", "characterOffsetBegin": 347, "originalText": "spin", "ArgType": null, "before": " "}, {"index": 26, "word": "off", "lemma": "off", "after": " ", "pos": "RP", "characterOffsetEnd": 355, "segment_span": [24, 28], "characterOffsetBegin": 352, "originalText": "off", "ArgType": null, "before": " "}, {"index": 27, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 359, "segment_span": [24, 28], "characterOffsetBegin": 356, "originalText": "new", "ArgType": null, "before": " "}, {"index": 28, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 369, "segment_span": [24, 28], "characterOffsetBegin": 360, "originalText": "fragments", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 372, "segment_span": [28, 33], "characterOffsetBegin": 370, "originalText": "by", "ArgType": null, "before": " "}, {"index": 30, "word": "following", "characterOffsetEnd": 382, "after": " ", "pos": "VBG", "is_root": true, "lemma": "follow", "segment_span": [28, 33], "tense": "G", "characterOffsetBegin": 373, "originalText": "following", "ArgType": null, "before": " "}, {"index": 31, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 393, "segment_span": [28, 33], "characterOffsetBegin": 383, "originalText": "hyperedges", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 396, "segment_span": [28, 33], "characterOffsetBegin": 394, "originalText": "of", "ArgType": null, "before": " "}, {"index": 33, "word": "u", "lemma": "u", "after": "", "pos": "NN", "characterOffsetEnd": 398, "segment_span": [28, 33], "characterOffsetBegin": 397, "originalText": "u", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 399, "segment_span": [14, 43], "characterOffsetBegin": 398, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 403, "segment_span": [14, 43], "characterOffsetBegin": 400, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "update", "characterOffsetEnd": 410, "after": " ", "pos": "VB", "is_root": true, "lemma": "update", "segment_span": [35, 42], "tense": "B", "characterOffsetBegin": 404, "originalText": "update", "ArgType": null, "before": " "}, {"index": 37, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 414, "segment_span": [35, 42], "characterOffsetBegin": 411, "originalText": "the", "ArgType": null, "before": " "}, {"index": 38, "word": "frontier", "lemma": "frontier", "after": " ", "pos": "NN", "characterOffsetEnd": 423, "segment_span": [35, 42], "characterOffsetBegin": 415, "originalText": "frontier", "ArgType": "dobj", "before": " "}, {"index": 39, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 425, "segment_span": [35, 42], "characterOffsetBegin": 424, "originalText": "(", "ArgType": null, "before": " "}, {"index": 40, "word": "lines", "lemma": "line", "after": " ", "pos": "NNS", "characterOffsetEnd": 430, "segment_span": [35, 42], "characterOffsetBegin": 425, "originalText": "lines", "ArgType": null, "before": ""}, {"index": 41, "word": "14-16", "lemma": "14-16", "after": "", "pos": "CD", "characterOffsetEnd": 436, "segment_span": [35, 42], "characterOffsetBegin": 431, "originalText": "14-16", "ArgType": null, "before": " "}, {"index": 42, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 437, "segment_span": [35, 42], "characterOffsetBegin": 436, "originalText": ")", "ArgType": null, "before": ""}, {"index": 43, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 438, "segment_span": [14, 43], "characterOffsetBegin": 437, "originalText": ",", "ArgType": null, "before": ""}, {"index": 44, "word": "until", "lemma": "until", "after": " ", "pos": "IN", "characterOffsetEnd": 444, "segment_span": [43, 51], "characterOffsetBegin": 439, "originalText": "until", "ArgType": null, "before": " "}, {"index": 45, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 448, "segment_span": [43, 51], "characterOffsetBegin": 445, "originalText": "all", "ArgType": null, "before": " "}, {"index": 46, "word": "active", "lemma": "active", "after": " ", "pos": "JJ", "characterOffsetEnd": 455, "segment_span": [43, 51], "characterOffsetBegin": 449, "originalText": "active", "ArgType": null, "before": " "}, {"index": 47, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 465, "segment_span": [43, 51], "characterOffsetBegin": 456, "originalText": "fragments", "ArgType": "subj", "before": " "}, {"index": 48, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 469, "segment_span": [43, 51], "characterOffsetBegin": 466, "originalText": "are", "ArgType": null, "before": " "}, {"index": 49, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 478, "segment_span": [43, 51], "characterOffsetBegin": 470, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 50, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 482, "segment_span": [43, 51], "characterOffsetBegin": 479, "originalText": "and", "ArgType": null, "before": " "}, {"index": 51, "word": "open", "lemma": "open", "after": " ", "pos": "JJ", "characterOffsetEnd": 487, "segment_span": [43, 51], "characterOffsetBegin": 483, "originalText": "open", "ArgType": null, "before": " "}, {"index": 52, "word": "queue", "lemma": "queue", "after": " ", "pos": "NN", "characterOffsetEnd": 493, "segment_span": [51, 58], "characterOffsetBegin": 488, "originalText": "queue", "ArgType": "subj", "before": " "}, {"index": 53, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 496, "segment_span": [51, 58], "characterOffsetBegin": 494, "originalText": "is", "ArgType": null, "before": " "}, {"index": 54, "word": "empty", "lemma": "empty", "after": " ", "pos": "JJ", "characterOffsetEnd": 502, "segment_span": [51, 58], "characterOffsetBegin": 497, "originalText": "empty", "ArgType": null, "before": " "}, {"index": 55, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 504, "segment_span": [51, 58], "characterOffsetBegin": 503, "originalText": "(", "ArgType": null, "before": " "}, {"index": 56, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 508, "segment_span": [51, 58], "characterOffsetBegin": 504, "originalText": "line", "ArgType": null, "before": ""}, {"index": 57, "word": "7", "lemma": "7", "after": "", "pos": "CD", "characterOffsetEnd": 510, "segment_span": [51, 58], "characterOffsetBegin": 509, "originalText": "7", "ArgType": null, "before": " "}, {"index": 58, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 511, "segment_span": [51, 58], "characterOffsetBegin": 510, "originalText": ")", "ArgType": null, "before": ""}, {"index": 59, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 512, "characterOffsetBegin": 511, "originalText": ".", "ArgType": null, "before": ""}], "text": "A fragment is complete if its frontier is empty ( line 9 ) , otherwise we pop one frontier node u to expand , spin off new fragments by following hyperedges of u , and update the frontier ( lines 14-16 ) , until all active fragments are complete and open queue is empty ( line 7 ) ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 514, "segment_span": [0, 13], "characterOffsetBegin": 513, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 521, "segment_span": [0, 13], "characterOffsetBegin": 515, "originalText": "single", "ArgType": null, "before": " "}, {"index": 3, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 527, "segment_span": [0, 13], "characterOffsetBegin": 522, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 4, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 532, "segment_span": [0, 13], "characterOffsetBegin": 528, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 536, "segment_span": [0, 13], "characterOffsetBegin": 533, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 541, "segment_span": [0, 13], "characterOffsetBegin": 537, "originalText": "also", "ArgType": null, "before": " "}, {"index": 7, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 544, "segment_span": [0, 13], "characterOffsetBegin": 542, "originalText": "be", "ArgType": null, "before": " "}, {"index": 8, "word": "viewed", "characterOffsetEnd": 551, "after": " ", "pos": "VBN", "is_root": true, "lemma": "view", "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 545, "before": " ", "originalText": "viewed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 9, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 554, "segment_span": [0, 13], "characterOffsetBegin": 552, "originalText": "as", "ArgType": null, "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 556, "segment_span": [0, 13], "characterOffsetBegin": 555, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "trivial", "lemma": "trivial", "after": " ", "pos": "JJ", "characterOffsetEnd": 564, "segment_span": [0, 13], "characterOffsetBegin": 557, "originalText": "trivial", "ArgType": null, "before": " "}, {"index": 12, "word": "forest", "lemma": "forest", "after": "", "pos": "NN", "characterOffsetEnd": 571, "segment_span": [0, 13], "characterOffsetBegin": 565, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 572, "segment_span": [0, 13], "characterOffsetBegin": 571, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 578, "segment_span": [13, 21], "characterOffsetBegin": 573, "originalText": "where", "ArgType": null, "before": " "}, {"index": 15, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 583, "segment_span": [13, 21], "characterOffsetBegin": 579, "originalText": "each", "ArgType": null, "before": " "}, {"index": 16, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 588, "segment_span": [13, 21], "characterOffsetBegin": 584, "originalText": "node", "ArgType": "subj", "before": " "}, {"index": 17, "word": "has", "characterOffsetEnd": 592, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [13, 21], "tense": "Z", "characterOffsetBegin": 589, "originalText": "has", "ArgType": null, "before": " "}, {"index": 18, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 597, "segment_span": [13, 21], "characterOffsetBegin": 593, "originalText": "only", "ArgType": null, "before": " "}, {"index": 19, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 601, "segment_span": [13, 21], "characterOffsetBegin": 598, "originalText": "one", "ArgType": null, "before": " "}, {"index": 20, "word": "incoming", "lemma": "incoming", "after": " ", "pos": "JJ", "characterOffsetEnd": 610, "segment_span": [13, 21], "characterOffsetBegin": 602, "originalText": "incoming", "ArgType": null, "before": " "}, {"index": 21, "word": "hyperedge", "lemma": "hyperedge", "after": "", "pos": "NN", "characterOffsetEnd": 620, "segment_span": [13, 21], "characterOffsetBegin": 611, "originalText": "hyperedge", "ArgType": "dobj", "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 621, "characterOffsetBegin": 620, "originalText": ".", "ArgType": null, "before": ""}], "text": "A single parse tree can also be viewed as a trivial forest , where each node has only one incoming hyperedge ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 624, "segment_span": [0, 15], "characterOffsetBegin": 622, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 628, "segment_span": [0, 15], "characterOffsetBegin": 625, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 635, "segment_span": [0, 15], "characterOffsetBegin": 629, "originalText": "Galley", "ArgType": null, "before": " "}, {"index": 4, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 638, "segment_span": [0, 15], "characterOffsetBegin": 636, "originalText": "et", "ArgType": null, "before": " "}, {"index": 5, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 642, "segment_span": [0, 15], "characterOffsetBegin": 639, "originalText": "al.", "ArgType": "subj", "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 644, "segment_span": [0, 15], "characterOffsetBegin": 643, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 648, "segment_span": [0, 15], "characterOffsetBegin": 644, "originalText": "2004", "ArgType": null, "before": ""}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 649, "segment_span": [0, 15], "characterOffsetBegin": 648, "originalText": ")", "ArgType": null, "before": ""}, {"index": 9, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 659, "segment_span": [0, 15], "characterOffsetBegin": 650, "originalText": "algorithm", "ArgType": "verb", "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 663, "segment_span": [0, 15], "characterOffsetBegin": 660, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 674, "segment_span": [0, 15], "characterOffsetBegin": 664, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 12, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 679, "segment_span": [0, 15], "characterOffsetBegin": 675, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 13, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 690, "segment_span": [0, 15], "characterOffsetBegin": 680, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 692, "segment_span": [0, 15], "characterOffsetBegin": 691, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "Sec", "lemma": "sec", "after": "", "pos": "NN", "characterOffsetEnd": 695, "segment_span": [0, 15], "characterOffsetBegin": 692, "originalText": "Sec", "ArgType": null, "before": ""}, {"index": 16, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 696, "characterOffsetBegin": 695, "originalText": ".", "ArgType": null, "before": ""}], "text": "So the Galley et al. ( 2004 ) algorithm for tree-based rule extraction ( Sec ."}, {"tokens": [{"index": 1, "word": "2.2", "lemma": "2.2", "after": "", "pos": "CD", "characterOffsetEnd": 700, "segment_span": [0, 12], "characterOffsetBegin": 697, "originalText": "2.2", "ArgType": null, "before": " "}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 701, "segment_span": [0, 12], "characterOffsetBegin": 700, "originalText": ")", "ArgType": null, "before": ""}, {"index": 3, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 705, "segment_span": [0, 12], "characterOffsetBegin": 702, "originalText": "can", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 708, "segment_span": [0, 12], "characterOffsetBegin": 706, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "considered", "characterOffsetEnd": 719, "after": " ", "pos": "VBN", "is_root": true, "lemma": "consider", "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 709, "before": " ", "originalText": "considered", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 721, "segment_span": [0, 12], "characterOffsetBegin": 720, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "special", "lemma": "special", "after": " ", "pos": "JJ", "characterOffsetEnd": 729, "segment_span": [0, 12], "characterOffsetBegin": 722, "originalText": "special", "ArgType": null, "before": " "}, {"index": 8, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 734, "segment_span": [0, 12], "characterOffsetBegin": 730, "originalText": "case", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 737, "segment_span": [0, 12], "characterOffsetBegin": 735, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 741, "segment_span": [0, 12], "characterOffsetBegin": 738, "originalText": "our", "ArgType": null, "before": " "}, {"index": 11, "word": "algorithm", "lemma": "algorithm", "after": "", "pos": "NN", "characterOffsetEnd": 751, "segment_span": [0, 12], "characterOffsetBegin": 742, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 752, "segment_span": [0, 12], "characterOffsetBegin": 751, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 758, "segment_span": [12, 22], "characterOffsetBegin": 753, "originalText": "where", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 762, "segment_span": [12, 22], "characterOffsetBegin": 759, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "queue", "lemma": "queue", "after": " ", "pos": "NN", "characterOffsetEnd": 768, "segment_span": [12, 22], "characterOffsetBegin": 763, "originalText": "queue", "ArgType": "subj", "before": " "}, {"index": 16, "word": "open", "lemma": "open", "after": " ", "pos": "JJ", "characterOffsetEnd": 773, "segment_span": [12, 22], "characterOffsetBegin": 769, "originalText": "open", "ArgType": null, "before": " "}, {"index": 17, "word": "always", "lemma": "always", "after": " ", "pos": "RB", "characterOffsetEnd": 780, "segment_span": [12, 22], "characterOffsetBegin": 774, "originalText": "always", "ArgType": null, "before": " "}, {"index": 18, "word": "contains", "lemma": "contain", "after": " ", "pos": "VBZ", "characterOffsetEnd": 789, "segment_span": [12, 22], "characterOffsetBegin": 781, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 19, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 793, "segment_span": [12, 22], "characterOffsetBegin": 790, "originalText": "one", "ArgType": null, "before": " "}, {"index": 20, "word": "single", "lemma": "single", "after": " ", "pos": "JJ", "characterOffsetEnd": 800, "segment_span": [12, 22], "characterOffsetBegin": 794, "originalText": "single", "ArgType": null, "before": " "}, {"index": 21, "word": "active", "lemma": "active", "after": " ", "pos": "JJ", "characterOffsetEnd": 807, "segment_span": [12, 22], "characterOffsetBegin": 801, "originalText": "active", "ArgType": null, "before": " "}, {"index": 22, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 816, "segment_span": [12, 22], "characterOffsetBegin": 808, "originalText": "fragment", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 817, "characterOffsetBegin": 816, "originalText": ".", "ArgType": null, "before": ""}], "text": "2.2 ) can be considered a special case of our algorithm , where the queue open always contains one single active fragment ."}], "title": "3.2 Forest-based Rule Extraction Algorithm"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 19], "characterOffsetBegin": 3, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 3, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 19], "characterOffsetBegin": 14, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 25, "segment_span": [0, 19], "characterOffsetBegin": 24, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 29, "segment_span": [0, 19], "characterOffsetBegin": 26, "originalText": "for", "ArgType": null, "before": " "}, {"index": 6, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 19], "characterOffsetBegin": 30, "originalText": "each", "ArgType": null, "before": " "}, {"index": 7, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 43, "segment_span": [0, 19], "characterOffsetBegin": 35, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 8, "word": "pair", "lemma": "pair", "after": "", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 19], "characterOffsetBegin": 44, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 49, "segment_span": [0, 19], "characterOffsetBegin": 48, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 54, "segment_span": [0, 19], "characterOffsetBegin": 50, "originalText": "each", "ArgType": null, "before": " "}, {"index": 11, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 59, "segment_span": [0, 19], "characterOffsetBegin": 55, "originalText": "rule", "ArgType": "subj", "before": " "}, {"index": 12, "word": "extracted", "characterOffsetEnd": 69, "after": " ", "pos": "VBN", "is_root": true, "lemma": "extract", "segment_span": [0, 19], "tense": "N", "characterOffsetBegin": 60, "originalText": "extracted", "ArgType": "verb", "before": " "}, {"index": 13, "word": "naturally", "lemma": "naturally", "after": " ", "pos": "RB", "characterOffsetEnd": 79, "segment_span": [0, 19], "characterOffsetBegin": 70, "originalText": "naturally", "ArgType": null, "before": " "}, {"index": 14, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 83, "segment_span": [0, 19], "characterOffsetBegin": 80, "originalText": "has", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [0, 19], "characterOffsetBegin": 84, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "count", "lemma": "count", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 19], "characterOffsetBegin": 86, "originalText": "count", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [0, 19], "characterOffsetBegin": 92, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "one", "lemma": "one", "after": "", "pos": "CD", "characterOffsetEnd": 98, "segment_span": [0, 19], "characterOffsetBegin": 95, "originalText": "one", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 99, "segment_span": [0, 19], "characterOffsetBegin": 98, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 105, "segment_span": [19, 29], "characterOffsetBegin": 100, "originalText": "which", "ArgType": null, "before": " "}, {"index": 21, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 110, "segment_span": [19, 29], "characterOffsetBegin": 106, "originalText": "will", "ArgType": null, "before": " "}, {"index": 22, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 113, "segment_span": [19, 29], "characterOffsetBegin": 111, "originalText": "be", "ArgType": null, "before": " "}, {"index": 23, "word": "used", "characterOffsetEnd": 118, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [19, 29], "tense": "N", "characterOffsetBegin": 114, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [19, 29], "characterOffsetBegin": 119, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "maximum-likelihood", "lemma": "maximum-likelihood", "after": " ", "pos": "JJ", "characterOffsetEnd": 140, "segment_span": [19, 29], "characterOffsetBegin": 122, "originalText": "maximum-likelihood", "ArgType": null, "before": " "}, {"index": 26, "word": "estimation", "lemma": "estimation", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [19, 29], "characterOffsetBegin": 141, "originalText": "estimation", "ArgType": null, "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [19, 29], "characterOffsetBegin": 152, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 159, "segment_span": [19, 29], "characterOffsetBegin": 155, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 29, "word": "probabilities", "lemma": "probability", "after": "", "pos": "NNS", "characterOffsetEnd": 173, "segment_span": [19, 29], "characterOffsetBegin": 160, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 174, "characterOffsetBegin": 173, "originalText": ".", "ArgType": null, "before": ""}], "text": "In tree-based extraction , for each sentence pair , each rule extracted naturally has a count of one , which will be used in maximum-likelihood estimation of rule probabilities ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 182, "segment_span": [0, 31], "characterOffsetBegin": 175, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 183, "segment_span": [0, 31], "characterOffsetBegin": 182, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 185, "segment_span": [0, 31], "characterOffsetBegin": 184, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 192, "segment_span": [0, 31], "characterOffsetBegin": 186, "originalText": "forest", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 195, "segment_span": [0, 31], "characterOffsetBegin": 193, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 198, "segment_span": [0, 31], "characterOffsetBegin": 196, "originalText": "an", "ArgType": null, "before": " "}, {"index": 7, "word": "implicit", "lemma": "implicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 207, "segment_span": [0, 31], "characterOffsetBegin": 199, "originalText": "implicit", "ArgType": null, "before": " "}, {"index": 8, "word": "collection", "lemma": "collection", "after": " ", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [0, 31], "characterOffsetBegin": 208, "originalText": "collection", "ArgType": "subj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 221, "segment_span": [0, 31], "characterOffsetBegin": 219, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 226, "segment_span": [0, 31], "characterOffsetBegin": 222, "originalText": "many", "ArgType": null, "before": " "}, {"index": 11, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 231, "segment_span": [0, 31], "characterOffsetBegin": 227, "originalText": "more", "ArgType": null, "before": " "}, {"index": 12, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 237, "segment_span": [0, 31], "characterOffsetBegin": 232, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 238, "segment_span": [0, 31], "characterOffsetBegin": 237, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 243, "segment_span": [0, 31], "characterOffsetBegin": 239, "originalText": "each", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 246, "segment_span": [0, 31], "characterOffsetBegin": 244, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "which", "lemma": "which", "after": "", "pos": "WDT", "characterOffsetEnd": 252, "segment_span": [0, 31], "characterOffsetBegin": 247, "originalText": "which", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 253, "segment_span": [0, 31], "characterOffsetBegin": 252, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 258, "segment_span": [17, 19], "characterOffsetBegin": 254, "originalText": "when", "ArgType": null, "before": " "}, {"index": 19, "word": "enumerated", "characterOffsetEnd": 269, "after": "", "pos": "VBN", "is_root": true, "lemma": "enumerate", "segment_span": [17, 19], "tense": "N", "characterOffsetBegin": 259, "originalText": "enumerated", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 270, "segment_span": [0, 31], "characterOffsetBegin": 269, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "has", "characterOffsetEnd": 274, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 31], "tense": "Z", "characterOffsetBegin": 271, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 22, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 278, "segment_span": [0, 31], "characterOffsetBegin": 275, "originalText": "its", "ArgType": null, "before": " "}, {"index": 23, "word": "own", "lemma": "own", "after": " ", "pos": "JJ", "characterOffsetEnd": 282, "segment_span": [0, 31], "characterOffsetBegin": 279, "originalText": "own", "ArgType": null, "before": " "}, {"index": 24, "word": "probability", "lemma": "probability", "after": " ", "pos": "NN", "characterOffsetEnd": 294, "segment_span": [0, 31], "characterOffsetBegin": 283, "originalText": "probability", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "accumulated", "lemma": "accumulate", "after": " ", "pos": "VBN", "characterOffsetEnd": 306, "segment_span": [0, 31], "characterOffsetBegin": 295, "originalText": "accumulated", "ArgType": null, "before": " "}, {"index": 26, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 311, "segment_span": [0, 31], "characterOffsetBegin": 307, "originalText": "from", "ArgType": null, "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 314, "segment_span": [0, 31], "characterOffsetBegin": 312, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 318, "segment_span": [0, 31], "characterOffsetBegin": 315, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 324, "segment_span": [0, 31], "characterOffsetBegin": 319, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 30, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 335, "segment_span": [0, 31], "characterOffsetBegin": 325, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 31, "word": "involved", "lemma": "involve", "after": "", "pos": "VBN", "characterOffsetEnd": 344, "segment_span": [0, 31], "characterOffsetBegin": 336, "originalText": "involved", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 345, "characterOffsetBegin": 344, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , a forest is an implicit collection of many more trees , each of which , when enumerated , has its own probability accumulated from of the parse hyperedges involved ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 348, "segment_span": [0, 19], "characterOffsetBegin": 346, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 354, "segment_span": [0, 19], "characterOffsetBegin": 349, "originalText": "other", "ArgType": null, "before": " "}, {"index": 3, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 360, "segment_span": [0, 19], "characterOffsetBegin": 355, "originalText": "words", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 361, "segment_span": [0, 19], "characterOffsetBegin": 360, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 363, "segment_span": [0, 19], "characterOffsetBegin": 362, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 370, "segment_span": [0, 19], "characterOffsetBegin": 364, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 374, "segment_span": [0, 19], "characterOffsetBegin": 371, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 377, "segment_span": [0, 19], "characterOffsetBegin": 375, "originalText": "be", "ArgType": null, "before": " "}, {"index": 9, "word": "viewed", "characterOffsetEnd": 384, "after": " ", "pos": "VBN", "is_root": true, "lemma": "view", "segment_span": [0, 19], "tense": "N", "characterOffsetBegin": 378, "before": " ", "originalText": "viewed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 387, "segment_span": [0, 19], "characterOffsetBegin": 385, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 389, "segment_span": [0, 19], "characterOffsetBegin": 388, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "virtual", "lemma": "virtual", "after": " ", "pos": "JJ", "characterOffsetEnd": 397, "segment_span": [0, 19], "characterOffsetBegin": 390, "originalText": "virtual", "ArgType": null, "before": " "}, {"index": 13, "word": "weighted", "lemma": "weighted", "after": " ", "pos": "JJ", "characterOffsetEnd": 406, "segment_span": [0, 19], "characterOffsetBegin": 398, "originalText": "weighted", "ArgType": null, "before": " "}, {"index": 14, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "NN", "characterOffsetEnd": 413, "segment_span": [0, 19], "characterOffsetBegin": 407, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 15, "word": "list", "lemma": "list", "after": " ", "pos": "NN", "characterOffsetEnd": 418, "segment_span": [0, 19], "characterOffsetBegin": 414, "originalText": "list", "ArgType": null, "before": " "}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 423, "segment_span": [0, 19], "characterOffsetBegin": 419, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 425, "segment_span": [0, 19], "characterOffsetBegin": 424, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "huge", "lemma": "huge", "after": " ", "pos": "JJ", "characterOffsetEnd": 430, "segment_span": [0, 19], "characterOffsetBegin": 426, "originalText": "huge", "ArgType": null, "before": " "}, {"index": 19, "word": "k", "lemma": "k", "after": "", "pos": "NN", "characterOffsetEnd": 432, "segment_span": [0, 19], "characterOffsetBegin": 431, "originalText": "k", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 433, "characterOffsetBegin": 432, "originalText": ".", "ArgType": null, "before": ""}], "text": "In other words , a forest can be viewed as a virtual weighted k-best list with a huge k ."}, {"tokens": [{"index": 1, "word": "So", "lemma": "so", "after": " ", "pos": "IN", "characterOffsetEnd": 436, "segment_span": [0, 22], "characterOffsetBegin": 434, "originalText": "So", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 438, "segment_span": [0, 22], "characterOffsetBegin": 437, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 443, "segment_span": [0, 22], "characterOffsetBegin": 439, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 4, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 453, "segment_span": [0, 22], "characterOffsetBegin": 444, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 5, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 458, "segment_span": [0, 22], "characterOffsetBegin": 454, "originalText": "from", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 460, "segment_span": [0, 22], "characterOffsetBegin": 459, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "non", "lemma": "non", "after": " ", "pos": "JJ", "characterOffsetEnd": 464, "segment_span": [0, 22], "characterOffsetBegin": 461, "originalText": "non", "ArgType": null, "before": " "}, {"index": 8, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 471, "segment_span": [0, 22], "characterOffsetBegin": 465, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 9, "word": "parse", "lemma": "parse", "after": "", "pos": "NN", "characterOffsetEnd": 477, "segment_span": [0, 22], "characterOffsetBegin": 472, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 478, "segment_span": [0, 22], "characterOffsetBegin": 477, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "i.e.", "lemma": "i.e.", "after": "", "pos": "FW", "characterOffsetEnd": 483, "segment_span": [0, 22], "characterOffsetBegin": 479, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 484, "segment_span": [0, 22], "characterOffsetBegin": 483, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 490, "segment_span": [0, 22], "characterOffsetBegin": 485, "originalText": "using", "ArgType": null, "before": " "}, {"index": 14, "word": "non", "lemma": "non", "after": " ", "pos": "JJ", "characterOffsetEnd": 494, "segment_span": [0, 22], "characterOffsetBegin": 491, "originalText": "non", "ArgType": null, "before": " "}, {"index": 15, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 501, "segment_span": [0, 22], "characterOffsetBegin": 495, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 16, "word": "hyperedges", "lemma": "hyperedge", "after": "", "pos": "NNS", "characterOffsetEnd": 512, "segment_span": [0, 22], "characterOffsetBegin": 502, "originalText": "hyperedges", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 513, "segment_span": [0, 22], "characterOffsetBegin": 512, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 520, "segment_span": [0, 22], "characterOffsetBegin": 514, "originalText": "should", "ArgType": null, "before": " "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 523, "segment_span": [0, 22], "characterOffsetBegin": 521, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "penalized", "characterOffsetEnd": 533, "after": " ", "pos": "VBN", "is_root": true, "lemma": "penalize", "segment_span": [0, 22], "tense": "N", "characterOffsetBegin": 524, "before": " ", "originalText": "penalized", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 21, "word": "accordingly", "lemma": "accordingly", "after": " ", "pos": "RB", "characterOffsetEnd": 545, "segment_span": [0, 22], "characterOffsetBegin": 534, "originalText": "accordingly", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 549, "segment_span": [0, 22], "characterOffsetBegin": 546, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 556, "segment_span": [22, 40], "characterOffsetBegin": 550, "originalText": "should", "ArgType": null, "before": " "}, {"index": 24, "word": "have", "characterOffsetEnd": 561, "after": " ", "pos": "VB", "is_root": true, "lemma": "have", "segment_span": [22, 40], "tense": "B", "characterOffsetBegin": 557, "originalText": "have", "has_aux": true, "ArgType": null, "before": " "}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 563, "segment_span": [22, 40], "characterOffsetBegin": 562, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "fractional", "lemma": "fractional", "after": " ", "pos": "JJ", "characterOffsetEnd": 574, "segment_span": [22, 40], "characterOffsetBegin": 564, "originalText": "fractional", "ArgType": null, "before": " "}, {"index": 27, "word": "count", "lemma": "count", "after": " ", "pos": "NN", "characterOffsetEnd": 580, "segment_span": [22, 40], "characterOffsetBegin": 575, "originalText": "count", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "instead", "lemma": "instead", "after": " ", "pos": "RB", "characterOffsetEnd": 588, "segment_span": [22, 40], "characterOffsetBegin": 581, "originalText": "instead", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 591, "segment_span": [22, 40], "characterOffsetBegin": 589, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 593, "segment_span": [22, 40], "characterOffsetBegin": 592, "originalText": "a", "ArgType": null, "before": " "}, {"index": 31, "word": "unit", "lemma": "unit", "after": " ", "pos": "NN", "characterOffsetEnd": 598, "segment_span": [22, 40], "characterOffsetBegin": 594, "originalText": "unit", "ArgType": null, "before": " "}, {"index": 32, "word": "one", "lemma": "one", "after": "", "pos": "CD", "characterOffsetEnd": 602, "segment_span": [22, 40], "characterOffsetBegin": 599, "originalText": "one", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 603, "segment_span": [22, 40], "characterOffsetBegin": 602, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 611, "segment_span": [22, 40], "characterOffsetBegin": 604, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 35, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 614, "segment_span": [22, 40], "characterOffsetBegin": 612, "originalText": "to", "ArgType": null, "before": " "}, {"index": 36, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 618, "segment_span": [22, 40], "characterOffsetBegin": 615, "originalText": "the", "ArgType": null, "before": " "}, {"index": 37, "word": "E-step", "lemma": "e-step", "after": " ", "pos": "NN", "characterOffsetEnd": 625, "segment_span": [22, 40], "characterOffsetBegin": 619, "originalText": "E-step", "ArgType": null, "before": " "}, {"index": 38, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 628, "segment_span": [22, 40], "characterOffsetBegin": 626, "originalText": "in", "ArgType": null, "before": " "}, {"index": 39, "word": "EM", "lemma": "EM", "after": " ", "pos": "NNP", "characterOffsetEnd": 631, "segment_span": [22, 40], "characterOffsetBegin": 629, "originalText": "EM", "ArgType": null, "before": " "}, {"index": 40, "word": "algorithms", "lemma": "algorithm", "after": "", "pos": "NNS", "characterOffsetEnd": 642, "segment_span": [22, 40], "characterOffsetBegin": 632, "originalText": "algorithms", "ArgType": null, "before": " "}, {"index": 41, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 643, "characterOffsetBegin": 642, "originalText": ".", "ArgType": null, "before": ""}], "text": "So a rule extracted from a non 1-best parse , i.e. , using non 1-best hyperedges , should be penalized accordingly and should have a fractional count instead of a unit one , similar to the E-step in EM algorithms ."}, {"tokens": [{"index": 1, "word": "Inspired", "lemma": "inspire", "after": " ", "pos": "VBN", "characterOffsetEnd": 652, "segment_span": [0, 37], "characterOffsetBegin": 644, "originalText": "Inspired", "ArgType": null, "before": " "}, {"index": 2, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 655, "segment_span": [0, 37], "characterOffsetBegin": 653, "originalText": "by", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 659, "segment_span": [0, 37], "characterOffsetBegin": 656, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 667, "segment_span": [0, 37], "characterOffsetBegin": 660, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 5, "word": "literature", "lemma": "literature", "after": " ", "pos": "NN", "characterOffsetEnd": 678, "segment_span": [0, 37], "characterOffsetBegin": 668, "originalText": "literature", "ArgType": null, "before": " "}, {"index": 6, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 681, "segment_span": [0, 37], "characterOffsetBegin": 679, "originalText": "on", "ArgType": null, "before": " "}, {"index": 7, "word": "pruning", "lemma": "pruning", "after": " ", "pos": "NN", "characterOffsetEnd": 689, "segment_span": [0, 37], "characterOffsetBegin": 682, "originalText": "pruning", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 691, "segment_span": [0, 37], "characterOffsetBegin": 690, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "Charniak", "lemma": "charniak", "after": " ", "pos": "NN", "characterOffsetEnd": 699, "segment_span": [0, 37], "characterOffsetBegin": 691, "originalText": "Charniak", "ArgType": null, "before": ""}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 703, "segment_span": [0, 37], "characterOffsetBegin": 700, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "Johnson", "lemma": "Johnson", "after": "", "pos": "NNP", "characterOffsetEnd": 711, "segment_span": [0, 37], "characterOffsetBegin": 704, "originalText": "Johnson", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 712, "segment_span": [0, 37], "characterOffsetBegin": 711, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 717, "segment_span": [0, 37], "characterOffsetBegin": 713, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 14, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 718, "segment_span": [0, 37], "characterOffsetBegin": 717, "originalText": ";", "ArgType": null, "before": ""}, {"index": 15, "word": "Huang", "lemma": "Huang", "after": "", "pos": "NNP", "characterOffsetEnd": 724, "segment_span": [0, 37], "characterOffsetBegin": 719, "originalText": "Huang", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 725, "segment_span": [0, 37], "characterOffsetBegin": 724, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 730, "segment_span": [0, 37], "characterOffsetBegin": 726, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 731, "segment_span": [0, 37], "characterOffsetBegin": 730, "originalText": ")", "ArgType": null, "before": ""}, {"index": 19, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 734, "segment_span": [0, 37], "characterOffsetBegin": 732, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 20, "word": "penalize", "characterOffsetEnd": 743, "after": " ", "pos": "VBP", "is_root": true, "lemma": "penalize", "segment_span": [0, 37], "tense": "P", "characterOffsetBegin": 735, "originalText": "penalize", "ArgType": "verb", "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 745, "segment_span": [0, 37], "characterOffsetBegin": 744, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 750, "segment_span": [0, 37], "characterOffsetBegin": 746, "originalText": "rule", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "r", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 752, "segment_span": [0, 37], "characterOffsetBegin": 751, "originalText": "r", "ArgType": null, "before": " "}, {"index": 24, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 755, "segment_span": [0, 37], "characterOffsetBegin": 753, "originalText": "by", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 759, "segment_span": [0, 37], "characterOffsetBegin": 756, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "posterior", "lemma": "posterior", "after": " ", "pos": "JJ", "characterOffsetEnd": 769, "segment_span": [0, 37], "characterOffsetBegin": 760, "originalText": "posterior", "ArgType": null, "before": " "}, {"index": 27, "word": "probability", "lemma": "probability", "after": " ", "pos": "NN", "characterOffsetEnd": 781, "segment_span": [0, 37], "characterOffsetBegin": 770, "originalText": "probability", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 784, "segment_span": [0, 37], "characterOffsetBegin": 782, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 788, "segment_span": [0, 37], "characterOffsetBegin": 785, "originalText": "its", "ArgType": null, "before": " "}, {"index": 30, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 793, "segment_span": [0, 37], "characterOffsetBegin": 789, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 31, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 802, "segment_span": [0, 37], "characterOffsetBegin": 794, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 32, "word": "frag", "lemma": "frag", "after": " ", "pos": "NN", "characterOffsetEnd": 807, "segment_span": [0, 37], "characterOffsetBegin": 803, "originalText": "frag", "ArgType": null, "before": " "}, {"index": 33, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 809, "segment_span": [0, 37], "characterOffsetBegin": 808, "originalText": "=", "ArgType": null, "before": " "}, {"index": 34, "word": "lhs", "lemma": "lh", "after": "", "pos": "NNS", "characterOffsetEnd": 813, "segment_span": [0, 37], "characterOffsetBegin": 810, "originalText": "lhs", "ArgType": null, "before": " "}, {"index": 35, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 814, "segment_span": [0, 37], "characterOffsetBegin": 813, "originalText": "(", "ArgType": null, "before": ""}, {"index": 36, "word": "r", "lemma": "r", "after": "", "pos": "NN", "characterOffsetEnd": 815, "segment_span": [0, 37], "characterOffsetBegin": 814, "originalText": "r", "ArgType": null, "before": ""}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 816, "segment_span": [0, 37], "characterOffsetBegin": 815, "originalText": ")", "ArgType": null, "before": ""}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 817, "characterOffsetBegin": 816, "originalText": ".", "ArgType": null, "before": ""}], "text": "Inspired by the parsing literature on pruning ( Charniak and Johnson , 2005 ; Huang , 2008 ) we penalize a rule r by the posterior probability of its tree fragment frag = lhs ( r ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 822, "segment_span": [0, 50], "characterOffsetBegin": 818, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "posterior", "lemma": "posterior", "after": " ", "pos": "JJ", "characterOffsetEnd": 832, "segment_span": [0, 50], "characterOffsetBegin": 823, "originalText": "posterior", "ArgType": null, "before": " "}, {"index": 3, "word": "probability", "lemma": "probability", "after": "", "pos": "NN", "characterOffsetEnd": 844, "segment_span": [0, 50], "characterOffsetBegin": 833, "originalText": "probability", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 845, "segment_span": [0, 50], "characterOffsetBegin": 844, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "notated", "lemma": "notated", "after": " ", "pos": "JJ", "characterOffsetEnd": 853, "segment_span": [0, 50], "characterOffsetBegin": 846, "originalText": "notated", "ArgType": null, "before": " "}, {"index": 6, "word": "\u00ce\u00b1\u00ce\u00b2", "lemma": "\u00ce\u00b1\u00ce\u00b2", "after": "", "pos": "NN", "characterOffsetEnd": 856, "segment_span": [0, 50], "characterOffsetBegin": 854, "originalText": "\u00ce\u00b1\u00ce\u00b2", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 857, "segment_span": [0, 50], "characterOffsetBegin": 856, "originalText": "(", "ArgType": null, "before": ""}, {"index": 8, "word": "frag", "lemma": "frag", "after": "", "pos": "NN", "characterOffsetEnd": 861, "segment_span": [0, 50], "characterOffsetBegin": 857, "originalText": "frag", "ArgType": null, "before": ""}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 862, "segment_span": [0, 50], "characterOffsetBegin": 861, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 863, "segment_span": [0, 50], "characterOffsetBegin": 862, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 867, "segment_span": [0, 50], "characterOffsetBegin": 864, "originalText": "can", "ArgType": null, "before": " "}, {"index": 12, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 870, "segment_span": [0, 50], "characterOffsetBegin": 868, "originalText": "be", "ArgType": null, "before": " "}, {"index": 13, "word": "computed", "characterOffsetEnd": 879, "after": " ", "pos": "VBN", "is_root": true, "lemma": "compute", "segment_span": [0, 50], "tense": "N", "characterOffsetBegin": 871, "before": " ", "originalText": "computed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 14, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 882, "segment_span": [0, 50], "characterOffsetBegin": 880, "originalText": "in", "ArgType": null, "before": " "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 885, "segment_span": [0, 50], "characterOffsetBegin": 883, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "InsideOutside", "lemma": "InsideOutside", "after": " ", "pos": "NNP", "characterOffsetEnd": 899, "segment_span": [0, 50], "characterOffsetBegin": 886, "originalText": "InsideOutside", "ArgType": null, "before": " "}, {"index": 17, "word": "fashion", "lemma": "fashion", "after": " ", "pos": "NN", "characterOffsetEnd": 907, "segment_span": [0, 50], "characterOffsetBegin": 900, "originalText": "fashion", "ArgType": null, "before": " "}, {"index": 18, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 910, "segment_span": [0, 50], "characterOffsetBegin": 908, "originalText": "as", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 914, "segment_span": [0, 50], "characterOffsetBegin": 911, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "product", "lemma": "product", "after": " ", "pos": "NN", "characterOffsetEnd": 922, "segment_span": [0, 50], "characterOffsetBegin": 915, "originalText": "product", "ArgType": null, "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 925, "segment_span": [0, 50], "characterOffsetBegin": 923, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 931, "segment_span": [0, 50], "characterOffsetBegin": 926, "originalText": "three", "ArgType": null, "before": " "}, {"index": 23, "word": "parts", "lemma": "part", "after": "", "pos": "NNS", "characterOffsetEnd": 937, "segment_span": [0, 50], "characterOffsetBegin": 932, "originalText": "parts", "ArgType": null, "before": " "}, {"index": 24, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 938, "segment_span": [0, 50], "characterOffsetBegin": 937, "originalText": ":", "ArgType": null, "before": ""}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 942, "segment_span": [0, 50], "characterOffsetBegin": 939, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "outside", "lemma": "outside", "after": " ", "pos": "JJ", "characterOffsetEnd": 950, "segment_span": [0, 50], "characterOffsetBegin": 943, "originalText": "outside", "ArgType": null, "before": " "}, {"index": 27, "word": "probability", "lemma": "probability", "after": " ", "pos": "NN", "characterOffsetEnd": 962, "segment_span": [0, 50], "characterOffsetBegin": 951, "originalText": "probability", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 965, "segment_span": [0, 50], "characterOffsetBegin": 963, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 969, "segment_span": [0, 50], "characterOffsetBegin": 966, "originalText": "its", "ArgType": null, "before": " "}, {"index": 30, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 974, "segment_span": [0, 50], "characterOffsetBegin": 970, "originalText": "root", "ArgType": null, "before": " "}, {"index": 31, "word": "node", "lemma": "node", "after": "", "pos": "NN", "characterOffsetEnd": 979, "segment_span": [0, 50], "characterOffsetBegin": 975, "originalText": "node", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 980, "segment_span": [0, 50], "characterOffsetBegin": 979, "originalText": ",", "ArgType": null, "before": ""}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 984, "segment_span": [0, 50], "characterOffsetBegin": 981, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "probabilities", "lemma": "probability", "after": " ", "pos": "NNS", "characterOffsetEnd": 998, "segment_span": [0, 50], "characterOffsetBegin": 985, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 35, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1001, "segment_span": [0, 50], "characterOffsetBegin": 999, "originalText": "of", "ArgType": null, "before": " "}, {"index": 36, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1007, "segment_span": [0, 50], "characterOffsetBegin": 1002, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 37, "word": "hyperedges", "lemma": "hyperedge", "after": " ", "pos": "NNS", "characterOffsetEnd": 1018, "segment_span": [0, 50], "characterOffsetBegin": 1008, "originalText": "hyperedges", "ArgType": null, "before": " "}, {"index": 38, "word": "involved", "lemma": "involve", "after": " ", "pos": "VBN", "characterOffsetEnd": 1027, "segment_span": [0, 50], "characterOffsetBegin": 1019, "originalText": "involved", "ArgType": null, "before": " "}, {"index": 39, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1030, "segment_span": [0, 50], "characterOffsetBegin": 1028, "originalText": "in", "ArgType": null, "before": " "}, {"index": 40, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1034, "segment_span": [0, 50], "characterOffsetBegin": 1031, "originalText": "the", "ArgType": null, "before": " "}, {"index": 41, "word": "fragment", "lemma": "fragment", "after": "", "pos": "NN", "characterOffsetEnd": 1043, "segment_span": [0, 50], "characterOffsetBegin": 1035, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 42, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1044, "segment_span": [0, 50], "characterOffsetBegin": 1043, "originalText": ",", "ArgType": null, "before": ""}, {"index": 43, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1048, "segment_span": [0, 50], "characterOffsetBegin": 1045, "originalText": "and", "ArgType": null, "before": " "}, {"index": 44, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1052, "segment_span": [0, 50], "characterOffsetBegin": 1049, "originalText": "the", "ArgType": null, "before": " "}, {"index": 45, "word": "inside", "lemma": "inside", "after": " ", "pos": "JJ", "characterOffsetEnd": 1059, "segment_span": [0, 50], "characterOffsetBegin": 1053, "originalText": "inside", "ArgType": null, "before": " "}, {"index": 46, "word": "probabilities", "lemma": "probability", "after": " ", "pos": "NNS", "characterOffsetEnd": 1073, "segment_span": [0, 50], "characterOffsetBegin": 1060, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 47, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1076, "segment_span": [0, 50], "characterOffsetBegin": 1074, "originalText": "of", "ArgType": null, "before": " "}, {"index": 48, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 1080, "segment_span": [0, 50], "characterOffsetBegin": 1077, "originalText": "its", "ArgType": null, "before": " "}, {"index": 49, "word": "leaf", "lemma": "leaf", "after": " ", "pos": "NN", "characterOffsetEnd": 1085, "segment_span": [0, 50], "characterOffsetBegin": 1081, "originalText": "leaf", "ArgType": null, "before": " "}, {"index": 50, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 1091, "segment_span": [0, 50], "characterOffsetBegin": 1086, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 51, "word": ",", "lemma": ",", "after": "\u0000\u0000", "pos": ",", "characterOffsetEnd": 1092, "characterOffsetBegin": 1091, "originalText": ",", "ArgType": null, "before": ""}], "text": "This posterior probability , notated \u00ce\u00b1\u00ce\u00b2 ( frag ) , can be computed in an InsideOutside fashion as the product of three parts : the outside probability of its root node , the probabilities of parse hyperedges involved in the fragment , and the inside probabilities of its leaf nodes ,"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "\u00ce\u00b1", "lemma": "\u00ce\u00b1", "after": "", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 21], "characterOffsetBegin": 6, "originalText": "\u00ce\u00b1", "ArgType": "subj", "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 8, "segment_span": [0, 21], "characterOffsetBegin": 7, "originalText": "(", "ArgType": null, "before": ""}, {"index": 4, "word": "\u00c2\u00b7", "lemma": "\u00c2\u00b7", "after": "", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 21], "characterOffsetBegin": 8, "originalText": "\u00c2\u00b7", "ArgType": null, "before": ""}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 10, "segment_span": [0, 21], "characterOffsetBegin": 9, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 14, "segment_span": [0, 21], "characterOffsetBegin": 11, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "\u00ce\u00b2", "lemma": "\u00ce\u00b2", "after": "", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 21], "characterOffsetBegin": 15, "originalText": "\u00ce\u00b2", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 17, "segment_span": [0, 21], "characterOffsetBegin": 16, "originalText": "(", "ArgType": null, "before": ""}, {"index": 9, "word": "\u00c2\u00b7", "lemma": "\u00c2\u00b7", "after": "", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 21], "characterOffsetBegin": 17, "originalText": "\u00c2\u00b7", "ArgType": null, "before": ""}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 19, "segment_span": [0, 21], "characterOffsetBegin": 18, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": "denote", "characterOffsetEnd": 26, "after": " ", "pos": "VBP", "is_root": true, "lemma": "denote", "segment_span": [0, 21], "tense": "P", "characterOffsetBegin": 20, "originalText": "denote", "ArgType": "verb", "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 21], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "outside", "lemma": "outside", "after": " ", "pos": "JJ", "characterOffsetEnd": 38, "segment_span": [0, 21], "characterOffsetBegin": 31, "originalText": "outside", "ArgType": null, "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 42, "segment_span": [0, 21], "characterOffsetBegin": 39, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "inside", "lemma": "inside", "after": " ", "pos": "JJ", "characterOffsetEnd": 49, "segment_span": [0, 21], "characterOffsetBegin": 43, "originalText": "inside", "ArgType": null, "before": " "}, {"index": 16, "word": "probabilities", "lemma": "probability", "after": " ", "pos": "NNS", "characterOffsetEnd": 63, "segment_span": [0, 21], "characterOffsetBegin": 50, "originalText": "probabilities", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 21], "characterOffsetBegin": 64, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 21], "characterOffsetBegin": 67, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 19, "word": "nodes", "lemma": "node", "after": "", "pos": "NNS", "characterOffsetEnd": 77, "segment_span": [0, 21], "characterOffsetBegin": 72, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 78, "segment_span": [0, 21], "characterOffsetBegin": 77, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 91, "segment_span": [0, 21], "characterOffsetBegin": 79, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 92, "characterOffsetBegin": 91, "originalText": ".", "ArgType": null, "before": ""}], "text": "where \u00ce\u00b1 ( \u00c2\u00b7 ) and \u00ce\u00b2 ( \u00c2\u00b7 ) denote the outside and inside probabilities of tree nodes , respectively ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 96, "segment_span": [0, 5], "characterOffsetBegin": 93, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 5], "characterOffsetBegin": 97, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 107, "segment_span": [0, 5], "characterOffsetBegin": 105, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 114, "segment_span": [0, 5], "characterOffsetBegin": 108, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 5, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 116, "segment_span": [0, 5], "characterOffsetBegin": 115, "originalText": "4", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": "\u0000\u0000\u0000\u0000", "pos": ",", "characterOffsetEnd": 117, "characterOffsetBegin": 116, "originalText": ",", "ArgType": null, "before": ""}], "text": "For example in Figure 4 ,"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 9], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "TOP", "lemma": "top", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 9], "characterOffsetBegin": 6, "originalText": "TOP", "ArgType": "subj", "before": " "}, {"index": 3, "word": "denotes", "characterOffsetEnd": 17, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "denote", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 10, "originalText": "denotes", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 21, "segment_span": [0, 9], "characterOffsetBegin": 18, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "root", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 26, "segment_span": [0, 9], "characterOffsetBegin": 22, "originalText": "root", "ArgType": null, "before": " "}, {"index": 6, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 9], "characterOffsetBegin": 27, "originalText": "node", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 9], "characterOffsetBegin": 32, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 38, "segment_span": [0, 9], "characterOffsetBegin": 35, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "forest", "lemma": "forest", "after": "", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 9], "characterOffsetBegin": 39, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 46, "characterOffsetBegin": 45, "originalText": ".", "ArgType": null, "before": ""}], "text": "where TOP denotes the root node of the forest ."}, {"tokens": [{"index": 1, "word": "Like", "lemma": "like", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 26], "characterOffsetBegin": 47, "originalText": "Like", "ArgType": null, "before": " "}, {"index": 2, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 26], "characterOffsetBegin": 52, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 26], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "M-step", "lemma": "m-step", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 26], "characterOffsetBegin": 59, "originalText": "M-step", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 68, "segment_span": [0, 26], "characterOffsetBegin": 66, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "EM", "lemma": "EM", "after": " ", "pos": "NNP", "characterOffsetEnd": 71, "segment_span": [0, 26], "characterOffsetBegin": 69, "originalText": "EM", "ArgType": null, "before": " "}, {"index": 7, "word": "algorithm", "lemma": "algorithm", "after": "", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 26], "characterOffsetBegin": 72, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 82, "segment_span": [0, 26], "characterOffsetBegin": 81, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 85, "segment_span": [0, 26], "characterOffsetBegin": 83, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 10, "word": "now", "lemma": "now", "after": " ", "pos": "RB", "characterOffsetEnd": 89, "segment_span": [0, 26], "characterOffsetBegin": 86, "originalText": "now", "ArgType": null, "before": " "}, {"index": 11, "word": "extend", "characterOffsetEnd": 96, "after": " ", "pos": "VBP", "is_root": true, "lemma": "extend", "segment_span": [0, 26], "tense": "P", "characterOffsetBegin": 90, "originalText": "extend", "ArgType": "verb", "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 100, "segment_span": [0, 26], "characterOffsetBegin": 97, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "maximum", "lemma": "maximum", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [0, 26], "characterOffsetBegin": 101, "originalText": "maximum", "ArgType": null, "before": " "}, {"index": 14, "word": "likelihood", "lemma": "likelihood", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 26], "characterOffsetBegin": 109, "originalText": "likelihood", "ArgType": null, "before": " "}, {"index": 15, "word": "estimation", "lemma": "estimation", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [0, 26], "characterOffsetBegin": 120, "originalText": "estimation", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 133, "segment_span": [0, 26], "characterOffsetBegin": 131, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "fractional", "lemma": "fractional", "after": " ", "pos": "JJ", "characterOffsetEnd": 144, "segment_span": [0, 26], "characterOffsetBegin": 134, "originalText": "fractional", "ArgType": null, "before": " "}, {"index": 18, "word": "counts", "lemma": "count", "after": " ", "pos": "NNS", "characterOffsetEnd": 151, "segment_span": [0, 26], "characterOffsetBegin": 145, "originalText": "counts", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 155, "segment_span": [0, 26], "characterOffsetBegin": 152, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 161, "segment_span": [0, 26], "characterOffsetBegin": 156, "originalText": "three", "ArgType": null, "before": " "}, {"index": 21, "word": "conditional", "lemma": "conditional", "after": " ", "pos": "JJ", "characterOffsetEnd": 173, "segment_span": [0, 26], "characterOffsetBegin": 162, "originalText": "conditional", "ArgType": null, "before": " "}, {"index": 22, "word": "probabilities", "lemma": "probability", "after": " ", "pos": "NNS", "characterOffsetEnd": 187, "segment_span": [0, 26], "characterOffsetBegin": 174, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 23, "word": "regarding", "lemma": "regard", "after": " ", "pos": "VBG", "characterOffsetEnd": 197, "segment_span": [0, 26], "characterOffsetBegin": 188, "originalText": "regarding", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 199, "segment_span": [0, 26], "characterOffsetBegin": 198, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "rule", "lemma": "rule", "after": "", "pos": "NN", "characterOffsetEnd": 204, "segment_span": [0, 26], "characterOffsetBegin": 200, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 205, "segment_span": [0, 26], "characterOffsetBegin": 204, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 211, "segment_span": [26, 33], "characterOffsetBegin": 206, "originalText": "which", "ArgType": null, "before": " "}, {"index": 28, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 216, "segment_span": [26, 33], "characterOffsetBegin": 212, "originalText": "will", "ArgType": null, "before": " "}, {"index": 29, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 219, "segment_span": [26, 33], "characterOffsetBegin": 217, "originalText": "be", "ArgType": null, "before": " "}, {"index": 30, "word": "used", "characterOffsetEnd": 224, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [26, 33], "tense": "N", "characterOffsetBegin": 220, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 31, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 227, "segment_span": [26, 33], "characterOffsetBegin": 225, "originalText": "in", "ArgType": null, "before": " "}, {"index": 32, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 231, "segment_span": [26, 33], "characterOffsetBegin": 228, "originalText": "the", "ArgType": null, "before": " "}, {"index": 33, "word": "experiments", "lemma": "experiment", "after": "", "pos": "NNS", "characterOffsetEnd": 243, "segment_span": [26, 33], "characterOffsetBegin": 232, "originalText": "experiments", "ArgType": null, "before": " "}, {"index": 34, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 244, "characterOffsetBegin": 243, "originalText": ":", "ArgType": null, "before": ""}], "text": "Like in the M-step in EM algorithm , we now extend the maximum likelihood estimation to fractional counts for three conditional probabilities regarding a rule , which will be used in the experiments :"}], "title": "3.3 Fractional Counts and Rule Probabilities"}], "title": "3 Forest-based Rule Extraction"}, {"num": 8, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 36], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "concept", "lemma": "concept", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 36], "characterOffsetBegin": 4, "originalText": "concept", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [0, 36], "characterOffsetBegin": 12, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 21, "segment_span": [0, 36], "characterOffsetBegin": 15, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 5, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 36], "characterOffsetBegin": 22, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 6, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 32, "segment_span": [0, 36], "characterOffsetBegin": 29, "originalText": "has", "ArgType": null, "before": " "}, {"index": 7, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 37, "segment_span": [0, 36], "characterOffsetBegin": 33, "originalText": "been", "ArgType": null, "before": " "}, {"index": 8, "word": "previously", "lemma": "previously", "after": " ", "pos": "RB", "characterOffsetEnd": 48, "segment_span": [0, 36], "characterOffsetBegin": 38, "originalText": "previously", "ArgType": null, "before": " "}, {"index": 9, "word": "used", "characterOffsetEnd": 53, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 36], "tense": "N", "characterOffsetBegin": 49, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 56, "segment_span": [0, 36], "characterOffsetBegin": 54, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 36], "characterOffsetBegin": 57, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 12, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 36], "characterOffsetBegin": 69, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 13, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 36], "characterOffsetBegin": 74, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 85, "segment_span": [0, 36], "characterOffsetBegin": 84, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 89, "segment_span": [0, 36], "characterOffsetBegin": 86, "originalText": "for", "ArgType": null, "before": " "}, {"index": 16, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [0, 36], "characterOffsetBegin": 90, "originalText": "example", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 100, "segment_span": [0, 36], "characterOffsetBegin": 98, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 36], "characterOffsetBegin": 101, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 19, "word": "composition", "lemma": "composition", "after": " ", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [0, 36], "characterOffsetBegin": 106, "originalText": "composition", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 119, "segment_span": [0, 36], "characterOffsetBegin": 118, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 125, "segment_span": [0, 36], "characterOffsetBegin": 119, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 22, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 128, "segment_span": [0, 36], "characterOffsetBegin": 126, "originalText": "et", "ArgType": null, "before": " "}, {"index": 23, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 132, "segment_span": [0, 36], "characterOffsetBegin": 129, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 133, "segment_span": [0, 36], "characterOffsetBegin": 132, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 138, "segment_span": [0, 36], "characterOffsetBegin": 134, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 139, "segment_span": [0, 36], "characterOffsetBegin": 138, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 143, "segment_span": [0, 36], "characterOffsetBegin": 140, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 148, "segment_span": [0, 36], "characterOffsetBegin": 144, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 29, "word": "binarization", "lemma": "binarization", "after": " ", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [0, 36], "characterOffsetBegin": 149, "originalText": "binarization", "ArgType": null, "before": " "}, {"index": 30, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 163, "segment_span": [0, 36], "characterOffsetBegin": 162, "originalText": "(", "ArgType": null, "before": " "}, {"index": 31, "word": "Wang", "lemma": "Wang", "after": " ", "pos": "NNP", "characterOffsetEnd": 167, "segment_span": [0, 36], "characterOffsetBegin": 163, "originalText": "Wang", "ArgType": null, "before": ""}, {"index": 32, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 170, "segment_span": [0, 36], "characterOffsetBegin": 168, "originalText": "et", "ArgType": null, "before": " "}, {"index": 33, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 174, "segment_span": [0, 36], "characterOffsetBegin": 171, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 175, "segment_span": [0, 36], "characterOffsetBegin": 174, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 180, "segment_span": [0, 36], "characterOffsetBegin": 176, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 36, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 181, "segment_span": [0, 36], "characterOffsetBegin": 180, "originalText": ")", "ArgType": null, "before": ""}, {"index": 37, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 182, "characterOffsetBegin": 181, "originalText": ".", "ArgType": null, "before": ""}], "text": "The concept of packed forest has been previously used in translation rule extraction , for example in rule composition ( Galley et al. , 2006 ) and tree binarization ( Wang et al. , 2007 ) ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 190, "segment_span": [0, 11], "characterOffsetBegin": 183, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 191, "segment_span": [0, 11], "characterOffsetBegin": 190, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 196, "segment_span": [0, 11], "characterOffsetBegin": 192, "originalText": "both", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 199, "segment_span": [0, 11], "characterOffsetBegin": 197, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 205, "segment_span": [0, 11], "characterOffsetBegin": 200, "originalText": "these", "ArgType": null, "before": " "}, {"index": 6, "word": "efforts", "lemma": "effort", "after": " ", "pos": "NNS", "characterOffsetEnd": 213, "segment_span": [0, 11], "characterOffsetBegin": 206, "originalText": "efforts", "ArgType": null, "before": " "}, {"index": 7, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 218, "segment_span": [0, 11], "characterOffsetBegin": 214, "originalText": "only", "ArgType": null, "before": " "}, {"index": 8, "word": "use", "characterOffsetEnd": 222, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 219, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 9, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 229, "segment_span": [0, 11], "characterOffsetBegin": 223, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 10, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 236, "segment_span": [0, 11], "characterOffsetBegin": 230, "originalText": "parses", "ArgType": "dobj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 237, "segment_span": [0, 11], "characterOffsetBegin": 236, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 242, "segment_span": [11, 25], "characterOffsetBegin": 238, "originalText": "with", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 246, "segment_span": [11, 25], "characterOffsetBegin": 243, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 253, "segment_span": [11, 25], "characterOffsetBegin": 247, "originalText": "second", "ArgType": null, "before": " "}, {"index": 15, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 257, "segment_span": [11, 25], "characterOffsetBegin": 254, "originalText": "one", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "packing", "lemma": "pack", "after": " ", "pos": "VBG", "characterOffsetEnd": 265, "segment_span": [11, 25], "characterOffsetBegin": 258, "originalText": "packing", "ArgType": null, "before": " "}, {"index": 17, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 275, "segment_span": [11, 25], "characterOffsetBegin": 266, "originalText": "different", "ArgType": null, "before": " "}, {"index": 18, "word": "binarizations", "lemma": "binarization", "after": " ", "pos": "NNS", "characterOffsetEnd": 289, "segment_span": [11, 25], "characterOffsetBegin": 276, "originalText": "binarizations", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 292, "segment_span": [11, 25], "characterOffsetBegin": 290, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 296, "segment_span": [11, 25], "characterOffsetBegin": 293, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 301, "segment_span": [11, 25], "characterOffsetBegin": 297, "originalText": "same", "ArgType": null, "before": " "}, {"index": 22, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 306, "segment_span": [11, 25], "characterOffsetBegin": 302, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 309, "segment_span": [11, 25], "characterOffsetBegin": 307, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 311, "segment_span": [11, 25], "characterOffsetBegin": 310, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "forest", "lemma": "forest", "after": "", "pos": "NN", "characterOffsetEnd": 318, "segment_span": [11, 25], "characterOffsetBegin": 312, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 319, "characterOffsetBegin": 318, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , both of these efforts only use 1-best parses , with the second one packing different binarizations of the same tree in a forest ."}, {"tokens": [{"index": 1, "word": "Nevertheless", "lemma": "nevertheless", "after": " ", "pos": "RB", "characterOffsetEnd": 332, "segment_span": [0, 3], "characterOffsetBegin": 320, "originalText": "Nevertheless", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 335, "segment_span": [0, 3], "characterOffsetBegin": 333, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "suspect", "characterOffsetEnd": 343, "after": " ", "pos": "VBP", "is_root": true, "lemma": "suspect", "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 336, "originalText": "suspect", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 348, "segment_span": [3, 14], "characterOffsetBegin": 344, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 354, "segment_span": [3, 14], "characterOffsetBegin": 349, "originalText": "their", "ArgType": null, "before": " "}, {"index": 6, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 365, "segment_span": [3, 14], "characterOffsetBegin": 355, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 7, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 375, "segment_span": [3, 14], "characterOffsetBegin": 366, "originalText": "algorithm", "ArgType": "subj", "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 378, "segment_span": [3, 14], "characterOffsetBegin": 376, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 381, "segment_span": [3, 14], "characterOffsetBegin": 379, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "principle", "lemma": "principle", "after": " ", "pos": "NN", "characterOffsetEnd": 391, "segment_span": [3, 14], "characterOffsetBegin": 382, "originalText": "principle", "ArgType": null, "before": " "}, {"index": 11, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 399, "segment_span": [3, 14], "characterOffsetBegin": 392, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 402, "segment_span": [3, 14], "characterOffsetBegin": 400, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "ours", "lemma": "ours", "after": "", "pos": "JJ", "characterOffsetEnd": 407, "segment_span": [3, 14], "characterOffsetBegin": 403, "originalText": "ours", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 408, "segment_span": [3, 14], "characterOffsetBegin": 407, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 417, "segment_span": [14, 27], "characterOffsetBegin": 409, "originalText": "although", "ArgType": null, "before": " "}, {"index": 16, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 422, "segment_span": [14, 27], "characterOffsetBegin": 418, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 17, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 425, "segment_span": [14, 27], "characterOffsetBegin": 423, "originalText": "do", "ArgType": null, "before": " "}, {"index": 18, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 429, "segment_span": [14, 27], "characterOffsetBegin": 426, "originalText": "not", "ArgType": null, "before": " "}, {"index": 19, "word": "provide", "characterOffsetEnd": 437, "after": " ", "pos": "VB", "is_root": true, "lemma": "provide", "segment_span": [14, 27], "tense": "B", "characterOffsetBegin": 430, "originalText": "provide", "has_aux": true, "ArgType": null, "before": " "}, {"index": 20, "word": "details", "lemma": "detail", "after": " ", "pos": "NNS", "characterOffsetEnd": 445, "segment_span": [14, 27], "characterOffsetBegin": 438, "originalText": "details", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 448, "segment_span": [14, 27], "characterOffsetBegin": 446, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 461, "segment_span": [14, 27], "characterOffsetBegin": 449, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 23, "word": "fragmentation", "lemma": "fragmentation", "after": " ", "pos": "NN", "characterOffsetEnd": 475, "segment_span": [14, 27], "characterOffsetBegin": 462, "originalText": "fragmentation", "ArgType": null, "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 477, "segment_span": [14, 27], "characterOffsetBegin": 476, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "Algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 486, "segment_span": [14, 27], "characterOffsetBegin": 477, "originalText": "Algorithm", "ArgType": null, "before": ""}, {"index": 26, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 488, "segment_span": [14, 27], "characterOffsetBegin": 487, "originalText": "1", "ArgType": null, "before": " "}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 489, "segment_span": [14, 27], "characterOffsetBegin": 488, "originalText": ")", "ArgType": null, "before": ""}, {"index": 28, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 495, "segment_span": [27, 30], "characterOffsetBegin": 490, "originalText": "which", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 498, "segment_span": [27, 30], "characterOffsetBegin": 496, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 30, "word": "think", "characterOffsetEnd": 504, "after": " ", "pos": "VBP", "is_root": true, "lemma": "think", "segment_span": [27, 30], "tense": "P", "characterOffsetBegin": 499, "originalText": "think", "ArgType": null, "before": " "}, {"index": 31, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 507, "segment_span": [30, 32], "characterOffsetBegin": 505, "originalText": "is", "ArgType": null, "before": " "}, {"index": 32, "word": "non-trivial", "lemma": "non-trivial", "after": "", "pos": "JJ", "characterOffsetEnd": 519, "segment_span": [30, 32], "characterOffsetBegin": 508, "originalText": "non-trivial", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 520, "characterOffsetBegin": 519, "originalText": ".", "ArgType": null, "before": ""}], "text": "Nevertheless we suspect that their extraction algorithm is in principle similar to ours , although they do not provide details of forest-based fragmentation ( Algorithm 1 ) which we think is non-trivial ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 524, "segment_span": [0, 31], "characterOffsetBegin": 521, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 531, "segment_span": [0, 31], "characterOffsetBegin": 525, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 3, "word": "concept", "lemma": "concept", "after": " ", "pos": "NN", "characterOffsetEnd": 539, "segment_span": [0, 31], "characterOffsetBegin": 532, "originalText": "concept", "ArgType": null, "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 542, "segment_span": [0, 31], "characterOffsetBegin": 540, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 547, "segment_span": [0, 31], "characterOffsetBegin": 543, "originalText": "also", "ArgType": null, "before": " "}, {"index": 6, "word": "used", "characterOffsetEnd": 552, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 31], "tense": "N", "characterOffsetBegin": 548, "before": " ", "originalText": "used", "ArgType": null, "is_pass": true}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 555, "segment_span": [0, 31], "characterOffsetBegin": 553, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 563, "segment_span": [0, 31], "characterOffsetBegin": 556, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 9, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 575, "segment_span": [0, 31], "characterOffsetBegin": 564, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 10, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 584, "segment_span": [0, 31], "characterOffsetBegin": 576, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 585, "segment_span": [0, 31], "characterOffsetBegin": 584, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 589, "segment_span": [0, 31], "characterOffsetBegin": 586, "originalText": "for", "ArgType": null, "before": " "}, {"index": 13, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 597, "segment_span": [0, 31], "characterOffsetBegin": 590, "originalText": "example", "ArgType": null, "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 600, "segment_span": [0, 31], "characterOffsetBegin": 598, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "characterize", "lemma": "characterize", "after": " ", "pos": "VB", "characterOffsetEnd": 613, "segment_span": [0, 31], "characterOffsetBegin": 601, "originalText": "characterize", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 617, "segment_span": [0, 31], "characterOffsetBegin": 614, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "search", "lemma": "search", "after": " ", "pos": "NN", "characterOffsetEnd": 624, "segment_span": [0, 31], "characterOffsetBegin": 618, "originalText": "search", "ArgType": null, "before": " "}, {"index": 18, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 630, "segment_span": [0, 31], "characterOffsetBegin": 625, "originalText": "space", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 633, "segment_span": [0, 31], "characterOffsetBegin": 631, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "decoding", "lemma": "decode", "after": " ", "pos": "VBG", "characterOffsetEnd": 642, "segment_span": [0, 31], "characterOffsetBegin": 634, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 21, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 647, "segment_span": [0, 31], "characterOffsetBegin": 643, "originalText": "with", "ArgType": null, "before": " "}, {"index": 22, "word": "integrated", "lemma": "integrate", "after": " ", "pos": "VBN", "characterOffsetEnd": 658, "segment_span": [0, 31], "characterOffsetBegin": 648, "originalText": "integrated", "ArgType": null, "before": " "}, {"index": 23, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 667, "segment_span": [0, 31], "characterOffsetBegin": 659, "originalText": "language", "ArgType": null, "before": " "}, {"index": 24, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 674, "segment_span": [0, 31], "characterOffsetBegin": 668, "originalText": "models", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 676, "segment_span": [0, 31], "characterOffsetBegin": 675, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "Huang", "lemma": "Huang", "after": " ", "pos": "NNP", "characterOffsetEnd": 681, "segment_span": [0, 31], "characterOffsetBegin": 676, "originalText": "Huang", "ArgType": null, "before": ""}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 685, "segment_span": [0, 31], "characterOffsetBegin": 682, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "Chiang", "lemma": "Chiang", "after": "", "pos": "NNP", "characterOffsetEnd": 692, "segment_span": [0, 31], "characterOffsetBegin": 686, "originalText": "Chiang", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 693, "segment_span": [0, 31], "characterOffsetBegin": 692, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 698, "segment_span": [0, 31], "characterOffsetBegin": 694, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 699, "segment_span": [0, 31], "characterOffsetBegin": 698, "originalText": ")", "ArgType": null, "before": ""}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 700, "characterOffsetBegin": 699, "originalText": ".", "ArgType": null, "before": ""}], "text": "The forest concept is also used in machine translation decoding , for example to characterize the search space of decoding with integrated language models ( Huang and Chiang , 2007 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 704, "segment_span": [0, 29], "characterOffsetBegin": 701, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 710, "segment_span": [0, 29], "characterOffsetBegin": 705, "originalText": "first", "ArgType": null, "before": " "}, {"index": 3, "word": "direct", "lemma": "direct", "after": " ", "pos": "JJ", "characterOffsetEnd": 717, "segment_span": [0, 29], "characterOffsetBegin": 711, "originalText": "direct", "ArgType": null, "before": " "}, {"index": 4, "word": "application", "lemma": "application", "after": " ", "pos": "NN", "characterOffsetEnd": 729, "segment_span": [0, 29], "characterOffsetBegin": 718, "originalText": "application", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 732, "segment_span": [0, 29], "characterOffsetBegin": 730, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "parse", "lemma": "parse", "after": " ", "pos": "JJ", "characterOffsetEnd": 738, "segment_span": [0, 29], "characterOffsetBegin": 733, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 7, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 745, "segment_span": [0, 29], "characterOffsetBegin": 739, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 748, "segment_span": [0, 29], "characterOffsetBegin": 746, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 760, "segment_span": [0, 29], "characterOffsetBegin": 749, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 763, "segment_span": [0, 29], "characterOffsetBegin": 761, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 767, "segment_span": [0, 29], "characterOffsetBegin": 764, "originalText": "our", "ArgType": null, "before": " "}, {"index": 12, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 776, "segment_span": [0, 29], "characterOffsetBegin": 768, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 13, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 781, "segment_span": [0, 29], "characterOffsetBegin": 777, "originalText": "work", "ArgType": "verb", "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 783, "segment_span": [0, 29], "characterOffsetBegin": 782, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 785, "segment_span": [0, 29], "characterOffsetBegin": 783, "originalText": "Mi", "ArgType": null, "before": ""}, {"index": 16, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 788, "segment_span": [0, 29], "characterOffsetBegin": 786, "originalText": "et", "ArgType": null, "before": " "}, {"index": 17, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 792, "segment_span": [0, 29], "characterOffsetBegin": 789, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 793, "segment_span": [0, 29], "characterOffsetBegin": 792, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 798, "segment_span": [0, 29], "characterOffsetBegin": 794, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 799, "segment_span": [0, 29], "characterOffsetBegin": 798, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 805, "segment_span": [20, 28], "characterOffsetBegin": 800, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 22, "word": "translates", "characterOffsetEnd": 816, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "translate", "segment_span": [20, 28], "tense": "Z", "characterOffsetBegin": 806, "originalText": "translates", "ArgType": null, "before": " "}, {"index": 23, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 818, "segment_span": [20, 28], "characterOffsetBegin": 817, "originalText": "a", "ArgType": null, "before": " "}, {"index": 24, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 825, "segment_span": [20, 28], "characterOffsetBegin": 819, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 25, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 832, "segment_span": [20, 28], "characterOffsetBegin": 826, "originalText": "forest", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 837, "segment_span": [20, 28], "characterOffsetBegin": 833, "originalText": "from", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 839, "segment_span": [20, 28], "characterOffsetBegin": 838, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "parser", "lemma": "parser", "after": "", "pos": "NN", "characterOffsetEnd": 846, "segment_span": [20, 28], "characterOffsetBegin": 840, "originalText": "parser", "ArgType": null, "before": " "}, {"index": 29, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 847, "segment_span": [0, 29], "characterOffsetBegin": 846, "originalText": ";", "ArgType": null, "before": ""}, {"index": 30, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 850, "segment_span": [29, 42], "characterOffsetBegin": 848, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 31, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 853, "segment_span": [29, 42], "characterOffsetBegin": 851, "originalText": "is", "ArgType": null, "before": " "}, {"index": 32, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 858, "segment_span": [29, 42], "characterOffsetBegin": 854, "originalText": "also", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 862, "segment_span": [29, 42], "characterOffsetBegin": 859, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "base", "lemma": "base", "after": " ", "pos": "NN", "characterOffsetEnd": 867, "segment_span": [29, 42], "characterOffsetBegin": 863, "originalText": "base", "ArgType": null, "before": " "}, {"index": 35, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 874, "segment_span": [29, 42], "characterOffsetBegin": 868, "originalText": "system", "ArgType": null, "before": " "}, {"index": 36, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 877, "segment_span": [29, 42], "characterOffsetBegin": 875, "originalText": "in", "ArgType": null, "before": " "}, {"index": 37, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 881, "segment_span": [29, 42], "characterOffsetBegin": 878, "originalText": "our", "ArgType": null, "before": " "}, {"index": 38, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 893, "segment_span": [29, 42], "characterOffsetBegin": 882, "originalText": "experiments", "ArgType": null, "before": " "}, {"index": 39, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 895, "segment_span": [29, 42], "characterOffsetBegin": 894, "originalText": "(", "ArgType": null, "before": " "}, {"index": 40, "word": "see", "lemma": "see", "after": " ", "pos": "VB", "characterOffsetEnd": 898, "segment_span": [29, 42], "characterOffsetBegin": 895, "originalText": "see", "ArgType": null, "before": ""}, {"index": 41, "word": "below", "lemma": "below", "after": "", "pos": "IN", "characterOffsetEnd": 904, "segment_span": [29, 42], "characterOffsetBegin": 899, "originalText": "below", "ArgType": null, "before": " "}, {"index": 42, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 905, "segment_span": [29, 42], "characterOffsetBegin": 904, "originalText": ")", "ArgType": null, "before": ""}, {"index": 43, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 906, "characterOffsetBegin": 905, "originalText": ".", "ArgType": null, "before": ""}], "text": "The first direct application of parse forest in translation is our previous work ( Mi et al. , 2008 ) which translates a packed forest from a parser ; it is also the base system in our experiments ( see below ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 911, "segment_span": [0, 14], "characterOffsetBegin": 907, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "work", "lemma": "work", "after": "", "pos": "NN", "characterOffsetEnd": 916, "segment_span": [0, 14], "characterOffsetBegin": 912, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 917, "segment_span": [0, 14], "characterOffsetBegin": 916, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 920, "segment_span": [0, 14], "characterOffsetBegin": 918, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 924, "segment_span": [0, 14], "characterOffsetBegin": 921, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 930, "segment_span": [0, 14], "characterOffsetBegin": 925, "originalText": "other", "ArgType": null, "before": " "}, {"index": 7, "word": "hand", "lemma": "hand", "after": "", "pos": "NN", "characterOffsetEnd": 935, "segment_span": [0, 14], "characterOffsetBegin": 931, "originalText": "hand", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 936, "segment_span": [0, 14], "characterOffsetBegin": 935, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 939, "segment_span": [0, 14], "characterOffsetBegin": 937, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 942, "segment_span": [0, 14], "characterOffsetBegin": 940, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 946, "segment_span": [0, 14], "characterOffsetBegin": 943, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "orthogonal", "lemma": "orthogonal", "after": " ", "pos": "JJ", "characterOffsetEnd": 957, "segment_span": [0, 14], "characterOffsetBegin": 947, "originalText": "orthogonal", "ArgType": null, "before": " "}, {"index": 13, "word": "direction", "lemma": "direction", "after": "", "pos": "NN", "characterOffsetEnd": 967, "segment_span": [0, 14], "characterOffsetBegin": 958, "originalText": "direction", "ArgType": "verb", "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 968, "segment_span": [0, 14], "characterOffsetBegin": 967, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 974, "segment_span": [14, 24], "characterOffsetBegin": 969, "originalText": "where", "ArgType": null, "before": " "}, {"index": 16, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 977, "segment_span": [14, 24], "characterOffsetBegin": 975, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 17, "word": "utilize", "characterOffsetEnd": 985, "after": " ", "pos": "VBP", "is_root": true, "lemma": "utilize", "segment_span": [14, 24], "tense": "P", "characterOffsetBegin": 978, "originalText": "utilize", "ArgType": null, "before": " "}, {"index": 18, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 993, "segment_span": [14, 24], "characterOffsetBegin": 986, "originalText": "forests", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 996, "segment_span": [14, 24], "characterOffsetBegin": 994, "originalText": "in", "ArgType": null, "before": " "}, {"index": 20, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 1001, "segment_span": [14, 24], "characterOffsetBegin": 997, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 21, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 1012, "segment_span": [14, 24], "characterOffsetBegin": 1002, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 22, "word": "instead", "lemma": "instead", "after": " ", "pos": "RB", "characterOffsetEnd": 1020, "segment_span": [14, 24], "characterOffsetBegin": 1013, "originalText": "instead", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1023, "segment_span": [14, 24], "characterOffsetBegin": 1021, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 1032, "segment_span": [14, 24], "characterOffsetBegin": 1024, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1033, "characterOffsetBegin": 1032, "originalText": ".", "ArgType": null, "before": ""}], "text": "This work , on the other hand , is in the orthogonal direction , where we utilize forests in rule extraction instead of decoding ."}, {"tokens": [{"index": 1, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 4, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "BLEU", "ArgType": null, "before": ""}, {"index": 2, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 2], "characterOffsetBegin": 5, "originalText": "score", "ArgType": null, "before": " "}, {"index": 3, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 14, "segment_span": [2, 13], "characterOffsetBegin": 11, "originalText": "Our", "ArgType": null, "before": " "}, {"index": 4, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 26, "segment_span": [2, 13], "characterOffsetBegin": 15, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 5, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 31, "segment_span": [2, 13], "characterOffsetBegin": 27, "originalText": "will", "ArgType": null, "before": " "}, {"index": 6, "word": "use", "characterOffsetEnd": 35, "after": " ", "pos": "VB", "is_root": true, "lemma": "use", "segment_span": [2, 13], "tense": "B", "characterOffsetBegin": 32, "originalText": "use", "has_aux": true, "ArgType": null, "before": " "}, {"index": 7, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [2, 13], "characterOffsetBegin": 36, "originalText": "both", "ArgType": null, "before": " "}, {"index": 8, "word": "default", "lemma": "default", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [2, 13], "characterOffsetBegin": 41, "originalText": "default", "ArgType": null, "before": " "}, {"index": 9, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [2, 13], "characterOffsetBegin": 49, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 10, "word": "decoding", "lemma": "decoding", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [2, 13], "characterOffsetBegin": 56, "originalText": "decoding", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 68, "segment_span": [2, 13], "characterOffsetBegin": 65, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [2, 13], "characterOffsetBegin": 69, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 13, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 90, "segment_span": [2, 13], "characterOffsetBegin": 82, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 91, "characterOffsetBegin": 90, "originalText": ".", "ArgType": null, "before": ""}], "text": "BLEU score Our experiments will use both default 1-best decoding and forest-based decoding ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 94, "segment_span": [0, 8], "characterOffsetBegin": 92, "originalText": "As", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 97, "segment_span": [0, 8], "characterOffsetBegin": 95, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 102, "segment_span": [0, 8], "characterOffsetBegin": 98, "originalText": "will", "ArgType": null, "before": " "}, {"index": 4, "word": "see", "characterOffsetEnd": 106, "after": " ", "pos": "VB", "is_root": true, "lemma": "see", "segment_span": [0, 8], "tense": "B", "characterOffsetBegin": 103, "originalText": "see", "has_aux": true, "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 109, "segment_span": [0, 8], "characterOffsetBegin": 107, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [0, 8], "characterOffsetBegin": 110, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "next", "lemma": "next", "after": " ", "pos": "JJ", "characterOffsetEnd": 118, "segment_span": [0, 8], "characterOffsetBegin": 114, "originalText": "next", "ArgType": null, "before": " "}, {"index": 8, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [0, 8], "characterOffsetBegin": 119, "originalText": "section", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 127, "segment_span": [8, 13], "characterOffsetBegin": 126, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 131, "segment_span": [8, 13], "characterOffsetBegin": 128, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 136, "segment_span": [8, 13], "characterOffsetBegin": 132, "originalText": "best", "ArgType": null, "before": " "}, {"index": 12, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 143, "segment_span": [8, 13], "characterOffsetBegin": 137, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 13, "word": "comes", "characterOffsetEnd": 149, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "come", "segment_span": [8, 13], "tense": "Z", "characterOffsetBegin": 144, "originalText": "comes", "ArgType": "verb", "before": " "}, {"index": 14, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 154, "segment_span": [13, 31], "characterOffsetBegin": 150, "originalText": "when", "ArgType": null, "before": " "}, {"index": 15, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 157, "segment_span": [13, 31], "characterOffsetBegin": 155, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 16, "word": "combine", "characterOffsetEnd": 165, "after": " ", "pos": "VBP", "is_root": true, "lemma": "combine", "segment_span": [13, 31], "tense": "P", "characterOffsetBegin": 158, "originalText": "combine", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 169, "segment_span": [13, 31], "characterOffsetBegin": 166, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "merits", "lemma": "merit", "after": " ", "pos": "NNS", "characterOffsetEnd": 176, "segment_span": [13, 31], "characterOffsetBegin": 170, "originalText": "merits", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 179, "segment_span": [13, 31], "characterOffsetBegin": 177, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "both", "lemma": "both", "after": "", "pos": "CC", "characterOffsetEnd": 184, "segment_span": [13, 31], "characterOffsetBegin": 180, "originalText": "both", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 185, "segment_span": [13, 31], "characterOffsetBegin": 184, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "i.e.", "lemma": "i.e.", "after": "", "pos": "FW", "characterOffsetEnd": 190, "segment_span": [13, 31], "characterOffsetBegin": 186, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 191, "segment_span": [13, 31], "characterOffsetBegin": 190, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 197, "segment_span": [13, 31], "characterOffsetBegin": 192, "originalText": "using", "ArgType": null, "before": " "}, {"index": 25, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 205, "segment_span": [13, 31], "characterOffsetBegin": 198, "originalText": "forests", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 208, "segment_span": [13, 31], "characterOffsetBegin": 206, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 213, "segment_span": [13, 31], "characterOffsetBegin": 209, "originalText": "both", "ArgType": null, "before": " "}, {"index": 28, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [13, 31], "characterOffsetBegin": 214, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 29, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 229, "segment_span": [13, 31], "characterOffsetBegin": 219, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 233, "segment_span": [13, 31], "characterOffsetBegin": 230, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 242, "segment_span": [13, 31], "characterOffsetBegin": 234, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 243, "characterOffsetBegin": 242, "originalText": ".", "ArgType": null, "before": ""}], "text": "As we will see in the next section , the best result comes when we combine the merits of both , i.e. , using forests in both rule extraction and decoding ."}, {"tokens": [{"index": 1, "word": "There", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 249, "segment_span": [0, 32], "characterOffsetBegin": 244, "originalText": "There", "ArgType": null, "before": " "}, {"index": 2, "word": "is", "characterOffsetEnd": 252, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 32], "tense": "Z", "characterOffsetBegin": 250, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 257, "segment_span": [0, 32], "characterOffsetBegin": 253, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 259, "segment_span": [0, 32], "characterOffsetBegin": 258, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "parallel", "lemma": "parallel", "after": " ", "pos": "JJ", "characterOffsetEnd": 268, "segment_span": [0, 32], "characterOffsetBegin": 260, "originalText": "parallel", "ArgType": null, "before": " "}, {"index": 6, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 273, "segment_span": [0, 32], "characterOffsetBegin": 269, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 276, "segment_span": [0, 32], "characterOffsetBegin": 274, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "extracting", "lemma": "extract", "after": " ", "pos": "VBG", "characterOffsetEnd": 287, "segment_span": [0, 32], "characterOffsetBegin": 277, "originalText": "extracting", "ArgType": null, "before": " "}, {"index": 9, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 293, "segment_span": [0, 32], "characterOffsetBegin": 288, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 298, "segment_span": [0, 32], "characterOffsetBegin": 294, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "NN", "characterOffsetEnd": 305, "segment_span": [0, 32], "characterOffsetBegin": 299, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 12, "word": "parses", "lemma": "parse", "after": " ", "pos": "VBZ", "characterOffsetEnd": 312, "segment_span": [0, 32], "characterOffsetBegin": 306, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 316, "segment_span": [0, 32], "characterOffsetBegin": 313, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 323, "segment_span": [0, 32], "characterOffsetBegin": 317, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 15, "word": "alignments", "lemma": "alignment", "after": " ", "pos": "NNS", "characterOffsetEnd": 334, "segment_span": [0, 32], "characterOffsetBegin": 324, "originalText": "alignments", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 336, "segment_span": [0, 32], "characterOffsetBegin": 335, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Venugopal", "lemma": "Venugopal", "after": " ", "pos": "NNP", "characterOffsetEnd": 345, "segment_span": [0, 32], "characterOffsetBegin": 336, "originalText": "Venugopal", "ArgType": null, "before": ""}, {"index": 18, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 348, "segment_span": [0, 32], "characterOffsetBegin": 346, "originalText": "et", "ArgType": null, "before": " "}, {"index": 19, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 352, "segment_span": [0, 32], "characterOffsetBegin": 349, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 353, "segment_span": [0, 32], "characterOffsetBegin": 352, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 358, "segment_span": [0, 32], "characterOffsetBegin": 354, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 359, "segment_span": [0, 32], "characterOffsetBegin": 358, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 360, "segment_span": [0, 32], "characterOffsetBegin": 359, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 364, "segment_span": [0, 32], "characterOffsetBegin": 361, "originalText": "but", "ArgType": null, "before": " "}, {"index": 25, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 369, "segment_span": [0, 32], "characterOffsetBegin": 365, "originalText": "both", "ArgType": null, "before": " "}, {"index": 26, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 375, "segment_span": [0, 32], "characterOffsetBegin": 370, "originalText": "their", "ArgType": null, "before": " "}, {"index": 27, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 387, "segment_span": [0, 32], "characterOffsetBegin": 376, "originalText": "experiments", "ArgType": null, "before": " "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 391, "segment_span": [0, 32], "characterOffsetBegin": 388, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 395, "segment_span": [0, 32], "characterOffsetBegin": 392, "originalText": "our", "ArgType": null, "before": " "}, {"index": 30, "word": "own", "lemma": "own", "after": " ", "pos": "JJ", "characterOffsetEnd": 399, "segment_span": [0, 32], "characterOffsetBegin": 396, "originalText": "own", "ArgType": null, "before": " "}, {"index": 31, "word": "below", "lemma": "below", "after": " ", "pos": "IN", "characterOffsetEnd": 405, "segment_span": [0, 32], "characterOffsetBegin": 400, "originalText": "below", "ArgType": null, "before": " "}, {"index": 32, "word": "confirm", "lemma": "confirm", "after": " ", "pos": "VBP", "characterOffsetEnd": 413, "segment_span": [0, 32], "characterOffsetBegin": 406, "originalText": "confirm", "ArgType": null, "before": " "}, {"index": 33, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 418, "segment_span": [32, 42], "characterOffsetBegin": 414, "originalText": "that", "ArgType": null, "before": " "}, {"index": 34, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 429, "segment_span": [32, 42], "characterOffsetBegin": 419, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 35, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 432, "segment_span": [32, 42], "characterOffsetBegin": 430, "originalText": "on", "ArgType": null, "before": " "}, {"index": 36, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "NN", "characterOffsetEnd": 439, "segment_span": [32, 42], "characterOffsetBegin": 433, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 37, "word": "parses", "characterOffsetEnd": 446, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "parse", "segment_span": [32, 42], "tense": "Z", "characterOffsetBegin": 440, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 38, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 449, "segment_span": [32, 42], "characterOffsetBegin": 447, "originalText": "is", "ArgType": null, "before": " "}, {"index": 39, "word": "neither", "lemma": "neither", "after": " ", "pos": "DT", "characterOffsetEnd": 457, "segment_span": [32, 42], "characterOffsetBegin": 450, "originalText": "neither", "ArgType": null, "before": " "}, {"index": 40, "word": "efficient", "lemma": "efficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 467, "segment_span": [32, 42], "characterOffsetBegin": 458, "originalText": "efficient", "ArgType": null, "before": " "}, {"index": 41, "word": "nor", "lemma": "nor", "after": " ", "pos": "CC", "characterOffsetEnd": 471, "segment_span": [32, 42], "characterOffsetBegin": 468, "originalText": "nor", "ArgType": null, "before": " "}, {"index": 42, "word": "effective", "lemma": "effective", "after": "", "pos": "JJ", "characterOffsetEnd": 481, "segment_span": [32, 42], "characterOffsetBegin": 472, "originalText": "effective", "ArgType": null, "before": " "}, {"index": 43, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 482, "characterOffsetBegin": 481, "originalText": ".", "ArgType": null, "before": ""}], "text": "There is also a parallel work on extracting rules from k-best parses and k-best alignments ( Venugopal et al. , 2008 ) , but both their experiments and our own below confirm that extraction on k-best parses is neither efficient nor effective ."}]}], "title": "4 Related Work"}, {"num": 9, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": []}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 3, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "Our", "ArgType": null, "before": ""}, {"index": 2, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 26], "characterOffsetBegin": 4, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 19, "segment_span": [0, 26], "characterOffsetBegin": 16, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [0, 26], "characterOffsetBegin": 20, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "Chinese-to-English", "lemma": "chinese-to-english", "after": " ", "pos": "JJ", "characterOffsetEnd": 41, "segment_span": [0, 26], "characterOffsetBegin": 23, "originalText": "Chinese-to-English", "ArgType": null, "before": " "}, {"index": 6, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 26], "characterOffsetBegin": 42, "originalText": "translation", "ArgType": "verb", "before": " "}, {"index": 7, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 59, "segment_span": [0, 26], "characterOffsetBegin": 54, "originalText": "based", "ArgType": null, "before": " "}, {"index": 8, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 26], "characterOffsetBegin": 60, "originalText": "on", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [0, 26], "characterOffsetBegin": 63, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [0, 26], "characterOffsetBegin": 65, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 11, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 26], "characterOffsetBegin": 80, "originalText": "system", "ArgType": null, "before": " "}, {"index": 12, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 94, "segment_span": [0, 26], "characterOffsetBegin": 87, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 97, "segment_span": [0, 26], "characterOffsetBegin": 95, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 99, "segment_span": [0, 26], "characterOffsetBegin": 98, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "Huang", "lemma": "Huang", "after": " ", "pos": "NNP", "characterOffsetEnd": 104, "segment_span": [0, 26], "characterOffsetBegin": 99, "originalText": "Huang", "ArgType": null, "before": ""}, {"index": 16, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 107, "segment_span": [0, 26], "characterOffsetBegin": 105, "originalText": "et", "ArgType": null, "before": " "}, {"index": 17, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 111, "segment_span": [0, 26], "characterOffsetBegin": 108, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 112, "segment_span": [0, 26], "characterOffsetBegin": 111, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 117, "segment_span": [0, 26], "characterOffsetBegin": 113, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 20, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 118, "segment_span": [0, 26], "characterOffsetBegin": 117, "originalText": ";", "ArgType": null, "before": ""}, {"index": 21, "word": "Liu", "lemma": "Liu", "after": " ", "pos": "NNP", "characterOffsetEnd": 122, "segment_span": [0, 26], "characterOffsetBegin": 119, "originalText": "Liu", "ArgType": null, "before": " "}, {"index": 22, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 125, "segment_span": [0, 26], "characterOffsetBegin": 123, "originalText": "et", "ArgType": null, "before": " "}, {"index": 23, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 129, "segment_span": [0, 26], "characterOffsetBegin": 126, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 130, "segment_span": [0, 26], "characterOffsetBegin": 129, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 135, "segment_span": [0, 26], "characterOffsetBegin": 131, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 136, "segment_span": [0, 26], "characterOffsetBegin": 135, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 137, "characterOffsetBegin": 136, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our experiments are on Chinese-to-English translation based on a tree-to-string system similar to ( Huang et al. , 2006 ; Liu et al. , 2006 ) ."}, {"tokens": [{"index": 1, "word": "Given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 143, "segment_span": [0, 23], "characterOffsetBegin": 138, "originalText": "Given", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 145, "segment_span": [0, 23], "characterOffsetBegin": 144, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "1best", "lemma": "1best", "after": " ", "pos": "JJ", "characterOffsetEnd": 151, "segment_span": [0, 23], "characterOffsetBegin": 146, "originalText": "1best", "ArgType": null, "before": " "}, {"index": 4, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [0, 23], "characterOffsetBegin": 152, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 5, "word": "T", "lemma": "t", "after": "", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [0, 23], "characterOffsetBegin": 157, "originalText": "T", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 159, "segment_span": [0, 23], "characterOffsetBegin": 158, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 163, "segment_span": [0, 23], "characterOffsetBegin": 160, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "decoder", "lemma": "decoder", "after": " ", "pos": "NN", "characterOffsetEnd": 171, "segment_span": [0, 23], "characterOffsetBegin": 164, "originalText": "decoder", "ArgType": null, "before": " "}, {"index": 9, "word": "searches", "lemma": "search", "after": " ", "pos": "NNS", "characterOffsetEnd": 180, "segment_span": [0, 23], "characterOffsetBegin": 172, "originalText": "searches", "ArgType": null, "before": " "}, {"index": 10, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 184, "segment_span": [0, 23], "characterOffsetBegin": 181, "originalText": "for", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 188, "segment_span": [0, 23], "characterOffsetBegin": 185, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 193, "segment_span": [0, 23], "characterOffsetBegin": 189, "originalText": "best", "ArgType": null, "before": " "}, {"index": 13, "word": "derivation", "lemma": "derivation", "after": " ", "pos": "NN", "characterOffsetEnd": 204, "segment_span": [0, 23], "characterOffsetBegin": 194, "originalText": "derivation", "ArgType": null, "before": " "}, {"index": 14, "word": "d", "lemma": "d", "after": "", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [0, 23], "characterOffsetBegin": 205, "originalText": "d", "ArgType": null, "before": " "}, {"index": 15, "word": "\u00e2\u0088\u0097", "lemma": "\u00e2\u0088\u0097", "after": " ", "pos": "NN", "characterOffsetEnd": 207, "segment_span": [0, 23], "characterOffsetBegin": 206, "originalText": "\u00e2\u0088\u0097", "ArgType": null, "before": ""}, {"index": 16, "word": "among", "lemma": "among", "after": " ", "pos": "IN", "characterOffsetEnd": 213, "segment_span": [0, 23], "characterOffsetBegin": 208, "originalText": "among", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 217, "segment_span": [0, 23], "characterOffsetBegin": 214, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 221, "segment_span": [0, 23], "characterOffsetBegin": 218, "originalText": "set", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 224, "segment_span": [0, 23], "characterOffsetBegin": 222, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 228, "segment_span": [0, 23], "characterOffsetBegin": 225, "originalText": "all", "ArgType": null, "before": " "}, {"index": 21, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 237, "segment_span": [0, 23], "characterOffsetBegin": 229, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 22, "word": "derivations", "lemma": "derivation", "after": " ", "pos": "NNS", "characterOffsetEnd": 249, "segment_span": [0, 23], "characterOffsetBegin": 238, "originalText": "derivations", "ArgType": null, "before": " "}, {"index": 23, "word": "D", "lemma": "d", "after": "", "pos": "NN", "characterOffsetEnd": 251, "segment_span": [0, 23], "characterOffsetBegin": 250, "originalText": "D", "ArgType": null, "before": " "}, {"index": 24, "word": ":", "lemma": ":", "after": "\u0000\u0000", "pos": ":", "characterOffsetEnd": 252, "characterOffsetBegin": 251, "originalText": ":", "ArgType": null, "before": ""}], "text": "Given a 1best tree T , the decoder searches for the best derivation d \u00e2\u0088\u0097 among the set of all possible derivations D :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 41], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 41], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 15, "segment_span": [0, 41], "characterOffsetBegin": 10, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 19, "segment_span": [0, 41], "characterOffsetBegin": 16, "originalText": "two", "ArgType": null, "before": " "}, {"index": 5, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 41], "characterOffsetBegin": 20, "originalText": "terms", "ArgType": "subj", "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 29, "segment_span": [0, 41], "characterOffsetBegin": 26, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 41], "characterOffsetBegin": 30, "originalText": "translation", "ArgType": "subj", "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 45, "segment_span": [0, 41], "characterOffsetBegin": 42, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 41], "characterOffsetBegin": 46, "originalText": "language", "ArgType": null, "before": " "}, {"index": 10, "word": "model", "lemma": "model", "after": " ", "pos": "NN", "characterOffsetEnd": 60, "segment_span": [0, 41], "characterOffsetBegin": 55, "originalText": "model", "ArgType": null, "before": " "}, {"index": 11, "word": "probabilities", "lemma": "probability", "after": "", "pos": "NNS", "characterOffsetEnd": 74, "segment_span": [0, 41], "characterOffsetBegin": 61, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 75, "segment_span": [0, 41], "characterOffsetBegin": 74, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "\u00cf\u0084", "lemma": "\u00cf\u0084", "after": "", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 41], "characterOffsetBegin": 76, "originalText": "\u00cf\u0084", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 78, "segment_span": [0, 41], "characterOffsetBegin": 77, "originalText": "(", "ArgType": null, "before": ""}, {"index": 15, "word": "d", "lemma": "d", "after": "", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 41], "characterOffsetBegin": 78, "originalText": "d", "ArgType": null, "before": ""}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 80, "segment_span": [0, 41], "characterOffsetBegin": 79, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 83, "segment_span": [0, 41], "characterOffsetBegin": 81, "originalText": "is", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 87, "segment_span": [0, 41], "characterOffsetBegin": 84, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [0, 41], "characterOffsetBegin": 88, "originalText": "target", "ArgType": null, "before": " "}, {"index": 20, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 41], "characterOffsetBegin": 95, "originalText": "string", "ArgType": "verb", "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 103, "segment_span": [0, 41], "characterOffsetBegin": 102, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "English", "lemma": "english", "after": " ", "pos": "JJ", "characterOffsetEnd": 110, "segment_span": [0, 41], "characterOffsetBegin": 103, "originalText": "English", "ArgType": null, "before": ""}, {"index": 23, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 41], "characterOffsetBegin": 111, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 120, "segment_span": [0, 41], "characterOffsetBegin": 119, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [0, 41], "characterOffsetBegin": 121, "originalText": "for", "ArgType": null, "before": " "}, {"index": 26, "word": "derivation", "lemma": "derivation", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [0, 41], "characterOffsetBegin": 125, "originalText": "derivation", "ArgType": null, "before": " "}, {"index": 27, "word": "d", "lemma": "d", "after": "", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [0, 41], "characterOffsetBegin": 136, "originalText": "d", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 138, "segment_span": [0, 41], "characterOffsetBegin": 137, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 142, "segment_span": [0, 41], "characterOffsetBegin": 139, "originalText": "and", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 146, "segment_span": [0, 41], "characterOffsetBegin": 143, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "last", "lemma": "last", "after": " ", "pos": "JJ", "characterOffsetEnd": 151, "segment_span": [0, 41], "characterOffsetBegin": 147, "originalText": "last", "ArgType": null, "before": " "}, {"index": 32, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 155, "segment_span": [0, 41], "characterOffsetBegin": 152, "originalText": "two", "ArgType": null, "before": " "}, {"index": 33, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 161, "segment_span": [0, 41], "characterOffsetBegin": 156, "originalText": "terms", "ArgType": "subj", "before": " "}, {"index": 34, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 165, "segment_span": [0, 41], "characterOffsetBegin": 162, "originalText": "are", "ArgType": null, "before": " "}, {"index": 35, "word": "derivation", "lemma": "derivation", "after": " ", "pos": "NN", "characterOffsetEnd": 176, "segment_span": [0, 41], "characterOffsetBegin": 166, "originalText": "derivation", "ArgType": null, "before": " "}, {"index": 36, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 180, "segment_span": [0, 41], "characterOffsetBegin": 177, "originalText": "and", "ArgType": null, "before": " "}, {"index": 37, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 192, "segment_span": [0, 41], "characterOffsetBegin": 181, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 38, "word": "length", "lemma": "length", "after": " ", "pos": "NN", "characterOffsetEnd": 199, "segment_span": [0, 41], "characterOffsetBegin": 193, "originalText": "length", "ArgType": null, "before": " "}, {"index": 39, "word": "penalties", "lemma": "penalty", "after": "", "pos": "NNS", "characterOffsetEnd": 209, "segment_span": [0, 41], "characterOffsetBegin": 200, "originalText": "penalties", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 210, "segment_span": [0, 41], "characterOffsetBegin": 209, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 223, "segment_span": [0, 41], "characterOffsetBegin": 211, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 224, "characterOffsetBegin": 223, "originalText": ".", "ArgType": null, "before": ""}], "text": "where the first two terms are translation and language model probabilities , \u00cf\u0084 ( d ) is the target string ( English sentence ) for derivation d , and the last two terms are derivation and translation length penalties , respectively ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 228, "segment_span": [0, 3], "characterOffsetBegin": 225, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "conditional", "lemma": "conditional", "after": " ", "pos": "JJ", "characterOffsetEnd": 240, "segment_span": [0, 3], "characterOffsetBegin": 229, "originalText": "conditional", "ArgType": null, "before": " "}, {"index": 3, "word": "probability", "lemma": "probability", "after": " ", "pos": "NN", "characterOffsetEnd": 252, "segment_span": [0, 3], "characterOffsetBegin": 241, "originalText": "probability", "ArgType": null, "before": " "}, {"index": 4, "word": "P", "lemma": "p", "after": "", "pos": "NN", "characterOffsetEnd": 254, "segment_span": [3, 16], "characterOffsetBegin": 253, "originalText": "P", "ArgType": "subj", "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 255, "segment_span": [3, 16], "characterOffsetBegin": 254, "originalText": "(", "ArgType": null, "before": ""}, {"index": 6, "word": "d", "lemma": "d", "after": "  ", "pos": "NN", "characterOffsetEnd": 256, "segment_span": [3, 16], "characterOffsetBegin": 255, "originalText": "d", "ArgType": null, "before": ""}, {"index": 7, "word": "|", "lemma": "|", "after": "", "pos": "CD", "characterOffsetEnd": 259, "segment_span": [3, 16], "characterOffsetBegin": 258, "originalText": "|", "ArgType": null, "before": "  "}, {"index": 8, "word": "T", "lemma": "t", "after": "", "pos": "NN", "characterOffsetEnd": 260, "segment_span": [3, 16], "characterOffsetBegin": 259, "originalText": "T", "ArgType": null, "before": ""}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 261, "segment_span": [3, 16], "characterOffsetBegin": 260, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": "decomposes", "characterOffsetEnd": 272, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "decompose", "segment_span": [3, 16], "tense": "Z", "characterOffsetBegin": 262, "originalText": "decomposes", "ArgType": null, "before": " "}, {"index": 11, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 277, "segment_span": [3, 16], "characterOffsetBegin": 273, "originalText": "into", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 281, "segment_span": [3, 16], "characterOffsetBegin": 278, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "product", "lemma": "product", "after": " ", "pos": "NN", "characterOffsetEnd": 289, "segment_span": [3, 16], "characterOffsetBegin": 282, "originalText": "product", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 292, "segment_span": [3, 16], "characterOffsetBegin": 290, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 297, "segment_span": [3, 16], "characterOffsetBegin": 293, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 16, "word": "probabilities", "lemma": "probability", "after": "", "pos": "NNS", "characterOffsetEnd": 311, "segment_span": [3, 16], "characterOffsetBegin": 298, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": "\u0000", "pos": ":", "characterOffsetEnd": 312, "characterOffsetBegin": 311, "originalText": ":", "ArgType": null, "before": ""}], "text": "The conditional probability P ( d | T ) decomposes into the product of rule probabilities :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 25], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 25], "characterOffsetBegin": 6, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 15, "segment_span": [0, 25], "characterOffsetBegin": 10, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 21, "segment_span": [0, 25], "characterOffsetBegin": 16, "originalText": "three", "ArgType": "subj", "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 25, "segment_span": [0, 25], "characterOffsetBegin": 22, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "conditional", "lemma": "conditional", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [0, 25], "characterOffsetBegin": 26, "originalText": "conditional", "ArgType": null, "before": " "}, {"index": 7, "word": "probabilities", "lemma": "probability", "after": " ", "pos": "NNS", "characterOffsetEnd": 51, "segment_span": [0, 25], "characterOffsetBegin": 38, "originalText": "probabilities", "ArgType": "verb", "before": " "}, {"index": 8, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 57, "segment_span": [0, 25], "characterOffsetBegin": 52, "originalText": "based", "ArgType": null, "before": " "}, {"index": 9, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 25], "characterOffsetBegin": 58, "originalText": "on", "ArgType": null, "before": " "}, {"index": 10, "word": "fractional", "lemma": "fractional", "after": " ", "pos": "JJ", "characterOffsetEnd": 71, "segment_span": [0, 25], "characterOffsetBegin": 61, "originalText": "fractional", "ArgType": null, "before": " "}, {"index": 11, "word": "counts", "lemma": "count", "after": " ", "pos": "NNS", "characterOffsetEnd": 78, "segment_span": [0, 25], "characterOffsetBegin": 72, "originalText": "counts", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [0, 25], "characterOffsetBegin": 79, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 87, "segment_span": [0, 25], "characterOffsetBegin": 82, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 14, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 95, "segment_span": [0, 25], "characterOffsetBegin": 88, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 98, "segment_span": [0, 25], "characterOffsetBegin": 96, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [0, 25], "characterOffsetBegin": 99, "originalText": "Section", "ArgType": null, "before": " "}, {"index": 17, "word": "3.3", "lemma": "3.3", "after": "", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [0, 25], "characterOffsetBegin": 107, "originalText": "3.3", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 111, "segment_span": [0, 25], "characterOffsetBegin": 110, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 115, "segment_span": [0, 25], "characterOffsetBegin": 112, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 119, "segment_span": [0, 25], "characterOffsetBegin": 116, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "last", "lemma": "last", "after": " ", "pos": "JJ", "characterOffsetEnd": 124, "segment_span": [0, 25], "characterOffsetBegin": 120, "originalText": "last", "ArgType": null, "before": " "}, {"index": 22, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 128, "segment_span": [0, 25], "characterOffsetBegin": 125, "originalText": "two", "ArgType": "subj", "before": " "}, {"index": 23, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 132, "segment_span": [0, 25], "characterOffsetBegin": 129, "originalText": "are", "ArgType": null, "before": " "}, {"index": 24, "word": "lexical", "lemma": "lexical", "after": " ", "pos": "JJ", "characterOffsetEnd": 140, "segment_span": [0, 25], "characterOffsetBegin": 133, "originalText": "lexical", "ArgType": null, "before": " "}, {"index": 25, "word": "probabilities", "lemma": "probability", "after": "", "pos": "NNS", "characterOffsetEnd": 154, "segment_span": [0, 25], "characterOffsetBegin": 141, "originalText": "probabilities", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 155, "characterOffsetBegin": 154, "originalText": ".", "ArgType": null, "before": ""}], "text": "where the first three are conditional probabilities based on fractional counts of rules defined in Section 3.3 , and the last two are lexical probabilities ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 161, "segment_span": [0, 21], "characterOffsetBegin": 156, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "parameters", "lemma": "parameter", "after": " ", "pos": "NNS", "characterOffsetEnd": 172, "segment_span": [0, 21], "characterOffsetBegin": 162, "originalText": "parameters", "ArgType": null, "before": " "}, {"index": 3, "word": "Al", "lemma": "Al", "after": " ", "pos": "NNP", "characterOffsetEnd": 175, "segment_span": [0, 21], "characterOffsetBegin": 173, "originalText": "Al", "ArgType": null, "before": " "}, {"index": 4, "word": "...", "lemma": "...", "after": " ", "pos": ":", "characterOffsetEnd": 179, "segment_span": [0, 21], "characterOffsetBegin": 176, "originalText": "...", "ArgType": null, "before": " "}, {"index": 5, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 182, "segment_span": [0, 21], "characterOffsetBegin": 180, "originalText": "As", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 186, "segment_span": [0, 21], "characterOffsetBegin": 183, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "tuned", "lemma": "tune", "after": " ", "pos": "VBN", "characterOffsetEnd": 192, "segment_span": [0, 21], "characterOffsetBegin": 187, "originalText": "tuned", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 195, "segment_span": [0, 21], "characterOffsetBegin": 193, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "minimum", "lemma": "minimum", "after": " ", "pos": "JJ", "characterOffsetEnd": 203, "segment_span": [0, 21], "characterOffsetBegin": 196, "originalText": "minimum", "ArgType": null, "before": " "}, {"index": 10, "word": "error", "lemma": "error", "after": " ", "pos": "NN", "characterOffsetEnd": 209, "segment_span": [0, 21], "characterOffsetBegin": 204, "originalText": "error", "ArgType": null, "before": " "}, {"index": 11, "word": "rate", "lemma": "rate", "after": " ", "pos": "NN", "characterOffsetEnd": 214, "segment_span": [0, 21], "characterOffsetBegin": 210, "originalText": "rate", "ArgType": null, "before": " "}, {"index": 12, "word": "training", "lemma": "training", "after": " ", "pos": "NN", "characterOffsetEnd": 223, "segment_span": [0, 21], "characterOffsetBegin": 215, "originalText": "training", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 225, "segment_span": [0, 21], "characterOffsetBegin": 224, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "Och", "lemma": "och", "after": "", "pos": "NN", "characterOffsetEnd": 228, "segment_span": [0, 21], "characterOffsetBegin": 225, "originalText": "Och", "ArgType": null, "before": ""}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 229, "segment_span": [0, 21], "characterOffsetBegin": 228, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "2003", "lemma": "2003", "after": "", "pos": "CD", "characterOffsetEnd": 234, "segment_span": [0, 21], "characterOffsetBegin": 230, "originalText": "2003", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 235, "segment_span": [0, 21], "characterOffsetBegin": 234, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 238, "segment_span": [0, 21], "characterOffsetBegin": 236, "originalText": "on", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 242, "segment_span": [0, 21], "characterOffsetBegin": 239, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "dev", "lemma": "dev", "after": " ", "pos": "NN", "characterOffsetEnd": 246, "segment_span": [0, 21], "characterOffsetBegin": 243, "originalText": "dev", "ArgType": null, "before": " "}, {"index": 21, "word": "sets", "lemma": "set", "after": "", "pos": "NNS", "characterOffsetEnd": 251, "segment_span": [0, 21], "characterOffsetBegin": 247, "originalText": "sets", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 252, "characterOffsetBegin": 251, "originalText": ".", "ArgType": null, "before": ""}], "text": "These parameters Al ... As are tuned by minimum error rate training ( Och , 2003 ) on the dev sets ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 255, "segment_span": [0, 16], "characterOffsetBegin": 253, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "refer", "characterOffsetEnd": 261, "after": " ", "pos": "VBP", "is_root": true, "lemma": "refer", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 256, "originalText": "refer", "ArgType": "verb", "before": " "}, {"index": 3, "word": "readers", "lemma": "reader", "after": " ", "pos": "NNS", "characterOffsetEnd": 269, "segment_span": [0, 16], "characterOffsetBegin": 262, "originalText": "readers", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 272, "segment_span": [0, 16], "characterOffsetBegin": 270, "originalText": "to", "ArgType": null, "before": " "}, {"index": 5, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 275, "segment_span": [0, 16], "characterOffsetBegin": 273, "originalText": "Mi", "ArgType": null, "before": " "}, {"index": 6, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 278, "segment_span": [0, 16], "characterOffsetBegin": 276, "originalText": "et", "ArgType": null, "before": " "}, {"index": 7, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 282, "segment_span": [0, 16], "characterOffsetBegin": 279, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 284, "segment_span": [0, 16], "characterOffsetBegin": 283, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 288, "segment_span": [0, 16], "characterOffsetBegin": 284, "originalText": "2008", "ArgType": null, "before": ""}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 289, "segment_span": [0, 16], "characterOffsetBegin": 288, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 293, "segment_span": [0, 16], "characterOffsetBegin": 290, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "details", "lemma": "detail", "after": " ", "pos": "NNS", "characterOffsetEnd": 301, "segment_span": [0, 16], "characterOffsetBegin": 294, "originalText": "details", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 304, "segment_span": [0, 16], "characterOffsetBegin": 302, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 308, "segment_span": [0, 16], "characterOffsetBegin": 305, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "decoding", "lemma": "decode", "after": " ", "pos": "VBG", "characterOffsetEnd": 317, "segment_span": [0, 16], "characterOffsetBegin": 309, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 16, "word": "algorithm", "lemma": "algorithm", "after": "", "pos": "NN", "characterOffsetEnd": 327, "segment_span": [0, 16], "characterOffsetBegin": 318, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 328, "characterOffsetBegin": 327, "originalText": ".", "ArgType": null, "before": ""}], "text": "We refer readers to Mi et al. ( 2008 ) for details of the decoding algorithm ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "use", "characterOffsetEnd": 6, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 3, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 12], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "Chinese", "lemma": "chinese", "after": " ", "pos": "JJ", "characterOffsetEnd": 18, "segment_span": [0, 12], "characterOffsetBegin": 11, "originalText": "Chinese", "ArgType": null, "before": " "}, {"index": 5, "word": "parser", "lemma": "parser", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 12], "characterOffsetBegin": 19, "originalText": "parser", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [0, 12], "characterOffsetBegin": 26, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "Xiong", "lemma": "Xiong", "after": " ", "pos": "NNP", "characterOffsetEnd": 34, "segment_span": [0, 12], "characterOffsetBegin": 29, "originalText": "Xiong", "ArgType": null, "before": " "}, {"index": 8, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 37, "segment_span": [0, 12], "characterOffsetBegin": 35, "originalText": "et", "ArgType": null, "before": " "}, {"index": 9, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 41, "segment_span": [0, 12], "characterOffsetBegin": 38, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 43, "segment_span": [0, 12], "characterOffsetBegin": 42, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "2005", "ArgType": null, "before": ""}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 47, "originalText": ")", "ArgType": null, "before": ""}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 51, "segment_span": [12, 20], "characterOffsetBegin": 49, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "parse", "characterOffsetEnd": 57, "after": " ", "pos": "VB", "is_root": true, "lemma": "parse", "segment_span": [12, 20], "tense": "B", "characterOffsetBegin": 52, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 61, "segment_span": [12, 20], "characterOffsetBegin": 58, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "source", "lemma": "source", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [12, 20], "characterOffsetBegin": 62, "originalText": "source", "ArgType": null, "before": " "}, {"index": 17, "word": "side", "lemma": "side", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [12, 20], "characterOffsetBegin": 69, "originalText": "side", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [12, 20], "characterOffsetBegin": 74, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 80, "segment_span": [12, 20], "characterOffsetBegin": 77, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "bitext", "lemma": "bitext", "after": "", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [12, 20], "characterOffsetBegin": 81, "originalText": "bitext", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 88, "characterOffsetBegin": 87, "originalText": ".", "ArgType": null, "before": ""}], "text": "We use the Chinese parser of Xiong et al. ( 2005 ) to parse the source side of the bitext ."}, {"tokens": [{"index": 1, "word": "Following", "characterOffsetEnd": 98, "after": " ", "pos": "VBG", "is_root": true, "lemma": "follow", "segment_span": [0, 6], "tense": "G", "characterOffsetBegin": 89, "originalText": "Following", "ArgType": null, "before": " "}, {"index": 2, "word": "Huang", "lemma": "Huang", "after": " ", "pos": "NNP", "characterOffsetEnd": 104, "segment_span": [0, 6], "characterOffsetBegin": 99, "originalText": "Huang", "ArgType": "dobj", "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 106, "segment_span": [0, 6], "characterOffsetBegin": 105, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [0, 6], "characterOffsetBegin": 106, "originalText": "2008", "ArgType": null, "before": ""}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 111, "segment_span": [0, 6], "characterOffsetBegin": 110, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 112, "segment_span": [0, 6], "characterOffsetBegin": 111, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 115, "segment_span": [6, 20], "characterOffsetBegin": 113, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 120, "segment_span": [6, 20], "characterOffsetBegin": 116, "originalText": "also", "ArgType": null, "before": " "}, {"index": 9, "word": "modify", "characterOffsetEnd": 127, "after": " ", "pos": "VB", "is_root": true, "lemma": "modify", "segment_span": [6, 20], "tense": "B", "characterOffsetBegin": 121, "originalText": "modify", "ArgType": null, "before": " "}, {"index": 10, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 132, "segment_span": [6, 20], "characterOffsetBegin": 128, "originalText": "this", "ArgType": null, "before": " "}, {"index": 11, "word": "parser", "lemma": "parser", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [6, 20], "characterOffsetBegin": 133, "originalText": "parser", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 142, "segment_span": [6, 20], "characterOffsetBegin": 140, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "output", "lemma": "output", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [6, 20], "characterOffsetBegin": 143, "originalText": "output", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 151, "segment_span": [6, 20], "characterOffsetBegin": 150, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 158, "segment_span": [6, 20], "characterOffsetBegin": 152, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 16, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [6, 20], "characterOffsetBegin": 159, "originalText": "forest", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 169, "segment_span": [6, 20], "characterOffsetBegin": 166, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 174, "segment_span": [6, 20], "characterOffsetBegin": 170, "originalText": "each", "ArgType": null, "before": " "}, {"index": 19, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [6, 20], "characterOffsetBegin": 175, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 184, "segment_span": [6, 20], "characterOffsetBegin": 183, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 190, "segment_span": [20, 41], "characterOffsetBegin": 185, "originalText": "which", "ArgType": null, "before": " "}, {"index": 22, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 194, "segment_span": [20, 41], "characterOffsetBegin": 191, "originalText": "can", "ArgType": null, "before": " "}, {"index": 23, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 197, "segment_span": [20, 41], "characterOffsetBegin": 195, "originalText": "be", "ArgType": null, "before": " "}, {"index": 24, "word": "pruned", "characterOffsetEnd": 204, "after": " ", "pos": "VBN", "is_root": true, "lemma": "prune", "segment_span": [20, 41], "tense": "N", "characterOffsetBegin": 198, "before": " ", "originalText": "pruned", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 207, "segment_span": [20, 41], "characterOffsetBegin": 205, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 211, "segment_span": [20, 41], "characterOffsetBegin": 208, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "marginal", "lemma": "marginal", "after": " ", "pos": "JJ", "characterOffsetEnd": 220, "segment_span": [20, 41], "characterOffsetBegin": 212, "originalText": "marginal", "ArgType": null, "before": " "}, {"index": 28, "word": "probability-based", "lemma": "probability-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 238, "segment_span": [20, 41], "characterOffsetBegin": 221, "originalText": "probability-based", "ArgType": null, "before": " "}, {"index": 29, "word": "insideoutside", "lemma": "insideoutside", "after": " ", "pos": "NN", "characterOffsetEnd": 252, "segment_span": [20, 41], "characterOffsetBegin": 239, "originalText": "insideoutside", "ArgType": null, "before": " "}, {"index": 30, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 262, "segment_span": [20, 41], "characterOffsetBegin": 253, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 264, "segment_span": [20, 41], "characterOffsetBegin": 263, "originalText": "(", "ArgType": null, "before": " "}, {"index": 32, "word": "Charniak", "lemma": "charniak", "after": " ", "pos": "NN", "characterOffsetEnd": 272, "segment_span": [20, 41], "characterOffsetBegin": 264, "originalText": "Charniak", "ArgType": null, "before": ""}, {"index": 33, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 276, "segment_span": [20, 41], "characterOffsetBegin": 273, "originalText": "and", "ArgType": null, "before": " "}, {"index": 34, "word": "Johnson", "lemma": "Johnson", "after": "", "pos": "NNP", "characterOffsetEnd": 284, "segment_span": [20, 41], "characterOffsetBegin": 277, "originalText": "Johnson", "ArgType": null, "before": " "}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 285, "segment_span": [20, 41], "characterOffsetBegin": 284, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 290, "segment_span": [20, 41], "characterOffsetBegin": 286, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 37, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 291, "segment_span": [20, 41], "characterOffsetBegin": 290, "originalText": ";", "ArgType": null, "before": ""}, {"index": 38, "word": "Huang", "lemma": "Huang", "after": "", "pos": "NNP", "characterOffsetEnd": 297, "segment_span": [20, 41], "characterOffsetBegin": 292, "originalText": "Huang", "ArgType": null, "before": " "}, {"index": 39, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 298, "segment_span": [20, 41], "characterOffsetBegin": 297, "originalText": ",", "ArgType": null, "before": ""}, {"index": 40, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 303, "segment_span": [20, 41], "characterOffsetBegin": 299, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 41, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 304, "segment_span": [20, 41], "characterOffsetBegin": 303, "originalText": ")", "ArgType": null, "before": ""}, {"index": 42, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 305, "characterOffsetBegin": 304, "originalText": ".", "ArgType": null, "before": ""}], "text": "Following Huang ( 2008 ) , we also modify this parser to output a packed forest for each sentence , which can be pruned by the marginal probability-based insideoutside algorithm ( Charniak and Johnson , 2005 ; Huang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 308, "segment_span": [0, 22], "characterOffsetBegin": 306, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 313, "segment_span": [0, 22], "characterOffsetBegin": 309, "originalText": "will", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "RB", "characterOffsetEnd": 319, "segment_span": [0, 22], "characterOffsetBegin": 314, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "report", "characterOffsetEnd": 326, "after": " ", "pos": "VB", "is_root": true, "lemma": "report", "segment_span": [0, 22], "tense": "B", "characterOffsetBegin": 320, "originalText": "report", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 334, "segment_span": [0, 22], "characterOffsetBegin": 327, "originalText": "results", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "trained", "lemma": "train", "after": " ", "pos": "VBN", "characterOffsetEnd": 342, "segment_span": [0, 22], "characterOffsetBegin": 335, "originalText": "trained", "ArgType": null, "before": " "}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 345, "segment_span": [0, 22], "characterOffsetBegin": 343, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 347, "segment_span": [0, 22], "characterOffsetBegin": 346, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "small-scaled", "lemma": "small-scaled", "after": " ", "pos": "JJ", "characterOffsetEnd": 360, "segment_span": [0, 22], "characterOffsetBegin": 348, "originalText": "small-scaled", "ArgType": null, "before": " "}, {"index": 10, "word": "dataset", "lemma": "dataset", "after": " ", "pos": "NN", "characterOffsetEnd": 368, "segment_span": [0, 22], "characterOffsetBegin": 361, "originalText": "dataset", "ArgType": null, "before": " "}, {"index": 11, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 373, "segment_span": [0, 22], "characterOffsetBegin": 369, "originalText": "with", "ArgType": null, "before": " "}, {"index": 12, "word": "detailed", "lemma": "detailed", "after": " ", "pos": "JJ", "characterOffsetEnd": 382, "segment_span": [0, 22], "characterOffsetBegin": 374, "originalText": "detailed", "ArgType": null, "before": " "}, {"index": 13, "word": "analysis", "lemma": "analysis", "after": "", "pos": "NN", "characterOffsetEnd": 391, "segment_span": [0, 22], "characterOffsetBegin": 383, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 392, "segment_span": [0, 22], "characterOffsetBegin": 391, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 396, "segment_span": [0, 22], "characterOffsetBegin": 393, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 401, "segment_span": [0, 22], "characterOffsetBegin": 397, "originalText": "then", "ArgType": null, "before": " "}, {"index": 17, "word": "scale", "lemma": "scale", "after": " ", "pos": "NN", "characterOffsetEnd": 407, "segment_span": [0, 22], "characterOffsetBegin": 402, "originalText": "scale", "ArgType": null, "before": " "}, {"index": 18, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 410, "segment_span": [0, 22], "characterOffsetBegin": 408, "originalText": "to", "ArgType": null, "before": " "}, {"index": 19, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 412, "segment_span": [0, 22], "characterOffsetBegin": 411, "originalText": "a", "ArgType": null, "before": " "}, {"index": 20, "word": "larger", "lemma": "larger", "after": " ", "pos": "JJR", "characterOffsetEnd": 419, "segment_span": [0, 22], "characterOffsetBegin": 413, "originalText": "larger", "ArgType": null, "before": " "}, {"index": 21, "word": "one", "lemma": "one", "after": "", "pos": "CD", "characterOffsetEnd": 423, "segment_span": [0, 22], "characterOffsetBegin": 420, "originalText": "one", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 424, "segment_span": [0, 22], "characterOffsetBegin": 423, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 430, "segment_span": [22, 38], "characterOffsetBegin": 425, "originalText": "where", "ArgType": null, "before": " "}, {"index": 24, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 433, "segment_span": [22, 38], "characterOffsetBegin": 431, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 25, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 438, "segment_span": [22, 38], "characterOffsetBegin": 434, "originalText": "also", "ArgType": null, "before": " "}, {"index": 26, "word": "combine", "characterOffsetEnd": 446, "after": " ", "pos": "VBP", "is_root": true, "lemma": "combine", "segment_span": [22, 38], "tense": "P", "characterOffsetBegin": 439, "originalText": "combine", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 450, "segment_span": [22, 38], "characterOffsetBegin": 447, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "technique", "lemma": "technique", "after": " ", "pos": "NN", "characterOffsetEnd": 460, "segment_span": [22, 38], "characterOffsetBegin": 451, "originalText": "technique", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 463, "segment_span": [22, 38], "characterOffsetBegin": 461, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 476, "segment_span": [22, 38], "characterOffsetBegin": 464, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 31, "word": "decoding", "lemma": "decoding", "after": " ", "pos": "NN", "characterOffsetEnd": 485, "segment_span": [22, 38], "characterOffsetBegin": 477, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 32, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 487, "segment_span": [22, 38], "characterOffsetBegin": 486, "originalText": "(", "ArgType": null, "before": " "}, {"index": 33, "word": "Mi", "lemma": "Mi", "after": " ", "pos": "NNP", "characterOffsetEnd": 489, "segment_span": [22, 38], "characterOffsetBegin": 487, "originalText": "Mi", "ArgType": null, "before": ""}, {"index": 34, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 492, "segment_span": [22, 38], "characterOffsetBegin": 490, "originalText": "et", "ArgType": null, "before": " "}, {"index": 35, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 496, "segment_span": [22, 38], "characterOffsetBegin": 493, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 36, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 497, "segment_span": [22, 38], "characterOffsetBegin": 496, "originalText": ",", "ArgType": null, "before": ""}, {"index": 37, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 502, "segment_span": [22, 38], "characterOffsetBegin": 498, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 38, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 503, "segment_span": [22, 38], "characterOffsetBegin": 502, "originalText": ")", "ArgType": null, "before": ""}, {"index": 39, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 504, "characterOffsetBegin": 503, "originalText": ".", "ArgType": null, "before": ""}], "text": "We will first report results trained on a small-scaled dataset with detailed analysis , and then scale to a larger one , where we also combine the technique of forest-based decoding ( Mi et al. , 2008 ) ."}], "title": "5.1 System"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "test", "characterOffsetEnd": 7, "after": " ", "pos": "VB", "is_root": true, "lemma": "test", "segment_span": [0, 8], "tense": "B", "characterOffsetBegin": 3, "originalText": "test", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 8, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "effect", "lemma": "effect", "after": " ", "pos": "NN", "characterOffsetEnd": 18, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": "effect", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 21, "segment_span": [0, 8], "characterOffsetBegin": 19, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 34, "segment_span": [0, 8], "characterOffsetBegin": 22, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 7, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 8], "characterOffsetBegin": 35, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 8, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 8], "characterOffsetBegin": 40, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 51, "segment_span": [8, 32], "characterOffsetBegin": 50, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 54, "segment_span": [8, 32], "characterOffsetBegin": 52, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 11, "word": "parse", "characterOffsetEnd": 60, "after": " ", "pos": "VBP", "is_root": true, "lemma": "parse", "segment_span": [8, 32], "tense": "P", "characterOffsetBegin": 55, "originalText": "parse", "ArgType": "verb", "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 64, "segment_span": [8, 32], "characterOffsetBegin": 61, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "training", "lemma": "training", "after": " ", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [8, 32], "characterOffsetBegin": 65, "originalText": "training", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "set", "lemma": "set", "after": " ", "pos": "VBN", "characterOffsetEnd": 77, "segment_span": [8, 32], "characterOffsetBegin": 74, "originalText": "set", "ArgType": null, "before": " "}, {"index": 15, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 82, "segment_span": [8, 32], "characterOffsetBegin": 78, "originalText": "into", "ArgType": null, "before": " "}, {"index": 16, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [8, 32], "characterOffsetBegin": 83, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 17, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [8, 32], "characterOffsetBegin": 89, "originalText": "forests", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 100, "segment_span": [8, 32], "characterOffsetBegin": 97, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "use", "characterOffsetEnd": 104, "after": " ", "pos": "VB", "is_root": true, "lemma": "use", "segment_span": [18, 24], "tense": "B", "characterOffsetBegin": 101, "originalText": "use", "ArgType": null, "before": " "}, {"index": 20, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [18, 24], "characterOffsetBegin": 105, "originalText": "three", "ArgType": null, "before": " "}, {"index": 21, "word": "levels", "lemma": "level", "after": " ", "pos": "NNS", "characterOffsetEnd": 117, "segment_span": [18, 24], "characterOffsetBegin": 111, "originalText": "levels", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 120, "segment_span": [18, 24], "characterOffsetBegin": 118, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "pruning", "lemma": "pruning", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [18, 24], "characterOffsetBegin": 121, "originalText": "pruning", "ArgType": null, "before": " "}, {"index": 24, "word": "thresholds", "lemma": "threshold", "after": "", "pos": "NNS", "characterOffsetEnd": 139, "segment_span": [18, 24], "characterOffsetBegin": 129, "originalText": "thresholds", "ArgType": null, "before": " "}, {"index": 25, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 140, "segment_span": [8, 32], "characterOffsetBegin": 139, "originalText": ":", "ArgType": null, "before": ""}, {"index": 26, "word": "pe", "lemma": "pe", "after": " ", "pos": "NN", "characterOffsetEnd": 143, "segment_span": [8, 32], "characterOffsetBegin": 141, "originalText": "pe", "ArgType": null, "before": " "}, {"index": 27, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 145, "segment_span": [8, 32], "characterOffsetBegin": 144, "originalText": "=", "ArgType": null, "before": " "}, {"index": 28, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 147, "segment_span": [8, 32], "characterOffsetBegin": 146, "originalText": "2", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 148, "segment_span": [8, 32], "characterOffsetBegin": 147, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 150, "segment_span": [8, 32], "characterOffsetBegin": 149, "originalText": "5", "ArgType": null, "before": " "}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 151, "segment_span": [8, 32], "characterOffsetBegin": 150, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "8", "lemma": "8", "after": "", "pos": "CD", "characterOffsetEnd": 153, "segment_span": [8, 32], "characterOffsetBegin": 152, "originalText": "8", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 154, "characterOffsetBegin": 153, "originalText": ".", "ArgType": null, "before": ""}], "text": "To test the effect of forest-based rule extraction , we parse the training set into parse forests and use three levels of pruning thresholds : pe = 2 , 5 , 8 ."}, {"tokens": [{"index": 1, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 161, "segment_span": [0, 23], "characterOffsetBegin": 155, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 2, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 163, "segment_span": [0, 23], "characterOffsetBegin": 162, "originalText": "6", "ArgType": null, "before": " "}, {"index": 3, "word": "plots", "lemma": "plot", "after": " ", "pos": "NNS", "characterOffsetEnd": 169, "segment_span": [0, 23], "characterOffsetBegin": 164, "originalText": "plots", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 173, "segment_span": [0, 23], "characterOffsetBegin": 170, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [0, 23], "characterOffsetBegin": 174, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 6, "word": "speed", "lemma": "speed", "after": " ", "pos": "NN", "characterOffsetEnd": 190, "segment_span": [0, 23], "characterOffsetBegin": 185, "originalText": "speed", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 194, "segment_span": [0, 23], "characterOffsetBegin": 191, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [0, 23], "characterOffsetBegin": 195, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 9, "word": "quality", "lemma": "quality", "after": " ", "pos": "NN", "characterOffsetEnd": 214, "segment_span": [0, 23], "characterOffsetBegin": 207, "originalText": "quality", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 217, "segment_span": [0, 23], "characterOffsetBegin": 215, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 230, "segment_span": [0, 23], "characterOffsetBegin": 218, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 12, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 241, "segment_span": [0, 23], "characterOffsetBegin": 231, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 246, "segment_span": [0, 23], "characterOffsetBegin": 242, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 254, "segment_span": [0, 23], "characterOffsetBegin": 247, "originalText": "various", "ArgType": null, "before": " "}, {"index": 15, "word": "pruning", "lemma": "pruning", "after": " ", "pos": "NN", "characterOffsetEnd": 262, "segment_span": [0, 23], "characterOffsetBegin": 255, "originalText": "pruning", "ArgType": null, "before": " "}, {"index": 16, "word": "thresholds", "lemma": "threshold", "after": "", "pos": "NNS", "characterOffsetEnd": 273, "segment_span": [0, 23], "characterOffsetBegin": 263, "originalText": "thresholds", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 274, "segment_span": [0, 23], "characterOffsetBegin": 273, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "compared", "lemma": "compare", "after": " ", "pos": "VBN", "characterOffsetEnd": 283, "segment_span": [0, 23], "characterOffsetBegin": 275, "originalText": "compared", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 286, "segment_span": [0, 23], "characterOffsetBegin": 284, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 293, "segment_span": [0, 23], "characterOffsetBegin": 287, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 297, "segment_span": [0, 23], "characterOffsetBegin": 294, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 305, "segment_span": [0, 23], "characterOffsetBegin": 298, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 23, "word": "baselines", "lemma": "baseline", "after": "", "pos": "NNS", "characterOffsetEnd": 315, "segment_span": [0, 23], "characterOffsetBegin": 306, "originalText": "baselines", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 316, "characterOffsetBegin": 315, "originalText": ".", "ArgType": null, "before": ""}], "text": "Figure 6 plots the extraction speed and translation quality of forest-based extraction with various pruning thresholds , compared to 1-best and 30-best baselines ."}, {"tokens": [{"index": 1, "word": "Using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 322, "segment_span": [0, 13], "characterOffsetBegin": 317, "originalText": "Using", "ArgType": null, "before": " "}, {"index": 2, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 327, "segment_span": [0, 13], "characterOffsetBegin": 323, "originalText": "more", "ArgType": null, "before": " "}, {"index": 3, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 332, "segment_span": [0, 13], "characterOffsetBegin": 328, "originalText": "than", "ArgType": null, "before": " "}, {"index": 4, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 336, "segment_span": [0, 13], "characterOffsetBegin": 333, "originalText": "one", "ArgType": null, "before": " "}, {"index": 5, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 342, "segment_span": [0, 13], "characterOffsetBegin": 337, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 6, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 347, "segment_span": [0, 13], "characterOffsetBegin": 343, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "apparently", "lemma": "apparently", "after": " ", "pos": "RB", "characterOffsetEnd": 358, "segment_span": [0, 13], "characterOffsetBegin": 348, "originalText": "apparently", "ArgType": null, "before": " "}, {"index": 8, "word": "improves", "characterOffsetEnd": 367, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 359, "originalText": "improves", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 371, "segment_span": [0, 13], "characterOffsetBegin": 368, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "BLEU", "lemma": "BLEU", "after": " ", "pos": "NNP", "characterOffsetEnd": 376, "segment_span": [0, 13], "characterOffsetBegin": 372, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 11, "word": "score", "lemma": "score", "after": "", "pos": "NN", "characterOffsetEnd": 382, "segment_span": [0, 13], "characterOffsetBegin": 377, "originalText": "score", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 383, "segment_span": [0, 13], "characterOffsetBegin": 382, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 387, "segment_span": [0, 13], "characterOffsetBegin": 384, "originalText": "but", "ArgType": null, "before": " "}, {"index": 14, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 390, "segment_span": [13, 32], "characterOffsetBegin": 388, "originalText": "at", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 394, "segment_span": [13, 32], "characterOffsetBegin": 391, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "cost", "lemma": "cost", "after": " ", "pos": "NN", "characterOffsetEnd": 399, "segment_span": [13, 32], "characterOffsetBegin": 395, "originalText": "cost", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 402, "segment_span": [13, 32], "characterOffsetBegin": 400, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "much", "lemma": "much", "after": " ", "pos": "JJ", "characterOffsetEnd": 407, "segment_span": [13, 32], "characterOffsetBegin": 403, "originalText": "much", "ArgType": null, "before": " "}, {"index": 19, "word": "slower", "lemma": "slower", "after": " ", "pos": "JJR", "characterOffsetEnd": 414, "segment_span": [13, 32], "characterOffsetBegin": 408, "originalText": "slower", "ArgType": null, "before": " "}, {"index": 20, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 425, "segment_span": [13, 32], "characterOffsetBegin": 415, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 426, "segment_span": [13, 32], "characterOffsetBegin": 425, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 432, "segment_span": [13, 32], "characterOffsetBegin": 427, "originalText": "since", "ArgType": null, "before": " "}, {"index": 23, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 437, "segment_span": [13, 32], "characterOffsetBegin": 433, "originalText": "each", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 440, "segment_span": [13, 32], "characterOffsetBegin": 438, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 444, "segment_span": [13, 32], "characterOffsetBegin": 441, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "top-k", "lemma": "top-k", "after": " ", "pos": "JJ", "characterOffsetEnd": 450, "segment_span": [13, 32], "characterOffsetBegin": 445, "originalText": "top-k", "ArgType": null, "before": " "}, {"index": 27, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 456, "segment_span": [13, 32], "characterOffsetBegin": 451, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 28, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 460, "segment_span": [13, 32], "characterOffsetBegin": 457, "originalText": "has", "ArgType": null, "before": " "}, {"index": 29, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 463, "segment_span": [13, 32], "characterOffsetBegin": 461, "originalText": "to", "ArgType": null, "before": " "}, {"index": 30, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 466, "segment_span": [13, 32], "characterOffsetBegin": 464, "originalText": "be", "ArgType": null, "before": " "}, {"index": 31, "word": "processed", "characterOffsetEnd": 476, "after": " ", "pos": "VBN", "is_root": true, "lemma": "process", "segment_span": [13, 32], "tense": "N", "characterOffsetBegin": 467, "before": " ", "originalText": "processed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 32, "word": "individually", "lemma": "individually", "after": " ", "pos": "RB", "characterOffsetEnd": 489, "segment_span": [13, 32], "characterOffsetBegin": 477, "originalText": "individually", "ArgType": null, "before": " "}, {"index": 33, "word": "although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 498, "segment_span": [32, 36], "characterOffsetBegin": 490, "originalText": "although", "ArgType": null, "before": " "}, {"index": 34, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 503, "segment_span": [32, 36], "characterOffsetBegin": 499, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 35, "word": "share", "characterOffsetEnd": 509, "after": " ", "pos": "VBP", "is_root": true, "lemma": "share", "segment_span": [32, 36], "tense": "P", "characterOffsetBegin": 504, "originalText": "share", "ArgType": null, "before": " "}, {"index": 36, "word": "many", "lemma": "many", "after": "", "pos": "JJ", "characterOffsetEnd": 514, "segment_span": [32, 36], "characterOffsetBegin": 510, "originalText": "many", "ArgType": "dobj", "before": " "}], "text": "Using more than one parse tree apparently improves the BLEU score , but at the cost of much slower extraction , since each of the top-k trees has to be processed individually although they share many"}, {"tokens": [{"index": 1, "word": "common", "lemma": "common", "after": " ", "pos": "JJ", "characterOffsetEnd": 6, "segment_span": [0, 2], "characterOffsetBegin": 0, "originalText": "common", "ArgType": null, "before": ""}, {"index": 2, "word": "subtrees", "lemma": "subtree", "after": "", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 2], "characterOffsetBegin": 7, "originalText": "subtrees", "ArgType": null, "before": " "}, {"index": 3, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 16, "characterOffsetBegin": 15, "originalText": ".", "ArgType": null, "before": ""}], "text": "common subtrees ."}, {"tokens": [{"index": 1, "word": "Forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 18], "characterOffsetBegin": 17, "originalText": "Forest", "ArgType": null, "before": " "}, {"index": 2, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 18], "characterOffsetBegin": 24, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 18], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 18], "characterOffsetBegin": 36, "originalText": "by", "ArgType": null, "before": " "}, {"index": 5, "word": "contrast", "lemma": "contrast", "after": "", "pos": "NN", "characterOffsetEnd": 47, "segment_span": [0, 18], "characterOffsetBegin": 39, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 48, "segment_span": [0, 18], "characterOffsetBegin": 47, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 51, "segment_span": [0, 18], "characterOffsetBegin": 49, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "much", "lemma": "much", "after": " ", "pos": "JJ", "characterOffsetEnd": 56, "segment_span": [0, 18], "characterOffsetBegin": 52, "originalText": "much", "ArgType": null, "before": " "}, {"index": 9, "word": "faster", "lemma": "faster", "after": " ", "pos": "RBR", "characterOffsetEnd": 63, "segment_span": [0, 18], "characterOffsetBegin": 57, "originalText": "faster", "ArgType": null, "before": " "}, {"index": 10, "word": "thanks", "lemma": "thanks", "after": " ", "pos": "NNS", "characterOffsetEnd": 70, "segment_span": [0, 18], "characterOffsetBegin": 64, "originalText": "thanks", "ArgType": "verb", "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 73, "segment_span": [0, 18], "characterOffsetBegin": 71, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "packing", "lemma": "packing", "after": " ", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 18], "characterOffsetBegin": 74, "originalText": "packing", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 85, "segment_span": [0, 18], "characterOffsetBegin": 82, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "produces", "lemma": "produce", "after": " ", "pos": "VBZ", "characterOffsetEnd": 94, "segment_span": [0, 18], "characterOffsetBegin": 86, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 15, "word": "consistently", "lemma": "consistently", "after": " ", "pos": "RB", "characterOffsetEnd": 107, "segment_span": [0, 18], "characterOffsetBegin": 95, "originalText": "consistently", "ArgType": null, "before": " "}, {"index": 16, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 114, "segment_span": [0, 18], "characterOffsetBegin": 108, "originalText": "better", "ArgType": null, "before": " "}, {"index": 17, "word": "BLEU", "lemma": "BLEU", "after": " ", "pos": "NNP", "characterOffsetEnd": 119, "segment_span": [0, 18], "characterOffsetBegin": 115, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 18, "word": "scores", "lemma": "score", "after": "", "pos": "NNS", "characterOffsetEnd": 126, "segment_span": [0, 18], "characterOffsetBegin": 120, "originalText": "scores", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 127, "characterOffsetBegin": 126, "originalText": ".", "ArgType": null, "before": ""}], "text": "Forest extraction , by contrast , is much faster thanks to packing and produces consistently better BLEU scores ."}, {"tokens": [{"index": 1, "word": "With", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 132, "segment_span": [0, 53], "characterOffsetBegin": 128, "originalText": "With", "ArgType": null, "before": " "}, {"index": 2, "word": "pruning", "lemma": "pruning", "after": " ", "pos": "NN", "characterOffsetEnd": 140, "segment_span": [0, 53], "characterOffsetBegin": 133, "originalText": "pruning", "ArgType": null, "before": " "}, {"index": 3, "word": "threshold", "lemma": "threshold", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [0, 53], "characterOffsetBegin": 141, "originalText": "threshold", "ArgType": null, "before": " "}, {"index": 4, "word": "pe", "lemma": "pe", "after": " ", "pos": "NN", "characterOffsetEnd": 153, "segment_span": [0, 53], "characterOffsetBegin": 151, "originalText": "pe", "ArgType": "subj", "before": " "}, {"index": 5, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 155, "segment_span": [0, 53], "characterOffsetBegin": 154, "originalText": "=", "ArgType": "verb", "before": " "}, {"index": 6, "word": "8", "lemma": "8", "after": "", "pos": "CD", "characterOffsetEnd": 157, "segment_span": [5, 20], "characterOffsetBegin": 156, "originalText": "8", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 158, "segment_span": [5, 20], "characterOffsetBegin": 157, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 171, "segment_span": [5, 20], "characterOffsetBegin": 159, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 9, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [5, 20], "characterOffsetBegin": 172, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 10, "word": "achieves", "characterOffsetEnd": 191, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "achieve", "segment_span": [5, 20], "tense": "Z", "characterOffsetBegin": 183, "originalText": "achieves", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 193, "segment_span": [5, 20], "characterOffsetBegin": 192, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 195, "segment_span": [5, 20], "characterOffsetBegin": 194, "originalText": "(", "ArgType": null, "before": " "}, {"index": 13, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 199, "segment_span": [5, 20], "characterOffsetBegin": 195, "originalText": "case", "ArgType": null, "before": ""}, {"index": 14, "word": "insensitive", "lemma": "insensitive", "after": "", "pos": "JJ", "characterOffsetEnd": 211, "segment_span": [5, 20], "characterOffsetBegin": 200, "originalText": "insensitive", "ArgType": null, "before": " "}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 212, "segment_span": [5, 20], "characterOffsetBegin": 211, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 217, "segment_span": [5, 20], "characterOffsetBegin": 213, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 17, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 223, "segment_span": [5, 20], "characterOffsetBegin": 218, "originalText": "score", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 226, "segment_span": [5, 20], "characterOffsetBegin": 224, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "0.2533", "lemma": "0.2533", "after": "", "pos": "CD", "characterOffsetEnd": 233, "segment_span": [5, 20], "characterOffsetBegin": 227, "originalText": "0.2533", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 234, "segment_span": [5, 20], "characterOffsetBegin": 233, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 240, "segment_span": [20, 33], "characterOffsetBegin": 235, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 22, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 243, "segment_span": [20, 33], "characterOffsetBegin": 241, "originalText": "is", "ArgType": null, "before": " "}, {"index": 23, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 246, "segment_span": [20, 33], "characterOffsetBegin": 244, "originalText": "an", "ArgType": null, "before": " "}, {"index": 24, "word": "absolute", "lemma": "absolute", "after": " ", "pos": "JJ", "characterOffsetEnd": 255, "segment_span": [20, 33], "characterOffsetBegin": 247, "originalText": "absolute", "ArgType": null, "before": " "}, {"index": 25, "word": "improvement", "lemma": "improvement", "after": " ", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [20, 33], "characterOffsetBegin": 256, "originalText": "improvement", "ArgType": null, "before": " "}, {"index": 26, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 270, "segment_span": [20, 33], "characterOffsetBegin": 268, "originalText": "of", "ArgType": null, "before": " "}, {"index": 27, "word": "1.0", "lemma": "1.0", "after": "", "pos": "CD", "characterOffsetEnd": 274, "segment_span": [20, 33], "characterOffsetBegin": 271, "originalText": "1.0", "ArgType": null, "before": " "}, {"index": 28, "word": "%", "lemma": "%", "after": " ", "pos": "NN", "characterOffsetEnd": 275, "segment_span": [20, 33], "characterOffsetBegin": 274, "originalText": "%", "ArgType": null, "before": ""}, {"index": 29, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 282, "segment_span": [20, 33], "characterOffsetBegin": 276, "originalText": "points", "ArgType": null, "before": " "}, {"index": 30, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 287, "segment_span": [20, 33], "characterOffsetBegin": 283, "originalText": "over", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 291, "segment_span": [20, 33], "characterOffsetBegin": 288, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 298, "segment_span": [20, 33], "characterOffsetBegin": 292, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 33, "word": "baseline", "lemma": "baseline", "after": "", "pos": "NN", "characterOffsetEnd": 307, "segment_span": [20, 33], "characterOffsetBegin": 299, "originalText": "baseline", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 308, "segment_span": [0, 53], "characterOffsetBegin": 307, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 312, "segment_span": [0, 53], "characterOffsetBegin": 309, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 315, "segment_span": [0, 53], "characterOffsetBegin": 313, "originalText": "is", "ArgType": null, "before": " "}, {"index": 37, "word": "statistically", "lemma": "statistically", "after": " ", "pos": "RB", "characterOffsetEnd": 329, "segment_span": [0, 53], "characterOffsetBegin": 316, "originalText": "statistically", "ArgType": null, "before": " "}, {"index": 38, "word": "significant", "lemma": "significant", "after": " ", "pos": "JJ", "characterOffsetEnd": 341, "segment_span": [0, 53], "characterOffsetBegin": 330, "originalText": "significant", "ArgType": null, "before": " "}, {"index": 39, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 347, "segment_span": [0, 53], "characterOffsetBegin": 342, "originalText": "using", "ArgType": null, "before": " "}, {"index": 40, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 351, "segment_span": [0, 53], "characterOffsetBegin": 348, "originalText": "the", "ArgType": null, "before": " "}, {"index": 41, "word": "sign-test", "lemma": "sign-test", "after": " ", "pos": "NN", "characterOffsetEnd": 361, "segment_span": [0, 53], "characterOffsetBegin": 352, "originalText": "sign-test", "ArgType": "dobj", "before": " "}, {"index": 42, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 364, "segment_span": [0, 53], "characterOffsetBegin": 362, "originalText": "of", "ArgType": null, "before": " "}, {"index": 43, "word": "Collins", "lemma": "Collins", "after": " ", "pos": "NNP", "characterOffsetEnd": 372, "segment_span": [0, 53], "characterOffsetBegin": 365, "originalText": "Collins", "ArgType": null, "before": " "}, {"index": 44, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 375, "segment_span": [0, 53], "characterOffsetBegin": 373, "originalText": "et", "ArgType": null, "before": " "}, {"index": 45, "word": "al.", "lemma": "al.", "after": " ", "pos": "FW", "characterOffsetEnd": 379, "segment_span": [0, 53], "characterOffsetBegin": 376, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 46, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 381, "segment_span": [0, 53], "characterOffsetBegin": 380, "originalText": "(", "ArgType": null, "before": " "}, {"index": 47, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 385, "segment_span": [0, 53], "characterOffsetBegin": 381, "originalText": "2005", "ArgType": null, "before": ""}, {"index": 48, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 386, "segment_span": [0, 53], "characterOffsetBegin": 385, "originalText": ")", "ArgType": null, "before": ""}, {"index": 49, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 388, "segment_span": [0, 53], "characterOffsetBegin": 387, "originalText": "(", "ArgType": null, "before": " "}, {"index": 50, "word": "p", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 389, "segment_span": [0, 53], "characterOffsetBegin": 388, "originalText": "p", "ArgType": null, "before": ""}, {"index": 51, "word": "<", "lemma": "<", "after": " ", "pos": "JJR", "characterOffsetEnd": 391, "segment_span": [0, 53], "characterOffsetBegin": 390, "originalText": "<", "ArgType": null, "before": " "}, {"index": 52, "word": "0.01", "lemma": "0.01", "after": "", "pos": "CD", "characterOffsetEnd": 396, "segment_span": [0, 53], "characterOffsetBegin": 392, "originalText": "0.01", "ArgType": null, "before": " "}, {"index": 53, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 397, "segment_span": [0, 53], "characterOffsetBegin": 396, "originalText": ")", "ArgType": null, "before": ""}, {"index": 54, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 398, "characterOffsetBegin": 397, "originalText": ".", "ArgType": null, "before": ""}], "text": "With pruning threshold pe = 8 , forest-based extraction achieves a ( case insensitive ) BLEU score of 0.2533 , which is an absolute improvement of 1.0 % points over the 1-best baseline , and is statistically significant using the sign-test of Collins et al. ( 2005 ) ( p < 0.01 ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 403, "segment_span": [0, 12], "characterOffsetBegin": 399, "originalText": "This", "ArgType": "subj", "before": " "}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 406, "segment_span": [0, 12], "characterOffsetBegin": 404, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 411, "segment_span": [0, 12], "characterOffsetBegin": 407, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "0.5", "lemma": "0.5", "after": " ", "pos": "CD", "characterOffsetEnd": 415, "segment_span": [0, 12], "characterOffsetBegin": 412, "originalText": "0.5", "ArgType": null, "before": " "}, {"index": 5, "word": "points", "lemma": "point", "after": " ", "pos": "NNS", "characterOffsetEnd": 422, "segment_span": [0, 12], "characterOffsetBegin": 416, "originalText": "points", "ArgType": "verb", "before": " "}, {"index": 6, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 429, "segment_span": [0, 12], "characterOffsetBegin": 423, "originalText": "better", "ArgType": null, "before": " "}, {"index": 7, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 434, "segment_span": [0, 12], "characterOffsetBegin": 430, "originalText": "than", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 436, "segment_span": [0, 12], "characterOffsetBegin": 435, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 439, "segment_span": [0, 12], "characterOffsetBegin": 436, "originalText": "and", "ArgType": null, "before": ""}, {"index": 10, "word": "twice", "lemma": "twice", "after": " ", "pos": "RB", "characterOffsetEnd": 445, "segment_span": [0, 12], "characterOffsetBegin": 440, "originalText": "twice", "ArgType": null, "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 448, "segment_span": [0, 12], "characterOffsetBegin": 446, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": "fast", "lemma": "fast", "after": " ", "pos": "JJ", "characterOffsetEnd": 453, "segment_span": [0, 12], "characterOffsetBegin": 449, "originalText": "fast", "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": "", "pos": "IN", "characterOffsetEnd": 456, "segment_span": [12, 18], "characterOffsetBegin": 454, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 457, "segment_span": [12, 18], "characterOffsetBegin": 456, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": "extracting", "characterOffsetEnd": 468, "after": " ", "pos": "VBG", "is_root": true, "lemma": "extract", "segment_span": [12, 18], "tense": "G", "characterOffsetBegin": 458, "originalText": "extracting", "ArgType": null, "before": " "}, {"index": 16, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 471, "segment_span": [12, 18], "characterOffsetBegin": 469, "originalText": "on", "ArgType": null, "before": " "}, {"index": 17, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 479, "segment_span": [12, 18], "characterOffsetBegin": 472, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 18, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 486, "segment_span": [12, 18], "characterOffsetBegin": 480, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 487, "characterOffsetBegin": 486, "originalText": ".", "ArgType": null, "before": ""}], "text": "This is also 0.5 points better than ( and twice as fast as ) extracting on 30-best parses ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 493, "segment_span": [0, 37], "characterOffsetBegin": 488, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "BLEU", "lemma": "BLEU", "after": " ", "pos": "NNP", "characterOffsetEnd": 498, "segment_span": [0, 37], "characterOffsetBegin": 494, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 3, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 504, "segment_span": [0, 37], "characterOffsetBegin": 499, "originalText": "score", "ArgType": null, "before": " "}, {"index": 4, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 512, "segment_span": [0, 37], "characterOffsetBegin": 505, "originalText": "results", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 516, "segment_span": [0, 37], "characterOffsetBegin": 513, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "summarized", "characterOffsetEnd": 527, "after": " ", "pos": "VBN", "is_root": true, "lemma": "summarize", "segment_span": [0, 37], "tense": "N", "characterOffsetBegin": 517, "before": " ", "originalText": "summarized", "ArgType": null, "is_pass": true}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 530, "segment_span": [0, 37], "characterOffsetBegin": 528, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 536, "segment_span": [0, 37], "characterOffsetBegin": 531, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 9, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 538, "segment_span": [0, 37], "characterOffsetBegin": 537, "originalText": "2", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 539, "segment_span": [0, 37], "characterOffsetBegin": 538, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 545, "segment_span": [10, 13], "characterOffsetBegin": 540, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 12, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 550, "segment_span": [10, 13], "characterOffsetBegin": 546, "originalText": "also", "ArgType": null, "before": " "}, {"index": 13, "word": "shows", "characterOffsetEnd": 556, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [10, 13], "tense": "Z", "characterOffsetBegin": 551, "originalText": "shows", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 561, "segment_span": [13, 28], "characterOffsetBegin": 557, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": "decoding", "lemma": "decode", "after": " ", "pos": "VBG", "characterOffsetEnd": 570, "segment_span": [13, 28], "characterOffsetBegin": 562, "originalText": "decoding", "ArgType": "subj", "before": " "}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 575, "segment_span": [13, 28], "characterOffsetBegin": 571, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "forest-extracted", "lemma": "forest-extracted", "after": " ", "pos": "JJ", "characterOffsetEnd": 592, "segment_span": [13, 28], "characterOffsetBegin": 576, "originalText": "forest-extracted", "ArgType": null, "before": " "}, {"index": 18, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 598, "segment_span": [13, 28], "characterOffsetBegin": 593, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 19, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 601, "segment_span": [13, 28], "characterOffsetBegin": 599, "originalText": "is", "ArgType": null, "before": " "}, {"index": 20, "word": "less", "lemma": "less", "after": " ", "pos": "JJR", "characterOffsetEnd": 606, "segment_span": [13, 28], "characterOffsetBegin": 602, "originalText": "less", "ArgType": null, "before": " "}, {"index": 21, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 611, "segment_span": [13, 28], "characterOffsetBegin": 607, "originalText": "than", "ArgType": null, "before": " "}, {"index": 22, "word": "twice", "lemma": "twice", "after": " ", "pos": "RB", "characterOffsetEnd": 617, "segment_span": [13, 28], "characterOffsetBegin": 612, "originalText": "twice", "ArgType": null, "before": " "}, {"index": 23, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 620, "segment_span": [13, 28], "characterOffsetBegin": 618, "originalText": "as", "ArgType": null, "before": " "}, {"index": 24, "word": "slow", "lemma": "slow", "after": " ", "pos": "JJ", "characterOffsetEnd": 625, "segment_span": [13, 28], "characterOffsetBegin": 621, "originalText": "slow", "ArgType": null, "before": " "}, {"index": 25, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 628, "segment_span": [13, 28], "characterOffsetBegin": 626, "originalText": "as", "ArgType": null, "before": " "}, {"index": 26, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 633, "segment_span": [13, 28], "characterOffsetBegin": 629, "originalText": "with", "ArgType": null, "before": " "}, {"index": 27, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 640, "segment_span": [13, 28], "characterOffsetBegin": 634, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 28, "word": "rules", "lemma": "rule", "after": "", "pos": "NNS", "characterOffsetEnd": 646, "segment_span": [13, 28], "characterOffsetBegin": 641, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 647, "segment_span": [0, 37], "characterOffsetBegin": 646, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 651, "segment_span": [0, 37], "characterOffsetBegin": 648, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 656, "segment_span": [0, 37], "characterOffsetBegin": 652, "originalText": "only", "ArgType": null, "before": " "}, {"index": 32, "word": "fractionally", "lemma": "fractionally", "after": " ", "pos": "RB", "characterOffsetEnd": 669, "segment_span": [0, 37], "characterOffsetBegin": 657, "originalText": "fractionally", "ArgType": null, "before": " "}, {"index": 33, "word": "slower", "lemma": "slower", "after": " ", "pos": "JJR", "characterOffsetEnd": 676, "segment_span": [0, 37], "characterOffsetBegin": 670, "originalText": "slower", "ArgType": null, "before": " "}, {"index": 34, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 681, "segment_span": [0, 37], "characterOffsetBegin": 677, "originalText": "than", "ArgType": null, "before": " "}, {"index": 35, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 686, "segment_span": [0, 37], "characterOffsetBegin": 682, "originalText": "with", "ArgType": null, "before": " "}, {"index": 36, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 694, "segment_span": [0, 37], "characterOffsetBegin": 687, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 37, "word": "rules", "lemma": "rule", "after": "", "pos": "NNS", "characterOffsetEnd": 700, "segment_span": [0, 37], "characterOffsetBegin": 695, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 701, "characterOffsetBegin": 700, "originalText": ".", "ArgType": null, "before": ""}], "text": "These BLEU score results are summarized in Table 2 , which also shows that decoding with forest-extracted rules is less than twice as slow as with 1-best rules , and only fractionally slower than with 30-best rules ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 704, "segment_span": [0, 19], "characterOffsetBegin": 702, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 709, "segment_span": [0, 19], "characterOffsetBegin": 705, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "investigate", "characterOffsetEnd": 721, "after": " ", "pos": "VBP", "is_root": true, "lemma": "investigate", "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 710, "originalText": "investigate", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 725, "segment_span": [0, 19], "characterOffsetBegin": 722, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "question", "lemma": "question", "after": " ", "pos": "NN", "characterOffsetEnd": 734, "segment_span": [0, 19], "characterOffsetBegin": 726, "originalText": "question", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 737, "segment_span": [0, 19], "characterOffsetBegin": 735, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "how", "lemma": "how", "after": " ", "pos": "WRB", "characterOffsetEnd": 741, "segment_span": [0, 19], "characterOffsetBegin": 738, "originalText": "how", "ArgType": null, "before": " "}, {"index": 8, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 747, "segment_span": [0, 19], "characterOffsetBegin": 742, "originalText": "often", "ArgType": null, "before": " "}, {"index": 9, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 753, "segment_span": [0, 19], "characterOffsetBegin": 748, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 10, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 763, "segment_span": [0, 19], "characterOffsetBegin": 754, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 11, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 768, "segment_span": [0, 19], "characterOffsetBegin": 764, "originalText": "from", "ArgType": null, "before": " "}, {"index": 12, "word": "non", "lemma": "non", "after": " ", "pos": "JJ", "characterOffsetEnd": 772, "segment_span": [0, 19], "characterOffsetBegin": 769, "originalText": "non", "ArgType": null, "before": " "}, {"index": 13, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 779, "segment_span": [0, 19], "characterOffsetBegin": 773, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 14, "word": "parses", "lemma": "parse", "after": " ", "pos": "NNS", "characterOffsetEnd": 786, "segment_span": [0, 19], "characterOffsetBegin": 780, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 790, "segment_span": [0, 19], "characterOffsetBegin": 787, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 795, "segment_span": [0, 19], "characterOffsetBegin": 791, "originalText": "used", "ArgType": null, "before": " "}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 798, "segment_span": [0, 19], "characterOffsetBegin": 796, "originalText": "by", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 802, "segment_span": [0, 19], "characterOffsetBegin": 799, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "decoder", "lemma": "decoder", "after": "", "pos": "NN", "characterOffsetEnd": 810, "segment_span": [0, 19], "characterOffsetBegin": 803, "originalText": "decoder", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 811, "characterOffsetBegin": 810, "originalText": ".", "ArgType": null, "before": ""}], "text": "We also investigate the question of how often rules extracted from non 1-best parses are used by the decoder ."}, {"tokens": [{"index": 1, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 817, "segment_span": [0, 19], "characterOffsetBegin": 812, "originalText": "Table", "ArgType": "subj", "before": " "}, {"index": 2, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 819, "segment_span": [0, 19], "characterOffsetBegin": 818, "originalText": "3", "ArgType": null, "before": " "}, {"index": 3, "word": "shows", "characterOffsetEnd": 825, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 19], "tense": "Z", "characterOffsetBegin": 820, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 829, "segment_span": [0, 19], "characterOffsetBegin": 826, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "numbers", "lemma": "number", "after": " ", "pos": "NNS", "characterOffsetEnd": 837, "segment_span": [0, 19], "characterOffsetBegin": 830, "originalText": "numbers", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 840, "segment_span": [0, 19], "characterOffsetBegin": 838, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 846, "segment_span": [0, 19], "characterOffsetBegin": 841, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 8, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 856, "segment_span": [0, 19], "characterOffsetBegin": 847, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 9, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 861, "segment_span": [0, 19], "characterOffsetBegin": 857, "originalText": "from", "ArgType": null, "before": " "}, {"index": 10, "word": "1-best", "lemma": "1-best", "after": "", "pos": "JJ", "characterOffsetEnd": 868, "segment_span": [0, 19], "characterOffsetBegin": 862, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 869, "segment_span": [0, 19], "characterOffsetBegin": 868, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 877, "segment_span": [0, 19], "characterOffsetBegin": 870, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 881, "segment_span": [0, 19], "characterOffsetBegin": 878, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 894, "segment_span": [0, 19], "characterOffsetBegin": 882, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 15, "word": "extractions", "lemma": "extraction", "after": "", "pos": "NNS", "characterOffsetEnd": 906, "segment_span": [0, 19], "characterOffsetBegin": 895, "originalText": "extractions", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 907, "segment_span": [0, 19], "characterOffsetBegin": 906, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 911, "segment_span": [0, 19], "characterOffsetBegin": 908, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 915, "segment_span": [0, 19], "characterOffsetBegin": 912, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "numbers", "lemma": "number", "after": " ", "pos": "NNS", "characterOffsetEnd": 923, "segment_span": [0, 19], "characterOffsetBegin": 916, "originalText": "numbers", "ArgType": null, "before": " "}, {"index": 20, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 928, "segment_span": [19, 21], "characterOffsetBegin": 924, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 21, "word": "survive", "characterOffsetEnd": 936, "after": " ", "pos": "VBP", "is_root": true, "lemma": "survive", "segment_span": [19, 21], "tense": "P", "characterOffsetBegin": 929, "originalText": "survive", "ArgType": null, "before": " "}, {"index": 22, "word": "after", "lemma": "after", "after": " ", "pos": "IN", "characterOffsetEnd": 942, "segment_span": [21, 27], "characterOffsetBegin": 937, "originalText": "after", "ArgType": null, "before": " "}, {"index": 23, "word": "filtering", "characterOffsetEnd": 952, "after": " ", "pos": "VBG", "is_root": true, "lemma": "filter", "segment_span": [21, 27], "tense": "G", "characterOffsetBegin": 943, "originalText": "filtering", "ArgType": null, "before": " "}, {"index": 24, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 955, "segment_span": [21, 27], "characterOffsetBegin": 953, "originalText": "on", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 959, "segment_span": [21, 27], "characterOffsetBegin": 956, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "dev", "lemma": "dev", "after": " ", "pos": "JJ", "characterOffsetEnd": 963, "segment_span": [21, 27], "characterOffsetBegin": 960, "originalText": "dev", "ArgType": null, "before": " "}, {"index": 27, "word": "set", "lemma": "set", "after": "", "pos": "NN", "characterOffsetEnd": 967, "segment_span": [21, 27], "characterOffsetBegin": 964, "originalText": "set", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 968, "characterOffsetBegin": 967, "originalText": ".", "ArgType": null, "before": ""}], "text": "Table 3 shows the numbers of rules extracted from 1-best , 30-best and forest-based extractions , and the numbers that survive after filtering on the dev set ."}, {"tokens": [{"index": 1, "word": "Basically", "lemma": "basically", "after": " ", "pos": "RB", "characterOffsetEnd": 978, "segment_span": [0, 26], "characterOffsetBegin": 969, "originalText": "Basically", "ArgType": null, "before": " "}, {"index": 2, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 981, "segment_span": [0, 26], "characterOffsetBegin": 979, "originalText": "in", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 985, "segment_span": [0, 26], "characterOffsetBegin": 982, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 998, "segment_span": [0, 26], "characterOffsetBegin": 986, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 5, "word": "case", "lemma": "case", "after": " ", "pos": "NN", "characterOffsetEnd": 1003, "segment_span": [0, 26], "characterOffsetBegin": 999, "originalText": "case", "ArgType": null, "before": " "}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1006, "segment_span": [0, 26], "characterOffsetBegin": 1004, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1010, "segment_span": [0, 26], "characterOffsetBegin": 1007, "originalText": "can", "ArgType": null, "before": " "}, {"index": 8, "word": "use", "characterOffsetEnd": 1014, "after": " ", "pos": "VB", "is_root": true, "lemma": "use", "segment_span": [0, 26], "tense": "B", "characterOffsetBegin": 1011, "originalText": "use", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 9, "word": "about", "lemma": "about", "after": " ", "pos": "IN", "characterOffsetEnd": 1020, "segment_span": [0, 26], "characterOffsetBegin": 1015, "originalText": "about", "ArgType": null, "before": " "}, {"index": 10, "word": "twice", "lemma": "twice", "after": " ", "pos": "RB", "characterOffsetEnd": 1026, "segment_span": [0, 26], "characterOffsetBegin": 1021, "originalText": "twice", "ArgType": null, "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 1029, "segment_span": [0, 26], "characterOffsetBegin": 1027, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 1034, "segment_span": [0, 26], "characterOffsetBegin": 1030, "originalText": "many", "ArgType": null, "before": " "}, {"index": 13, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1040, "segment_span": [0, 26], "characterOffsetBegin": 1035, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1043, "segment_span": [0, 26], "characterOffsetBegin": 1041, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1046, "segment_span": [0, 26], "characterOffsetBegin": 1044, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1050, "segment_span": [0, 26], "characterOffsetBegin": 1047, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "1best", "lemma": "1best", "after": " ", "pos": "JJS", "characterOffsetEnd": 1056, "segment_span": [0, 26], "characterOffsetBegin": 1051, "originalText": "1best", "ArgType": null, "before": " "}, {"index": 18, "word": "case", "lemma": "case", "after": "", "pos": "NN", "characterOffsetEnd": 1061, "segment_span": [0, 26], "characterOffsetBegin": 1057, "originalText": "case", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1062, "segment_span": [0, 26], "characterOffsetBegin": 1061, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 1065, "segment_span": [0, 26], "characterOffsetBegin": 1063, "originalText": "or", "ArgType": null, "before": " "}, {"index": 21, "word": "about", "lemma": "about", "after": " ", "pos": "RB", "characterOffsetEnd": 1071, "segment_span": [0, 26], "characterOffsetBegin": 1066, "originalText": "about", "ArgType": null, "before": " "}, {"index": 22, "word": "1.5", "lemma": "1.5", "after": " ", "pos": "CD", "characterOffsetEnd": 1075, "segment_span": [0, 26], "characterOffsetBegin": 1072, "originalText": "1.5", "ArgType": null, "before": " "}, {"index": 23, "word": "times", "lemma": "time", "after": " ", "pos": "NNS", "characterOffsetEnd": 1081, "segment_span": [0, 26], "characterOffsetBegin": 1076, "originalText": "times", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1084, "segment_span": [0, 26], "characterOffsetBegin": 1082, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "30-best", "lemma": "30-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 1092, "segment_span": [0, 26], "characterOffsetBegin": 1085, "originalText": "30-best", "ArgType": null, "before": " "}, {"index": 26, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 1103, "segment_span": [0, 26], "characterOffsetBegin": 1093, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1104, "characterOffsetBegin": 1103, "originalText": ".", "ArgType": null, "before": ""}], "text": "Basically in the forest-based case we can use about twice as many rules as in the 1best case , or about 1.5 times of 30-best extraction ."}, {"tokens": [{"index": 1, "word": "But", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 1108, "segment_span": [0, 5], "characterOffsetBegin": 1105, "originalText": "But", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1112, "segment_span": [0, 5], "characterOffsetBegin": 1109, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "real", "lemma": "real", "after": " ", "pos": "JJ", "characterOffsetEnd": 1117, "segment_span": [0, 5], "characterOffsetBegin": 1113, "originalText": "real", "ArgType": null, "before": " "}, {"index": 4, "word": "question", "lemma": "question", "after": " ", "pos": "NN", "characterOffsetEnd": 1126, "segment_span": [0, 5], "characterOffsetBegin": 1118, "originalText": "question", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "characterOffsetEnd": 1129, "after": "", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 5], "tense": "Z", "characterOffsetBegin": 1127, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1130, "segment_span": [5, 12], "characterOffsetBegin": 1129, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1134, "segment_span": [5, 12], "characterOffsetBegin": 1131, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 1140, "segment_span": [5, 12], "characterOffsetBegin": 1135, "originalText": "these", "ArgType": null, "before": " "}, {"index": 9, "word": "extra", "lemma": "extra", "after": " ", "pos": "JJ", "characterOffsetEnd": 1146, "segment_span": [5, 12], "characterOffsetBegin": 1141, "originalText": "extra", "ArgType": null, "before": " "}, {"index": 10, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1152, "segment_span": [5, 12], "characterOffsetBegin": 1147, "originalText": "rules", "ArgType": "subj", "before": " "}, {"index": 11, "word": "really", "lemma": "really", "after": " ", "pos": "RB", "characterOffsetEnd": 1159, "segment_span": [5, 12], "characterOffsetBegin": 1153, "originalText": "really", "ArgType": null, "before": " "}, {"index": 12, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 1166, "segment_span": [5, 12], "characterOffsetBegin": 1160, "originalText": "useful", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1169, "segment_span": [12, 20], "characterOffsetBegin": 1167, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "generating", "characterOffsetEnd": 1180, "after": " ", "pos": "VBG", "is_root": true, "lemma": "generate", "segment_span": [12, 20], "tense": "G", "characterOffsetBegin": 1170, "originalText": "generating", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1184, "segment_span": [12, 20], "characterOffsetBegin": 1181, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 1190, "segment_span": [12, 20], "characterOffsetBegin": 1185, "originalText": "final", "ArgType": null, "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1192, "segment_span": [12, 20], "characterOffsetBegin": 1191, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "1-best", "lemma": "1-best", "after": "", "pos": "JJ", "characterOffsetEnd": 1198, "segment_span": [12, 20], "characterOffsetBegin": 1192, "originalText": "1-best", "ArgType": null, "before": ""}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1199, "segment_span": [12, 20], "characterOffsetBegin": 1198, "originalText": ")", "ArgType": null, "before": ""}, {"index": 20, "word": "translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 1211, "segment_span": [12, 20], "characterOffsetBegin": 1200, "originalText": "translation", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "?", "lemma": "?", "after": " ", "pos": ".", "characterOffsetEnd": 1212, "characterOffsetBegin": 1211, "originalText": "?", "ArgType": null, "before": ""}], "text": "But the real question is , are these extra rules really useful in generating the final ( 1-best ) translation ?"}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1216, "segment_span": [0, 4], "characterOffsetBegin": 1213, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "last", "lemma": "last", "after": " ", "pos": "JJ", "characterOffsetEnd": 1221, "segment_span": [0, 4], "characterOffsetBegin": 1217, "originalText": "last", "ArgType": null, "before": " "}, {"index": 3, "word": "row", "lemma": "row", "after": " ", "pos": "NN", "characterOffsetEnd": 1225, "segment_span": [0, 4], "characterOffsetBegin": 1222, "originalText": "row", "ArgType": "subj", "before": " "}, {"index": 4, "word": "shows", "characterOffsetEnd": 1231, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 1226, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1236, "segment_span": [4, 25], "characterOffsetBegin": 1232, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "16.3", "lemma": "16.3", "after": "", "pos": "CD", "characterOffsetEnd": 1241, "segment_span": [4, 25], "characterOffsetBegin": 1237, "originalText": "16.3", "ArgType": null, "before": " "}, {"index": 7, "word": "%", "lemma": "%", "after": " ", "pos": "NN", "characterOffsetEnd": 1242, "segment_span": [4, 25], "characterOffsetBegin": 1241, "originalText": "%", "ArgType": null, "before": ""}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1245, "segment_span": [4, 25], "characterOffsetBegin": 1243, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1249, "segment_span": [4, 25], "characterOffsetBegin": 1246, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1255, "segment_span": [4, 25], "characterOffsetBegin": 1250, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 11, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 1260, "segment_span": [4, 25], "characterOffsetBegin": 1256, "originalText": "used", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1263, "segment_span": [4, 25], "characterOffsetBegin": 1261, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 1270, "segment_span": [4, 25], "characterOffsetBegin": 1264, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 14, "word": "derivations", "lemma": "derivation", "after": " ", "pos": "NNS", "characterOffsetEnd": 1282, "segment_span": [4, 25], "characterOffsetBegin": 1271, "originalText": "derivations", "ArgType": null, "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1286, "segment_span": [4, 25], "characterOffsetBegin": 1283, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "indeed", "lemma": "indeed", "after": " ", "pos": "RB", "characterOffsetEnd": 1293, "segment_span": [4, 25], "characterOffsetBegin": 1287, "originalText": "indeed", "ArgType": null, "before": " "}, {"index": 17, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 1298, "segment_span": [4, 25], "characterOffsetBegin": 1294, "originalText": "only", "ArgType": null, "before": " "}, {"index": 18, "word": "extracted", "characterOffsetEnd": 1308, "after": " ", "pos": "VBN", "is_root": true, "lemma": "extract", "segment_span": [4, 25], "tense": "N", "characterOffsetBegin": 1299, "before": " ", "originalText": "extracted", "ArgType": null, "is_pass": true}, {"index": 19, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1313, "segment_span": [4, 25], "characterOffsetBegin": 1309, "originalText": "from", "ArgType": null, "before": " "}, {"index": 20, "word": "non", "lemma": "non", "after": " ", "pos": "JJ", "characterOffsetEnd": 1317, "segment_span": [4, 25], "characterOffsetBegin": 1314, "originalText": "non", "ArgType": null, "before": " "}, {"index": 21, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 1324, "segment_span": [4, 25], "characterOffsetBegin": 1318, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 22, "word": "parses", "lemma": "parse", "after": " ", "pos": "NNS", "characterOffsetEnd": 1331, "segment_span": [4, 25], "characterOffsetBegin": 1325, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1334, "segment_span": [4, 25], "characterOffsetBegin": 1332, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1338, "segment_span": [4, 25], "characterOffsetBegin": 1335, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "forests", "lemma": "forest", "after": "", "pos": "NNS", "characterOffsetEnd": 1346, "segment_span": [4, 25], "characterOffsetBegin": 1339, "originalText": "forests", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1347, "characterOffsetBegin": 1346, "originalText": ".", "ArgType": null, "before": ""}], "text": "The last row shows that 16.3 % of the rules used in 1-best derivations are indeed only extracted from non 1-best parses in the forests ."}, {"tokens": [{"index": 1, "word": "Note", "characterOffsetEnd": 1352, "after": " ", "pos": "VB", "is_root": true, "lemma": "note", "segment_span": [0, 18], "tense": "B", "characterOffsetBegin": 1348, "originalText": "Note", "ArgType": null, "before": " "}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1357, "segment_span": [1, 13], "characterOffsetBegin": 1353, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 1362, "segment_span": [1, 13], "characterOffsetBegin": 1358, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1365, "segment_span": [1, 13], "characterOffsetBegin": 1363, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1367, "segment_span": [1, 13], "characterOffsetBegin": 1366, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "stronger", "lemma": "stronger", "after": " ", "pos": "JJR", "characterOffsetEnd": 1376, "segment_span": [1, 13], "characterOffsetBegin": 1368, "originalText": "stronger", "ArgType": null, "before": " "}, {"index": 7, "word": "condition", "lemma": "condition", "after": " ", "pos": "NN", "characterOffsetEnd": 1386, "segment_span": [1, 13], "characterOffsetBegin": 1377, "originalText": "condition", "ArgType": null, "before": " "}, {"index": 8, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1391, "segment_span": [1, 13], "characterOffsetBegin": 1387, "originalText": "than", "ArgType": null, "before": " "}, {"index": 9, "word": "changing", "lemma": "change", "after": " ", "pos": "VBG", "characterOffsetEnd": 1400, "segment_span": [1, 13], "characterOffsetBegin": 1392, "originalText": "changing", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1404, "segment_span": [1, 13], "characterOffsetBegin": 1401, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "distribution", "lemma": "distribution", "after": " ", "pos": "NN", "characterOffsetEnd": 1417, "segment_span": [1, 13], "characterOffsetBegin": 1405, "originalText": "distribution", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1420, "segment_span": [1, 13], "characterOffsetBegin": 1418, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1426, "segment_span": [1, 13], "characterOffsetBegin": 1421, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1429, "segment_span": [13, 17], "characterOffsetBegin": 1427, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "considering", "characterOffsetEnd": 1441, "after": " ", "pos": "VBG", "is_root": true, "lemma": "consider", "segment_span": [13, 17], "tense": "G", "characterOffsetBegin": 1430, "originalText": "considering", "ArgType": null, "before": " "}, {"index": 16, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1446, "segment_span": [13, 17], "characterOffsetBegin": 1442, "originalText": "more", "ArgType": null, "before": " "}, {"index": 17, "word": "parses", "lemma": "parse", "after": "", "pos": "VBZ", "characterOffsetEnd": 1453, "segment_span": [13, 17], "characterOffsetBegin": 1447, "originalText": "parses", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1454, "segment_span": [0, 18], "characterOffsetBegin": 1453, "originalText": ";", "ArgType": null, "before": ""}, {"index": 19, "word": "here", "lemma": "here", "after": " ", "pos": "RB", "characterOffsetEnd": 1459, "segment_span": [18, 25], "characterOffsetBegin": 1455, "originalText": "here", "ArgType": null, "before": " "}, {"index": 20, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1462, "segment_span": [18, 25], "characterOffsetBegin": 1460, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 21, "word": "introduce", "characterOffsetEnd": 1472, "after": " ", "pos": "VB", "is_root": true, "lemma": "introduce", "segment_span": [18, 25], "tense": "B", "characterOffsetBegin": 1463, "originalText": "introduce", "ArgType": null, "before": " "}, {"index": 22, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 1476, "segment_span": [18, 25], "characterOffsetBegin": 1473, "originalText": "new", "ArgType": null, "before": " "}, {"index": 23, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 1482, "segment_span": [18, 25], "characterOffsetBegin": 1477, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "never", "lemma": "never", "after": " ", "pos": "RB", "characterOffsetEnd": 1488, "segment_span": [18, 25], "characterOffsetBegin": 1483, "originalText": "never", "ArgType": null, "before": " "}, {"index": 25, "word": "seen", "lemma": "see", "after": " ", "pos": "VBN", "characterOffsetEnd": 1493, "segment_span": [18, 25], "characterOffsetBegin": 1489, "originalText": "seen", "ArgType": null, "before": " "}, {"index": 26, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1496, "segment_span": [25, 29], "characterOffsetBegin": 1494, "originalText": "on", "ArgType": null, "before": " "}, {"index": 27, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 1500, "segment_span": [25, 29], "characterOffsetBegin": 1497, "originalText": "any", "ArgType": null, "before": " "}, {"index": 28, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "NN", "characterOffsetEnd": 1507, "segment_span": [25, 29], "characterOffsetBegin": 1501, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 29, "word": "parses", "characterOffsetEnd": 1514, "after": "", "pos": "VBZ", "is_root": true, "lemma": "parse", "segment_span": [25, 29], "tense": "Z", "characterOffsetBegin": 1508, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1515, "characterOffsetBegin": 1514, "originalText": ".", "ArgType": null, "before": ""}], "text": "Note that this is a stronger condition than changing the distribution of rules by considering more parses ; here we introduce new rules never seen on any 1-best parses ."}], "title": "5.2 Results and Analysis on Small Data"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 7, "segment_span": [0, 12], "characterOffsetBegin": 3, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "conduct", "characterOffsetEnd": 15, "after": " ", "pos": "VBP", "is_root": true, "lemma": "conduct", "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 8, "originalText": "conduct", "ArgType": "verb", "before": " "}, {"index": 4, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 27, "segment_span": [0, 12], "characterOffsetBegin": 16, "originalText": "experiments", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 12], "characterOffsetBegin": 28, "originalText": "on", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 32, "segment_span": [0, 12], "characterOffsetBegin": 31, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "larger", "lemma": "larger", "after": " ", "pos": "JJR", "characterOffsetEnd": 39, "segment_span": [0, 12], "characterOffsetBegin": 33, "originalText": "larger", "ArgType": null, "before": " "}, {"index": 8, "word": "training", "lemma": "training", "after": " ", "pos": "NN", "characterOffsetEnd": 48, "segment_span": [0, 12], "characterOffsetBegin": 40, "originalText": "training", "ArgType": null, "before": " "}, {"index": 9, "word": "dataset", "lemma": "dataset", "after": "", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 12], "characterOffsetBegin": 49, "originalText": "dataset", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "FBIS", "lemma": "FBIS", "after": "", "pos": "NNP", "characterOffsetEnd": 62, "segment_span": [0, 12], "characterOffsetBegin": 58, "originalText": "FBIS", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 63, "segment_span": [0, 12], "characterOffsetBegin": 62, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 69, "segment_span": [12, 28], "characterOffsetBegin": 64, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 14, "word": "contains", "characterOffsetEnd": 78, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "contain", "segment_span": [12, 28], "tense": "Z", "characterOffsetBegin": 70, "originalText": "contains", "ArgType": null, "before": " "}, {"index": 15, "word": "239K", "lemma": "239k", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [12, 28], "characterOffsetBegin": 79, "originalText": "239K", "ArgType": null, "before": " "}, {"index": 16, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 92, "segment_span": [12, 28], "characterOffsetBegin": 84, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 17, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 98, "segment_span": [12, 28], "characterOffsetBegin": 93, "originalText": "pairs", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [12, 28], "characterOffsetBegin": 99, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "about", "lemma": "about", "after": " ", "pos": "RB", "characterOffsetEnd": 109, "segment_span": [12, 28], "characterOffsetBegin": 104, "originalText": "about", "ArgType": null, "before": " "}, {"index": 20, "word": "6.9", "lemma": "6.9", "after": "", "pos": "CD", "characterOffsetEnd": 113, "segment_span": [12, 28], "characterOffsetBegin": 110, "originalText": "6.9", "ArgType": null, "before": " "}, {"index": 21, "word": "M/8", "lemma": "m/8", "after": "", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [12, 28], "characterOffsetBegin": 113, "originalText": "M/8", "ArgType": null, "before": ""}, {"index": 22, "word": ".9", "lemma": ".9", "after": "", "pos": "CD", "characterOffsetEnd": 118, "segment_span": [12, 28], "characterOffsetBegin": 116, "originalText": ".9", "ArgType": null, "before": ""}, {"index": 23, "word": "M", "lemma": "m", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [12, 28], "characterOffsetBegin": 118, "originalText": "M", "ArgType": null, "before": ""}, {"index": 24, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 125, "segment_span": [12, 28], "characterOffsetBegin": 120, "originalText": "words", "ArgType": null, "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [12, 28], "characterOffsetBegin": 126, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "Chinese/English", "lemma": "Chinese/English", "after": "", "pos": "NNP", "characterOffsetEnd": 144, "segment_span": [12, 28], "characterOffsetBegin": 129, "originalText": "Chinese/English", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 145, "segment_span": [12, 28], "characterOffsetBegin": 144, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 158, "segment_span": [12, 28], "characterOffsetBegin": 146, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 159, "characterOffsetBegin": 158, "originalText": ".", "ArgType": null, "before": ""}], "text": "We also conduct experiments on a larger training dataset , FBIS , which contains 239K sentence pairs with about 6.9 M/8 .9 M words in Chinese/English , respectively ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 162, "segment_span": [0, 19], "characterOffsetBegin": 160, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 167, "segment_span": [0, 19], "characterOffsetBegin": 163, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "use", "characterOffsetEnd": 171, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 168, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 173, "segment_span": [0, 19], "characterOffsetBegin": 172, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "bigger", "lemma": "bigger", "after": " ", "pos": "JJR", "characterOffsetEnd": 180, "segment_span": [0, 19], "characterOffsetBegin": 174, "originalText": "bigger", "ArgType": null, "before": " "}, {"index": 6, "word": "trigram", "lemma": "trigram", "after": " ", "pos": "NN", "characterOffsetEnd": 188, "segment_span": [0, 19], "characterOffsetBegin": 181, "originalText": "trigram", "ArgType": null, "before": " "}, {"index": 7, "word": "model", "lemma": "model", "after": " ", "pos": "NN", "characterOffsetEnd": 194, "segment_span": [0, 19], "characterOffsetBegin": 189, "originalText": "model", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "trained", "lemma": "train", "after": " ", "pos": "VBN", "characterOffsetEnd": 202, "segment_span": [0, 19], "characterOffsetBegin": 195, "originalText": "trained", "ArgType": null, "before": " "}, {"index": 9, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 205, "segment_span": [0, 19], "characterOffsetBegin": 203, "originalText": "on", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 209, "segment_span": [0, 19], "characterOffsetBegin": 206, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 215, "segment_span": [0, 19], "characterOffsetBegin": 210, "originalText": "first", "ArgType": null, "before": " "}, {"index": 12, "word": "1/3", "lemma": "1/3", "after": " ", "pos": "CD", "characterOffsetEnd": 219, "segment_span": [0, 19], "characterOffsetBegin": 216, "originalText": "1/3", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 222, "segment_span": [0, 19], "characterOffsetBegin": 220, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 226, "segment_span": [0, 19], "characterOffsetBegin": 223, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "Xinhua", "lemma": "Xinhua", "after": " ", "pos": "NNP", "characterOffsetEnd": 233, "segment_span": [0, 19], "characterOffsetBegin": 227, "originalText": "Xinhua", "ArgType": null, "before": " "}, {"index": 16, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 241, "segment_span": [0, 19], "characterOffsetBegin": 234, "originalText": "portion", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 244, "segment_span": [0, 19], "characterOffsetBegin": 242, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "Gigaword", "lemma": "Gigaword", "after": " ", "pos": "NNP", "characterOffsetEnd": 253, "segment_span": [0, 19], "characterOffsetBegin": 245, "originalText": "Gigaword", "ArgType": null, "before": " "}, {"index": 19, "word": "corpus", "lemma": "corpus", "after": "", "pos": "NN", "characterOffsetEnd": 260, "segment_span": [0, 19], "characterOffsetBegin": 254, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 261, "characterOffsetBegin": 260, "originalText": ".", "ArgType": null, "before": ""}], "text": "We also use a bigger trigram model trained on the first 1/3 of the Xinhua portion of Gigaword corpus ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 264, "segment_span": [0, 5], "characterOffsetBegin": 262, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "integrate", "characterOffsetEnd": 274, "after": " ", "pos": "VB", "is_root": true, "lemma": "integrate", "segment_span": [0, 5], "tense": "B", "characterOffsetBegin": 265, "originalText": "integrate", "ArgType": null, "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 279, "segment_span": [0, 5], "characterOffsetBegin": 275, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 292, "segment_span": [0, 5], "characterOffsetBegin": 280, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 5, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 301, "segment_span": [0, 5], "characterOffsetBegin": 293, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 302, "segment_span": [5, 14], "characterOffsetBegin": 301, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 305, "segment_span": [5, 14], "characterOffsetBegin": 303, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 8, "word": "use", "characterOffsetEnd": 309, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [5, 14], "tense": "P", "characterOffsetBegin": 306, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 9, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 314, "segment_span": [5, 14], "characterOffsetBegin": 310, "originalText": "both", "ArgType": null, "before": " "}, {"index": 10, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 321, "segment_span": [5, 14], "characterOffsetBegin": 315, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 11, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 327, "segment_span": [5, 14], "characterOffsetBegin": 322, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 331, "segment_span": [5, 14], "characterOffsetBegin": 328, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 338, "segment_span": [5, 14], "characterOffsetBegin": 332, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 14, "word": "forests", "lemma": "forest", "after": "", "pos": "NNS", "characterOffsetEnd": 346, "segment_span": [5, 14], "characterOffsetBegin": 339, "originalText": "forests", "ArgType": null, "before": " "}], "text": "To integrate with forest-based decoding , we use both 1-best trees and packed forests"}, {"tokens": [{"index": 1, "word": "during", "lemma": "during", "after": " ", "pos": "IN", "characterOffsetEnd": 6, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "during", "ArgType": null, "before": ""}, {"index": 2, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 11, "segment_span": [0, 7], "characterOffsetBegin": 7, "originalText": "both", "ArgType": null, "before": " "}, {"index": 3, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 7], "characterOffsetBegin": 12, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 4, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 7], "characterOffsetBegin": 17, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 31, "segment_span": [0, 7], "characterOffsetBegin": 28, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "decoding", "lemma": "decode", "after": " ", "pos": "VBG", "characterOffsetEnd": 40, "segment_span": [0, 7], "characterOffsetBegin": 32, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 7, "word": "phases", "lemma": "phase", "after": "", "pos": "NNS", "characterOffsetEnd": 47, "segment_span": [0, 7], "characterOffsetBegin": 41, "originalText": "phases", "ArgType": null, "before": " "}, {"index": 8, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 48, "characterOffsetBegin": 47, "originalText": ".", "ArgType": null, "before": ""}], "text": "during both rule extraction and decoding phases ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 10], "characterOffsetBegin": 49, "originalText": "Since", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 10], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "data", "lemma": "datum", "after": " ", "pos": "NNS", "characterOffsetEnd": 63, "segment_span": [0, 10], "characterOffsetBegin": 59, "originalText": "data", "ArgType": null, "before": " "}, {"index": 4, "word": "scale", "lemma": "scale", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [0, 10], "characterOffsetBegin": 64, "originalText": "scale", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 72, "segment_span": [0, 10], "characterOffsetBegin": 70, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "larger", "lemma": "larger", "after": " ", "pos": "JJR", "characterOffsetEnd": 79, "segment_span": [0, 10], "characterOffsetBegin": 73, "originalText": "larger", "ArgType": null, "before": " "}, {"index": 7, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 84, "segment_span": [0, 10], "characterOffsetBegin": 80, "originalText": "than", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [0, 10], "characterOffsetBegin": 85, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "small", "lemma": "small", "after": " ", "pos": "JJ", "characterOffsetEnd": 94, "segment_span": [0, 10], "characterOffsetBegin": 89, "originalText": "small", "ArgType": null, "before": " "}, {"index": 10, "word": "data", "lemma": "datum", "after": "", "pos": "NNS", "characterOffsetEnd": 99, "segment_span": [0, 10], "characterOffsetBegin": 95, "originalText": "data", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 100, "segment_span": [10, 32], "characterOffsetBegin": 99, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 103, "segment_span": [10, 32], "characterOffsetBegin": 101, "originalText": "we", "ArgType": null, "before": " "}, {"index": 13, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 107, "segment_span": [10, 32], "characterOffsetBegin": 104, "originalText": "are", "ArgType": null, "before": " "}, {"index": 14, "word": "forced", "characterOffsetEnd": 114, "after": " ", "pos": "VBN", "is_root": true, "lemma": "force", "segment_span": [10, 32], "tense": "N", "characterOffsetBegin": 108, "before": " ", "originalText": "forced", "ArgType": null, "is_pass": true}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 117, "segment_span": [10, 32], "characterOffsetBegin": 115, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "use", "lemma": "use", "after": " ", "pos": "VB", "characterOffsetEnd": 121, "segment_span": [10, 32], "characterOffsetBegin": 118, "originalText": "use", "ArgType": null, "before": " "}, {"index": 17, "word": "harsher", "lemma": "harsher", "after": " ", "pos": "JJR", "characterOffsetEnd": 129, "segment_span": [10, 32], "characterOffsetBegin": 122, "originalText": "harsher", "ArgType": null, "before": " "}, {"index": 18, "word": "pruning", "lemma": "pruning", "after": " ", "pos": "NN", "characterOffsetEnd": 137, "segment_span": [10, 32], "characterOffsetBegin": 130, "originalText": "pruning", "ArgType": null, "before": " "}, {"index": 19, "word": "thresholds", "lemma": "threshold", "after": "", "pos": "NNS", "characterOffsetEnd": 148, "segment_span": [10, 32], "characterOffsetBegin": 138, "originalText": "thresholds", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 149, "segment_span": [10, 32], "characterOffsetBegin": 148, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [10, 32], "characterOffsetBegin": 150, "originalText": "with", "ArgType": null, "before": " "}, {"index": 22, "word": "pe", "lemma": "pe", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [10, 32], "characterOffsetBegin": 155, "originalText": "pe", "ArgType": null, "before": " "}, {"index": 23, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 159, "segment_span": [10, 32], "characterOffsetBegin": 158, "originalText": "=", "ArgType": null, "before": " "}, {"index": 24, "word": "5", "lemma": "5", "after": " ", "pos": "CD", "characterOffsetEnd": 161, "segment_span": [10, 32], "characterOffsetBegin": 160, "originalText": "5", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 165, "segment_span": [10, 32], "characterOffsetBegin": 162, "originalText": "for", "ArgType": null, "before": " "}, {"index": 26, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 176, "segment_span": [10, 32], "characterOffsetBegin": 166, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 180, "segment_span": [10, 32], "characterOffsetBegin": 177, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "pd", "lemma": "pd", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [10, 32], "characterOffsetBegin": 181, "originalText": "pd", "ArgType": null, "before": " "}, {"index": 29, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 185, "segment_span": [10, 32], "characterOffsetBegin": 184, "originalText": "=", "ArgType": null, "before": " "}, {"index": 30, "word": "10", "lemma": "10", "after": " ", "pos": "CD", "characterOffsetEnd": 188, "segment_span": [10, 32], "characterOffsetBegin": 186, "originalText": "10", "ArgType": "dobj", "before": " "}, {"index": 31, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 192, "segment_span": [10, 32], "characterOffsetBegin": 189, "originalText": "for", "ArgType": null, "before": " "}, {"index": 32, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 201, "segment_span": [10, 32], "characterOffsetBegin": 193, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 202, "characterOffsetBegin": 201, "originalText": ".", "ArgType": null, "before": ""}], "text": "Since the data scale is larger than the small data , we are forced to use harsher pruning thresholds , with pe = 5 for extraction and pd = 10 for decoding ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 206, "segment_span": [0, 10], "characterOffsetBegin": 203, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 212, "segment_span": [0, 10], "characterOffsetBegin": 207, "originalText": "final", "ArgType": null, "before": " "}, {"index": 3, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 217, "segment_span": [0, 10], "characterOffsetBegin": 213, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 4, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 223, "segment_span": [0, 10], "characterOffsetBegin": 218, "originalText": "score", "ArgType": null, "before": " "}, {"index": 5, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 231, "segment_span": [0, 10], "characterOffsetBegin": 224, "originalText": "results", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 235, "segment_span": [0, 10], "characterOffsetBegin": 232, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "shown", "characterOffsetEnd": 241, "after": " ", "pos": "VBN", "is_root": true, "lemma": "show", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 236, "before": " ", "originalText": "shown", "ArgType": null, "is_pass": true}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 244, "segment_span": [0, 10], "characterOffsetBegin": 242, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 250, "segment_span": [0, 10], "characterOffsetBegin": 245, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 10, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 252, "segment_span": [0, 10], "characterOffsetBegin": 251, "originalText": "4", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 253, "characterOffsetBegin": 252, "originalText": ".", "ArgType": null, "before": ""}], "text": "The final BLEU score results are shown in Table 4 ."}, {"tokens": [{"index": 1, "word": "With", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 258, "segment_span": [0, 23], "characterOffsetBegin": 254, "originalText": "With", "ArgType": null, "before": " "}, {"index": 2, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 263, "segment_span": [0, 23], "characterOffsetBegin": 259, "originalText": "both", "ArgType": null, "before": " "}, {"index": 3, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 274, "segment_span": [0, 23], "characterOffsetBegin": 264, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 4, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 278, "segment_span": [0, 23], "characterOffsetBegin": 275, "originalText": "and", "ArgType": null, "before": " "}, {"index": 5, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 291, "segment_span": [0, 23], "characterOffsetBegin": 279, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 6, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 300, "segment_span": [0, 23], "characterOffsetBegin": 292, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 301, "segment_span": [0, 23], "characterOffsetBegin": 300, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 307, "segment_span": [0, 23], "characterOffsetBegin": 302, "originalText": "rules", "ArgType": "subj", "before": " "}, {"index": 9, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 317, "segment_span": [0, 23], "characterOffsetBegin": 308, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 322, "segment_span": [0, 23], "characterOffsetBegin": 318, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "forests", "lemma": "forest", "after": " ", "pos": "NNS", "characterOffsetEnd": 330, "segment_span": [0, 23], "characterOffsetBegin": 323, "originalText": "forests", "ArgType": null, "before": " "}, {"index": 12, "word": "significantly", "lemma": "significantly", "after": " ", "pos": "RB", "characterOffsetEnd": 344, "segment_span": [0, 23], "characterOffsetBegin": 331, "originalText": "significantly", "ArgType": null, "before": " "}, {"index": 13, "word": "outperform", "characterOffsetEnd": 355, "after": " ", "pos": "VBP", "is_root": true, "lemma": "outperform", "segment_span": [0, 23], "tense": "P", "characterOffsetBegin": 345, "originalText": "outperform", "ArgType": "verb", "before": " "}, {"index": 14, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 361, "segment_span": [0, 23], "characterOffsetBegin": 356, "originalText": "those", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 371, "segment_span": [0, 23], "characterOffsetBegin": 362, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 16, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 376, "segment_span": [0, 23], "characterOffsetBegin": 372, "originalText": "from", "ArgType": null, "before": " "}, {"index": 17, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 383, "segment_span": [0, 23], "characterOffsetBegin": 377, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 18, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 389, "segment_span": [0, 23], "characterOffsetBegin": 384, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 391, "segment_span": [0, 23], "characterOffsetBegin": 390, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "p", "lemma": "p", "after": " ", "pos": "NN", "characterOffsetEnd": 392, "segment_span": [0, 23], "characterOffsetBegin": 391, "originalText": "p", "ArgType": null, "before": ""}, {"index": 21, "word": "<", "lemma": "<", "after": " ", "pos": "JJR", "characterOffsetEnd": 394, "segment_span": [0, 23], "characterOffsetBegin": 393, "originalText": "<", "ArgType": null, "before": " "}, {"index": 22, "word": "0.01", "lemma": "0.01", "after": "", "pos": "CD", "characterOffsetEnd": 399, "segment_span": [0, 23], "characterOffsetBegin": 395, "originalText": "0.01", "ArgType": null, "before": " "}, {"index": 23, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 400, "segment_span": [0, 23], "characterOffsetBegin": 399, "originalText": ")", "ArgType": null, "before": ""}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 401, "characterOffsetBegin": 400, "originalText": ".", "ArgType": null, "before": ""}], "text": "With both tree-based and forest-based decoding , rules extracted from forests significantly outperform those extracted from 1-best trees ( p < 0.01 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 405, "segment_span": [0, 17], "characterOffsetBegin": 402, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 411, "segment_span": [0, 17], "characterOffsetBegin": 406, "originalText": "final", "ArgType": null, "before": " "}, {"index": 3, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 418, "segment_span": [0, 17], "characterOffsetBegin": 412, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 4, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 423, "segment_span": [0, 17], "characterOffsetBegin": 419, "originalText": "with", "ArgType": null, "before": " "}, {"index": 5, "word": "both", "lemma": "both", "after": " ", "pos": "CC", "characterOffsetEnd": 428, "segment_span": [0, 17], "characterOffsetBegin": 424, "originalText": "both", "ArgType": null, "before": " "}, {"index": 6, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 441, "segment_span": [0, 17], "characterOffsetBegin": 429, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 7, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 452, "segment_span": [0, 17], "characterOffsetBegin": 442, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 456, "segment_span": [0, 17], "characterOffsetBegin": 453, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 469, "segment_span": [0, 17], "characterOffsetBegin": 457, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 10, "word": "decoding", "lemma": "decoding", "after": " ", "pos": "NN", "characterOffsetEnd": 478, "segment_span": [0, 17], "characterOffsetBegin": 470, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 11, "word": "reaches", "characterOffsetEnd": 486, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "reach", "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 479, "originalText": "reaches", "ArgType": "verb", "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 488, "segment_span": [0, 17], "characterOffsetBegin": 487, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "BLEU", "lemma": "bleu", "after": " ", "pos": "NN", "characterOffsetEnd": 493, "segment_span": [0, 17], "characterOffsetBegin": 489, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 14, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 499, "segment_span": [0, 17], "characterOffsetBegin": 494, "originalText": "score", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 502, "segment_span": [0, 17], "characterOffsetBegin": 500, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "0.2816", "lemma": "0.2816", "after": "", "pos": "CD", "characterOffsetEnd": 509, "segment_span": [0, 17], "characterOffsetBegin": 503, "originalText": "0.2816", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 510, "segment_span": [0, 17], "characterOffsetBegin": 509, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "outperforming", "characterOffsetEnd": 524, "after": " ", "pos": "VBG", "is_root": true, "lemma": "outperform", "segment_span": [17, 35], "tense": "G", "characterOffsetBegin": 511, "originalText": "outperforming", "ArgType": null, "before": " "}, {"index": 19, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 529, "segment_span": [17, 35], "characterOffsetBegin": 525, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 532, "segment_span": [17, 35], "characterOffsetBegin": 530, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "Hiero", "lemma": "hiero", "after": " ", "pos": "NN", "characterOffsetEnd": 538, "segment_span": [17, 35], "characterOffsetBegin": 533, "originalText": "Hiero", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 540, "segment_span": [17, 35], "characterOffsetBegin": 539, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "Chiang", "lemma": "Chiang", "after": "", "pos": "NNP", "characterOffsetEnd": 546, "segment_span": [17, 35], "characterOffsetBegin": 540, "originalText": "Chiang", "ArgType": null, "before": ""}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 547, "segment_span": [17, 35], "characterOffsetBegin": 546, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 552, "segment_span": [17, 35], "characterOffsetBegin": 548, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 553, "segment_span": [17, 35], "characterOffsetBegin": 552, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 554, "segment_span": [17, 35], "characterOffsetBegin": 553, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 558, "segment_span": [17, 35], "characterOffsetBegin": 555, "originalText": "one", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 561, "segment_span": [17, 35], "characterOffsetBegin": 559, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 565, "segment_span": [17, 35], "characterOffsetBegin": 562, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 570, "segment_span": [17, 35], "characterOffsetBegin": 566, "originalText": "best", "ArgType": null, "before": " "}, {"index": 32, "word": "performing", "lemma": "perform", "after": " ", "pos": "VBG", "characterOffsetEnd": 581, "segment_span": [17, 35], "characterOffsetBegin": 571, "originalText": "performing", "ArgType": null, "before": " "}, {"index": 33, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 589, "segment_span": [17, 35], "characterOffsetBegin": 582, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 34, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 592, "segment_span": [17, 35], "characterOffsetBegin": 590, "originalText": "to", "ArgType": null, "before": " "}, {"index": 35, "word": "date", "lemma": "date", "after": "", "pos": "NN", "characterOffsetEnd": 597, "segment_span": [17, 35], "characterOffsetBegin": 593, "originalText": "date", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 598, "characterOffsetBegin": 597, "originalText": ".", "ArgType": null, "before": ""}], "text": "The final result with both forest-based extraction and forest-based decoding reaches a BLEU score of 0.2816 , outperforming that of Hiero ( Chiang , 2005 ) , one of the best performing systems to date ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 604, "segment_span": [0, 3], "characterOffsetBegin": 599, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 612, "segment_span": [0, 3], "characterOffsetBegin": 605, "originalText": "results", "ArgType": "subj", "before": " "}, {"index": 3, "word": "confirm", "characterOffsetEnd": 620, "after": " ", "pos": "VBP", "is_root": true, "lemma": "confirm", "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 613, "originalText": "confirm", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 625, "segment_span": [3, 18], "characterOffsetBegin": 621, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 629, "segment_span": [3, 18], "characterOffsetBegin": 626, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "novel", "lemma": "novel", "after": " ", "pos": "JJ", "characterOffsetEnd": 635, "segment_span": [3, 18], "characterOffsetBegin": 630, "originalText": "novel", "ArgType": null, "before": " "}, {"index": 7, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 648, "segment_span": [3, 18], "characterOffsetBegin": 636, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 8, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 653, "segment_span": [3, 18], "characterOffsetBegin": 649, "originalText": "rule", "ArgType": null, "before": " "}, {"index": 9, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 664, "segment_span": [3, 18], "characterOffsetBegin": 654, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 673, "segment_span": [3, 18], "characterOffsetBegin": 665, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 676, "segment_span": [3, 18], "characterOffsetBegin": 674, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 678, "segment_span": [3, 18], "characterOffsetBegin": 677, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "promising", "lemma": "promising", "after": " ", "pos": "JJ", "characterOffsetEnd": 688, "segment_span": [3, 18], "characterOffsetBegin": 679, "originalText": "promising", "ArgType": null, "before": " "}, {"index": 14, "word": "direction", "lemma": "direction", "after": " ", "pos": "NN", "characterOffsetEnd": 698, "segment_span": [3, 18], "characterOffsetBegin": 689, "originalText": "direction", "ArgType": null, "before": " "}, {"index": 15, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 702, "segment_span": [3, 18], "characterOffsetBegin": 699, "originalText": "for", "ArgType": null, "before": " "}, {"index": 16, "word": "syntaxbased", "lemma": "syntaxbased", "after": " ", "pos": "JJ", "characterOffsetEnd": 714, "segment_span": [3, 18], "characterOffsetBegin": 703, "originalText": "syntaxbased", "ArgType": null, "before": " "}, {"index": 17, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 722, "segment_span": [3, 18], "characterOffsetBegin": 715, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 18, "word": "translation", "lemma": "translation", "after": "", "pos": "NN", "characterOffsetEnd": 734, "segment_span": [3, 18], "characterOffsetBegin": 723, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 735, "characterOffsetBegin": 734, "originalText": ".", "ArgType": null, "before": ""}], "text": "These results confirm that our novel forest-based rule extraction approach is a promising direction for syntaxbased machine translation ."}], "title": "5.3 Final Results on Large Data"}], "title": "5 Experiments"}, {"num": 13, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": "", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 10], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 17, "segment_span": [0, 10], "characterOffsetBegin": 15, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 22, "segment_span": [0, 10], "characterOffsetBegin": 18, "originalText": "have", "ArgType": null, "before": " "}, {"index": 7, "word": "presented", "characterOffsetEnd": 32, "after": " ", "pos": "VBN", "is_root": true, "lemma": "present", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 23, "originalText": "presented", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 10], "characterOffsetBegin": 33, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "novel", "lemma": "novel", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 10], "characterOffsetBegin": 35, "originalText": "novel", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [0, 10], "characterOffsetBegin": 41, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 54, "segment_span": [10, 30], "characterOffsetBegin": 50, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 12, "word": "extracts", "characterOffsetEnd": 63, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "extract", "segment_span": [10, 30], "tense": "Z", "characterOffsetBegin": 55, "originalText": "extracts", "ArgType": null, "before": " "}, {"index": 13, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 75, "segment_span": [10, 30], "characterOffsetBegin": 64, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 14, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 81, "segment_span": [10, 30], "characterOffsetBegin": 76, "originalText": "rules", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [10, 30], "characterOffsetBegin": 82, "originalText": "from", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 88, "segment_span": [10, 30], "characterOffsetBegin": 87, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "packed", "lemma": "packed", "after": " ", "pos": "JJ", "characterOffsetEnd": 95, "segment_span": [10, 30], "characterOffsetBegin": 89, "originalText": "packed", "ArgType": null, "before": " "}, {"index": 18, "word": "forest", "lemma": "forest", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [10, 30], "characterOffsetBegin": 96, "originalText": "forest", "ArgType": null, "before": " "}, {"index": 19, "word": "encoding", "lemma": "encode", "after": " ", "pos": "VBG", "characterOffsetEnd": 111, "segment_span": [10, 30], "characterOffsetBegin": 103, "originalText": "encoding", "ArgType": null, "before": " "}, {"index": 20, "word": "exponentially", "lemma": "exponentially", "after": " ", "pos": "RB", "characterOffsetEnd": 125, "segment_span": [10, 30], "characterOffsetBegin": 112, "originalText": "exponentially", "ArgType": null, "before": " "}, {"index": 21, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 130, "segment_span": [10, 30], "characterOffsetBegin": 126, "originalText": "many", "ArgType": null, "before": " "}, {"index": 22, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 136, "segment_span": [10, 30], "characterOffsetBegin": 131, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 137, "segment_span": [10, 30], "characterOffsetBegin": 136, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "rather", "lemma": "rather", "after": " ", "pos": "RB", "characterOffsetEnd": 144, "segment_span": [10, 30], "characterOffsetBegin": 138, "originalText": "rather", "ArgType": null, "before": " "}, {"index": 25, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 149, "segment_span": [10, 30], "characterOffsetBegin": 145, "originalText": "than", "ArgType": null, "before": " "}, {"index": 26, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [10, 30], "characterOffsetBegin": 150, "originalText": "from", "ArgType": null, "before": " "}, {"index": 27, "word": "1-best", "lemma": "1-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 161, "segment_span": [10, 30], "characterOffsetBegin": 155, "originalText": "1-best", "ArgType": null, "before": " "}, {"index": 28, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 164, "segment_span": [10, 30], "characterOffsetBegin": 162, "originalText": "or", "ArgType": null, "before": " "}, {"index": 29, "word": "k-best", "lemma": "k-best", "after": " ", "pos": "JJ", "characterOffsetEnd": 171, "segment_span": [10, 30], "characterOffsetBegin": 165, "originalText": "k-best", "ArgType": null, "before": " "}, {"index": 30, "word": "parses", "lemma": "parse", "after": "", "pos": "NNS", "characterOffsetEnd": 178, "segment_span": [10, 30], "characterOffsetBegin": 172, "originalText": "parses", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 179, "characterOffsetBegin": 178, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this paper , we have presented a novel approach that extracts translation rules from a packed forest encoding exponentially many trees , rather than from 1-best or k-best parses ."}, {"tokens": [{"index": 1, "word": "Experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 191, "segment_span": [0, 7], "characterOffsetBegin": 180, "originalText": "Experiments", "ArgType": "subj", "before": " "}, {"index": 2, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 194, "segment_span": [0, 7], "characterOffsetBegin": 192, "originalText": "on", "ArgType": null, "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 196, "segment_span": [0, 7], "characterOffsetBegin": 195, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "state-ofthe-art", "lemma": "state-ofthe-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 212, "segment_span": [0, 7], "characterOffsetBegin": 197, "originalText": "state-ofthe-art", "ArgType": null, "before": " "}, {"index": 5, "word": "tree-to-string", "lemma": "tree-to-string", "after": " ", "pos": "NN", "characterOffsetEnd": 227, "segment_span": [0, 7], "characterOffsetBegin": 213, "originalText": "tree-to-string", "ArgType": null, "before": " "}, {"index": 6, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 234, "segment_span": [0, 7], "characterOffsetBegin": 228, "originalText": "system", "ArgType": null, "before": " "}, {"index": 7, "word": "show", "characterOffsetEnd": 239, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [0, 7], "tense": "P", "characterOffsetBegin": 235, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 8, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 244, "segment_span": [7, 19], "characterOffsetBegin": 240, "originalText": "that", "ArgType": null, "before": " "}, {"index": 9, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 249, "segment_span": [7, 19], "characterOffsetBegin": 245, "originalText": "this", "ArgType": null, "before": " "}, {"index": 10, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 256, "segment_span": [7, 19], "characterOffsetBegin": 250, "originalText": "method", "ArgType": "subj", "before": " "}, {"index": 11, "word": "improves", "characterOffsetEnd": 265, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [7, 19], "tense": "Z", "characterOffsetBegin": 257, "originalText": "improves", "ArgType": null, "before": " "}, {"index": 12, "word": "BLEU", "lemma": "BLEU", "after": " ", "pos": "NNP", "characterOffsetEnd": 270, "segment_span": [7, 19], "characterOffsetBegin": 266, "originalText": "BLEU", "ArgType": null, "before": " "}, {"index": 13, "word": "score", "lemma": "score", "after": " ", "pos": "NN", "characterOffsetEnd": 276, "segment_span": [7, 19], "characterOffsetBegin": 271, "originalText": "score", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "significantly", "lemma": "significantly", "after": "", "pos": "RB", "characterOffsetEnd": 290, "segment_span": [7, 19], "characterOffsetBegin": 277, "originalText": "significantly", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 291, "segment_span": [7, 19], "characterOffsetBegin": 290, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 296, "segment_span": [7, 19], "characterOffsetBegin": 292, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "reasonable", "lemma": "reasonable", "after": " ", "pos": "JJ", "characterOffsetEnd": 307, "segment_span": [7, 19], "characterOffsetBegin": 297, "originalText": "reasonable", "ArgType": null, "before": " "}, {"index": 18, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 318, "segment_span": [7, 19], "characterOffsetBegin": 308, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 19, "word": "speed", "lemma": "speed", "after": "", "pos": "NN", "characterOffsetEnd": 324, "segment_span": [7, 19], "characterOffsetBegin": 319, "originalText": "speed", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 325, "characterOffsetBegin": 324, "originalText": ".", "ArgType": null, "before": ""}], "text": "Experiments on a state-ofthe-art tree-to-string system show that this method improves BLEU score significantly , with reasonable extraction speed ."}, {"tokens": [{"index": 1, "word": "When", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 330, "segment_span": [0, 9], "characterOffsetBegin": 326, "originalText": "When", "ArgType": null, "before": " "}, {"index": 2, "word": "combined", "characterOffsetEnd": 339, "after": " ", "pos": "VBN", "is_root": true, "lemma": "combine", "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 331, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 3, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 344, "segment_span": [0, 9], "characterOffsetBegin": 340, "originalText": "with", "ArgType": null, "before": " "}, {"index": 4, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 348, "segment_span": [0, 9], "characterOffsetBegin": 345, "originalText": "our", "ArgType": null, "before": " "}, {"index": 5, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 357, "segment_span": [0, 9], "characterOffsetBegin": 349, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 6, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 362, "segment_span": [0, 9], "characterOffsetBegin": 358, "originalText": "work", "ArgType": null, "before": " "}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 365, "segment_span": [0, 9], "characterOffsetBegin": 363, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "forest-based", "lemma": "forest-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 378, "segment_span": [0, 9], "characterOffsetBegin": 366, "originalText": "forest-based", "ArgType": null, "before": " "}, {"index": 9, "word": "decoding", "lemma": "decoding", "after": "", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [0, 9], "characterOffsetBegin": 379, "originalText": "decoding", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 388, "segment_span": [9, 21], "characterOffsetBegin": 387, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 392, "segment_span": [9, 21], "characterOffsetBegin": 389, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 398, "segment_span": [9, 21], "characterOffsetBegin": 393, "originalText": "final", "ArgType": null, "before": " "}, {"index": 13, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 405, "segment_span": [9, 21], "characterOffsetBegin": 399, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 408, "segment_span": [9, 21], "characterOffsetBegin": 406, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "even", "lemma": "even", "after": " ", "pos": "RB", "characterOffsetEnd": 413, "segment_span": [9, 21], "characterOffsetBegin": 409, "originalText": "even", "ArgType": null, "before": " "}, {"index": 16, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 420, "segment_span": [9, 21], "characterOffsetBegin": 414, "originalText": "better", "ArgType": "verb", "before": " "}, {"index": 17, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 425, "segment_span": [9, 21], "characterOffsetBegin": 421, "originalText": "than", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 429, "segment_span": [9, 21], "characterOffsetBegin": 426, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "hierarchical", "lemma": "hierarchical", "after": " ", "pos": "JJ", "characterOffsetEnd": 442, "segment_span": [9, 21], "characterOffsetBegin": 430, "originalText": "hierarchical", "ArgType": null, "before": " "}, {"index": 20, "word": "system", "lemma": "system", "after": " ", "pos": "NN", "characterOffsetEnd": 449, "segment_span": [9, 21], "characterOffsetBegin": 443, "originalText": "system", "ArgType": null, "before": " "}, {"index": 21, "word": "Hiero", "lemma": "Hiero", "after": "", "pos": "NNP", "characterOffsetEnd": 455, "segment_span": [9, 21], "characterOffsetBegin": 450, "originalText": "Hiero", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 456, "characterOffsetBegin": 455, "originalText": ".", "ArgType": null, "before": ""}], "text": "When combined with our previous work on forest-based decoding , the final result is even better than the hierarchical system Hiero ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 460, "segment_span": [0, 32], "characterOffsetBegin": 457, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "future", "lemma": "future", "after": " ", "pos": "JJ", "characterOffsetEnd": 467, "segment_span": [0, 32], "characterOffsetBegin": 461, "originalText": "future", "ArgType": null, "before": " "}, {"index": 3, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 472, "segment_span": [0, 32], "characterOffsetBegin": 468, "originalText": "work", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 475, "segment_span": [0, 32], "characterOffsetBegin": 473, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 481, "segment_span": [0, 32], "characterOffsetBegin": 476, "originalText": "would", "ArgType": null, "before": " "}, {"index": 6, "word": "like", "characterOffsetEnd": 486, "after": " ", "pos": "VB", "is_root": true, "lemma": "like", "segment_span": [0, 32], "tense": "B", "characterOffsetBegin": 482, "originalText": "like", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 489, "segment_span": [0, 32], "characterOffsetBegin": 487, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "apply", "lemma": "apply", "after": " ", "pos": "VB", "characterOffsetEnd": 495, "segment_span": [0, 32], "characterOffsetBegin": 490, "originalText": "apply", "ArgType": null, "before": " "}, {"index": 9, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 500, "segment_span": [0, 32], "characterOffsetBegin": 496, "originalText": "this", "ArgType": null, "before": " "}, {"index": 10, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 509, "segment_span": [0, 32], "characterOffsetBegin": 501, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 512, "segment_span": [0, 32], "characterOffsetBegin": 510, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "other", "lemma": "other", "after": " ", "pos": "JJ", "characterOffsetEnd": 518, "segment_span": [0, 32], "characterOffsetBegin": 513, "originalText": "other", "ArgType": null, "before": " "}, {"index": 13, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 524, "segment_span": [0, 32], "characterOffsetBegin": 519, "originalText": "types", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 527, "segment_span": [0, 32], "characterOffsetBegin": 525, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "syntax-based", "lemma": "syntax-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 540, "segment_span": [0, 32], "characterOffsetBegin": 528, "originalText": "syntax-based", "ArgType": null, "before": " "}, {"index": 16, "word": "translation", "lemma": "translation", "after": " ", "pos": "NN", "characterOffsetEnd": 552, "segment_span": [0, 32], "characterOffsetBegin": 541, "originalText": "translation", "ArgType": null, "before": " "}, {"index": 17, "word": "systems", "lemma": "system", "after": "", "pos": "NNS", "characterOffsetEnd": 560, "segment_span": [0, 32], "characterOffsetBegin": 553, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 561, "segment_span": [0, 32], "characterOffsetBegin": 560, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "namely", "lemma": "namely", "after": " ", "pos": "RB", "characterOffsetEnd": 568, "segment_span": [0, 32], "characterOffsetBegin": 562, "originalText": "namely", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 572, "segment_span": [0, 32], "characterOffsetBegin": 569, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "string-to-tree", "lemma": "string-to-tree", "after": " ", "pos": "JJ", "characterOffsetEnd": 587, "segment_span": [0, 32], "characterOffsetBegin": 573, "originalText": "string-to-tree", "ArgType": null, "before": " "}, {"index": 22, "word": "systems", "lemma": "system", "after": " ", "pos": "NNS", "characterOffsetEnd": 595, "segment_span": [0, 32], "characterOffsetBegin": 588, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 597, "segment_span": [0, 32], "characterOffsetBegin": 596, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "Galley", "lemma": "Galley", "after": " ", "pos": "NNP", "characterOffsetEnd": 603, "segment_span": [0, 32], "characterOffsetBegin": 597, "originalText": "Galley", "ArgType": null, "before": ""}, {"index": 25, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 606, "segment_span": [0, 32], "characterOffsetBegin": 604, "originalText": "et", "ArgType": null, "before": " "}, {"index": 26, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 610, "segment_span": [0, 32], "characterOffsetBegin": 607, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 611, "segment_span": [0, 32], "characterOffsetBegin": 610, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 616, "segment_span": [0, 32], "characterOffsetBegin": 612, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 617, "segment_span": [0, 32], "characterOffsetBegin": 616, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 621, "segment_span": [0, 32], "characterOffsetBegin": 618, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "tree-to-tree", "lemma": "tree-to-tree", "after": " ", "pos": "NN", "characterOffsetEnd": 634, "segment_span": [0, 32], "characterOffsetBegin": 622, "originalText": "tree-to-tree", "ArgType": null, "before": " "}, {"index": 32, "word": "systems", "lemma": "system", "after": "", "pos": "NNS", "characterOffsetEnd": 642, "segment_span": [0, 32], "characterOffsetBegin": 635, "originalText": "systems", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 643, "characterOffsetBegin": 642, "originalText": ".", "ArgType": null, "before": ""}], "text": "For future work we would like to apply this approach to other types of syntax-based translation systems , namely the string-to-tree systems ( Galley et al. , 2006 ) and tree-to-tree systems ."}]}], "title": "6 Conclusion and Future Work"}, {"num": 14, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 38], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 9, "segment_span": [0, 38], "characterOffsetBegin": 5, "originalText": "work", "ArgType": null, "before": " "}, {"index": 3, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 13, "segment_span": [0, 38], "characterOffsetBegin": 10, "originalText": "was", "ArgType": null, "before": " "}, {"index": 4, "word": "funded", "characterOffsetEnd": 20, "after": " ", "pos": "VBN", "is_root": true, "lemma": "fund", "segment_span": [0, 38], "tense": "N", "characterOffsetBegin": 14, "before": " ", "originalText": "funded", "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [0, 38], "characterOffsetBegin": 21, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "National", "lemma": "National", "after": " ", "pos": "NNP", "characterOffsetEnd": 32, "segment_span": [0, 38], "characterOffsetBegin": 24, "originalText": "National", "ArgType": null, "before": " "}, {"index": 7, "word": "Natural", "lemma": "Natural", "after": " ", "pos": "NNP", "characterOffsetEnd": 40, "segment_span": [0, 38], "characterOffsetBegin": 33, "originalText": "Natural", "ArgType": null, "before": " "}, {"index": 8, "word": "Science", "lemma": "Science", "after": " ", "pos": "NNP", "characterOffsetEnd": 48, "segment_span": [0, 38], "characterOffsetBegin": 41, "originalText": "Science", "ArgType": null, "before": " "}, {"index": 9, "word": "Foundation", "lemma": "Foundation", "after": " ", "pos": "NNP", "characterOffsetEnd": 59, "segment_span": [0, 38], "characterOffsetBegin": 49, "originalText": "Foundation", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [0, 38], "characterOffsetBegin": 60, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "China", "lemma": "China", "after": "", "pos": "NNP", "characterOffsetEnd": 68, "segment_span": [0, 38], "characterOffsetBegin": 63, "originalText": "China", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 69, "segment_span": [0, 38], "characterOffsetBegin": 68, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "Contracts", "lemma": "contract", "after": " ", "pos": "NNS", "characterOffsetEnd": 79, "segment_span": [0, 38], "characterOffsetBegin": 70, "originalText": "Contracts", "ArgType": null, "before": " "}, {"index": 14, "word": "60736014", "lemma": "60736014", "after": " ", "pos": "CD", "characterOffsetEnd": 88, "segment_span": [0, 38], "characterOffsetBegin": 80, "originalText": "60736014", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 92, "segment_span": [0, 38], "characterOffsetBegin": 89, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "60573188", "lemma": "60573188", "after": "", "pos": "CD", "characterOffsetEnd": 101, "segment_span": [0, 38], "characterOffsetBegin": 93, "originalText": "60573188", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 102, "segment_span": [0, 38], "characterOffsetBegin": 101, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 106, "segment_span": [0, 38], "characterOffsetBegin": 103, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "863", "lemma": "863", "after": " ", "pos": "CD", "characterOffsetEnd": 110, "segment_span": [0, 38], "characterOffsetBegin": 107, "originalText": "863", "ArgType": null, "before": " "}, {"index": 20, "word": "State", "lemma": "state", "after": " ", "pos": "NN", "characterOffsetEnd": 116, "segment_span": [0, 38], "characterOffsetBegin": 111, "originalText": "State", "ArgType": null, "before": " "}, {"index": 21, "word": "Key", "lemma": "Key", "after": " ", "pos": "NNP", "characterOffsetEnd": 120, "segment_span": [0, 38], "characterOffsetBegin": 117, "originalText": "Key", "ArgType": null, "before": " "}, {"index": 22, "word": "Project", "lemma": "Project", "after": " ", "pos": "NNP", "characterOffsetEnd": 128, "segment_span": [0, 38], "characterOffsetBegin": 121, "originalText": "Project", "ArgType": null, "before": " "}, {"index": 23, "word": "No.", "lemma": "No.", "after": " ", "pos": "NNP", "characterOffsetEnd": 132, "segment_span": [0, 38], "characterOffsetBegin": 129, "originalText": "No.", "ArgType": null, "before": " "}, {"index": 24, "word": "2006AA010108", "lemma": "2006AA010108", "after": " ", "pos": "NNP", "characterOffsetEnd": 145, "segment_span": [0, 38], "characterOffsetBegin": 133, "originalText": "2006AA010108", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 147, "segment_span": [0, 38], "characterOffsetBegin": 146, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "H.", "lemma": "H.", "after": " ", "pos": "NNP", "characterOffsetEnd": 149, "segment_span": [0, 38], "characterOffsetBegin": 147, "originalText": "H.", "ArgType": null, "before": ""}, {"index": 27, "word": "M.", "lemma": "M.", "after": "", "pos": "NNP", "characterOffsetEnd": 152, "segment_span": [0, 38], "characterOffsetBegin": 150, "originalText": "M.", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 153, "segment_span": [0, 38], "characterOffsetBegin": 152, "originalText": ")", "ArgType": null, "before": ""}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 154, "segment_span": [0, 38], "characterOffsetBegin": 153, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 158, "segment_span": [0, 38], "characterOffsetBegin": 155, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 161, "segment_span": [0, 38], "characterOffsetBegin": 159, "originalText": "by", "ArgType": null, "before": " "}, {"index": 32, "word": "NSF", "lemma": "NSF", "after": " ", "pos": "NNP", "characterOffsetEnd": 165, "segment_span": [0, 38], "characterOffsetBegin": 162, "originalText": "NSF", "ArgType": null, "before": " "}, {"index": 33, "word": "ITR", "lemma": "ITR", "after": " ", "pos": "NNP", "characterOffsetEnd": 169, "segment_span": [0, 38], "characterOffsetBegin": 166, "originalText": "ITR", "ArgType": null, "before": " "}, {"index": 34, "word": "EIA0205456", "lemma": "eia0205456", "after": " ", "pos": "NN", "characterOffsetEnd": 180, "segment_span": [0, 38], "characterOffsetBegin": 170, "originalText": "EIA0205456", "ArgType": null, "before": " "}, {"index": 35, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 182, "segment_span": [0, 38], "characterOffsetBegin": 181, "originalText": "(", "ArgType": null, "before": " "}, {"index": 36, "word": "L.", "lemma": "l.", "after": " ", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [0, 38], "characterOffsetBegin": 182, "originalText": "L.", "ArgType": null, "before": ""}, {"index": 37, "word": "H.", "lemma": "h.", "after": "", "pos": "NN", "characterOffsetEnd": 187, "segment_span": [0, 38], "characterOffsetBegin": 185, "originalText": "H.", "ArgType": null, "before": " "}, {"index": 38, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 188, "segment_span": [0, 38], "characterOffsetBegin": 187, "originalText": ")", "ArgType": null, "before": ""}, {"index": 39, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 189, "characterOffsetBegin": 188, "originalText": ".", "ArgType": null, "before": ""}], "text": "This work was funded by National Natural Science Foundation of China , Contracts 60736014 and 60573188 , and 863 State Key Project No. 2006AA010108 ( H. M. ) , and by NSF ITR EIA0205456 ( L. H. ) ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 192, "segment_span": [0, 23], "characterOffsetBegin": 190, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "would", "lemma": "would", "after": " ", "pos": "MD", "characterOffsetEnd": 198, "segment_span": [0, 23], "characterOffsetBegin": 193, "originalText": "would", "ArgType": null, "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 203, "segment_span": [0, 23], "characterOffsetBegin": 199, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "like", "characterOffsetEnd": 208, "after": " ", "pos": "VB", "is_root": true, "lemma": "like", "segment_span": [0, 23], "tense": "B", "characterOffsetBegin": 204, "originalText": "like", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 211, "segment_span": [0, 23], "characterOffsetBegin": 209, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "thank", "lemma": "thank", "after": " ", "pos": "VB", "characterOffsetEnd": 217, "segment_span": [0, 23], "characterOffsetBegin": 212, "originalText": "thank", "ArgType": null, "before": " "}, {"index": 7, "word": "Qun", "lemma": "Qun", "after": " ", "pos": "NNP", "characterOffsetEnd": 221, "segment_span": [0, 23], "characterOffsetBegin": 218, "originalText": "Qun", "ArgType": null, "before": " "}, {"index": 8, "word": "Liu", "lemma": "Liu", "after": " ", "pos": "NNP", "characterOffsetEnd": 225, "segment_span": [0, 23], "characterOffsetBegin": 222, "originalText": "Liu", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 229, "segment_span": [8, 12], "characterOffsetBegin": 226, "originalText": "for", "ArgType": null, "before": " "}, {"index": 10, "word": "supporting", "characterOffsetEnd": 240, "after": " ", "pos": "VBG", "is_root": true, "lemma": "support", "segment_span": [8, 12], "tense": "G", "characterOffsetBegin": 230, "originalText": "supporting", "ArgType": null, "before": " "}, {"index": 11, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 245, "segment_span": [8, 12], "characterOffsetBegin": 241, "originalText": "this", "ArgType": null, "before": " "}, {"index": 12, "word": "work", "lemma": "work", "after": "", "pos": "NN", "characterOffsetEnd": 250, "segment_span": [8, 12], "characterOffsetBegin": 246, "originalText": "work", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 251, "segment_span": [0, 23], "characterOffsetBegin": 250, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 255, "segment_span": [0, 23], "characterOffsetBegin": 252, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 259, "segment_span": [0, 23], "characterOffsetBegin": 256, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 265, "segment_span": [0, 23], "characterOffsetBegin": 260, "originalText": "three", "ArgType": null, "before": " "}, {"index": 17, "word": "anonymous", "lemma": "anonymous", "after": " ", "pos": "JJ", "characterOffsetEnd": 275, "segment_span": [0, 23], "characterOffsetBegin": 266, "originalText": "anonymous", "ArgType": null, "before": " "}, {"index": 18, "word": "reviewers", "lemma": "reviewer", "after": " ", "pos": "NNS", "characterOffsetEnd": 285, "segment_span": [0, 23], "characterOffsetBegin": 276, "originalText": "reviewers", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 289, "segment_span": [0, 23], "characterOffsetBegin": 286, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "improving", "lemma": "improve", "after": " ", "pos": "VBG", "characterOffsetEnd": 299, "segment_span": [0, 23], "characterOffsetBegin": 290, "originalText": "improving", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 303, "segment_span": [0, 23], "characterOffsetBegin": 300, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "earlier", "lemma": "earlier", "after": " ", "pos": "JJR", "characterOffsetEnd": 311, "segment_span": [0, 23], "characterOffsetBegin": 304, "originalText": "earlier", "ArgType": null, "before": " "}, {"index": 23, "word": "version", "lemma": "version", "after": "", "pos": "NN", "characterOffsetEnd": 319, "segment_span": [0, 23], "characterOffsetBegin": 312, "originalText": "version", "ArgType": "dobj", "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 320, "characterOffsetBegin": 319, "originalText": ".", "ArgType": null, "before": ""}], "text": "We would also like to thank Qun Liu for supporting this work , and the three anonymous reviewers for improving the earlier version ."}]}], "title": "Acknowledgement"}, {"num": 15, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": []}], "title": "References"}], "paper_id": "D08-1022", "citation_contexts": [{"info": {"authors": ["Sylvie Billot", "Bernard Lang"], "year": "1989", "title": "the structure of shared forests in ambiguous parsing"}, "citing_string": "Billot and Lang , 1989", "sentence": 0, "section": 2, "citation_id": "D08-1022_0", "raw_string": "Sylvie Billot and Bernard Lang. 1989. The structure of shared forests in ambiguous parsing. In Proceedings ofACL \u201989, pages 143\u2013151.", "subsection": 1, "cite_context": "e right. These extracted rules are called minimal rules, which can be glued together to form composed rules with larger tree fragments (e.g. r1 in Fig. 1) (Galley et al., 2006). Our experiments use composed rules. 3 Forest-based Rule Extraction We now extend tree-based extraction algorithm from the previous section to work with a packed forest representing exponentially many parse trees. 3.1 Packed Forest Informally, a packed parse forest, or forest in short, is a compact representation of all the derivations (i.e., parse trees) for a given sentence under a context-free grammar (Earley, 1970; Billot and Lang, 1989). For example, consider again the Chinese sentence in Example (1) above, which has (at least) two readings depending on the part-ofspeech of the word y\u02c7u: it can be either a conjunction (CC \u201cand\u201d) as shown in Figure 3, or a preposition (P \u201cwith\u201d) as shown in Figure 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target words. IP0,6 NPB0,1 VP1,6 B", "is_self_cite": false, "cited_paper_id": "External_15907"}, {"info": {"authors": ["Eugene Charniak", "Mark Johnson"], "year": "2005", "title": "coarsetofinegrained nbest parsing and discriminative reranking"}, "citing_string": "Charniak and Johnson , 2005", "sentence": 4, "section": 2, "citation_id": "D08-1022_1", "raw_string": "Eugene Charniak and Mark Johnson. 2005. Coarse-tofine-grained n-best parsing and discriminative reranking. In Proceedings of the 43rd ACL, Ann Arbor, MI.", "subsection": 3, "cite_context": " of one, which will be used in maximum-likelihood estimation of rule probabilities. However, a forest is an implicit collection of many more trees, each of which, when enumerated, has its own probability accumulated from of the parse hyperedges involved. In other words, a forest can be viewed as a virtual weighted k-best list with a huge k. So a rule extracted from a non 1-best parse, i.e., using non 1-best hyperedges, should be penalized accordingly and should have a fractional count instead of a unit one, similar to the E-step in EM algorithms. Inspired by the parsing literature on pruning (Charniak and Johnson, 2005; Huang, 2008) we penalize a rule r by the posterior probability of its tree fragment frag = lhs(r). This posterior probability, notated \u03b1\u03b2(frag), can be computed in an InsideOutside fashion as the product of three parts: the outside probability of its root node, the probabilities of parse hyperedges involved in the fragment, and the inside probabilities of its leaf nodes, \u03b1\u03b2(frag) =\u03b1(root(frag)) where \u03b1(\u00b7) and \u03b2(\u00b7) denote the outside and inside probabilities of tree nodes, respectively. For example in Figure 4, \u03b1\u03b2(1e2, e3}) = \u03b1(IP0, 6) \u00b7 P(e2) \u00b7 P(e3) \u00b7 \u03b2(NPB0, 1)\u03b2(CC1, 2)\u03b2(NPB2, 3)\u03b2(VPB3, 6)", "is_self_cite": false, "cited_paper_id": "External_23859"}, {"info": {"authors": ["Eugene Charniak", "Mark Johnson"], "year": "2005", "title": "coarsetofinegrained nbest parsing and discriminative reranking"}, "citing_string": "Charniak and Johnson , 2005", "sentence": 8, "section": 4, "citation_id": "D08-1022_2", "raw_string": "Eugene Charniak and Mark Johnson. 2005. Coarse-tofine-grained n-best parsing and discriminative reranking. In Proceedings of the 43rd ACL, Ann Arbor, MI.", "subsection": 1, "cite_context": ".1-best and 30-best. rules from... extraction decoding BLEU 1-best trees 0.24 1.74 0.2430 30-best trees 5.56 3.31 0.2488 forest: pe=8 2.36 3.40 0.2533 Pharaoh - - 0.2297 Table 2: Results with different rule extraction methods. Extraction and decoding columns are running times in secs per 1000 sentences and per sentence, respectively. We use the Chinese parser of Xiong et al. (2005) to parse the source side of the bitext. Following Huang (2008), we also modify this parser to output a packed forest for each sentence, which can be pruned by the marginal probability-based insideoutside algorithm (Charniak and Johnson, 2005; Huang, 2008). We will first report results trained on a small-scaled dataset with detailed analysis, and then scale to a larger one, where we also combine the technique of forest-based decoding (Mi et al., 2008). 5.2 Results and Analysis on Small Data To test the effect of forest-based rule extraction, we parse the training set into parse forests and use three levels of pruning thresholds: pe = 2, 5, 8. Figure 6 plots the extraction speed and translation quality of forest-based extraction with various pruning thresholds, compared to 1-best and 30-best baselines. Using more than one parse tre", "is_self_cite": false, "cited_paper_id": "External_23859"}, {"info": {"authors": ["David Chiang"], "year": "2005", "title": "a hierarchical phrasebased model for statistical machine translation"}, "citing_string": "Chiang , 2005", "sentence": 5, "section": 2, "citation_id": "D08-1022_3", "raw_string": "David Chiang. 2005. A hierarchical phrase-based model for statistical machine translation. In Proceedings of the 43rd ACL, Ann Arbor, MI.", "subsection": 1, "cite_context": "re 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target words. IP0,6 NPB0,1 VP1,6 B`ushi PP1,3 VPB3,6 P1,2 NPB2,3 j\u02c7uxing le huit\u00b4an y\u02c7u Sh\u00afal\u00b4ong 209 These two parse trees can be represented as a single forest by sharing common subtrees such as NPB0, 1 and VPB3, 6, as shown in Figure 4. Such a forest has a structure of a hypergraph (Huang and Chiang, 2005), where items like NP0, 3 are called nodes, whose indices denote the source span, and combinations like e1 : IP0, 6 \u2192 NPB0, 3 VP3, 6 we call hyperedges. We denote head(e) and tails(e) to be the consequent and antecedant items of hyperedge e, respectively. For example, head(e1) = IP0, 6, tails(e1) = {NPB0, 3,VP3, 6}. We also denote BS(v) to be the set of incoming hyperedges of node v, being different ways of deriving it. For example, in Figure 4, BS(IP0, 6) = {e1, e2}. 3.2 Forest-based Rule Extraction Algorithm Like in tree-based extraction, we extract rules from a packed forest F in two steps:", "is_self_cite": false, "cited_paper_id": "P05-1033"}, {"info": {"authors": ["David Chiang"], "year": "2005", "title": "a hierarchical phrasebased model for statistical machine translation"}, "citing_string": "Chiang , 2005", "sentence": 7, "section": 4, "citation_id": "D08-1022_4", "raw_string": "David Chiang. 2005. A hierarchical phrase-based model for statistical machine translation. In Proceedings of the 43rd ACL, Ann Arbor, MI.", "subsection": 3, "cite_context": "o 0.2738 Table 4: BLEU score results trained on large data. during both rule extraction and decoding phases. Since the data scale is larger than the small data, we are forced to use harsher pruning thresholds, with pe = 5 for extraction and pd = 10 for decoding. The final BLEU score results are shown in Table 4. With both tree-based and forest-based decoding, rules extracted from forests significantly outperform those extracted from 1-best trees (p < 0.01). The final result with both forest-based extraction and forest-based decoding reaches a BLEU score of 0.2816, outperforming that of Hiero (Chiang, 2005), one of the best performing systems to date. These results confirm that our novel forest-based rule extraction approach is a promising direction for syntaxbased machine translation. 6 Conclusion and Future Work In this paper, we have presented a novel approach that extracts translation rules from a packed forest encoding exponentially many trees, rather than from 1-best or k-best parses. Experiments on a state-ofthe-art tree-to-string system show that this method improves BLEU score significantly, with reasonable extraction speed. When combined with our previous work on forest-based decoding,", "is_self_cite": false, "cited_paper_id": "P05-1033"}, {"info": {"authors": ["Michael Collins", "Philipp Koehn", "Ivona Kucerova"], "year": "2005", "title": "clause restructuring for statistical machine translation"}, "citing_string": "Collins et al. ( 2005 )", "sentence": 5, "section": 4, "citation_id": "D08-1022_5", "raw_string": "Michael Collins, Philipp Koehn, and Ivona Kucerova. 2005. Clause restructuring for statistical machine translation. In Proceedings of ACL, pages 531\u2013540, Ann Arbor, Michigan, June.", "subsection": 2, "cite_context": "0k 90k - 30-best trees 1.2M 130k 8.71% forest: pe=8 3.3M 188k 16.3% Table 3: Statistics of rules extracted from small data. The last column shows the ratio of new rules introduced by non 1-best parses being used in 1-best derivations. common subtrees. Forest extraction, by contrast, is much faster thanks to packing and produces consistently better BLEU scores. With pruning threshold pe = 8, forest-based extraction achieves a (case insensitive) BLEU score of 0.2533, which is an absolute improvement of 1.0% points over the 1-best baseline, and is statistically significant using the sign-test of Collins et al. (2005) (p < 0.01). This is also 0.5 points better than (and twice as fast as) extracting on 30-best parses. These BLEU score results are summarized in Table 2, which also shows that decoding with forest-extracted rules is less than twice as slow as with 1-best rules, and only fractionally slower than with 30-best rules. We also investigate the question of how often rules extracted from non 1-best parses are used by the decoder. Table 3 shows the numbers of rules extracted from 1-best, 30-best and forest-based extractions, and the numbers that survive after filtering on the dev set. Basically in the ", "is_self_cite": false, "cited_paper_id": "External_22074"}, {"info": {"authors": ["Jay Earley"], "year": "1970", "title": "an efficient contextfree parsing algorithm"}, "citing_string": "Earley , 1970", "sentence": 0, "section": 2, "citation_id": "D08-1022_6", "raw_string": "Jay Earley. 1970. An efficient context-free parsing algorithm. Communications of the ACM, 13(2):94\u2013102.", "subsection": 1, "cite_context": "o a rule on the right. These extracted rules are called minimal rules, which can be glued together to form composed rules with larger tree fragments (e.g. r1 in Fig. 1) (Galley et al., 2006). Our experiments use composed rules. 3 Forest-based Rule Extraction We now extend tree-based extraction algorithm from the previous section to work with a packed forest representing exponentially many parse trees. 3.1 Packed Forest Informally, a packed parse forest, or forest in short, is a compact representation of all the derivations (i.e., parse trees) for a given sentence under a context-free grammar (Earley, 1970; Billot and Lang, 1989). For example, consider again the Chinese sentence in Example (1) above, which has (at least) two readings depending on the part-ofspeech of the word y\u02c7u: it can be either a conjunction (CC \u201cand\u201d) as shown in Figure 3, or a preposition (P \u201cwith\u201d) as shown in Figure 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target wor", "is_self_cite": false, "cited_paper_id": "External_5055"}, {"info": {"authors": ["Michel Galley", "Mark Hopkins", "Kevin Knight", "Daniel Marcu"], "year": "2004", "title": "what\u2019s in a translation rule"}, "citing_string": "Galley et al. , 2004", "sentence": 18, "section": 1, "citation_id": "D08-1022_7", "raw_string": "Michel Galley, Mark Hopkins, Kevin Knight, and Daniel Marcu. 2004. What\u2019s in a translation rule? In Proceedings ofHLT-NAACL, pages 273\u2013280.", "subsection": 0, "cite_context": "s used. Each shaded region denotes a tree fragment that is pattern-matched with the rule being applied. B`ush\u00b4\u0131 le hu`\u0131t\u00b4an y\u02c7u Sh\u00afal\u00b4ong hu`\u0131t\u00b4an le (a) B`ush\u00b4\u0131 y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le hu`\u0131t\u00b4an \u21d3 1-best parser IP j\u02c7ux\u00b4\u0131ng j\u02c7ux\u00b4\u0131ng NP VPB NPB NPB CC NPB VV AS r1\u21d3 with NPB Sh\u00afal\u00b4ong VV VPB AS NPB NPB B`ush\u00b4\u0131 NP x1:NPB CC x3:VPB x2:NPB (1) B`ush\u00b4\u0131 Bush y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le and/with Sharon1 hold past. hu`\u0131t\u00b4an meeting2 2 Tree-based Translation We review in this section the tree-based approach to machine translation (Liu et al., 2006; Huang et al., 2006), and its rule extraction algorithm (Galley et al., 2004; Galley et al., 2006). 2.1 Tree-to-String System Current tree-based systems perform translation in two separate steps: parsing and decoding. The input string is first parsed by a parser into a 1-best tree, which will then be converted to a target language string by applying a set of tree-to-string transformation rules. For example, consider the following example translating from Chinese to English: \u201cBush held a meeting2 with Sharon1\u201d Figure 2 shows how this process works. The Chinese sentence (a) is first parsed into a parse tree (b), which will be converted into an English string in 5 steps.", "is_self_cite": false, "cited_paper_id": "N04-1035"}, {"info": {"authors": ["Michel Galley", "Mark Hopkins", "Kevin Knight", "Daniel Marcu"], "year": "2004", "title": "what\u2019s in a translation rule"}, "citing_string": "Galley et al. , 2004", "sentence": 18, "section": 1, "citation_id": "D08-1022_8", "raw_string": "Michel Galley, Mark Hopkins, Kevin Knight, and Daniel Marcu. 2004. What\u2019s in a translation rule? In Proceedings ofHLT-NAACL, pages 273\u2013280.", "subsection": 0, "cite_context": "e sentence from our earlier paper (Mi et al., 2008), since the current 1-best parse is easier to illustrate the rule extraction algorithm. 207 IP \u201cBush .. Sharon\u201d \u2192 x1 x4 x2 x3 CC (y\u02c7u) \u2192 with NPB (B`ush\u00b4\u0131) \u2192 Bush NPB (Sh\u00afal\u00b4ong) \u2192 Sharon VPB (VV(j\u02c7ux\u00b4\u0131ng) AS(le) x1:NPB) \u2192 held x1 NPB (hu`\u0131t\u00b4an) \u2192 a meeting NP \u201cBush \u2294 with Sharon\u201d NPB \u201cBush\u201d B`ush\u00b4\u0131 NPB \u201cSharon\u201d Sh\u00afal\u00b4ong VV \u201cheld\u201d j\u02c7ux\u00b4\u0131ng NPB \u201ca meeting\u201d hu`\u0131t\u00b4an AS \u201cheld\u201d le Bush held a meeting with Sharon VPB \u201cheld .. meeting\u201d CC \u201cwith\u201d y\u02c7u (minimal) rules extracted IP (NP(x1:NPB x2:CC x3:NPB) x4:VPB) Figure 3: Tree-based rule extraction (Galley et al., 2004). Each non-leaf node in the tree is annotated with its target span (below the node), where u denotes a gap, and non-faithful spans are crossed out. Shadowed nodes are admissible, with contiguous and faithful spans. The first two rules can be \u201ccomposed\u201d to form rule r1 in Figure 1. Figure 4: Forest-based rule extraction. Solid hyperedges correspond to the 1-best tree in Figure 3, while dashed hyperedges denote the alternative parse interpreting y\u02c7u as a preposition in Figure 5. extra (minimal) rules extracted IP0, 6 \u201cBush .. Sharon\u201d VP1, 6 NP0, 3 \u201cBush \u2294 with Sharon\u201d e3 IP (x1:NPB x2:VP) x1 x2 ", "is_self_cite": false, "cited_paper_id": "N04-1035"}, {"info": {"authors": ["Michel Galley", "Mark Hopkins", "Kevin Knight", "Daniel Marcu"], "year": "2004", "title": "what\u2019s in a translation rule"}, "citing_string": "Galley et al. ( 2004 )", "sentence": 10, "section": 1, "citation_id": "D08-1022_9", "raw_string": "Michel Galley, Mark Hopkins, Kevin Knight, and Daniel Marcu. 2004. What\u2019s in a translation rule? In Proceedings ofHLT-NAACL, pages 273\u2013280.", "subsection": 1, "cite_context": "terminal symbols (like NP and VP), and whose frontier nodes are labeled by sourcelanguage words (like \u201cy\u02c7u\u201d) or variables from a set X = {x1, x2,...}; rhs(r) is the target-side string expressed in target-language words (like \u201cwith\u201d) and variables; and 0(r) is a mapping from X to nonterminals. Each variable xi E X occurs exactly once in lhs(r) and exactly once in rhs(r). For example, for rule r1 in Figure 1, lhs(r1) = IP ( NP(x1 CC(y\u02c7u) x2) x3), rhs(r1) = x1 x3 with x2, 0(r1) = {x1: NPB, x2: NPB, x3: VPB}. These rules are being used in the reverse direction of the string-to-tree transducers in Galley et al. (2004). 208 2.2 Tree-to-String Rule Extraction We now briefly explain the algorithm of Galley et al. (2004) that can extract these translation rules from a word-aligned bitext with source-side parses. Consider the example in Figure 3. The basic idea is to decompose the source (Chinese) parse into a series of tree fragments, each of which will form a rule with its corresponding English translation. However, not every fragmentation can be used for rule extraction, since it may or may not respect the alignment and reordering between the two languages. So we say a fragmentation is well-formed with respe", "is_self_cite": false, "cited_paper_id": "N04-1035"}, {"info": {"authors": ["Michel Galley", "Mark Hopkins", "Kevin Knight", "Daniel Marcu"], "year": "2004", "title": "what\u2019s in a translation rule"}, "citing_string": "Galley et al. , 2004", "sentence": 2, "section": 2, "citation_id": "D08-1022_10", "raw_string": "Michel Galley, Mark Hopkins, Kevin Knight, and Daniel Marcu. 2004. What\u2019s in a translation rule? In Proceedings ofHLT-NAACL, pages 273\u2013280.", "subsection": 1, "cite_context": "y, a packed parse forest, or forest in short, is a compact representation of all the derivations (i.e., parse trees) for a given sentence under a context-free grammar (Earley, 1970; Billot and Lang, 1989). For example, consider again the Chinese sentence in Example (1) above, which has (at least) two readings depending on the part-ofspeech of the word y\u02c7u: it can be either a conjunction (CC \u201cand\u201d) as shown in Figure 3, or a preposition (P \u201cwith\u201d) as shown in Figure 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target words. IP0,6 NPB0,1 VP1,6 B`ushi PP1,3 VPB3,6 P1,2 NPB2,3 j\u02c7uxing le huit\u00b4an y\u02c7u Sh\u00afal\u00b4ong 209 These two parse trees can be represented as a single forest by sharing common subtrees such as NPB0, 1 and VPB3, 6, as shown in Figure 4. Such a forest has a structure of a hypergraph (Huang and Chiang, 2005), where items like NP0, 3 are called nodes, whose indices denote the source span, and combinations like e1 : IP0, 6 \u2192 NPB0, 3 VP3, 6 we call", "is_self_cite": false, "cited_paper_id": "N04-1035"}, {"info": {"authors": ["Michel Galley", "Mark Hopkins", "Kevin Knight", "Daniel Marcu"], "year": "2004", "title": "what\u2019s in a translation rule"}, "citing_string": "Galley et al. ( 2004 )", "sentence": 24, "section": 2, "citation_id": "D08-1022_11", "raw_string": "Michel Galley, Mark Hopkins, Kevin Knight, and Daniel Marcu. 2004. What\u2019s in a translation rule? In Proceedings ofHLT-NAACL, pages 273\u2013280.", "subsection": 2, "cite_context": "ng the subset of nonadmissible leaf nodes (recall that expansion stops at admissible nodes). So each initial fragment along hyperedge e is associated with an initial frontier (line 5), front = tails(e) \\ admset. A fragment is complete if its frontier is empty (line 9), otherwise we pop one frontier node u to expand, spin off new fragments by following hyperedges of u, and update the frontier (lines 14-16), until all active fragments are complete and open queue is empty (line 7). A single parse tree can also be viewed as a trivial forest, where each node has only one incoming hyperedge. So the Galley et al. (2004) algorithm for tree-based rule extraction (Sec. 2.2) can be considered a special case of our algorithm, where the queue open always contains one single active fragment. 3.3 Fractional Counts and Rule Probabilities In tree-based extraction, for each sentence pair, each rule extracted naturally has a count of one, which will be used in maximum-likelihood estimation of rule probabilities. However, a forest is an implicit collection of many more trees, each of which, when enumerated, has its own probability accumulated from of the parse hyperedges involved. In other words, a forest can be viewed a", "is_self_cite": false, "cited_paper_id": "N04-1035"}, {"info": {"authors": ["Michel Galley", "Jonathan Graehl", "Kevin Knight", "Daniel Marcu", "Steve DeNeefe", "Wei Wang", "Ignacio Thayer"], "year": "2006", "title": "scalable inference and training of contextrich syntactic translation models"}, "citing_string": "Galley et al. , 2006", "sentence": 0, "section": 3, "citation_id": "D08-1022_12", "raw_string": "Michel Galley, Jonathan Graehl, Kevin Knight, Daniel Marcu, Steve DeNeefe, Wei Wang, and Ignacio Thayer. 2006. Scalable inference and training of context-rich syntactic translation models. In Proceedings of COLING-ACL.", "subsection": 0, "cite_context": "rm better than these linguistically sophisticated counterparts. To alleviate this problem, an obvious idea is to extract rules from k-best parses instead. However, a k-best list, with its limited scope, has too few variations and too many redundancies (Huang, 2008). This situation worsens with longer sentences as the number of possible parses grows exponentially with the sentence length and a k-best list will only capture a tiny fraction of the whole space. In addition, many subtrees are repeated across different parses, so it is 1For example, in recent NIST Evaluations, some of these models (Galley et al., 2006; Quirk et al., 2005; Liu et al., 2006) ranked among top 10. See http://www.nist.gov/speech/tests/mt/. Liu et al. (2006); Huang et al. (2006) Galley et al. (2006) 206 Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 206\u2013214, Honolulu, October 2008.c\ufffd2008 Association for Computational Linguistics IP \u2192 x1 x3 with x2 y\u02c7u Figure 1: Example translation rule r1. The Chinese conjunction y\u02c7u \u201cand\u201d is translated into English prep. \u201cwith\u201d. also inefficient to extract rules separately from each of these very similar trees (or from the cross-product of k2 simil", "is_self_cite": false, "cited_paper_id": "P06-1121"}, {"info": {"authors": ["Michel Galley", "Jonathan Graehl", "Kevin Knight", "Daniel Marcu", "Steve DeNeefe", "Wei Wang", "Ignacio Thayer"], "year": "2006", "title": "scalable inference and training of contextrich syntactic translation models"}, "citing_string": "Galley et al. , 2006", "sentence": 16, "section": 1, "citation_id": "D08-1022_13", "raw_string": "Michel Galley, Jonathan Graehl, Kevin Knight, Daniel Marcu, Steve DeNeefe, Wei Wang, and Ignacio Thayer. 2006. Scalable inference and training of context-rich syntactic translation models. In Proceedings of COLING-ACL.", "subsection": 0, "cite_context": "n improves BLEU score by over 1 point on a state-of-the-art tree-to-string system (Liu et al., 2006; Mi et al., 2008), which is also 0.5 points better than (and twice as fast as) extracting on 30-best parses. When combined with our previous orthogonal work on forest-based decoding (Mi et al., 2008), the forest-forest approach achieves a 2.5 BLEU points improvement over the baseline, and even outperforms the hierarchical system of Hiero, one of the best-performing systems to date. Besides tree-to-string systems, our method is also applicable to other paradigms such as the string-totree models (Galley et al., 2006) where the rules are in the reverse order, and easily generalizable to pairs of forests in tree-to-tree models. r2 \u21d3 r3 \u21d3 Bush held with NPB NPB hu`\u0131t\u00b4an Sh\u00afal\u00b4ong r\ufffd \u21d3 r5 \u21d3 Bush held a meeting with Sharon r2 NPB(B`ush\u00b4\u0131) \u2192 Bush r3 VPB(VV(j\u02c7ux\u00b4\u0131ng) AS(le) x1:NPB) \u2192 held x1 r4 NPB(Sh\u00afal\u00b4ong) \u2192 Sharon r5 NPB(hu`\u0131t\u00b4an) \u2192 a meeting Figure 2: Example derivation of tree-to-string translation, with rules used. Each shaded region denotes a tree fragment that is pattern-matched with the rule being applied. B`ush\u00b4\u0131 le hu`\u0131t\u00b4an y\u02c7u Sh\u00afal\u00b4ong hu`\u0131t\u00b4an le (a) B`ush\u00b4\u0131 y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le hu`\u0131t\u00b4an \u21d3 1-", "is_self_cite": false, "cited_paper_id": "P06-1121"}, {"info": {"authors": ["Michel Galley", "Jonathan Graehl", "Kevin Knight", "Daniel Marcu", "Steve DeNeefe", "Wei Wang", "Ignacio Thayer"], "year": "2006", "title": "scalable inference and training of contextrich syntactic translation models"}, "citing_string": "Galley et al. , 2006", "sentence": 16, "section": 1, "citation_id": "D08-1022_14", "raw_string": "Michel Galley, Jonathan Graehl, Kevin Knight, Daniel Marcu, Steve DeNeefe, Wei Wang, and Ignacio Thayer. 2006. Scalable inference and training of context-rich syntactic translation models. In Proceedings of COLING-ACL.", "subsection": 2, "cite_context": "elided. in the figure), which serve as potential cut-points for rule extraction.3 With the admissible set computed, rule extraction is as simple as a depth-first traversal from the root: we \u201ccut\u201d the tree at all admissible nodes to form tree fragments and extract a rule for each fragment, with variables matching the admissible descendant nodes. For example, the tree in Figure 3 is cut into 6 pieces, each of which corresponds to a rule on the right. These extracted rules are called minimal rules, which can be glued together to form composed rules with larger tree fragments (e.g. r1 in Fig. 1) (Galley et al., 2006). Our experiments use composed rules. 3 Forest-based Rule Extraction We now extend tree-based extraction algorithm from the previous section to work with a packed forest representing exponentially many parse trees. 3.1 Packed Forest Informally, a packed parse forest, or forest in short, is a compact representation of all the derivations (i.e., parse trees) for a given sentence under a context-free grammar (Earley, 1970; Billot and Lang, 1989). For example, consider again the Chinese sentence in Example (1) above, which has (at least) two readings depending on the part-ofspeech of the word y\u02c7u:", "is_self_cite": false, "cited_paper_id": "P06-1121"}, {"info": {"authors": ["Michel Galley", "Jonathan Graehl", "Kevin Knight", "Daniel Marcu", "Steve DeNeefe", "Wei Wang", "Ignacio Thayer"], "year": "2006", "title": "scalable inference and training of contextrich syntactic translation models"}, "citing_string": "Galley et al. , 2006", "sentence": 0, "section": 3, "citation_id": "D08-1022_15", "raw_string": "Michel Galley, Jonathan Graehl, Kevin Knight, Daniel Marcu, Steve DeNeefe, Wei Wang, and Ignacio Thayer. 2006. Scalable inference and training of context-rich syntactic translation models. In Proceedings of COLING-ACL.", "subsection": 0, "cite_context": "f rule r is simply \u03b1\u03b2(lhs(r)) c(r) = (3) \u03b1\u03b2(TOP) where TOP denotes the root node of the forest. Like in the M-step in EM algorithm, we now extend the maximum likelihood estimation to fractional counts for three conditional probabilities regarding a rule, which will be used in the experiments: c(r) P(r |lhs(r)) = Er\u2032:lhs(r\u2032)=lhs(r) c(r\u2032), (4) Pr rhs r)) = c(r) ( I ( Er\ufffd:rhs(r')=rhs(r) c(r\u2032), (5) P(r |root(lhs(r))) c(r) (6) = Er\u2032:root(lhs(r\u2032))=root(lhs(r)) c(r\u2032). 4 Related Work The concept of packed forest has been previously used in translation rule extraction, for example in rule composition (Galley et al., 2006) and tree binarization (Wang et al., 2007). However, both of these efforts only use 1-best parses, with the second one packing different binarizations of the same tree in a forest. Nevertheless we suspect that their extraction algorithm is in principle similar to ours, although they do not provide details of forest-based fragmentation (Algorithm 1) which we think is non-trivial. The forest concept is also used in machine translation decoding, for example to characterize the search space of decoding with integrated language models (Huang and Chiang, 2007). The first direct application of parse ", "is_self_cite": false, "cited_paper_id": "P06-1121"}, {"info": {"authors": ["Liang Huang", "David Chiang"], "year": "2005", "title": "better kbest parsing"}, "citing_string": "Huang and Chiang , 2005", "sentence": 5, "section": 2, "citation_id": "D08-1022_16", "raw_string": "Liang Huang and David Chiang. 2005. Better k-best Parsing. In Proceedings of the Ninth International Workshop on Parsing Technologies (IWPT-2005).", "subsection": 1, "cite_context": "wn in Figure 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target words. IP0,6 NPB0,1 VP1,6 B`ushi PP1,3 VPB3,6 P1,2 NPB2,3 j\u02c7uxing le huit\u00b4an y\u02c7u Sh\u00afal\u00b4ong 209 These two parse trees can be represented as a single forest by sharing common subtrees such as NPB0, 1 and VPB3, 6, as shown in Figure 4. Such a forest has a structure of a hypergraph (Huang and Chiang, 2005), where items like NP0, 3 are called nodes, whose indices denote the source span, and combinations like e1 : IP0, 6 \u2192 NPB0, 3 VP3, 6 we call hyperedges. We denote head(e) and tails(e) to be the consequent and antecedant items of hyperedge e, respectively. For example, head(e1) = IP0, 6, tails(e1) = {NPB0, 3,VP3, 6}. We also denote BS(v) to be the set of incoming hyperedges of node v, being different ways of deriving it. For example, in Figure 4, BS(IP0, 6) = {e1, e2}. 3.2 Forest-based Rule Extraction Algorithm Like in tree-based extraction, we extract rules from a packed forest F in two steps:", "is_self_cite": false, "cited_paper_id": "W05-1506"}, {"info": {"authors": ["Liang Huang", "David Chiang"], "year": "2007", "title": "forest rescoring fast decoding with integrated language models"}, "citing_string": "Huang and Chiang , 2007", "sentence": 3, "section": 3, "citation_id": "D08-1022_17", "raw_string": "Liang Huang and David Chiang. 2007. Forest rescoring: Fast decoding with integrated language models. In Proceedings ofACL, Prague, Czech Rep., June.", "subsection": 0, "cite_context": "traction, for example in rule composition (Galley et al., 2006) and tree binarization (Wang et al., 2007). However, both of these efforts only use 1-best parses, with the second one packing different binarizations of the same tree in a forest. Nevertheless we suspect that their extraction algorithm is in principle similar to ours, although they do not provide details of forest-based fragmentation (Algorithm 1) which we think is non-trivial. The forest concept is also used in machine translation decoding, for example to characterize the search space of decoding with integrated language models (Huang and Chiang, 2007). The first direct application of parse forest in translation is our previous work (Mi et al., 2008) which translates a packed forest from a parser; it is also the base system in our experiments (see below). This work, on the other hand, is in the orthogonal direction, where we utilize forests in rule extraction instead of decoding. 11 \u00b7 e E fra\ufffdg7 11 \u00b7 v E yield(frag) P(e) (2) \u03b2(v) 211 BLEU score Our experiments will use both default 1-best decoding and forest-based decoding. As we will see in the next section, the best result comes when we combine the merits of both, i.e., using forests in b", "is_self_cite": false, "cited_paper_id": "External_6787"}, {"info": {"authors": ["Liang Huang", "Kevin Knight", "Aravind Joshi"], "year": "2006", "title": "statistical syntaxdirected translation with extended domain of locality"}, "citing_string": "Huang et al. , 2006", "sentence": 18, "section": 1, "citation_id": "D08-1022_18", "raw_string": "Liang Huang, Kevin Knight, and Aravind Joshi. 2006. Statistical syntax-directed translation with extended domain of locality. In Proceedings ofAMTA, Boston, MA, August.", "subsection": 0, "cite_context": "mple derivation of tree-to-string translation, with rules used. Each shaded region denotes a tree fragment that is pattern-matched with the rule being applied. B`ush\u00b4\u0131 le hu`\u0131t\u00b4an y\u02c7u Sh\u00afal\u00b4ong hu`\u0131t\u00b4an le (a) B`ush\u00b4\u0131 y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le hu`\u0131t\u00b4an \u21d3 1-best parser IP j\u02c7ux\u00b4\u0131ng j\u02c7ux\u00b4\u0131ng NP VPB NPB NPB CC NPB VV AS r1\u21d3 with NPB Sh\u00afal\u00b4ong VV VPB AS NPB NPB B`ush\u00b4\u0131 NP x1:NPB CC x3:VPB x2:NPB (1) B`ush\u00b4\u0131 Bush y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le and/with Sharon1 hold past. hu`\u0131t\u00b4an meeting2 2 Tree-based Translation We review in this section the tree-based approach to machine translation (Liu et al., 2006; Huang et al., 2006), and its rule extraction algorithm (Galley et al., 2004; Galley et al., 2006). 2.1 Tree-to-String System Current tree-based systems perform translation in two separate steps: parsing and decoding. The input string is first parsed by a parser into a 1-best tree, which will then be converted to a target language string by applying a set of tree-to-string transformation rules. For example, consider the following example translating from Chinese to English: \u201cBush held a meeting2 with Sharon1\u201d Figure 2 shows how this process works. The Chinese sentence (a) is first parsed into a parse tree (b), wh", "is_self_cite": false, "cited_paper_id": "External_1201"}, {"info": {"authors": ["Liang Huang", "Kevin Knight", "Aravind Joshi"], "year": "2006", "title": "statistical syntaxdirected translation with extended domain of locality"}, "citing_string": "Huang et al. , 2006", "sentence": 7, "section": 1, "citation_id": "D08-1022_19", "raw_string": "Liang Huang, Kevin Knight, and Aravind Joshi. 2006. Statistical syntax-directed translation with extended domain of locality. In Proceedings ofAMTA, Boston, MA, August.", "subsection": 1, "cite_context": "dashed hyperedges denote the alternative parse interpreting y\u02c7u as a preposition in Figure 5. extra (minimal) rules extracted IP0, 6 \u201cBush .. Sharon\u201d VP1, 6 NP0, 3 \u201cBush \u2294 with Sharon\u201d e3 IP (x1:NPB x2:VP) x1 x2 VP (x1:PP x2:VPB) x2 x1 PP (x1:P x2:NPB) x1 x2 P (y\u02c7u) \u2192 with e2 e1 \u201cheld .. Sharon\u201d PP1, 3 VPB3, 6 \u201cwith Sharon\u201d \u201cheld .. meeting\u201d NPB2, 3 CC1, 2 NPB0, 1 NPB5, 6 P1, 2 VV3, 4 \u201cheld\u201d AS4, 5 \u201cheld\u201d \u201cBush\u201d \u201cSharon\u201d \u201cwith\u201d B`ush\u00b4\u0131 \u201ca meeting\u201d hu`\u0131t\u00b4an \u02c7u le j\u02c7ux\u00b4\u0131ng \u201cwith\u201d y Sh\u00afal\u00b4ong Bush held a meeting with Sharon More formally, a (tree-to-string) translation rule (Galley et al., 2004; Huang et al., 2006) is a tuple (lhs(r), rhs(r), 0(r)), where lhs(r) is the sourceside tree fragment, whose internal nodes are labeled by nonterminal symbols (like NP and VP), and whose frontier nodes are labeled by sourcelanguage words (like \u201cy\u02c7u\u201d) or variables from a set X = {x1, x2,...}; rhs(r) is the target-side string expressed in target-language words (like \u201cwith\u201d) and variables; and 0(r) is a mapping from X to nonterminals. Each variable xi E X occurs exactly once in lhs(r) and exactly once in rhs(r). For example, for rule r1 in Figure 1, lhs(r1) = IP ( NP(x1 CC(y\u02c7u) x2) x3), rhs(r1) = x1 x3 with x2, 0(r1)", "is_self_cite": false, "cited_paper_id": "External_1201"}, {"info": {"authors": ["Liang Huang", "Kevin Knight", "Aravind Joshi"], "year": "2006", "title": "statistical syntaxdirected translation with extended domain of locality"}, "citing_string": "Huang et al. , 2006", "sentence": 0, "section": 4, "citation_id": "D08-1022_20", "raw_string": "Liang Huang, Kevin Knight, and Aravind Joshi. 2006. Statistical syntax-directed translation with extended domain of locality. In Proceedings ofAMTA, Boston, MA, August.", "subsection": 1, "cite_context": "ore Our experiments will use both default 1-best decoding and forest-based decoding. As we will see in the next section, the best result comes when we combine the merits of both, i.e., using forests in both rule extraction and decoding. There is also a parallel work on extracting rules from k-best parses and k-best alignments (Venugopal et al., 2008), but both their experiments and our own below confirm that extraction on k-best parses is neither efficient nor effective. 5 Experiments 5.1 System Our experiments are on Chinese-to-English translation based on a tree-to-string system similar to (Huang et al., 2006; Liu et al., 2006). Given a 1- best tree T, the decoder searches for the best derivation d\u2217 among the set of all possible derivations D: A0 logP(d |T) + Al log Plm(\u03c4(d)) + A2|d |+ A3|\u03c4(d)| (7) where the first two terms are translation and language model probabilities, \u03c4(d) is the target string (English sentence) for derivation d, and the last two terms are derivation and translation length penalties, respectively. The conditional probability P(d |T) decomposes into the product of rule probabilities: P(d |T) = 11 P(r). (8) r\u2208d Each P(r) is in turn a product of five probabilities: P(r) =P(r |lh", "is_self_cite": false, "cited_paper_id": "External_1201"}, {"info": {"authors": ["Liang Huang"], "year": "2008", "title": "forest reranking discriminative parsing with nonlocal features"}, "citing_string": "Huang , 2008", "sentence": 7, "section": 1, "citation_id": "D08-1022_21", "raw_string": "Liang Huang. 2008. Forest reranking: Discriminative parsing with non-local features. In Proceedings of the ACL: HLT, Columbus, OH, June.", "subsection": 0, "cite_context": "on, that the rule extractor only uses 1-best parse tree(s), which adversely affects the rule set quality due to parsing errors. To make things worse, modern statistical parsers are often trained on domains quite different from those used in MT. By contrast, formally syntax-based models (Chiang, 2005) do not rely on parse trees, yet usually perform better than these linguistically sophisticated counterparts. To alleviate this problem, an obvious idea is to extract rules from k-best parses instead. However, a k-best list, with its limited scope, has too few variations and too many redundancies (Huang, 2008). This situation worsens with longer sentences as the number of possible parses grows exponentially with the sentence length and a k-best list will only capture a tiny fraction of the whole space. In addition, many subtrees are repeated across different parses, so it is 1For example, in recent NIST Evaluations, some of these models (Galley et al., 2006; Quirk et al., 2005; Liu et al., 2006) ranked among top 10. See http://www.nist.gov/speech/tests/mt/. Liu et al. (2006); Huang et al. (2006) Galley et al. (2006) 206 Proceedings of the 2008 Conference on Empirical Methods in Natural Language Pro", "is_self_cite": false, "cited_paper_id": "P08-1067"}, {"info": {"authors": ["Liang Huang"], "year": "2008", "title": "forest reranking discriminative parsing with nonlocal features"}, "citing_string": "Huang , 2008", "sentence": 4, "section": 2, "citation_id": "D08-1022_22", "raw_string": "Liang Huang. 2008. Forest reranking: Discriminative parsing with non-local features. In Proceedings of the ACL: HLT, Columbus, OH, June.", "subsection": 3, "cite_context": "in maximum-likelihood estimation of rule probabilities. However, a forest is an implicit collection of many more trees, each of which, when enumerated, has its own probability accumulated from of the parse hyperedges involved. In other words, a forest can be viewed as a virtual weighted k-best list with a huge k. So a rule extracted from a non 1-best parse, i.e., using non 1-best hyperedges, should be penalized accordingly and should have a fractional count instead of a unit one, similar to the E-step in EM algorithms. Inspired by the parsing literature on pruning (Charniak and Johnson, 2005; Huang, 2008) we penalize a rule r by the posterior probability of its tree fragment frag = lhs(r). This posterior probability, notated \u03b1\u03b2(frag), can be computed in an InsideOutside fashion as the product of three parts: the outside probability of its root node, the probabilities of parse hyperedges involved in the fragment, and the inside probabilities of its leaf nodes, \u03b1\u03b2(frag) =\u03b1(root(frag)) where \u03b1(\u00b7) and \u03b2(\u00b7) denote the outside and inside probabilities of tree nodes, respectively. For example in Figure 4, \u03b1\u03b2(1e2, e3}) = \u03b1(IP0, 6) \u00b7 P(e2) \u00b7 P(e3) \u00b7 \u03b2(NPB0, 1)\u03b2(CC1, 2)\u03b2(NPB2, 3)\u03b2(VPB3, 6). Now the frac", "is_self_cite": false, "cited_paper_id": "P08-1067"}, {"info": {"authors": ["Liang Huang"], "year": "2008", "title": "forest reranking discriminative parsing with nonlocal features"}, "citing_string": "Huang ( 2008 )", "sentence": 8, "section": 4, "citation_id": "D08-1022_23", "raw_string": "Liang Huang. 2008. Forest reranking: Discriminative parsing with non-local features. In Proceedings of the ACL: HLT, Columbus, OH, June.", "subsection": 1, "cite_context": "etails of the decoding algorithm. 0 1 2 3 4 5 6 average extracting time (secs/1000 sentences) Figure 6: Comparison of extraction time and BLEU score: forest-based vs.1-best and 30-best. rules from... extraction decoding BLEU 1-best trees 0.24 1.74 0.2430 30-best trees 5.56 3.31 0.2488 forest: pe=8 2.36 3.40 0.2533 Pharaoh - - 0.2297 Table 2: Results with different rule extraction methods. Extraction and decoding columns are running times in secs per 1000 sentences and per sentence, respectively. We use the Chinese parser of Xiong et al. (2005) to parse the source side of the bitext. Following Huang (2008), we also modify this parser to output a packed forest for each sentence, which can be pruned by the marginal probability-based insideoutside algorithm (Charniak and Johnson, 2005; Huang, 2008). We will first report results trained on a small-scaled dataset with detailed analysis, and then scale to a larger one, where we also combine the technique of forest-based decoding (Mi et al., 2008). 5.2 Results and Analysis on Small Data To test the effect of forest-based rule extraction, we parse the training set into parse forests and use three levels of pruning thresholds: pe = 2, 5, 8. Figure 6 plo", "is_self_cite": false, "cited_paper_id": "P08-1067"}, {"info": {"authors": ["Yang Liu", "Qun Liu", "Shouxun Lin"], "year": "2006", "title": "treetostring alignment template for statistical machine translation"}, "citing_string": "Liu et al. , 2006", "sentence": 18, "section": 1, "citation_id": "D08-1022_24", "raw_string": "Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-tostring alignment template for statistical machine translation. In Proceedings of COLING-ACL, pages 609\u2013 616.", "subsection": 0, "cite_context": "sticated counterparts. To alleviate this problem, an obvious idea is to extract rules from k-best parses instead. However, a k-best list, with its limited scope, has too few variations and too many redundancies (Huang, 2008). This situation worsens with longer sentences as the number of possible parses grows exponentially with the sentence length and a k-best list will only capture a tiny fraction of the whole space. In addition, many subtrees are repeated across different parses, so it is 1For example, in recent NIST Evaluations, some of these models (Galley et al., 2006; Quirk et al., 2005; Liu et al., 2006) ranked among top 10. See http://www.nist.gov/speech/tests/mt/. Liu et al. (2006); Huang et al. (2006) Galley et al. (2006) 206 Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 206\u2013214, Honolulu, October 2008.c\ufffd2008 Association for Computational Linguistics IP \u2192 x1 x3 with x2 y\u02c7u Figure 1: Example translation rule r1. The Chinese conjunction y\u02c7u \u201cand\u201d is translated into English prep. \u201cwith\u201d. also inefficient to extract rules separately from each of these very similar trees (or from the cross-product of k2 similar tree-pairs in tree-to-tree models). ", "is_self_cite": false, "cited_paper_id": "P06-1077"}, {"info": {"authors": ["Yang Liu", "Qun Liu", "Shouxun Lin"], "year": "2006", "title": "treetostring alignment template for statistical machine translation"}, "citing_string": "Liu et al. , 2006", "sentence": 18, "section": 1, "citation_id": "D08-1022_25", "raw_string": "Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-tostring alignment template for statistical machine translation. In Proceedings of COLING-ACL, pages 609\u2013 616.", "subsection": 0, "cite_context": "ting Figure 2: Example derivation of tree-to-string translation, with rules used. Each shaded region denotes a tree fragment that is pattern-matched with the rule being applied. B`ush\u00b4\u0131 le hu`\u0131t\u00b4an y\u02c7u Sh\u00afal\u00b4ong hu`\u0131t\u00b4an le (a) B`ush\u00b4\u0131 y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le hu`\u0131t\u00b4an \u21d3 1-best parser IP j\u02c7ux\u00b4\u0131ng j\u02c7ux\u00b4\u0131ng NP VPB NPB NPB CC NPB VV AS r1\u21d3 with NPB Sh\u00afal\u00b4ong VV VPB AS NPB NPB B`ush\u00b4\u0131 NP x1:NPB CC x3:VPB x2:NPB (1) B`ush\u00b4\u0131 Bush y\u02c7u Sh\u00afal\u00b4ong j\u02c7ux\u00b4\u0131ng le and/with Sharon1 hold past. hu`\u0131t\u00b4an meeting2 2 Tree-based Translation We review in this section the tree-based approach to machine translation (Liu et al., 2006; Huang et al., 2006), and its rule extraction algorithm (Galley et al., 2004; Galley et al., 2006). 2.1 Tree-to-String System Current tree-based systems perform translation in two separate steps: parsing and decoding. The input string is first parsed by a parser into a 1-best tree, which will then be converted to a target language string by applying a set of tree-to-string transformation rules. For example, consider the following example translating from Chinese to English: \u201cBush held a meeting2 with Sharon1\u201d Figure 2 shows how this process works. The Chinese sentence (a) is first parsed into", "is_self_cite": false, "cited_paper_id": "P06-1077"}, {"info": {"authors": ["Yang Liu", "Qun Liu", "Shouxun Lin"], "year": "2006", "title": "treetostring alignment template for statistical machine translation"}, "citing_string": "Liu et al. , 2006", "sentence": 0, "section": 4, "citation_id": "D08-1022_26", "raw_string": "Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-tostring alignment template for statistical machine translation. In Proceedings of COLING-ACL, pages 609\u2013 616.", "subsection": 1, "cite_context": "will use both default 1-best decoding and forest-based decoding. As we will see in the next section, the best result comes when we combine the merits of both, i.e., using forests in both rule extraction and decoding. There is also a parallel work on extracting rules from k-best parses and k-best alignments (Venugopal et al., 2008), but both their experiments and our own below confirm that extraction on k-best parses is neither efficient nor effective. 5 Experiments 5.1 System Our experiments are on Chinese-to-English translation based on a tree-to-string system similar to (Huang et al., 2006; Liu et al., 2006). Given a 1- best tree T, the decoder searches for the best derivation d\u2217 among the set of all possible derivations D: A0 logP(d |T) + Al log Plm(\u03c4(d)) + A2|d |+ A3|\u03c4(d)| (7) where the first two terms are translation and language model probabilities, \u03c4(d) is the target string (English sentence) for derivation d, and the last two terms are derivation and translation length penalties, respectively. The conditional probability P(d |T) decomposes into the product of rule probabilities: P(d |T) = 11 P(r). (8) r\u2208d Each P(r) is in turn a product of five probabilities: P(r) =P(r |lhs(r))A' \u00b7 P(r |rhs(", "is_self_cite": false, "cited_paper_id": "P06-1077"}, {"info": {"authors": ["Haitao Mi", "Liang Huang", "Qun Liu"], "year": "2008", "title": "forestbased translation"}, "citing_string": "Mi et al. , 2008", "sentence": 14, "section": 1, "citation_id": "D08-1022_27", "raw_string": "Haitao Mi, Liang Huang, and Qun Liu. 2008. Forestbased translation. In Proceedings of ACL: HLT, Columbus, OH.", "subsection": 0, "cite_context": " x3 with x2 y\u02c7u Figure 1: Example translation rule r1. The Chinese conjunction y\u02c7u \u201cand\u201d is translated into English prep. \u201cwith\u201d. also inefficient to extract rules separately from each of these very similar trees (or from the cross-product of k2 similar tree-pairs in tree-to-tree models). We instead propose a novel approach that extracts rules from packed forests (Section 3), which compactly encodes many more alternatives than kbest lists. Experiments (Section 5) show that forestbased extraction improves BLEU score by over 1 point on a state-of-the-art tree-to-string system (Liu et al., 2006; Mi et al., 2008), which is also 0.5 points better than (and twice as fast as) extracting on 30-best parses. When combined with our previous orthogonal work on forest-based decoding (Mi et al., 2008), the forest-forest approach achieves a 2.5 BLEU points improvement over the baseline, and even outperforms the hierarchical system of Hiero, one of the best-performing systems to date. Besides tree-to-string systems, our method is also applicable to other paradigms such as the string-totree models (Galley et al., 2006) where the rules are in the reverse order, and easily generalizable to pairs of forests in tree-t", "is_self_cite": true, "cited_paper_id": "P08-1023", "citation_function": "Extends"}, {"info": {"authors": ["Haitao Mi", "Liang Huang", "Qun Liu"], "year": "2008", "title": "forestbased translation"}, "citing_string": "Mi et al. , 2008", "sentence": 14, "section": 1, "citation_id": "D08-1022_28", "raw_string": "Haitao Mi, Liang Huang, and Qun Liu. 2008. Forestbased translation. In Proceedings of ACL: HLT, Columbus, OH.", "subsection": 0, "cite_context": " English: \u201cBush held a meeting2 with Sharon1\u201d Figure 2 shows how this process works. The Chinese sentence (a) is first parsed into a parse tree (b), which will be converted into an English string in 5 steps. First, at the root node, we apply rule r1 shown in Figure 1, which translates the Chinese coordination construction (\u201c... and ...\u201d) into an English prepositional phrase. Then, from step (c) we continue applying rules to untranslated Chinese subtrees, until we get the complete English translation in (e).2 2We swap the 1-best and 2-best parses of the example sentence from our earlier paper (Mi et al., 2008), since the current 1-best parse is easier to illustrate the rule extraction algorithm. 207 IP \u201cBush .. Sharon\u201d \u2192 x1 x4 x2 x3 CC (y\u02c7u) \u2192 with NPB (B`ush\u00b4\u0131) \u2192 Bush NPB (Sh\u00afal\u00b4ong) \u2192 Sharon VPB (VV(j\u02c7ux\u00b4\u0131ng) AS(le) x1:NPB) \u2192 held x1 NPB (hu`\u0131t\u00b4an) \u2192 a meeting NP \u201cBush \u2294 with Sharon\u201d NPB \u201cBush\u201d B`ush\u00b4\u0131 NPB \u201cSharon\u201d Sh\u00afal\u00b4ong VV \u201cheld\u201d j\u02c7ux\u00b4\u0131ng NPB \u201ca meeting\u201d hu`\u0131t\u00b4an AS \u201cheld\u201d le Bush held a meeting with Sharon VPB \u201cheld .. meeting\u201d CC \u201cwith\u201d y\u02c7u (minimal) rules extracted IP (NP(x1:NPB x2:CC x3:NPB) x4:VPB) Figure 3: Tree-based rule extraction (Galley et al., 2004). Each non-leaf node in the tre", "is_self_cite": true, "cited_paper_id": "P08-1023", "citation_function": "Extends"}, {"info": {"authors": ["Haitao Mi", "Liang Huang", "Qun Liu"], "year": "2008", "title": "forestbased translation"}, "citing_string": "Mi et al. , 2008", "sentence": 4, "section": 2, "citation_id": "D08-1022_29", "raw_string": "Haitao Mi, Liang Huang, and Qun Liu. 2008. Forestbased translation. In Proceedings of ACL: HLT, Columbus, OH.", "subsection": 2, "cite_context": "tree-based extraction, we extract rules from a packed forest F in two steps: (1) admissible set computation (where to cut), and (2) fragmentation (how to cut). It turns out that the exact formulation developed for admissible set in the tree-based case can be applied to a forest without any change. The fragmentation step, however, becomes much more involved since we now face a choice of multiple parse hyperedges at each node. In other words, it becomes nondeterministic how to \u201ccut\u201d a forest into tree fragments, which is analogous to the non-deterministic pattern-match in forest-based decoding (Mi et al., 2008). For example there are two parse hyperedges e1 and e2 at the root node in Figure 4. When we follow one of them to grow a fragment, there again will be multiple choices at each of its tail nodes. Like in tree-based case, a fragment is said to be complete if all its leaf nodes are admissible. Otherwise, an incomplete fragment can grow at any non-admissible frontier node v, where following each parse hyperedge at v will split off a new fragment. For example, following e2 at the root node will immediately lead us to two admissible nodes, NPB0, 1 and VP1, 6 (we will highlight admissible nodes by g", "is_self_cite": true, "cited_paper_id": "P08-1023"}, {"info": {"authors": ["Haitao Mi", "Liang Huang", "Qun Liu"], "year": "2008", "title": "forestbased translation"}, "citing_string": "Mi et al. , 2008", "sentence": 4, "section": 3, "citation_id": "D08-1022_30", "raw_string": "Haitao Mi, Liang Huang, and Qun Liu. 2008. Forestbased translation. In Proceedings of ACL: HLT, Columbus, OH.", "subsection": 0, "cite_context": "However, both of these efforts only use 1-best parses, with the second one packing different binarizations of the same tree in a forest. Nevertheless we suspect that their extraction algorithm is in principle similar to ours, although they do not provide details of forest-based fragmentation (Algorithm 1) which we think is non-trivial. The forest concept is also used in machine translation decoding, for example to characterize the search space of decoding with integrated language models (Huang and Chiang, 2007). The first direct application of parse forest in translation is our previous work (Mi et al., 2008) which translates a packed forest from a parser; it is also the base system in our experiments (see below). This work, on the other hand, is in the orthogonal direction, where we utilize forests in rule extraction instead of decoding. 11 \u00b7 e E fra\ufffdg7 11 \u00b7 v E yield(frag) P(e) (2) \u03b2(v) 211 BLEU score Our experiments will use both default 1-best decoding and forest-based decoding. As we will see in the next section, the best result comes when we combine the merits of both, i.e., using forests in both rule extraction and decoding. There is also a parallel work on extracting rules from k-best pars", "is_self_cite": true, "cited_paper_id": "P08-1023", "citation_function": "Extends"}, {"info": {"authors": ["Haitao Mi", "Liang Huang", "Qun Liu"], "year": "2008", "title": "forestbased translation"}, "citing_string": "Mi et al. ( 2008 )", "sentence": 6, "section": 4, "citation_id": "D08-1022_31", "raw_string": "Haitao Mi, Liang Huang, and Qun Liu. 2008. Forestbased translation. In Proceedings of ACL: HLT, Columbus, OH.", "subsection": 1, "cite_context": "and translation length penalties, respectively. The conditional probability P(d |T) decomposes into the product of rule probabilities: P(d |T) = 11 P(r). (8) r\u2208d Each P(r) is in turn a product of five probabilities: P(r) =P(r |lhs(r))A' \u00b7 P(r |rhs(r))A' \u00b7 P(r |root(lhs(r)))As \u00b7 Pllm(lhs(r) |rhs(r))A' \u00b7 Pllm(rhs(r) |lhs(r))A' where the first three are conditional probabilities based on fractional counts of rules defined in Section 3.3, and the last two are lexical probabilities. These parameters Al ... As are tuned by minimum error rate training (Och, 2003) on the dev sets. We refer readers to Mi et al. (2008) for details of the decoding algorithm. 0 1 2 3 4 5 6 average extracting time (secs/1000 sentences) Figure 6: Comparison of extraction time and BLEU score: forest-based vs.1-best and 30-best. rules from... extraction decoding BLEU 1-best trees 0.24 1.74 0.2430 30-best trees 5.56 3.31 0.2488 forest: pe=8 2.36 3.40 0.2533 Pharaoh - - 0.2297 Table 2: Results with different rule extraction methods. Extraction and decoding columns are running times in secs per 1000 sentences and per sentence, respectively. We use the Chinese parser of Xiong et al. (2005) to parse the source side of the bitext. Foll", "is_self_cite": true, "cited_paper_id": "P08-1023"}, {"info": {"authors": ["Franz Joseph Och"], "year": "2003", "title": "minimum error rate training in statistical machine translation"}, "citing_string": "Och , 2003", "sentence": 5, "section": 4, "citation_id": "D08-1022_32", "raw_string": "Franz Joseph Och. 2003. Minimum error rate training in statistical machine translation. In Proceedings ofACL, pages 160\u2013167.", "subsection": 1, "cite_context": "vation d, and the last two terms are derivation and translation length penalties, respectively. The conditional probability P(d |T) decomposes into the product of rule probabilities: P(d |T) = 11 P(r). (8) r\u2208d Each P(r) is in turn a product of five probabilities: P(r) =P(r |lhs(r))A' \u00b7 P(r |rhs(r))A' \u00b7 P(r |root(lhs(r)))As \u00b7 Pllm(lhs(r) |rhs(r))A' \u00b7 Pllm(rhs(r) |lhs(r))A' where the first three are conditional probabilities based on fractional counts of rules defined in Section 3.3, and the last two are lexical probabilities. These parameters Al ... As are tuned by minimum error rate training (Och, 2003) on the dev sets. We refer readers to Mi et al. (2008) for details of the decoding algorithm. 0 1 2 3 4 5 6 average extracting time (secs/1000 sentences) Figure 6: Comparison of extraction time and BLEU score: forest-based vs.1-best and 30-best. rules from... extraction decoding BLEU 1-best trees 0.24 1.74 0.2430 30-best trees 5.56 3.31 0.2488 forest: pe=8 2.36 3.40 0.2533 Pharaoh - - 0.2297 Table 2: Results with different rule extraction methods. Extraction and decoding columns are running times in secs per 1000 sentences and per sentence, respectively. We use the Chinese parser of Xiong et a", "is_self_cite": false, "cited_paper_id": "P03-1021"}, {"info": {"authors": ["Chris Quirk", "Arul Menezes", "Colin Cherry"], "year": "2005", "title": "dependency treelet translation syntactically informed phrasal smt"}, "citing_string": "Quirk et al. , 2005", "sentence": 10, "section": 1, "citation_id": "D08-1022_33", "raw_string": "Chris Quirk, Arul Menezes, and Colin Cherry. 2005. Dependency treelet translation: Syntactically informed phrasal smt. In Proceedings of the 43rd ACL, Ann Arbor, MI.", "subsection": 0, "cite_context": "linguistically sophisticated counterparts. To alleviate this problem, an obvious idea is to extract rules from k-best parses instead. However, a k-best list, with its limited scope, has too few variations and too many redundancies (Huang, 2008). This situation worsens with longer sentences as the number of possible parses grows exponentially with the sentence length and a k-best list will only capture a tiny fraction of the whole space. In addition, many subtrees are repeated across different parses, so it is 1For example, in recent NIST Evaluations, some of these models (Galley et al., 2006; Quirk et al., 2005; Liu et al., 2006) ranked among top 10. See http://www.nist.gov/speech/tests/mt/. Liu et al. (2006); Huang et al. (2006) Galley et al. (2006) 206 Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 206\u2013214, Honolulu, October 2008.c\ufffd2008 Association for Computational Linguistics IP \u2192 x1 x3 with x2 y\u02c7u Figure 1: Example translation rule r1. The Chinese conjunction y\u02c7u \u201cand\u201d is translated into English prep. \u201cwith\u201d. also inefficient to extract rules separately from each of these very similar trees (or from the cross-product of k2 similar tree-pairs in tre", "is_self_cite": false, "cited_paper_id": "P05-1034"}, {"info": {"authors": ["Ashish Venugopal", "Andreas Zollmann", "Noah A Smith", "Stephan Vogel"], "year": "2008", "title": "wider pipelines nbest alignments and parses in mt training"}, "citing_string": "Venugopal et al. , 2008", "sentence": 8, "section": 3, "citation_id": "D08-1022_34", "raw_string": "Ashish Venugopal, Andreas Zollmann, Noah A. Smith, and Stephan Vogel. 2008. Wider pipelines: N-best alignments and parses in mt training. In Proceedings ofAMTA, Honolulu, Hawaii.", "subsection": 0, "cite_context": " forest from a parser; it is also the base system in our experiments (see below). This work, on the other hand, is in the orthogonal direction, where we utilize forests in rule extraction instead of decoding. 11 \u00b7 e E fra\ufffdg7 11 \u00b7 v E yield(frag) P(e) (2) \u03b2(v) 211 BLEU score Our experiments will use both default 1-best decoding and forest-based decoding. As we will see in the next section, the best result comes when we combine the merits of both, i.e., using forests in both rule extraction and decoding. There is also a parallel work on extracting rules from k-best parses and k-best alignments (Venugopal et al., 2008), but both their experiments and our own below confirm that extraction on k-best parses is neither efficient nor effective. 5 Experiments 5.1 System Our experiments are on Chinese-to-English translation based on a tree-to-string system similar to (Huang et al., 2006; Liu et al., 2006). Given a 1- best tree T, the decoder searches for the best derivation d\u2217 among the set of all possible derivations D: A0 logP(d |T) + Al log Plm(\u03c4(d)) + A2|d |+ A3|\u03c4(d)| (7) where the first two terms are translation and language model probabilities, \u03c4(d) is the target string (English sentence) for derivation d, a", "is_self_cite": false, "cited_paper_id": "External_51915"}, {"info": {"authors": ["Wei Wang", "Kevin Knight", "Daniel Marcu"], "year": "2007", "title": "binarizing syntax trees to improve syntaxbased machine translation accuracy"}, "citing_string": "Wang et al. , 2007", "sentence": 2, "section": 2, "citation_id": "D08-1022_35", "raw_string": "Wei Wang, Kevin Knight, and Daniel Marcu. 2007. Binarizing syntax trees to improve syntax-based machine translation accuracy. In Proceedings ofEMNLP, Prague, Czech Rep., July.", "subsection": 1, "cite_context": "tially many parse trees. 3.1 Packed Forest Informally, a packed parse forest, or forest in short, is a compact representation of all the derivations (i.e., parse trees) for a given sentence under a context-free grammar (Earley, 1970; Billot and Lang, 1989). For example, consider again the Chinese sentence in Example (1) above, which has (at least) two readings depending on the part-ofspeech of the word y\u02c7u: it can be either a conjunction (CC \u201cand\u201d) as shown in Figure 3, or a preposition (P \u201cwith\u201d) as shown in Figure 5, with only PP and VPB swapped from the English word order. 3Admissible set (Wang et al., 2007) is also known as \u201cfrontier set\u201d (Galley et al., 2004). For simplicity of presentation, we assume every target word is aligned to at least one source word; see Galley et al. (2006) for handling unaligned target words. IP0,6 NPB0,1 VP1,6 B`ushi PP1,3 VPB3,6 P1,2 NPB2,3 j\u02c7uxing le huit\u00b4an y\u02c7u Sh\u00afal\u00b4ong 209 These two parse trees can be represented as a single forest by sharing common subtrees such as NPB0, 1 and VPB3, 6, as shown in Figure 4. Such a forest has a structure of a hypergraph (Huang and Chiang, 2005), where items like NP0, 3 are called nodes, whose indices denote the source span, and ", "is_self_cite": false, "cited_paper_id": "D07-1078"}, {"info": {"authors": ["Wei Wang", "Kevin Knight", "Daniel Marcu"], "year": "2007", "title": "binarizing syntax trees to improve syntaxbased machine translation accuracy"}, "citing_string": "Wang et al. , 2007", "sentence": 0, "section": 3, "citation_id": "D08-1022_36", "raw_string": "Wei Wang, Kevin Knight, and Daniel Marcu. 2007. Binarizing syntax trees to improve syntax-based machine translation accuracy. In Proceedings ofEMNLP, Prague, Czech Rep., July.", "subsection": 0, "cite_context": "TOP) where TOP denotes the root node of the forest. Like in the M-step in EM algorithm, we now extend the maximum likelihood estimation to fractional counts for three conditional probabilities regarding a rule, which will be used in the experiments: c(r) P(r |lhs(r)) = Er\u2032:lhs(r\u2032)=lhs(r) c(r\u2032), (4) Pr rhs r)) = c(r) ( I ( Er\ufffd:rhs(r')=rhs(r) c(r\u2032), (5) P(r |root(lhs(r))) c(r) (6) = Er\u2032:root(lhs(r\u2032))=root(lhs(r)) c(r\u2032). 4 Related Work The concept of packed forest has been previously used in translation rule extraction, for example in rule composition (Galley et al., 2006) and tree binarization (Wang et al., 2007). However, both of these efforts only use 1-best parses, with the second one packing different binarizations of the same tree in a forest. Nevertheless we suspect that their extraction algorithm is in principle similar to ours, although they do not provide details of forest-based fragmentation (Algorithm 1) which we think is non-trivial. The forest concept is also used in machine translation decoding, for example to characterize the search space of decoding with integrated language models (Huang and Chiang, 2007). The first direct application of parse forest in translation is our previous work", "is_self_cite": false, "cited_paper_id": "D07-1078"}, {"info": {"authors": ["Deyi Xiong", "Shuanglong Li", "Qun Liu", "Shouxun Lin"], "year": "2005", "title": "parsing the penn chinese treebank with semantic knowledge"}, "citing_string": "Xiong et al. ( 2005 )", "sentence": 7, "section": 4, "citation_id": "D08-1022_37", "raw_string": "Deyi Xiong, Shuanglong Li, Qun Liu, and Shouxun Lin. 2005. Parsing the penn chinese treebank with semantic knowledge. In Proceedings ofIJCNLP 2005, pages 70\u201381.", "subsection": 1, "cite_context": "Och, 2003) on the dev sets. We refer readers to Mi et al. (2008) for details of the decoding algorithm. 0 1 2 3 4 5 6 average extracting time (secs/1000 sentences) Figure 6: Comparison of extraction time and BLEU score: forest-based vs.1-best and 30-best. rules from... extraction decoding BLEU 1-best trees 0.24 1.74 0.2430 30-best trees 5.56 3.31 0.2488 forest: pe=8 2.36 3.40 0.2533 Pharaoh - - 0.2297 Table 2: Results with different rule extraction methods. Extraction and decoding columns are running times in secs per 1000 sentences and per sentence, respectively. We use the Chinese parser of Xiong et al. (2005) to parse the source side of the bitext. Following Huang (2008), we also modify this parser to output a packed forest for each sentence, which can be pruned by the marginal probability-based insideoutside algorithm (Charniak and Johnson, 2005; Huang, 2008). We will first report results trained on a small-scaled dataset with detailed analysis, and then scale to a larger one, where we also combine the technique of forest-based decoding (Mi et al., 2008). 5.2 Results and Analysis on Small Data To test the effect of forest-based rule extraction, we parse the training set into parse forests and use", "is_self_cite": false, "cited_paper_id": "External_40887"}]}