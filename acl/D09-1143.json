{"year": 2009, "sections": [{"a holistic lexiconbased approach to opinion mining": "", "num": 0, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": []}]}, {"num": 1, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "This", "ArgType": null, "before": ""}, {"index": 2, "word": "paper", "lemma": "paper", "after": " ", "pos": "NN", "characterOffsetEnd": 10, "segment_span": [0, 20], "characterOffsetBegin": 5, "originalText": "paper", "ArgType": "subj", "before": " "}, {"index": 3, "word": "explores", "characterOffsetEnd": 19, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "explore", "segment_span": [0, 20], "tense": "Z", "characterOffsetBegin": 11, "originalText": "explores", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 27, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "use", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 20], "characterOffsetBegin": 28, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "innovative", "lemma": "innovative", "after": " ", "pos": "JJ", "characterOffsetEnd": 41, "segment_span": [0, 20], "characterOffsetBegin": 31, "originalText": "innovative", "ArgType": null, "before": " "}, {"index": 8, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 49, "segment_span": [0, 20], "characterOffsetBegin": 42, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 9, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 55, "segment_span": [0, 20], "characterOffsetBegin": 50, "originalText": "based", "ArgType": null, "before": " "}, {"index": 10, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 58, "segment_span": [0, 20], "characterOffsetBegin": 56, "originalText": "on", "ArgType": null, "before": " "}, {"index": 11, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 20], "characterOffsetBegin": 59, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 72, "segment_span": [0, 20], "characterOffsetBegin": 69, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 81, "segment_span": [0, 20], "characterOffsetBegin": 73, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 14, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [0, 20], "characterOffsetBegin": 82, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 15, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 96, "segment_span": [0, 20], "characterOffsetBegin": 93, "originalText": "for", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [0, 20], "characterOffsetBegin": 97, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 20], "characterOffsetBegin": 99, "originalText": "target", "ArgType": null, "before": " "}, {"index": 18, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [0, 20], "characterOffsetBegin": 106, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 19, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 125, "segment_span": [0, 20], "characterOffsetBegin": 115, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 20, "word": "task", "lemma": "task", "after": "", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [0, 20], "characterOffsetBegin": 126, "originalText": "task", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 131, "characterOffsetBegin": 130, "originalText": ".", "ArgType": null, "before": ""}], "text": "This paper explores the use of innovative kernels based on syntactic and semantic structures for a target relation extraction task ."}, {"tokens": [{"index": 1, "word": "Syntax", "lemma": "syntax", "after": " ", "pos": "NN", "characterOffsetEnd": 138, "segment_span": [0, 18], "characterOffsetBegin": 132, "originalText": "Syntax", "ArgType": null, "before": " "}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 141, "segment_span": [0, 18], "characterOffsetBegin": 139, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "derived", "characterOffsetEnd": 149, "after": " ", "pos": "VBN", "is_root": true, "lemma": "derive", "segment_span": [0, 18], "tense": "N", "characterOffsetBegin": 142, "before": " ", "originalText": "derived", "ArgType": null, "is_pass": true}, {"index": 4, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 154, "segment_span": [0, 18], "characterOffsetBegin": 150, "originalText": "from", "ArgType": null, "before": " "}, {"index": 5, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 166, "segment_span": [0, 18], "characterOffsetBegin": 155, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 170, "segment_span": [0, 18], "characterOffsetBegin": 167, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 181, "segment_span": [0, 18], "characterOffsetBegin": 171, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 8, "word": "parse", "lemma": "parse", "after": " ", "pos": "VBP", "characterOffsetEnd": 187, "segment_span": [0, 18], "characterOffsetBegin": 182, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 9, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 193, "segment_span": [0, 18], "characterOffsetBegin": 188, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 10, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 201, "segment_span": [0, 18], "characterOffsetBegin": 194, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 11, "word": "semantics", "lemma": "semantics", "after": " ", "pos": "NNS", "characterOffsetEnd": 211, "segment_span": [0, 18], "characterOffsetBegin": 202, "originalText": "semantics", "ArgType": null, "before": " "}, {"index": 12, "word": "concerns", "lemma": "concern", "after": " ", "pos": "NNS", "characterOffsetEnd": 220, "segment_span": [0, 18], "characterOffsetBegin": 212, "originalText": "concerns", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 223, "segment_span": [0, 18], "characterOffsetBegin": 221, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 230, "segment_span": [0, 18], "characterOffsetBegin": 224, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 15, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 236, "segment_span": [0, 18], "characterOffsetBegin": 231, "originalText": "types", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 240, "segment_span": [0, 18], "characterOffsetBegin": 237, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "lexical", "lemma": "lexical", "after": " ", "pos": "JJ", "characterOffsetEnd": 248, "segment_span": [0, 18], "characterOffsetBegin": 241, "originalText": "lexical", "ArgType": null, "before": " "}, {"index": 18, "word": "sequences", "lemma": "sequence", "after": "", "pos": "NNS", "characterOffsetEnd": 258, "segment_span": [0, 18], "characterOffsetBegin": 249, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 259, "characterOffsetBegin": 258, "originalText": ".", "ArgType": null, "before": ""}], "text": "Syntax is derived from constituent and dependency parse trees whereas semantics concerns to entity types and lexical sequences ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 262, "segment_span": [0, 14], "characterOffsetBegin": 260, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "investigate", "characterOffsetEnd": 274, "after": " ", "pos": "VBP", "is_root": true, "lemma": "investigate", "segment_span": [0, 14], "tense": "P", "characterOffsetBegin": 263, "originalText": "investigate", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 278, "segment_span": [0, 14], "characterOffsetBegin": 275, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "effectiveness", "lemma": "effectiveness", "after": " ", "pos": "NN", "characterOffsetEnd": 292, "segment_span": [0, 14], "characterOffsetBegin": 279, "originalText": "effectiveness", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 295, "segment_span": [0, 14], "characterOffsetBegin": 293, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 300, "segment_span": [0, 14], "characterOffsetBegin": 296, "originalText": "such", "ArgType": null, "before": " "}, {"index": 7, "word": "representations", "lemma": "representation", "after": " ", "pos": "NNS", "characterOffsetEnd": 316, "segment_span": [0, 14], "characterOffsetBegin": 301, "originalText": "representations", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 319, "segment_span": [0, 14], "characterOffsetBegin": 317, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 323, "segment_span": [0, 14], "characterOffsetBegin": 320, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "automated", "lemma": "automate", "after": " ", "pos": "VBN", "characterOffsetEnd": 333, "segment_span": [0, 14], "characterOffsetBegin": 324, "originalText": "automated", "ArgType": null, "before": " "}, {"index": 11, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 342, "segment_span": [0, 14], "characterOffsetBegin": 334, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 12, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 353, "segment_span": [0, 14], "characterOffsetBegin": 343, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 13, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 358, "segment_span": [0, 14], "characterOffsetBegin": 354, "originalText": "from", "ArgType": null, "before": " "}, {"index": 14, "word": "texts", "lemma": "text", "after": "", "pos": "NNS", "characterOffsetEnd": 364, "segment_span": [0, 14], "characterOffsetBegin": 359, "originalText": "texts", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 365, "characterOffsetBegin": 364, "originalText": ".", "ArgType": null, "before": ""}], "text": "We investigate the effectiveness of such representations in the automated relation extraction from texts ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 368, "segment_span": [0, 25], "characterOffsetBegin": 366, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "process", "characterOffsetEnd": 376, "after": " ", "pos": "VBP", "is_root": true, "lemma": "process", "segment_span": [0, 25], "tense": "P", "characterOffsetBegin": 369, "originalText": "process", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 380, "segment_span": [0, 25], "characterOffsetBegin": 377, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 386, "segment_span": [0, 25], "characterOffsetBegin": 381, "originalText": "above", "ArgType": null, "before": " "}, {"index": 5, "word": "data", "lemma": "datum", "after": " ", "pos": "NNS", "characterOffsetEnd": 391, "segment_span": [0, 25], "characterOffsetBegin": 387, "originalText": "data", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 394, "segment_span": [0, 25], "characterOffsetBegin": 392, "originalText": "by", "ArgType": null, "before": " "}, {"index": 7, "word": "means", "lemma": "means", "after": " ", "pos": "NNS", "characterOffsetEnd": 400, "segment_span": [0, 25], "characterOffsetBegin": 395, "originalText": "means", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 403, "segment_span": [0, 25], "characterOffsetBegin": 401, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "Support", "lemma": "support", "after": " ", "pos": "NN", "characterOffsetEnd": 411, "segment_span": [0, 25], "characterOffsetBegin": 404, "originalText": "Support", "ArgType": null, "before": " "}, {"index": 10, "word": "Vector", "lemma": "Vector", "after": " ", "pos": "NNP", "characterOffsetEnd": 418, "segment_span": [0, 25], "characterOffsetBegin": 412, "originalText": "Vector", "ArgType": null, "before": " "}, {"index": 11, "word": "Machines", "lemma": "Machines", "after": " ", "pos": "NNP", "characterOffsetEnd": 427, "segment_span": [0, 25], "characterOffsetBegin": 419, "originalText": "Machines", "ArgType": null, "before": " "}, {"index": 12, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 433, "segment_span": [0, 25], "characterOffsetBegin": 428, "originalText": "along", "ArgType": null, "before": " "}, {"index": 13, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 438, "segment_span": [0, 25], "characterOffsetBegin": 434, "originalText": "with", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 442, "segment_span": [0, 25], "characterOffsetBegin": 439, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 452, "segment_span": [0, 25], "characterOffsetBegin": 443, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 16, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 457, "segment_span": [0, 25], "characterOffsetBegin": 453, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 458, "segment_span": [0, 25], "characterOffsetBegin": 457, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 462, "segment_span": [0, 25], "characterOffsetBegin": 459, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 470, "segment_span": [0, 25], "characterOffsetBegin": 463, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 20, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 475, "segment_span": [0, 25], "characterOffsetBegin": 471, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 479, "segment_span": [0, 25], "characterOffsetBegin": 476, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 483, "segment_span": [0, 25], "characterOffsetBegin": 480, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 488, "segment_span": [0, 25], "characterOffsetBegin": 484, "originalText": "word", "ArgType": null, "before": " "}, {"index": 24, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 497, "segment_span": [0, 25], "characterOffsetBegin": 489, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 25, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 505, "segment_span": [0, 25], "characterOffsetBegin": 498, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 506, "characterOffsetBegin": 505, "originalText": ".", "ArgType": null, "before": ""}], "text": "We process the above data by means of Support Vector Machines along with the syntactic tree , the partial tree and the word sequence kernels ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 510, "segment_span": [0, 8], "characterOffsetBegin": 507, "originalText": "Our", "ArgType": null, "before": " "}, {"index": 2, "word": "study", "lemma": "study", "after": " ", "pos": "NN", "characterOffsetEnd": 516, "segment_span": [0, 8], "characterOffsetBegin": 511, "originalText": "study", "ArgType": "subj", "before": " "}, {"index": 3, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 519, "segment_span": [0, 8], "characterOffsetBegin": 517, "originalText": "on", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 523, "segment_span": [0, 8], "characterOffsetBegin": 520, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 527, "segment_span": [0, 8], "characterOffsetBegin": 524, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 6, "word": "2004", "lemma": "2004", "after": " ", "pos": "CD", "characterOffsetEnd": 532, "segment_span": [0, 8], "characterOffsetBegin": 528, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 7, "word": "corpus", "lemma": "corpus", "after": " ", "pos": "NN", "characterOffsetEnd": 539, "segment_span": [0, 8], "characterOffsetBegin": 533, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 8, "word": "illustrates", "characterOffsetEnd": 551, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "illustrate", "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 540, "originalText": "illustrates", "ArgType": "verb", "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 556, "segment_span": [8, 19], "characterOffsetBegin": 552, "originalText": "that", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 560, "segment_span": [8, 19], "characterOffsetBegin": 557, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "combination", "lemma": "combination", "after": " ", "pos": "NN", "characterOffsetEnd": 572, "segment_span": [8, 19], "characterOffsetBegin": 561, "originalText": "combination", "ArgType": "subj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 575, "segment_span": [8, 19], "characterOffsetBegin": 573, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 579, "segment_span": [8, 19], "characterOffsetBegin": 576, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 585, "segment_span": [8, 19], "characterOffsetBegin": 580, "originalText": "above", "ArgType": null, "before": " "}, {"index": 15, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 593, "segment_span": [8, 19], "characterOffsetBegin": 586, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 16, "word": "achieves", "characterOffsetEnd": 602, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "achieve", "segment_span": [8, 19], "tense": "Z", "characterOffsetBegin": 594, "originalText": "achieves", "ArgType": null, "before": " "}, {"index": 17, "word": "high", "lemma": "high", "after": " ", "pos": "JJ", "characterOffsetEnd": 607, "segment_span": [8, 19], "characterOffsetBegin": 603, "originalText": "high", "ArgType": null, "before": " "}, {"index": 18, "word": "effectiveness", "lemma": "effectiveness", "after": " ", "pos": "NN", "characterOffsetEnd": 621, "segment_span": [8, 19], "characterOffsetBegin": 608, "originalText": "effectiveness", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 625, "segment_span": [8, 19], "characterOffsetBegin": 622, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "significantly", "lemma": "significantly", "after": " ", "pos": "RB", "characterOffsetEnd": 639, "segment_span": [19, 24], "characterOffsetBegin": 626, "originalText": "significantly", "ArgType": null, "before": " "}, {"index": 21, "word": "improves", "characterOffsetEnd": 648, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [19, 24], "tense": "Z", "characterOffsetBegin": 640, "originalText": "improves", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 652, "segment_span": [19, 24], "characterOffsetBegin": 649, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 660, "segment_span": [19, 24], "characterOffsetBegin": 653, "originalText": "current", "ArgType": null, "before": " "}, {"index": 24, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": "", "pos": "JJ", "characterOffsetEnd": 677, "segment_span": [19, 24], "characterOffsetBegin": 661, "originalText": "state-of-the-art", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 678, "characterOffsetBegin": 677, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our study on the ACE 2004 corpus illustrates that the combination of the above kernels achieves high effectiveness and significantly improves the current state-of-the-art ."}]}], "title": "Abstract"}, {"num": 2, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "Relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "Relation", "ArgType": null, "before": ""}, {"index": 2, "word": "Extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 23], "characterOffsetBegin": 9, "originalText": "Extraction", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 21, "segment_span": [0, 23], "characterOffsetBegin": 20, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 23], "characterOffsetBegin": 21, "originalText": "RE", "ArgType": null, "before": ""}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 24, "segment_span": [0, 23], "characterOffsetBegin": 23, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 27, "segment_span": [0, 23], "characterOffsetBegin": 25, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "defined", "characterOffsetEnd": 35, "after": " ", "pos": "VBN", "is_root": true, "lemma": "define", "segment_span": [0, 23], "tense": "N", "characterOffsetBegin": 28, "before": " ", "originalText": "defined", "ArgType": null, "is_pass": true}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 38, "segment_span": [0, 23], "characterOffsetBegin": 36, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 42, "segment_span": [0, 23], "characterOffsetBegin": 39, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 23], "characterOffsetBegin": 43, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 49, "segment_span": [0, 23], "characterOffsetBegin": 46, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "task", "lemma": "task", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 23], "characterOffsetBegin": 50, "originalText": "task", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 23], "characterOffsetBegin": 55, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "finding", "lemma": "find", "after": " ", "pos": "VBG", "characterOffsetEnd": 65, "segment_span": [0, 23], "characterOffsetBegin": 58, "originalText": "finding", "ArgType": null, "before": " "}, {"index": 15, "word": "relevant", "lemma": "relevant", "after": " ", "pos": "JJ", "characterOffsetEnd": 74, "segment_span": [0, 23], "characterOffsetBegin": 66, "originalText": "relevant", "ArgType": null, "before": " "}, {"index": 16, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 83, "segment_span": [0, 23], "characterOffsetBegin": 75, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 17, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 93, "segment_span": [0, 23], "characterOffsetBegin": 84, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 101, "segment_span": [0, 23], "characterOffsetBegin": 94, "originalText": "between", "ArgType": null, "before": " "}, {"index": 19, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 107, "segment_span": [0, 23], "characterOffsetBegin": 102, "originalText": "pairs", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 110, "segment_span": [0, 23], "characterOffsetBegin": 108, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [0, 23], "characterOffsetBegin": 111, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 22, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 122, "segment_span": [0, 23], "characterOffsetBegin": 120, "originalText": "in", "ArgType": null, "before": " "}, {"index": 23, "word": "texts", "lemma": "text", "after": "", "pos": "NNS", "characterOffsetEnd": 128, "segment_span": [0, 23], "characterOffsetBegin": 123, "originalText": "texts", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": ""}], "text": "Relation Extraction ( RE ) is defined in ACE as the task of finding relevant semantic relations between pairs of entities in texts ."}, {"tokens": [{"index": 1, "word": "Figure", "lemma": "Figure", "after": " ", "pos": "NNP", "characterOffsetEnd": 136, "segment_span": [0, 17], "characterOffsetBegin": 130, "originalText": "Figure", "ArgType": "subj", "before": " "}, {"index": 2, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 138, "segment_span": [0, 17], "characterOffsetBegin": 137, "originalText": "1", "ArgType": null, "before": " "}, {"index": 3, "word": "shows", "characterOffsetEnd": 144, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 17], "tense": "Z", "characterOffsetBegin": 139, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 4, "word": "part", "lemma": "part", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [0, 17], "characterOffsetBegin": 145, "originalText": "part", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 152, "segment_span": [0, 17], "characterOffsetBegin": 150, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 154, "segment_span": [0, 17], "characterOffsetBegin": 153, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "document", "lemma": "document", "after": " ", "pos": "NN", "characterOffsetEnd": 163, "segment_span": [0, 17], "characterOffsetBegin": 155, "originalText": "document", "ArgType": null, "before": " "}, {"index": 8, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 168, "segment_span": [0, 17], "characterOffsetBegin": 164, "originalText": "from", "ArgType": null, "before": " "}, {"index": 9, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [0, 17], "characterOffsetBegin": 169, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 10, "word": "2004", "lemma": "2004", "after": " ", "pos": "CD", "characterOffsetEnd": 177, "segment_span": [0, 17], "characterOffsetBegin": 173, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 11, "word": "corpus", "lemma": "corpus", "after": "", "pos": "NN", "characterOffsetEnd": 184, "segment_span": [0, 17], "characterOffsetBegin": 178, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 185, "segment_span": [0, 17], "characterOffsetBegin": 184, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 187, "segment_span": [0, 17], "characterOffsetBegin": 186, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "collection", "lemma": "collection", "after": " ", "pos": "NN", "characterOffsetEnd": 198, "segment_span": [0, 17], "characterOffsetBegin": 188, "originalText": "collection", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 201, "segment_span": [0, 17], "characterOffsetBegin": 199, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "news", "lemma": "news", "after": " ", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [0, 17], "characterOffsetBegin": 202, "originalText": "news", "ArgType": null, "before": " "}, {"index": 17, "word": "articles", "lemma": "article", "after": "", "pos": "NNS", "characterOffsetEnd": 215, "segment_span": [0, 17], "characterOffsetBegin": 207, "originalText": "articles", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 216, "characterOffsetBegin": 215, "originalText": ".", "ArgType": null, "before": ""}], "text": "Figure 1 shows part of a document from ACE 2004 corpus , a collection of news articles ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 219, "segment_span": [0, 29], "characterOffsetBegin": 217, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 223, "segment_span": [0, 29], "characterOffsetBegin": 220, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "text", "lemma": "text", "after": "", "pos": "NN", "characterOffsetEnd": 228, "segment_span": [0, 29], "characterOffsetBegin": 224, "originalText": "text", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 229, "segment_span": [0, 29], "characterOffsetBegin": 228, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 233, "segment_span": [0, 29], "characterOffsetBegin": 230, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 242, "segment_span": [0, 29], "characterOffsetBegin": 234, "originalText": "relation", "ArgType": "subj", "before": " "}, {"index": 7, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 250, "segment_span": [0, 29], "characterOffsetBegin": 243, "originalText": "between", "ArgType": null, "before": " "}, {"index": 8, "word": "president", "lemma": "president", "after": " ", "pos": "NN", "characterOffsetEnd": 260, "segment_span": [0, 29], "characterOffsetBegin": 251, "originalText": "president", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 264, "segment_span": [0, 29], "characterOffsetBegin": 261, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "NBC", "lemma": "NBC", "after": "", "pos": "NNP", "characterOffsetEnd": 268, "segment_span": [0, 29], "characterOffsetBegin": 265, "originalText": "NBC", "ArgType": null, "before": " "}, {"index": 11, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 270, "segment_span": [0, 29], "characterOffsetBegin": 268, "originalText": "\u00e2\u0080\u0099s", "ArgType": null, "before": ""}, {"index": 12, "word": "entertainment", "lemma": "entertainment", "after": " ", "pos": "NN", "characterOffsetEnd": 284, "segment_span": [0, 29], "characterOffsetBegin": 271, "originalText": "entertainment", "ArgType": null, "before": " "}, {"index": 13, "word": "division", "lemma": "division", "after": " ", "pos": "NN", "characterOffsetEnd": 293, "segment_span": [0, 29], "characterOffsetBegin": 285, "originalText": "division", "ArgType": null, "before": " "}, {"index": 14, "word": "describes", "characterOffsetEnd": 303, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "describe", "segment_span": [0, 29], "tense": "Z", "characterOffsetBegin": 294, "originalText": "describes", "ArgType": "verb", "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 307, "segment_span": [0, 29], "characterOffsetBegin": 304, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "relationship", "lemma": "relationship", "after": " ", "pos": "NN", "characterOffsetEnd": 320, "segment_span": [0, 29], "characterOffsetBegin": 308, "originalText": "relationship", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 328, "segment_span": [0, 29], "characterOffsetBegin": 321, "originalText": "between", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 332, "segment_span": [0, 29], "characterOffsetBegin": 329, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 338, "segment_span": [0, 29], "characterOffsetBegin": 333, "originalText": "first", "ArgType": null, "before": " "}, {"index": 20, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 345, "segment_span": [0, 29], "characterOffsetBegin": 339, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 347, "segment_span": [0, 29], "characterOffsetBegin": 346, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "person", "lemma": "person", "after": "", "pos": "NN", "characterOffsetEnd": 353, "segment_span": [0, 29], "characterOffsetBegin": 347, "originalText": "person", "ArgType": null, "before": ""}, {"index": 23, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 354, "segment_span": [0, 29], "characterOffsetBegin": 353, "originalText": ")", "ArgType": null, "before": ""}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 358, "segment_span": [0, 29], "characterOffsetBegin": 355, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 362, "segment_span": [0, 29], "characterOffsetBegin": 359, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 369, "segment_span": [0, 29], "characterOffsetBegin": 363, "originalText": "second", "ArgType": null, "before": " "}, {"index": 27, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 371, "segment_span": [0, 29], "characterOffsetBegin": 370, "originalText": "(", "ArgType": null, "before": " "}, {"index": 28, "word": "organization", "lemma": "organization", "after": "", "pos": "NN", "characterOffsetEnd": 383, "segment_span": [0, 29], "characterOffsetBegin": 371, "originalText": "organization", "ArgType": null, "before": ""}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 384, "segment_span": [0, 29], "characterOffsetBegin": 383, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 390, "segment_span": [29, 36], "characterOffsetBegin": 385, "originalText": "where", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 394, "segment_span": [29, 36], "characterOffsetBegin": 391, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "person", "lemma": "person", "after": " ", "pos": "NN", "characterOffsetEnd": 401, "segment_span": [29, 36], "characterOffsetBegin": 395, "originalText": "person", "ArgType": "subj", "before": " "}, {"index": 33, "word": "holds", "characterOffsetEnd": 407, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "hold", "segment_span": [29, 36], "tense": "Z", "characterOffsetBegin": 402, "originalText": "holds", "ArgType": null, "before": " "}, {"index": 34, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 409, "segment_span": [29, 36], "characterOffsetBegin": 408, "originalText": "a", "ArgType": null, "before": " "}, {"index": 35, "word": "managerial", "lemma": "managerial", "after": " ", "pos": "JJ", "characterOffsetEnd": 420, "segment_span": [29, 36], "characterOffsetBegin": 410, "originalText": "managerial", "ArgType": null, "before": " "}, {"index": 36, "word": "position", "lemma": "position", "after": "", "pos": "NN", "characterOffsetEnd": 429, "segment_span": [29, 36], "characterOffsetBegin": 421, "originalText": "position", "ArgType": "dobj", "before": " "}, {"index": 37, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 430, "characterOffsetBegin": 429, "originalText": ".", "ArgType": null, "before": ""}], "text": "In the text , the relation between president and NBC 's entertainment division describes the relationship between the first entity ( person ) and the second ( organization ) where the person holds a managerial position ."}, {"tokens": [{"index": 1, "word": "Several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 438, "segment_span": [0, 5], "characterOffsetBegin": 431, "originalText": "Several", "ArgType": null, "before": " "}, {"index": 2, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 449, "segment_span": [0, 5], "characterOffsetBegin": 439, "originalText": "approaches", "ArgType": null, "before": " "}, {"index": 3, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 454, "segment_span": [0, 5], "characterOffsetBegin": 450, "originalText": "have", "ArgType": null, "before": " "}, {"index": 4, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 459, "segment_span": [0, 5], "characterOffsetBegin": 455, "originalText": "been", "ArgType": null, "before": " "}, {"index": 5, "word": "proposed", "characterOffsetEnd": 468, "after": " ", "pos": "VBN", "is_root": true, "lemma": "propose", "segment_span": [0, 5], "tense": "N", "characterOffsetBegin": 460, "before": " ", "originalText": "proposed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 6, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 472, "segment_span": [5, 12], "characterOffsetBegin": 469, "originalText": "for", "ArgType": null, "before": " "}, {"index": 7, "word": "automatically", "lemma": "automatically", "after": " ", "pos": "RB", "characterOffsetEnd": 486, "segment_span": [5, 12], "characterOffsetBegin": 473, "originalText": "automatically", "ArgType": null, "before": " "}, {"index": 8, "word": "learning", "characterOffsetEnd": 495, "after": " ", "pos": "VBG", "is_root": true, "lemma": "learn", "segment_span": [5, 12], "tense": "G", "characterOffsetBegin": 487, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 9, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 504, "segment_span": [5, 12], "characterOffsetBegin": 496, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 10, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 514, "segment_span": [5, 12], "characterOffsetBegin": 505, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 519, "segment_span": [5, 12], "characterOffsetBegin": 515, "originalText": "from", "ArgType": null, "before": " "}, {"index": 12, "word": "texts", "lemma": "text", "after": "", "pos": "NNS", "characterOffsetEnd": 525, "segment_span": [5, 12], "characterOffsetBegin": 520, "originalText": "texts", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 526, "characterOffsetBegin": 525, "originalText": ".", "ArgType": null, "before": ""}], "text": "Several approaches have been proposed for automatically learning semantic relations from texts ."}, {"tokens": [{"index": 1, "word": "Among", "lemma": "among", "after": " ", "pos": "IN", "characterOffsetEnd": 532, "segment_span": [0, 49], "characterOffsetBegin": 527, "originalText": "Among", "ArgType": null, "before": " "}, {"index": 2, "word": "others", "lemma": "other", "after": "", "pos": "NNS", "characterOffsetEnd": 539, "segment_span": [0, 49], "characterOffsetBegin": 533, "originalText": "others", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 540, "segment_span": [0, 49], "characterOffsetBegin": 539, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 546, "segment_span": [0, 49], "characterOffsetBegin": 541, "originalText": "there", "ArgType": null, "before": " "}, {"index": 5, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 550, "segment_span": [0, 49], "characterOffsetBegin": 547, "originalText": "has", "ArgType": null, "before": " "}, {"index": 6, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 555, "segment_span": [0, 49], "characterOffsetBegin": 551, "originalText": "been", "ArgType": null, "before": " "}, {"index": 7, "word": "increased", "characterOffsetEnd": 565, "after": " ", "pos": "VBN", "is_root": true, "lemma": "increase", "segment_span": [0, 49], "tense": "N", "characterOffsetBegin": 556, "before": " ", "originalText": "increased", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 8, "word": "interest", "lemma": "interest", "after": " ", "pos": "NN", "characterOffsetEnd": 574, "segment_span": [0, 49], "characterOffsetBegin": 566, "originalText": "interest", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 577, "segment_span": [0, 49], "characterOffsetBegin": 575, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 581, "segment_span": [0, 49], "characterOffsetBegin": 578, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "application", "lemma": "application", "after": " ", "pos": "NN", "characterOffsetEnd": 593, "segment_span": [0, 49], "characterOffsetBegin": 582, "originalText": "application", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 596, "segment_span": [0, 49], "characterOffsetBegin": 594, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 603, "segment_span": [0, 49], "characterOffsetBegin": 597, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 14, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 611, "segment_span": [0, 49], "characterOffsetBegin": 604, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 613, "segment_span": [0, 49], "characterOffsetBegin": 612, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 620, "segment_span": [0, 49], "characterOffsetBegin": 613, "originalText": "Zelenko", "ArgType": null, "before": ""}, {"index": 17, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 623, "segment_span": [0, 49], "characterOffsetBegin": 621, "originalText": "et", "ArgType": null, "before": " "}, {"index": 18, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 627, "segment_span": [0, 49], "characterOffsetBegin": 624, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 628, "segment_span": [0, 49], "characterOffsetBegin": 627, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 633, "segment_span": [0, 49], "characterOffsetBegin": 629, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 21, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 634, "segment_span": [0, 49], "characterOffsetBegin": 633, "originalText": ";", "ArgType": null, "before": ""}, {"index": 22, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 642, "segment_span": [0, 49], "characterOffsetBegin": 635, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 646, "segment_span": [0, 49], "characterOffsetBegin": 643, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 655, "segment_span": [0, 49], "characterOffsetBegin": 647, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 656, "segment_span": [0, 49], "characterOffsetBegin": 655, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 661, "segment_span": [0, 49], "characterOffsetBegin": 657, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 27, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 662, "segment_span": [0, 49], "characterOffsetBegin": 661, "originalText": ";", "ArgType": null, "before": ""}, {"index": 28, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 670, "segment_span": [0, 49], "characterOffsetBegin": 663, "originalText": "Bunescu", "ArgType": null, "before": " "}, {"index": 29, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 674, "segment_span": [0, 49], "characterOffsetBegin": 671, "originalText": "and", "ArgType": null, "before": " "}, {"index": 30, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 681, "segment_span": [0, 49], "characterOffsetBegin": 675, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 682, "segment_span": [0, 49], "characterOffsetBegin": 681, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 688, "segment_span": [0, 49], "characterOffsetBegin": 683, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 33, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 689, "segment_span": [0, 49], "characterOffsetBegin": 688, "originalText": ";", "ArgType": null, "before": ""}, {"index": 34, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 697, "segment_span": [0, 49], "characterOffsetBegin": 690, "originalText": "Bunescu", "ArgType": null, "before": " "}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 701, "segment_span": [0, 49], "characterOffsetBegin": 698, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 708, "segment_span": [0, 49], "characterOffsetBegin": 702, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 37, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 709, "segment_span": [0, 49], "characterOffsetBegin": 708, "originalText": ",", "ArgType": null, "before": ""}, {"index": 38, "word": "2005b", "lemma": "2005b", "after": "", "pos": "NN", "characterOffsetEnd": 715, "segment_span": [0, 49], "characterOffsetBegin": 710, "originalText": "2005b", "ArgType": null, "before": " "}, {"index": 39, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 716, "segment_span": [0, 49], "characterOffsetBegin": 715, "originalText": ";", "ArgType": null, "before": ""}, {"index": 40, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 722, "segment_span": [0, 49], "characterOffsetBegin": 717, "originalText": "Zhang", "ArgType": null, "before": " "}, {"index": 41, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 725, "segment_span": [0, 49], "characterOffsetBegin": 723, "originalText": "et", "ArgType": null, "before": " "}, {"index": 42, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 729, "segment_span": [0, 49], "characterOffsetBegin": 726, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 43, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 730, "segment_span": [0, 49], "characterOffsetBegin": 729, "originalText": ",", "ArgType": null, "before": ""}, {"index": 44, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 735, "segment_span": [0, 49], "characterOffsetBegin": 731, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 45, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 736, "segment_span": [0, 49], "characterOffsetBegin": 735, "originalText": ";", "ArgType": null, "before": ""}, {"index": 46, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 741, "segment_span": [0, 49], "characterOffsetBegin": 737, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 47, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 742, "segment_span": [0, 49], "characterOffsetBegin": 741, "originalText": ",", "ArgType": null, "before": ""}, {"index": 48, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 747, "segment_span": [0, 49], "characterOffsetBegin": 743, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 49, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 748, "segment_span": [0, 49], "characterOffsetBegin": 747, "originalText": ")", "ArgType": null, "before": ""}, {"index": 50, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 749, "characterOffsetBegin": 748, "originalText": ".", "ArgType": null, "before": ""}], "text": "Among others , there has been increased interest in the application of kernel methods ( Zelenko et al. , 2002 ; Culotta and Sorensen , 2004 ; Bunescu and Mooney , 2005a ; Bunescu and Mooney , 2005b ; Zhang et al. , 2005 ; Wang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "Their", "lemma": "they", "after": " ", "pos": "PRP$", "characterOffsetEnd": 755, "segment_span": [0, 33], "characterOffsetBegin": 750, "originalText": "Their", "ArgType": null, "before": " "}, {"index": 2, "word": "main", "lemma": "main", "after": " ", "pos": "JJ", "characterOffsetEnd": 760, "segment_span": [0, 33], "characterOffsetBegin": 756, "originalText": "main", "ArgType": null, "before": " "}, {"index": 3, "word": "property", "lemma": "property", "after": " ", "pos": "NN", "characterOffsetEnd": 769, "segment_span": [0, 33], "characterOffsetBegin": 761, "originalText": "property", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 772, "segment_span": [0, 33], "characterOffsetBegin": 770, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 776, "segment_span": [0, 33], "characterOffsetBegin": 773, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "ability", "lemma": "ability", "after": " ", "pos": "NN", "characterOffsetEnd": 784, "segment_span": [0, 33], "characterOffsetBegin": 777, "originalText": "ability", "ArgType": null, "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 787, "segment_span": [0, 33], "characterOffsetBegin": 785, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "exploiting", "lemma": "exploit", "after": " ", "pos": "VBG", "characterOffsetEnd": 798, "segment_span": [0, 33], "characterOffsetBegin": 788, "originalText": "exploiting", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 800, "segment_span": [0, 33], "characterOffsetBegin": 799, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "huge", "lemma": "huge", "after": " ", "pos": "JJ", "characterOffsetEnd": 805, "segment_span": [0, 33], "characterOffsetBegin": 801, "originalText": "huge", "ArgType": null, "before": " "}, {"index": 11, "word": "amount", "lemma": "amount", "after": " ", "pos": "NN", "characterOffsetEnd": 812, "segment_span": [0, 33], "characterOffsetBegin": 806, "originalText": "amount", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 815, "segment_span": [0, 33], "characterOffsetBegin": 813, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 820, "segment_span": [0, 33], "characterOffsetBegin": 816, "originalText": "This", "ArgType": null, "before": " "}, {"index": 14, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 825, "segment_span": [0, 33], "characterOffsetBegin": 821, "originalText": "work", "ArgType": null, "before": " "}, {"index": 15, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 829, "segment_span": [0, 33], "characterOffsetBegin": 826, "originalText": "has", "ArgType": null, "before": " "}, {"index": 16, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 834, "segment_span": [0, 33], "characterOffsetBegin": 830, "originalText": "been", "ArgType": null, "before": " "}, {"index": 17, "word": "partially", "lemma": "partially", "after": " ", "pos": "RB", "characterOffsetEnd": 844, "segment_span": [0, 33], "characterOffsetBegin": 835, "originalText": "partially", "ArgType": null, "before": " "}, {"index": 18, "word": "funded", "characterOffsetEnd": 851, "after": " ", "pos": "VBN", "is_root": true, "lemma": "fund", "segment_span": [0, 33], "tense": "N", "characterOffsetBegin": 845, "before": " ", "originalText": "funded", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 19, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 854, "segment_span": [0, 33], "characterOffsetBegin": 852, "originalText": "by", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 858, "segment_span": [0, 33], "characterOffsetBegin": 855, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "LiveMemories", "lemma": "LiveMemories", "after": " ", "pos": "NNPS", "characterOffsetEnd": 871, "segment_span": [0, 33], "characterOffsetBegin": 859, "originalText": "LiveMemories", "ArgType": null, "before": " "}, {"index": 22, "word": "project", "lemma": "project", "after": " ", "pos": "NN", "characterOffsetEnd": 879, "segment_span": [0, 33], "characterOffsetBegin": 872, "originalText": "project", "ArgType": null, "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 881, "segment_span": [0, 33], "characterOffsetBegin": 880, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "http://www.livememories.org/", "lemma": "http://www.livememories.org/", "after": "", "pos": "NN", "characterOffsetEnd": 909, "segment_span": [0, 33], "characterOffsetBegin": 881, "originalText": "http://www.livememories.org/", "ArgType": null, "before": ""}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 910, "segment_span": [0, 33], "characterOffsetBegin": 909, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 914, "segment_span": [0, 33], "characterOffsetBegin": 911, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "Expert", "lemma": "Expert", "after": " ", "pos": "NNP", "characterOffsetEnd": 921, "segment_span": [0, 33], "characterOffsetBegin": 915, "originalText": "Expert", "ArgType": null, "before": " "}, {"index": 28, "word": "System", "lemma": "System", "after": " ", "pos": "NNP", "characterOffsetEnd": 928, "segment_span": [0, 33], "characterOffsetBegin": 922, "originalText": "System", "ArgType": null, "before": " "}, {"index": 29, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 930, "segment_span": [0, 33], "characterOffsetBegin": 929, "originalText": "(", "ArgType": null, "before": " "}, {"index": 30, "word": "http://www.expertsystem.net/", "lemma": "http://www.expertsystem.net/", "after": "", "pos": "NN", "characterOffsetEnd": 958, "segment_span": [0, 33], "characterOffsetBegin": 930, "originalText": "http://www.expertsystem.net/", "ArgType": null, "before": ""}, {"index": 31, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 959, "segment_span": [0, 33], "characterOffsetBegin": 958, "originalText": ")", "ArgType": null, "before": ""}, {"index": 32, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 968, "segment_span": [0, 33], "characterOffsetBegin": 960, "originalText": "research", "ArgType": null, "before": " "}, {"index": 33, "word": "grant", "lemma": "grant", "after": "", "pos": "NN", "characterOffsetEnd": 974, "segment_span": [0, 33], "characterOffsetBegin": 969, "originalText": "grant", "ArgType": null, "before": " "}, {"index": 34, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 975, "characterOffsetBegin": 974, "originalText": ".", "ArgType": null, "before": ""}], "text": "Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project ( http://www.livememories.org/ ) and Expert System ( http://www.expertsystem.net/ ) research grant ."}, {"tokens": [{"index": 1, "word": "Jeff", "lemma": "Jeff", "after": " ", "pos": "NNP", "characterOffsetEnd": 980, "segment_span": [0, 32], "characterOffsetBegin": 976, "originalText": "Jeff", "ArgType": null, "before": " "}, {"index": 2, "word": "Zucker", "lemma": "Zucker", "after": "", "pos": "NNP", "characterOffsetEnd": 987, "segment_span": [0, 32], "characterOffsetBegin": 981, "originalText": "Zucker", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 988, "segment_span": [0, 32], "characterOffsetBegin": 987, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 992, "segment_span": [0, 32], "characterOffsetBegin": 989, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "longtime", "lemma": "longtime", "after": " ", "pos": "JJ", "characterOffsetEnd": 1001, "segment_span": [0, 32], "characterOffsetBegin": 993, "originalText": "longtime", "ArgType": null, "before": " "}, {"index": 6, "word": "executive", "lemma": "executive", "after": " ", "pos": "NN", "characterOffsetEnd": 1011, "segment_span": [0, 32], "characterOffsetBegin": 1002, "originalText": "executive", "ArgType": null, "before": " "}, {"index": 7, "word": "producer", "lemma": "producer", "after": " ", "pos": "NN", "characterOffsetEnd": 1020, "segment_span": [0, 32], "characterOffsetBegin": 1012, "originalText": "producer", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1023, "segment_span": [0, 32], "characterOffsetBegin": 1021, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "NBC", "lemma": "NBC", "after": "", "pos": "NNP", "characterOffsetEnd": 1027, "segment_span": [0, 32], "characterOffsetBegin": 1024, "originalText": "NBC", "ArgType": null, "before": " "}, {"index": 10, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 1029, "segment_span": [0, 32], "characterOffsetBegin": 1027, "originalText": "\u00e2\u0080\u0099s", "ArgType": null, "before": ""}, {"index": 11, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 1031, "segment_span": [0, 32], "characterOffsetBegin": 1030, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": " "}, {"index": 12, "word": "Today", "lemma": "today", "after": "", "pos": "NN", "characterOffsetEnd": 1036, "segment_span": [0, 32], "characterOffsetBegin": 1031, "originalText": "Today", "ArgType": null, "before": ""}, {"index": 13, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 1037, "segment_span": [0, 32], "characterOffsetBegin": 1036, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 14, "word": "program", "lemma": "program", "after": "", "pos": "NN", "characterOffsetEnd": 1045, "segment_span": [0, 32], "characterOffsetBegin": 1038, "originalText": "program", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1046, "segment_span": [0, 32], "characterOffsetBegin": 1045, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 1051, "segment_span": [0, 32], "characterOffsetBegin": 1047, "originalText": "will", "ArgType": null, "before": " "}, {"index": 17, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 1054, "segment_span": [0, 32], "characterOffsetBegin": 1052, "originalText": "be", "ArgType": null, "before": " "}, {"index": 18, "word": "named", "characterOffsetEnd": 1060, "after": " ", "pos": "VBN", "is_root": true, "lemma": "name", "segment_span": [0, 32], "tense": "N", "characterOffsetBegin": 1055, "before": " ", "originalText": "named", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 19, "word": "Friday", "lemma": "Friday", "after": " ", "pos": "NNP", "characterOffsetEnd": 1067, "segment_span": [0, 32], "characterOffsetBegin": 1061, "originalText": "Friday", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1070, "segment_span": [0, 32], "characterOffsetBegin": 1068, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1074, "segment_span": [0, 32], "characterOffsetBegin": 1071, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 1078, "segment_span": [0, 32], "characterOffsetBegin": 1075, "originalText": "new", "ArgType": null, "before": " "}, {"index": 23, "word": "president", "lemma": "president", "after": " ", "pos": "NN", "characterOffsetEnd": 1088, "segment_span": [0, 32], "characterOffsetBegin": 1079, "originalText": "president", "ArgType": null, "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1091, "segment_span": [0, 32], "characterOffsetBegin": 1089, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "NBC", "lemma": "NBC", "after": "", "pos": "NNP", "characterOffsetEnd": 1095, "segment_span": [0, 32], "characterOffsetBegin": 1092, "originalText": "NBC", "ArgType": null, "before": " "}, {"index": 26, "word": "'s", "lemma": "'s", "after": " ", "pos": "POS", "characterOffsetEnd": 1097, "segment_span": [0, 32], "characterOffsetBegin": 1095, "originalText": "\u00e2\u0080\u0099s", "ArgType": null, "before": ""}, {"index": 27, "word": "entertainment", "lemma": "entertainment", "after": " ", "pos": "NN", "characterOffsetEnd": 1111, "segment_span": [0, 32], "characterOffsetBegin": 1098, "originalText": "entertainment", "ArgType": null, "before": " "}, {"index": 28, "word": "division", "lemma": "division", "after": "", "pos": "NN", "characterOffsetEnd": 1120, "segment_span": [0, 32], "characterOffsetBegin": 1112, "originalText": "division", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1121, "segment_span": [0, 32], "characterOffsetBegin": 1120, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "replacing", "lemma": "replace", "after": " ", "pos": "VBG", "characterOffsetEnd": 1131, "segment_span": [0, 32], "characterOffsetBegin": 1122, "originalText": "replacing", "ArgType": null, "before": " "}, {"index": 31, "word": "Garth", "lemma": "Garth", "after": " ", "pos": "NNP", "characterOffsetEnd": 1137, "segment_span": [0, 32], "characterOffsetBegin": 1132, "originalText": "Garth", "ArgType": null, "before": " "}, {"index": 32, "word": "Ancier", "lemma": "Ancier", "after": "", "pos": "NNP", "characterOffsetEnd": 1144, "segment_span": [0, 32], "characterOffsetBegin": 1138, "originalText": "Ancier", "ArgType": "dobj", "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1145, "segment_span": [32, 36], "characterOffsetBegin": 1144, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "NBC", "lemma": "NBC", "after": " ", "pos": "NNP", "characterOffsetEnd": 1149, "segment_span": [32, 36], "characterOffsetBegin": 1146, "originalText": "NBC", "ArgType": null, "before": " "}, {"index": 35, "word": "executives", "lemma": "executive", "after": " ", "pos": "NNS", "characterOffsetEnd": 1160, "segment_span": [32, 36], "characterOffsetBegin": 1150, "originalText": "executives", "ArgType": "subj", "before": " "}, {"index": 36, "word": "said", "characterOffsetEnd": 1165, "after": "", "pos": "VBD", "is_root": true, "lemma": "say", "segment_span": [32, 36], "tense": "D", "characterOffsetBegin": 1161, "originalText": "said", "ArgType": "verb", "before": " "}, {"index": 37, "word": ".", "lemma": ".", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ".", "characterOffsetEnd": 1166, "characterOffsetBegin": 1165, "originalText": ".", "ArgType": null, "before": ""}], "text": "Jeff Zucker , the longtime executive producer of NBC 's '' Today '' program , will be named Friday as the new president of NBC 's entertainment division , replacing Garth Ancier , NBC executives said ."}, {"tokens": [{"index": 1, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 8, "segment_span": [0, 6], "characterOffsetBegin": 0, "originalText": "features", "ArgType": null, "before": ""}, {"index": 2, "word": "without", "lemma": "without", "after": " ", "pos": "IN", "characterOffsetEnd": 16, "segment_span": [0, 6], "characterOffsetBegin": 9, "originalText": "without", "ArgType": null, "before": " "}, {"index": 3, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 6], "characterOffsetBegin": 17, "originalText": "an", "ArgType": null, "before": " "}, {"index": 4, "word": "explicit", "lemma": "explicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 28, "segment_span": [0, 6], "characterOffsetBegin": 20, "originalText": "explicit", "ArgType": null, "before": " "}, {"index": 5, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 6], "characterOffsetBegin": 29, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 6, "word": "representation", "lemma": "representation", "after": "", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 6], "characterOffsetBegin": 37, "originalText": "representation", "ArgType": null, "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 52, "characterOffsetBegin": 51, "originalText": ".", "ArgType": null, "before": ""}], "text": "features without an explicit feature representation ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 57, "segment_span": [0, 4], "characterOffsetBegin": 53, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 61, "segment_span": [0, 4], "characterOffsetBegin": 58, "originalText": "can", "ArgType": null, "before": " "}, {"index": 3, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 64, "segment_span": [0, 4], "characterOffsetBegin": 62, "originalText": "be", "ArgType": null, "before": " "}, {"index": 4, "word": "done", "characterOffsetEnd": 69, "after": " ", "pos": "VBN", "is_root": true, "lemma": "do", "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 65, "before": " ", "originalText": "done", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [4, 16], "characterOffsetBegin": 70, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "computing", "characterOffsetEnd": 82, "after": " ", "pos": "VBG", "is_root": true, "lemma": "compute", "segment_span": [4, 16], "tense": "G", "characterOffsetBegin": 73, "originalText": "computing", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 84, "segment_span": [4, 16], "characterOffsetBegin": 83, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [4, 16], "characterOffsetBegin": 85, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 9, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [4, 16], "characterOffsetBegin": 92, "originalText": "function", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 108, "segment_span": [4, 16], "characterOffsetBegin": 101, "originalText": "between", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [4, 16], "characterOffsetBegin": 109, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 115, "segment_span": [4, 16], "characterOffsetBegin": 111, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 118, "segment_span": [4, 16], "characterOffsetBegin": 116, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "linguistic", "lemma": "linguistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 129, "segment_span": [4, 16], "characterOffsetBegin": 119, "originalText": "linguistic", "ArgType": null, "before": " "}, {"index": 15, "word": "objects", "lemma": "object", "after": "", "pos": "NNS", "characterOffsetEnd": 137, "segment_span": [4, 16], "characterOffsetBegin": 130, "originalText": "objects", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 138, "segment_span": [4, 16], "characterOffsetBegin": 137, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 144, "segment_span": [16, 28], "characterOffsetBegin": 139, "originalText": "where", "ArgType": null, "before": " "}, {"index": 18, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 149, "segment_span": [16, 28], "characterOffsetBegin": 145, "originalText": "such", "ArgType": null, "before": " "}, {"index": 19, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [16, 28], "characterOffsetBegin": 150, "originalText": "function", "ArgType": "subj", "before": " "}, {"index": 20, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 161, "segment_span": [16, 28], "characterOffsetBegin": 159, "originalText": "is", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 163, "segment_span": [16, 28], "characterOffsetBegin": 162, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "kind", "lemma": "kind", "after": " ", "pos": "NN", "characterOffsetEnd": 168, "segment_span": [16, 28], "characterOffsetBegin": 164, "originalText": "kind", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 171, "segment_span": [16, 28], "characterOffsetBegin": 169, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "similarity", "lemma": "similarity", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [16, 28], "characterOffsetBegin": 172, "originalText": "similarity", "ArgType": null, "before": " "}, {"index": 25, "word": "measure", "lemma": "measure", "after": " ", "pos": "NN", "characterOffsetEnd": 190, "segment_span": [16, 28], "characterOffsetBegin": 183, "originalText": "measure", "ArgType": null, "before": " "}, {"index": 26, "word": "satisfying", "lemma": "satisfy", "after": " ", "pos": "VBG", "characterOffsetEnd": 201, "segment_span": [16, 28], "characterOffsetBegin": 191, "originalText": "satisfying", "ArgType": null, "before": " "}, {"index": 27, "word": "certain", "lemma": "certain", "after": " ", "pos": "JJ", "characterOffsetEnd": 209, "segment_span": [16, 28], "characterOffsetBegin": 202, "originalText": "certain", "ArgType": null, "before": " "}, {"index": 28, "word": "properties", "lemma": "property", "after": "", "pos": "NNS", "characterOffsetEnd": 220, "segment_span": [16, 28], "characterOffsetBegin": 210, "originalText": "properties", "ArgType": "dobj", "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 221, "characterOffsetBegin": 220, "originalText": ".", "ArgType": null, "before": ""}], "text": "This can be done by computing a kernel function between a pair of linguistic objects , where such function is a kind of similarity measure satisfying certain properties ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 224, "segment_span": [0, 14], "characterOffsetBegin": 222, "originalText": "An", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 232, "segment_span": [0, 14], "characterOffsetBegin": 225, "originalText": "example", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 235, "segment_span": [0, 14], "characterOffsetBegin": 233, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 239, "segment_span": [0, 14], "characterOffsetBegin": 236, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 248, "segment_span": [0, 14], "characterOffsetBegin": 240, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 6, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 255, "segment_span": [0, 14], "characterOffsetBegin": 249, "originalText": "kernel", "ArgType": "verb", "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 257, "segment_span": [0, 14], "characterOffsetBegin": 256, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "Lodhi", "lemma": "Lodhi", "after": " ", "pos": "NNP", "characterOffsetEnd": 262, "segment_span": [0, 14], "characterOffsetBegin": 257, "originalText": "Lodhi", "ArgType": null, "before": ""}, {"index": 9, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 265, "segment_span": [0, 14], "characterOffsetBegin": 263, "originalText": "et", "ArgType": null, "before": " "}, {"index": 10, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 269, "segment_span": [0, 14], "characterOffsetBegin": 266, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 270, "segment_span": [0, 14], "characterOffsetBegin": 269, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 275, "segment_span": [0, 14], "characterOffsetBegin": 271, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 276, "segment_span": [0, 14], "characterOffsetBegin": 275, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 277, "segment_span": [0, 14], "characterOffsetBegin": 276, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 283, "segment_span": [14, 37], "characterOffsetBegin": 278, "originalText": "where", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 287, "segment_span": [14, 37], "characterOffsetBegin": 284, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "objects", "lemma": "object", "after": " ", "pos": "NNS", "characterOffsetEnd": 295, "segment_span": [14, 37], "characterOffsetBegin": 288, "originalText": "objects", "ArgType": "subj", "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 299, "segment_span": [14, 37], "characterOffsetBegin": 296, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "strings", "lemma": "string", "after": " ", "pos": "NNS", "characterOffsetEnd": 307, "segment_span": [14, 37], "characterOffsetBegin": 300, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 310, "segment_span": [14, 37], "characterOffsetBegin": 308, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "characters", "lemma": "character", "after": " ", "pos": "NNS", "characterOffsetEnd": 321, "segment_span": [14, 37], "characterOffsetBegin": 311, "originalText": "characters", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 325, "segment_span": [14, 37], "characterOffsetBegin": 322, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 329, "segment_span": [14, 37], "characterOffsetBegin": 326, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 336, "segment_span": [14, 37], "characterOffsetBegin": 330, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 25, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 345, "segment_span": [14, 37], "characterOffsetBegin": 337, "originalText": "function", "ArgType": "subj", "before": " "}, {"index": 26, "word": "computes", "lemma": "compute", "after": " ", "pos": "VBZ", "characterOffsetEnd": 354, "segment_span": [14, 37], "characterOffsetBegin": 346, "originalText": "computes", "ArgType": null, "before": " "}, {"index": 27, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 358, "segment_span": [14, 37], "characterOffsetBegin": 355, "originalText": "the", "ArgType": null, "before": " "}, {"index": 28, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 365, "segment_span": [14, 37], "characterOffsetBegin": 359, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 368, "segment_span": [14, 37], "characterOffsetBegin": 366, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "common", "lemma": "common", "after": " ", "pos": "JJ", "characterOffsetEnd": 375, "segment_span": [14, 37], "characterOffsetBegin": 369, "originalText": "common", "ArgType": null, "before": " "}, {"index": 31, "word": "subsequences", "lemma": "subsequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 388, "segment_span": [14, 37], "characterOffsetBegin": 376, "originalText": "subsequences", "ArgType": null, "before": " "}, {"index": 32, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 391, "segment_span": [14, 37], "characterOffsetBegin": 389, "originalText": "of", "ArgType": null, "before": " "}, {"index": 33, "word": "characters", "lemma": "character", "after": " ", "pos": "NNS", "characterOffsetEnd": 402, "segment_span": [14, 37], "characterOffsetBegin": 392, "originalText": "characters", "ArgType": null, "before": " "}, {"index": 34, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 405, "segment_span": [14, 37], "characterOffsetBegin": 403, "originalText": "in", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 409, "segment_span": [14, 37], "characterOffsetBegin": 406, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 413, "segment_span": [14, 37], "characterOffsetBegin": 410, "originalText": "two", "ArgType": null, "before": " "}, {"index": 37, "word": "strings", "lemma": "string", "after": "", "pos": "NNS", "characterOffsetEnd": 421, "segment_span": [14, 37], "characterOffsetBegin": 414, "originalText": "strings", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 422, "characterOffsetBegin": 421, "originalText": ".", "ArgType": null, "before": ""}], "text": "An example is the sequence kernel ( Lodhi et al. , 2002 ) , where the objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 427, "segment_span": [0, 13], "characterOffsetBegin": 423, "originalText": "Such", "ArgType": null, "before": " "}, {"index": 2, "word": "substrings", "lemma": "substring", "after": " ", "pos": "NNS", "characterOffsetEnd": 438, "segment_span": [0, 13], "characterOffsetBegin": 428, "originalText": "substrings", "ArgType": "subj", "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 442, "segment_span": [0, 13], "characterOffsetBegin": 439, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 447, "segment_span": [0, 13], "characterOffsetBegin": 443, "originalText": "then", "ArgType": null, "before": " "}, {"index": 5, "word": "weighted", "lemma": "weighted", "after": " ", "pos": "JJ", "characterOffsetEnd": 456, "segment_span": [0, 13], "characterOffsetBegin": 448, "originalText": "weighted", "ArgType": "verb", "before": " "}, {"index": 6, "word": "according", "lemma": "accord", "after": " ", "pos": "VBG", "characterOffsetEnd": 466, "segment_span": [0, 13], "characterOffsetBegin": 457, "originalText": "according", "ArgType": null, "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 469, "segment_span": [0, 13], "characterOffsetBegin": 467, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 471, "segment_span": [0, 13], "characterOffsetBegin": 470, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "decaying", "lemma": "decaying", "after": " ", "pos": "JJ", "characterOffsetEnd": 480, "segment_span": [0, 13], "characterOffsetBegin": 472, "originalText": "decaying", "ArgType": null, "before": " "}, {"index": 10, "word": "factor", "lemma": "factor", "after": " ", "pos": "NN", "characterOffsetEnd": 487, "segment_span": [0, 13], "characterOffsetBegin": 481, "originalText": "factor", "ArgType": null, "before": " "}, {"index": 11, "word": "penalizing", "lemma": "penalize", "after": " ", "pos": "VBG", "characterOffsetEnd": 498, "segment_span": [0, 13], "characterOffsetBegin": 488, "originalText": "penalizing", "ArgType": null, "before": " "}, {"index": 12, "word": "longer", "lemma": "longer", "after": " ", "pos": "RBR", "characterOffsetEnd": 505, "segment_span": [0, 13], "characterOffsetBegin": 499, "originalText": "longer", "ArgType": null, "before": " "}, {"index": 13, "word": "ones", "lemma": "one", "after": "", "pos": "NNS", "characterOffsetEnd": 510, "segment_span": [0, 13], "characterOffsetBegin": 506, "originalText": "ones", "ArgType": "dobj", "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 511, "characterOffsetBegin": 510, "originalText": ".", "ArgType": null, "before": ""}], "text": "Such substrings are then weighted according to a decaying factor penalizing longer ones ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 514, "segment_span": [0, 17], "characterOffsetBegin": 512, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 518, "segment_span": [0, 17], "characterOffsetBegin": 515, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 523, "segment_span": [0, 17], "characterOffsetBegin": 519, "originalText": "same", "ArgType": null, "before": " "}, {"index": 4, "word": "line", "lemma": "line", "after": "", "pos": "NN", "characterOffsetEnd": 528, "segment_span": [0, 17], "characterOffsetBegin": 524, "originalText": "line", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 529, "segment_span": [0, 17], "characterOffsetBegin": 528, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "Tree", "lemma": "Tree", "after": " ", "pos": "NNP", "characterOffsetEnd": 534, "segment_span": [0, 17], "characterOffsetBegin": 530, "originalText": "Tree", "ArgType": null, "before": " "}, {"index": 7, "word": "Kernels", "lemma": "Kernels", "after": " ", "pos": "NNP", "characterOffsetEnd": 542, "segment_span": [0, 17], "characterOffsetBegin": 535, "originalText": "Kernels", "ArgType": "subj", "before": " "}, {"index": 8, "word": "count", "characterOffsetEnd": 548, "after": " ", "pos": "VB", "is_root": true, "lemma": "count", "segment_span": [0, 17], "tense": "B", "characterOffsetBegin": 543, "originalText": "count", "ArgType": "verb", "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 552, "segment_span": [0, 17], "characterOffsetBegin": 549, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 559, "segment_span": [0, 17], "characterOffsetBegin": 553, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 562, "segment_span": [0, 17], "characterOffsetBegin": 560, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "subtree", "lemma": "subtree", "after": " ", "pos": "NN", "characterOffsetEnd": 570, "segment_span": [0, 17], "characterOffsetBegin": 563, "originalText": "subtree", "ArgType": null, "before": " "}, {"index": 13, "word": "shared", "lemma": "share", "after": " ", "pos": "VBN", "characterOffsetEnd": 577, "segment_span": [0, 17], "characterOffsetBegin": 571, "originalText": "shared", "ArgType": null, "before": " "}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 580, "segment_span": [0, 17], "characterOffsetBegin": 578, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 584, "segment_span": [0, 17], "characterOffsetBegin": 581, "originalText": "two", "ArgType": null, "before": " "}, {"index": 16, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 590, "segment_span": [0, 17], "characterOffsetBegin": 585, "originalText": "input", "ArgType": null, "before": " "}, {"index": 17, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 596, "segment_span": [0, 17], "characterOffsetBegin": 591, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 597, "characterOffsetBegin": 596, "originalText": ".", "ArgType": null, "before": ""}], "text": "In the same line , Tree Kernels count the number of subtree shared by two input trees ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 600, "segment_span": [0, 23], "characterOffsetBegin": 598, "originalText": "An", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 608, "segment_span": [0, 23], "characterOffsetBegin": 601, "originalText": "example", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "characterOffsetEnd": 611, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 23], "tense": "Z", "characterOffsetBegin": 609, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 616, "segment_span": [0, 23], "characterOffsetBegin": 612, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 619, "segment_span": [0, 23], "characterOffsetBegin": 617, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "NN", "characterOffsetEnd": 629, "segment_span": [0, 23], "characterOffsetBegin": 620, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 631, "segment_span": [0, 23], "characterOffsetBegin": 630, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 633, "segment_span": [0, 23], "characterOffsetBegin": 631, "originalText": "or", "ArgType": null, "before": ""}, {"index": 9, "word": "subset", "lemma": "subset", "after": "", "pos": "NN", "characterOffsetEnd": 640, "segment_span": [0, 23], "characterOffsetBegin": 634, "originalText": "subset", "ArgType": null, "before": " "}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 641, "segment_span": [0, 23], "characterOffsetBegin": 640, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 646, "segment_span": [0, 23], "characterOffsetBegin": 642, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 12, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 653, "segment_span": [0, 23], "characterOffsetBegin": 647, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 655, "segment_span": [0, 23], "characterOffsetBegin": 654, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "SST", "lemma": "sst", "after": "", "pos": "NN", "characterOffsetEnd": 658, "segment_span": [0, 23], "characterOffsetBegin": 655, "originalText": "SST", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 659, "segment_span": [0, 23], "characterOffsetBegin": 658, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 661, "segment_span": [0, 23], "characterOffsetBegin": 660, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Collins", "lemma": "Collins", "after": " ", "pos": "NNP", "characterOffsetEnd": 668, "segment_span": [0, 23], "characterOffsetBegin": 661, "originalText": "Collins", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 672, "segment_span": [0, 23], "characterOffsetBegin": 669, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "Duffy", "lemma": "duffy", "after": "", "pos": "NN", "characterOffsetEnd": 678, "segment_span": [0, 23], "characterOffsetBegin": 673, "originalText": "Duffy", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 679, "segment_span": [0, 23], "characterOffsetBegin": 678, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 684, "segment_span": [0, 23], "characterOffsetBegin": 680, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 685, "segment_span": [0, 23], "characterOffsetBegin": 684, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 686, "segment_span": [0, 23], "characterOffsetBegin": 685, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 692, "segment_span": [23, 28], "characterOffsetBegin": 687, "originalText": "where", "ArgType": null, "before": " "}, {"index": 25, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 698, "segment_span": [23, 28], "characterOffsetBegin": 693, "originalText": "trees", "ArgType": "subj", "before": " "}, {"index": 26, "word": "encode", "characterOffsetEnd": 705, "after": " ", "pos": "VBP", "is_root": true, "lemma": "encode", "segment_span": [23, 28], "tense": "P", "characterOffsetBegin": 699, "originalText": "encode", "ArgType": null, "before": " "}, {"index": 27, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 717, "segment_span": [23, 28], "characterOffsetBegin": 706, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 28, "word": "derivations", "lemma": "derivation", "after": "", "pos": "NNS", "characterOffsetEnd": 729, "segment_span": [23, 28], "characterOffsetBegin": 718, "originalText": "derivations", "ArgType": "dobj", "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 730, "characterOffsetBegin": 729, "originalText": ".", "ArgType": null, "before": ""}], "text": "An example is that of syntactic ( or subset ) tree kernel ( SST ) ( Collins and Duffy , 2001 ) , where trees encode grammatical derivations ."}, {"tokens": [{"index": 1, "word": "Previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 739, "segment_span": [0, 11], "characterOffsetBegin": 731, "originalText": "Previous", "ArgType": null, "before": " "}, {"index": 2, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 744, "segment_span": [0, 11], "characterOffsetBegin": 740, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 3, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 747, "segment_span": [0, 11], "characterOffsetBegin": 745, "originalText": "on", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 751, "segment_span": [0, 11], "characterOffsetBegin": 748, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 755, "segment_span": [0, 11], "characterOffsetBegin": 752, "originalText": "use", "ArgType": null, "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 758, "segment_span": [0, 11], "characterOffsetBegin": 756, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 766, "segment_span": [0, 11], "characterOffsetBegin": 759, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 770, "segment_span": [0, 11], "characterOffsetBegin": 767, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 773, "segment_span": [0, 11], "characterOffsetBegin": 771, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 10, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 777, "segment_span": [0, 11], "characterOffsetBegin": 774, "originalText": "has", "ArgType": null, "before": " "}, {"index": 11, "word": "exploited", "characterOffsetEnd": 787, "after": " ", "pos": "VBN", "is_root": true, "lemma": "exploit", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 778, "originalText": "exploited", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 792, "segment_span": [11, 53], "characterOffsetBegin": 788, "originalText": "some", "ArgType": null, "before": " "}, {"index": 13, "word": "similarity", "lemma": "similarity", "after": " ", "pos": "NN", "characterOffsetEnd": 803, "segment_span": [11, 53], "characterOffsetBegin": 793, "originalText": "similarity", "ArgType": "subj", "before": " "}, {"index": 14, "word": "measures", "characterOffsetEnd": 812, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "measure", "segment_span": [11, 53], "tense": "Z", "characterOffsetBegin": 804, "originalText": "measures", "ArgType": null, "before": " "}, {"index": 15, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 817, "segment_span": [11, 53], "characterOffsetBegin": 813, "originalText": "over", "ArgType": null, "before": " "}, {"index": 16, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 825, "segment_span": [11, 53], "characterOffsetBegin": 818, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 17, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 834, "segment_span": [11, 53], "characterOffsetBegin": 826, "originalText": "features", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 836, "segment_span": [11, 53], "characterOffsetBegin": 835, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 843, "segment_span": [11, 53], "characterOffsetBegin": 836, "originalText": "Zelenko", "ArgType": null, "before": ""}, {"index": 20, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 846, "segment_span": [11, 53], "characterOffsetBegin": 844, "originalText": "et", "ArgType": null, "before": " "}, {"index": 21, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 850, "segment_span": [11, 53], "characterOffsetBegin": 847, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 851, "segment_span": [11, 53], "characterOffsetBegin": 850, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 856, "segment_span": [11, 53], "characterOffsetBegin": 852, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 24, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 857, "segment_span": [11, 53], "characterOffsetBegin": 856, "originalText": ";", "ArgType": null, "before": ""}, {"index": 25, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 865, "segment_span": [11, 53], "characterOffsetBegin": 858, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 869, "segment_span": [11, 53], "characterOffsetBegin": 866, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 878, "segment_span": [11, 53], "characterOffsetBegin": 870, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 879, "segment_span": [11, 53], "characterOffsetBegin": 878, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 884, "segment_span": [11, 53], "characterOffsetBegin": 880, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 30, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 885, "segment_span": [11, 53], "characterOffsetBegin": 884, "originalText": ";", "ArgType": null, "before": ""}, {"index": 31, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 891, "segment_span": [11, 53], "characterOffsetBegin": 886, "originalText": "Zhang", "ArgType": null, "before": " "}, {"index": 32, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 894, "segment_span": [11, 53], "characterOffsetBegin": 892, "originalText": "et", "ArgType": null, "before": " "}, {"index": 33, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 898, "segment_span": [11, 53], "characterOffsetBegin": 895, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 899, "segment_span": [11, 53], "characterOffsetBegin": 898, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 904, "segment_span": [11, 53], "characterOffsetBegin": 900, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 36, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 905, "segment_span": [11, 53], "characterOffsetBegin": 904, "originalText": ")", "ArgType": null, "before": ""}, {"index": 37, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 908, "segment_span": [11, 53], "characterOffsetBegin": 906, "originalText": "or", "ArgType": null, "before": " "}, {"index": 38, "word": "subsequence", "lemma": "subsequence", "after": " ", "pos": "NN", "characterOffsetEnd": 920, "segment_span": [11, 53], "characterOffsetBegin": 909, "originalText": "subsequence", "ArgType": null, "before": " "}, {"index": 39, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 928, "segment_span": [11, 53], "characterOffsetBegin": 921, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 40, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 933, "segment_span": [11, 53], "characterOffsetBegin": 929, "originalText": "over", "ArgType": null, "before": " "}, {"index": 41, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 944, "segment_span": [11, 53], "characterOffsetBegin": 934, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 42, "word": "graphs", "lemma": "graph", "after": " ", "pos": "NNS", "characterOffsetEnd": 951, "segment_span": [11, 53], "characterOffsetBegin": 945, "originalText": "graphs", "ArgType": null, "before": " "}, {"index": 43, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 953, "segment_span": [11, 53], "characterOffsetBegin": 952, "originalText": "(", "ArgType": null, "before": " "}, {"index": 44, "word": "Bunescu", "lemma": "bunescu", "after": " ", "pos": "NN", "characterOffsetEnd": 960, "segment_span": [11, 53], "characterOffsetBegin": 953, "originalText": "Bunescu", "ArgType": null, "before": ""}, {"index": 45, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 964, "segment_span": [11, 53], "characterOffsetBegin": 961, "originalText": "and", "ArgType": null, "before": " "}, {"index": 46, "word": "Mooney", "lemma": "mooney", "after": "", "pos": "NN", "characterOffsetEnd": 971, "segment_span": [11, 53], "characterOffsetBegin": 965, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 47, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 972, "segment_span": [11, 53], "characterOffsetBegin": 971, "originalText": ",", "ArgType": null, "before": ""}, {"index": 48, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 978, "segment_span": [11, 53], "characterOffsetBegin": 973, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 49, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 979, "segment_span": [11, 53], "characterOffsetBegin": 978, "originalText": ";", "ArgType": null, "before": ""}, {"index": 50, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 984, "segment_span": [11, 53], "characterOffsetBegin": 980, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 51, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 985, "segment_span": [11, 53], "characterOffsetBegin": 984, "originalText": ",", "ArgType": null, "before": ""}, {"index": 52, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 990, "segment_span": [11, 53], "characterOffsetBegin": 986, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 53, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 991, "segment_span": [11, 53], "characterOffsetBegin": 990, "originalText": ")", "ArgType": null, "before": ""}, {"index": 54, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 992, "characterOffsetBegin": 991, "originalText": ".", "ArgType": null, "before": ""}], "text": "Previous work on the use of kernels for RE has exploited some similarity measures over diverse features ( Zelenko et al. , 2002 ; Culotta and Sorensen , 2004 ; Zhang et al. , 2005 ) or subsequence kernels over dependency graphs ( Bunescu and Mooney , 2005a ; Wang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "More", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 997, "segment_span": [0, 22], "characterOffsetBegin": 993, "originalText": "More", "ArgType": null, "before": " "}, {"index": 2, "word": "specifically", "lemma": "specifically", "after": "", "pos": "RB", "characterOffsetEnd": 1010, "segment_span": [0, 22], "characterOffsetBegin": 998, "originalText": "specifically", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1011, "segment_span": [0, 22], "characterOffsetBegin": 1010, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1013, "segment_span": [0, 22], "characterOffsetBegin": 1012, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 1020, "segment_span": [0, 22], "characterOffsetBegin": 1013, "originalText": "Bunescu", "ArgType": "subj", "before": ""}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1024, "segment_span": [0, 22], "characterOffsetBegin": 1021, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 1031, "segment_span": [0, 22], "characterOffsetBegin": 1025, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1032, "segment_span": [0, 22], "characterOffsetBegin": 1031, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 1038, "segment_span": [0, 22], "characterOffsetBegin": 1033, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 10, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1039, "segment_span": [0, 22], "characterOffsetBegin": 1038, "originalText": ";", "ArgType": null, "before": ""}, {"index": 11, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 1047, "segment_span": [0, 22], "characterOffsetBegin": 1040, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1051, "segment_span": [0, 22], "characterOffsetBegin": 1048, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 1060, "segment_span": [0, 22], "characterOffsetBegin": 1052, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1061, "segment_span": [0, 22], "characterOffsetBegin": 1060, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 1066, "segment_span": [0, 22], "characterOffsetBegin": 1062, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1067, "segment_span": [0, 22], "characterOffsetBegin": 1066, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "use", "characterOffsetEnd": 1071, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 22], "tense": "P", "characterOffsetBegin": 1068, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 18, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1079, "segment_span": [0, 22], "characterOffsetBegin": 1072, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 1084, "segment_span": [0, 22], "characterOffsetBegin": 1080, "originalText": "over", "ArgType": null, "before": " "}, {"index": 20, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1095, "segment_span": [0, 22], "characterOffsetBegin": 1085, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 21, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1101, "segment_span": [0, 22], "characterOffsetBegin": 1096, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1102, "segment_span": [0, 22], "characterOffsetBegin": 1101, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1108, "segment_span": [22, 37], "characterOffsetBegin": 1103, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 24, "word": "showed", "characterOffsetEnd": 1115, "after": " ", "pos": "VBD", "is_root": true, "lemma": "show", "segment_span": [22, 37], "tense": "D", "characterOffsetBegin": 1109, "originalText": "showed", "ArgType": null, "before": " "}, {"index": 25, "word": "much", "lemma": "much", "after": " ", "pos": "RB", "characterOffsetEnd": 1120, "segment_span": [22, 37], "characterOffsetBegin": 1116, "originalText": "much", "ArgType": null, "before": " "}, {"index": 26, "word": "lower", "lemma": "lower", "after": " ", "pos": "JJR", "characterOffsetEnd": 1126, "segment_span": [22, 37], "characterOffsetBegin": 1121, "originalText": "lower", "ArgType": null, "before": " "}, {"index": 27, "word": "accuracy", "lemma": "accuracy", "after": " ", "pos": "NN", "characterOffsetEnd": 1135, "segment_span": [22, 37], "characterOffsetBegin": 1127, "originalText": "accuracy", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1140, "segment_span": [22, 37], "characterOffsetBegin": 1136, "originalText": "than", "ArgType": null, "before": " "}, {"index": 29, "word": "feature-based", "lemma": "feature-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1154, "segment_span": [22, 37], "characterOffsetBegin": 1141, "originalText": "feature-based", "ArgType": null, "before": " "}, {"index": 30, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 1162, "segment_span": [22, 37], "characterOffsetBegin": 1155, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1164, "segment_span": [22, 37], "characterOffsetBegin": 1163, "originalText": "(", "ArgType": null, "before": " "}, {"index": 32, "word": "Zhao", "lemma": "Zhao", "after": " ", "pos": "NNP", "characterOffsetEnd": 1168, "segment_span": [22, 37], "characterOffsetBegin": 1164, "originalText": "Zhao", "ArgType": null, "before": ""}, {"index": 33, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1172, "segment_span": [22, 37], "characterOffsetBegin": 1169, "originalText": "and", "ArgType": null, "before": " "}, {"index": 34, "word": "Grishman", "lemma": "Grishman", "after": "", "pos": "NNP", "characterOffsetEnd": 1181, "segment_span": [22, 37], "characterOffsetBegin": 1173, "originalText": "Grishman", "ArgType": null, "before": " "}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1182, "segment_span": [22, 37], "characterOffsetBegin": 1181, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 1187, "segment_span": [22, 37], "characterOffsetBegin": 1183, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1188, "segment_span": [22, 37], "characterOffsetBegin": 1187, "originalText": ")", "ArgType": null, "before": ""}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1189, "characterOffsetBegin": 1188, "originalText": ".", "ArgType": null, "before": ""}], "text": "More specifically , ( Bunescu and Mooney , 2005a ; Culotta and Sorensen , 2004 ) use kernels over dependency trees , which showed much lower accuracy than feature-based methods ( Zhao and Grishman , 2005 ) ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 1193, "segment_span": [0, 8], "characterOffsetBegin": 1190, "originalText": "One", "ArgType": null, "before": " "}, {"index": 2, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 1201, "segment_span": [0, 8], "characterOffsetBegin": 1194, "originalText": "problem", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1204, "segment_span": [0, 8], "characterOffsetBegin": 1202, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1208, "segment_span": [0, 8], "characterOffsetBegin": 1205, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1219, "segment_span": [0, 8], "characterOffsetBegin": 1209, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 6, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1227, "segment_span": [0, 8], "characterOffsetBegin": 1220, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 7, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 1233, "segment_span": [0, 8], "characterOffsetBegin": 1228, "originalText": "above", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "characterOffsetEnd": 1236, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 1234, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1241, "segment_span": [8, 20], "characterOffsetBegin": 1237, "originalText": "that", "ArgType": null, "before": " "}, {"index": 10, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 1246, "segment_span": [8, 20], "characterOffsetBegin": 1242, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 11, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 1249, "segment_span": [8, 20], "characterOffsetBegin": 1247, "originalText": "do", "ArgType": null, "before": " "}, {"index": 12, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 1253, "segment_span": [8, 20], "characterOffsetBegin": 1250, "originalText": "not", "ArgType": null, "before": " "}, {"index": 13, "word": "exploit", "characterOffsetEnd": 1261, "after": " ", "pos": "VB", "is_root": true, "lemma": "exploit", "segment_span": [8, 20], "tense": "B", "characterOffsetBegin": 1254, "originalText": "exploit", "has_aux": true, "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1265, "segment_span": [8, 20], "characterOffsetBegin": 1262, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "overall", "lemma": "overall", "after": " ", "pos": "JJ", "characterOffsetEnd": 1273, "segment_span": [8, 20], "characterOffsetBegin": 1266, "originalText": "overall", "ArgType": null, "before": " "}, {"index": 16, "word": "structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 1284, "segment_span": [8, 20], "characterOffsetBegin": 1274, "originalText": "structural", "ArgType": null, "before": " "}, {"index": 17, "word": "aspects", "lemma": "aspect", "after": " ", "pos": "NNS", "characterOffsetEnd": 1292, "segment_span": [8, 20], "characterOffsetBegin": 1285, "originalText": "aspects", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1295, "segment_span": [8, 20], "characterOffsetBegin": 1293, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1306, "segment_span": [8, 20], "characterOffsetBegin": 1296, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 20, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1312, "segment_span": [8, 20], "characterOffsetBegin": 1307, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1313, "characterOffsetBegin": 1312, "originalText": ".", "ArgType": null, "before": ""}], "text": "One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1315, "segment_span": [0, 30], "characterOffsetBegin": 1314, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1320, "segment_span": [0, 30], "characterOffsetBegin": 1316, "originalText": "more", "ArgType": null, "before": " "}, {"index": 3, "word": "effective", "lemma": "effective", "after": " ", "pos": "JJ", "characterOffsetEnd": 1330, "segment_span": [0, 30], "characterOffsetBegin": 1321, "originalText": "effective", "ArgType": null, "before": " "}, {"index": 4, "word": "solution", "lemma": "solution", "after": " ", "pos": "NN", "characterOffsetEnd": 1339, "segment_span": [0, 30], "characterOffsetBegin": 1331, "originalText": "solution", "ArgType": "subj", "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1342, "segment_span": [0, 30], "characterOffsetBegin": 1340, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1346, "segment_span": [0, 30], "characterOffsetBegin": 1343, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "application", "lemma": "application", "after": " ", "pos": "NN", "characterOffsetEnd": 1358, "segment_span": [0, 30], "characterOffsetBegin": 1347, "originalText": "application", "ArgType": "verb", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1361, "segment_span": [0, 30], "characterOffsetBegin": 1359, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 1373, "segment_span": [0, 30], "characterOffsetBegin": 1362, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 10, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1381, "segment_span": [0, 30], "characterOffsetBegin": 1374, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1384, "segment_span": [0, 30], "characterOffsetBegin": 1382, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 1396, "segment_span": [0, 30], "characterOffsetBegin": 1385, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 13, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1402, "segment_span": [0, 30], "characterOffsetBegin": 1397, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 14, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1408, "segment_span": [0, 30], "characterOffsetBegin": 1403, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1410, "segment_span": [0, 30], "characterOffsetBegin": 1409, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 1415, "segment_span": [0, 30], "characterOffsetBegin": 1410, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 17, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1418, "segment_span": [0, 30], "characterOffsetBegin": 1416, "originalText": "et", "ArgType": null, "before": " "}, {"index": 18, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1422, "segment_span": [0, 30], "characterOffsetBegin": 1419, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1423, "segment_span": [0, 30], "characterOffsetBegin": 1422, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 1428, "segment_span": [0, 30], "characterOffsetBegin": 1424, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1429, "segment_span": [0, 30], "characterOffsetBegin": 1428, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 1433, "segment_span": [0, 30], "characterOffsetBegin": 1430, "originalText": "but", "ArgType": null, "before": " "}, {"index": 23, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 1438, "segment_span": [0, 30], "characterOffsetBegin": 1434, "originalText": "this", "ArgType": "subj", "before": " "}, {"index": 24, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1441, "segment_span": [0, 30], "characterOffsetBegin": 1439, "originalText": "is", "ArgType": null, "before": " "}, {"index": 25, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 1445, "segment_span": [0, 30], "characterOffsetBegin": 1442, "originalText": "not", "ArgType": null, "before": " "}, {"index": 26, "word": "satisfactory", "lemma": "satisfactory", "after": " ", "pos": "JJ", "characterOffsetEnd": 1458, "segment_span": [0, 30], "characterOffsetBegin": 1446, "originalText": "satisfactory", "ArgType": null, "before": " "}, {"index": 27, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1463, "segment_span": [0, 30], "characterOffsetBegin": 1459, "originalText": "from", "ArgType": null, "before": " "}, {"index": 28, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1465, "segment_span": [0, 30], "characterOffsetBegin": 1464, "originalText": "a", "ArgType": null, "before": " "}, {"index": 29, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 1473, "segment_span": [0, 30], "characterOffsetBegin": 1466, "originalText": "general", "ArgType": null, "before": " "}, {"index": 30, "word": "per", "lemma": "per", "after": "", "pos": "IN", "characterOffsetEnd": 1477, "segment_span": [0, 30], "characterOffsetBegin": 1474, "originalText": "per", "ArgType": null, "before": " "}, {"index": 31, "word": "-", "lemma": "-", "after": "", "pos": ":", "characterOffsetEnd": 1478, "characterOffsetBegin": 1477, "originalText": "-", "ArgType": null, "before": ""}], "text": "A more effective solution is the application of convolution kernels to constituent parse trees ( Zhang et al. , 2006 ) but this is not satisfactory from a general per -"}, {"tokens": [{"index": 1, "word": "spective", "lemma": "spective", "after": " ", "pos": "JJ", "characterOffsetEnd": 8, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "spective", "ArgType": null, "before": ""}, {"index": 2, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [1, 17], "characterOffsetBegin": 9, "originalText": "since", "ArgType": null, "before": " "}, {"index": 3, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [1, 17], "characterOffsetBegin": 15, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 4, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 36, "segment_span": [1, 17], "characterOffsetBegin": 26, "originalText": "structures", "ArgType": "subj", "before": " "}, {"index": 5, "word": "offer", "characterOffsetEnd": 42, "after": " ", "pos": "VBP", "is_root": true, "lemma": "offer", "segment_span": [1, 17], "tense": "P", "characterOffsetBegin": 37, "originalText": "offer", "ArgType": null, "before": " "}, {"index": 6, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [1, 17], "characterOffsetBegin": 43, "originalText": "some", "ArgType": null, "before": " "}, {"index": 7, "word": "unique", "lemma": "unique", "after": " ", "pos": "JJ", "characterOffsetEnd": 54, "segment_span": [1, 17], "characterOffsetBegin": 48, "originalText": "unique", "ArgType": null, "before": " "}, {"index": 8, "word": "advantages", "lemma": "advantage", "after": "", "pos": "NNS", "characterOffsetEnd": 65, "segment_span": [1, 17], "characterOffsetBegin": 55, "originalText": "advantages", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 66, "segment_span": [1, 17], "characterOffsetBegin": 65, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 72, "segment_span": [1, 17], "characterOffsetBegin": 67, "originalText": "which", "ArgType": null, "before": " "}, {"index": 11, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 79, "segment_span": [1, 17], "characterOffsetBegin": 73, "originalText": "should", "ArgType": null, "before": " "}, {"index": 12, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 82, "segment_span": [1, 17], "characterOffsetBegin": 80, "originalText": "be", "ArgType": null, "before": " "}, {"index": 13, "word": "exploited", "lemma": "exploit", "after": " ", "pos": "VBN", "characterOffsetEnd": 92, "segment_span": [1, 17], "characterOffsetBegin": 83, "originalText": "exploited", "ArgType": null, "before": " "}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [1, 17], "characterOffsetBegin": 93, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 98, "segment_span": [1, 17], "characterOffsetBegin": 96, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "appropriate", "lemma": "appropriate", "after": " ", "pos": "JJ", "characterOffsetEnd": 110, "segment_span": [1, 17], "characterOffsetBegin": 99, "originalText": "appropriate", "ArgType": null, "before": " "}, {"index": 17, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [1, 17], "characterOffsetBegin": 111, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 118, "characterOffsetBegin": 117, "originalText": ".", "ArgType": null, "before": ""}], "text": "spective since dependency structures offer some unique advantages , which should be exploited by an appropriate kernel ."}, {"tokens": [{"index": 1, "word": "Therefore", "lemma": "therefore", "after": "", "pos": "RB", "characterOffsetEnd": 128, "segment_span": [0, 13], "characterOffsetBegin": 119, "originalText": "Therefore", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 129, "segment_span": [0, 13], "characterOffsetBegin": 128, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "studying", "lemma": "study", "after": " ", "pos": "VBG", "characterOffsetEnd": 138, "segment_span": [0, 13], "characterOffsetBegin": 130, "originalText": "studying", "ArgType": null, "before": " "}, {"index": 4, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [0, 13], "characterOffsetBegin": 139, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [0, 13], "characterOffsetBegin": 151, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 6, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 163, "segment_span": [0, 13], "characterOffsetBegin": 156, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 167, "segment_span": [0, 13], "characterOffsetBegin": 164, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 178, "segment_span": [0, 13], "characterOffsetBegin": 168, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 9, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 184, "segment_span": [0, 13], "characterOffsetBegin": 179, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 187, "segment_span": [0, 13], "characterOffsetBegin": 185, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "worthwhile", "lemma": "worthwhile", "after": " ", "pos": "JJ", "characterOffsetEnd": 198, "segment_span": [0, 13], "characterOffsetBegin": 188, "originalText": "worthwhile", "ArgType": null, "before": " "}, {"index": 12, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 203, "segment_span": [0, 13], "characterOffsetBegin": 199, "originalText": "also", "ArgType": null, "before": " "}, {"index": 13, "word": "considering", "lemma": "consider", "after": " ", "pos": "VBG", "characterOffsetEnd": 215, "segment_span": [0, 13], "characterOffsetBegin": 204, "originalText": "considering", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": "", "pos": "IN", "characterOffsetEnd": 220, "segment_span": [13, 33], "characterOffsetBegin": 216, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 221, "segment_span": [13, 33], "characterOffsetBegin": 220, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 224, "segment_span": [13, 33], "characterOffsetBegin": 222, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 228, "segment_span": [13, 33], "characterOffsetBegin": 225, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 233, "segment_span": [13, 33], "characterOffsetBegin": 229, "originalText": "best", "ArgType": null, "before": " "}, {"index": 19, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 236, "segment_span": [13, 33], "characterOffsetBegin": 234, "originalText": "of", "ArgType": null, "before": " "}, {"index": 20, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 240, "segment_span": [13, 33], "characterOffsetBegin": 237, "originalText": "our", "ArgType": null, "before": " "}, {"index": 21, "word": "knowledge", "lemma": "knowledge", "after": "", "pos": "NN", "characterOffsetEnd": 250, "segment_span": [13, 33], "characterOffsetBegin": 241, "originalText": "knowledge", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 251, "segment_span": [13, 33], "characterOffsetBegin": 250, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 257, "segment_span": [13, 33], "characterOffsetBegin": 252, "originalText": "these", "ArgType": null, "before": " "}, {"index": 24, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 264, "segment_span": [13, 33], "characterOffsetBegin": 258, "originalText": "models", "ArgType": null, "before": " "}, {"index": 25, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 269, "segment_span": [13, 33], "characterOffsetBegin": 265, "originalText": "have", "ArgType": null, "before": " "}, {"index": 26, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 273, "segment_span": [13, 33], "characterOffsetBegin": 270, "originalText": "not", "ArgType": null, "before": " "}, {"index": 27, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 278, "segment_span": [13, 33], "characterOffsetBegin": 274, "originalText": "been", "ArgType": null, "before": " "}, {"index": 28, "word": "previously", "lemma": "previously", "after": " ", "pos": "RB", "characterOffsetEnd": 289, "segment_span": [13, 33], "characterOffsetBegin": 279, "originalText": "previously", "ArgType": null, "before": " "}, {"index": 29, "word": "used", "characterOffsetEnd": 294, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [13, 33], "tense": "N", "characterOffsetBegin": 290, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 30, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 298, "segment_span": [13, 33], "characterOffsetBegin": 295, "originalText": "for", "ArgType": null, "before": " "}, {"index": 31, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 307, "segment_span": [13, 33], "characterOffsetBegin": 299, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 32, "word": "extraction1", "lemma": "extraction1", "after": " ", "pos": "NN", "characterOffsetEnd": 319, "segment_span": [13, 33], "characterOffsetBegin": 308, "originalText": "extraction1", "ArgType": null, "before": " "}, {"index": 33, "word": "task", "lemma": "task", "after": "", "pos": "NN", "characterOffsetEnd": 324, "segment_span": [13, 33], "characterOffsetBegin": 320, "originalText": "task", "ArgType": null, "before": " "}, {"index": 34, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 325, "characterOffsetBegin": 324, "originalText": ".", "ArgType": null, "before": ""}], "text": "Therefore , studying convolution tree kernels for dependency trees is worthwhile also considering that , to the best of our knowledge , these models have not been previously used for relation extraction1 task ."}, {"tokens": [{"index": 1, "word": "Additionally", "lemma": "additionally", "after": "", "pos": "RB", "characterOffsetEnd": 338, "segment_span": [0, 11], "characterOffsetBegin": 326, "originalText": "Additionally", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 339, "segment_span": [0, 11], "characterOffsetBegin": 338, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 348, "segment_span": [0, 11], "characterOffsetBegin": 340, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 4, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 356, "segment_span": [0, 11], "characterOffsetBegin": 349, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 5, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 363, "segment_span": [0, 11], "characterOffsetBegin": 357, "originalText": "should", "ArgType": null, "before": " "}, {"index": 6, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 366, "segment_span": [0, 11], "characterOffsetBegin": 364, "originalText": "be", "ArgType": null, "before": " "}, {"index": 7, "word": "included", "characterOffsetEnd": 375, "after": " ", "pos": "VBN", "is_root": true, "lemma": "include", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 367, "before": " ", "originalText": "included", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 378, "segment_span": [0, 11], "characterOffsetBegin": 376, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 383, "segment_span": [0, 11], "characterOffsetBegin": 379, "originalText": "such", "ArgType": null, "before": " "}, {"index": 10, "word": "global", "lemma": "global", "after": " ", "pos": "JJ", "characterOffsetEnd": 390, "segment_span": [0, 11], "characterOffsetBegin": 384, "originalText": "global", "ArgType": null, "before": " "}, {"index": 11, "word": "study", "lemma": "study", "after": " ", "pos": "NN", "characterOffsetEnd": 396, "segment_span": [0, 11], "characterOffsetBegin": 391, "originalText": "study", "ArgType": null, "before": " "}, {"index": 12, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 402, "segment_span": [11, 22], "characterOffsetBegin": 397, "originalText": "since", "ArgType": null, "before": " "}, {"index": 13, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 407, "segment_span": [11, 22], "characterOffsetBegin": 403, "originalText": "some", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 410, "segment_span": [11, 22], "characterOffsetBegin": 408, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 416, "segment_span": [11, 22], "characterOffsetBegin": 411, "originalText": "their", "ArgType": null, "before": " "}, {"index": 16, "word": "forms", "lemma": "form", "after": " ", "pos": "NNS", "characterOffsetEnd": 422, "segment_span": [11, 22], "characterOffsetBegin": 417, "originalText": "forms", "ArgType": null, "before": " "}, {"index": 17, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 427, "segment_span": [11, 22], "characterOffsetBegin": 423, "originalText": "have", "ArgType": null, "before": " "}, {"index": 18, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 431, "segment_span": [11, 22], "characterOffsetBegin": 428, "originalText": "not", "ArgType": null, "before": " "}, {"index": 19, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 436, "segment_span": [11, 22], "characterOffsetBegin": 432, "originalText": "been", "ArgType": null, "before": " "}, {"index": 20, "word": "applied", "characterOffsetEnd": 444, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [11, 22], "tense": "N", "characterOffsetBegin": 437, "before": " ", "originalText": "applied", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 447, "segment_span": [11, 22], "characterOffsetBegin": 445, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "RE", "lemma": "be", "after": "", "pos": "VB", "characterOffsetEnd": 450, "segment_span": [11, 22], "characterOffsetBegin": 448, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 451, "characterOffsetBegin": 450, "originalText": ".", "ArgType": null, "before": ""}], "text": "Additionally , sequence kernels should be included in such global study since some of their forms have not been applied to RE ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 454, "segment_span": [0, 7], "characterOffsetBegin": 452, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 459, "segment_span": [0, 7], "characterOffsetBegin": 455, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": "", "pos": "NN", "characterOffsetEnd": 465, "segment_span": [0, 7], "characterOffsetBegin": 460, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 466, "segment_span": [0, 7], "characterOffsetBegin": 465, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 469, "segment_span": [0, 7], "characterOffsetBegin": 467, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "study", "characterOffsetEnd": 475, "after": " ", "pos": "VBP", "is_root": true, "lemma": "study", "segment_span": [0, 7], "tense": "P", "characterOffsetBegin": 470, "originalText": "study", "ArgType": "verb", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 479, "segment_span": [0, 7], "characterOffsetBegin": 476, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "evaluate", "characterOffsetEnd": 488, "after": " ", "pos": "VBP", "is_root": true, "lemma": "evaluate", "segment_span": [7, 17], "tense": "P", "characterOffsetBegin": 480, "originalText": "evaluate", "ArgType": null, "before": " "}, {"index": 9, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 496, "segment_span": [7, 17], "characterOffsetBegin": 489, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 10, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 508, "segment_span": [7, 17], "characterOffsetBegin": 497, "originalText": "convolution", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 512, "segment_span": [7, 17], "characterOffsetBegin": 509, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 521, "segment_span": [7, 17], "characterOffsetBegin": 513, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 13, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 529, "segment_span": [7, 17], "characterOffsetBegin": 522, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 14, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 533, "segment_span": [7, 17], "characterOffsetBegin": 530, "originalText": "for", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 537, "segment_span": [7, 17], "characterOffsetBegin": 534, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 540, "segment_span": [7, 17], "characterOffsetBegin": 538, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 17, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 548, "segment_span": [7, 17], "characterOffsetBegin": 541, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 551, "segment_span": [17, 30], "characterOffsetBegin": 549, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "providing", "characterOffsetEnd": 561, "after": " ", "pos": "VBG", "is_root": true, "lemma": "provide", "segment_span": [17, 30], "tense": "G", "characterOffsetBegin": 552, "originalText": "providing", "ArgType": null, "before": " "}, {"index": 20, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 569, "segment_span": [17, 30], "characterOffsetBegin": 562, "originalText": "several", "ArgType": null, "before": " "}, {"index": 21, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 576, "segment_span": [17, 30], "characterOffsetBegin": 570, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 22, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 589, "segment_span": [17, 30], "characterOffsetBegin": 577, "originalText": "combinations", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 592, "segment_span": [17, 30], "characterOffsetBegin": 590, "originalText": "on", "ArgType": null, "before": " "}, {"index": 24, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 604, "segment_span": [17, 30], "characterOffsetBegin": 593, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 25, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 608, "segment_span": [17, 30], "characterOffsetBegin": 605, "originalText": "and", "ArgType": null, "before": " "}, {"index": 26, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 619, "segment_span": [17, 30], "characterOffsetBegin": 609, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 27, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 625, "segment_span": [17, 30], "characterOffsetBegin": 620, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 629, "segment_span": [17, 30], "characterOffsetBegin": 626, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "sequential", "lemma": "sequential", "after": " ", "pos": "JJ", "characterOffsetEnd": 640, "segment_span": [17, 30], "characterOffsetBegin": 630, "originalText": "sequential", "ArgType": null, "before": " "}, {"index": 30, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 651, "segment_span": [17, 30], "characterOffsetBegin": 641, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 652, "characterOffsetBegin": 651, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this paper , we study and evaluate diverse convolution and sequence kernels for the RE problem by providing several kernel combinations on constituent and dependency trees and sequential structures ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 655, "segment_span": [0, 15], "characterOffsetBegin": 653, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "fully", "lemma": "fully", "after": " ", "pos": "RB", "characterOffsetEnd": 661, "segment_span": [0, 15], "characterOffsetBegin": 656, "originalText": "fully", "ArgType": null, "before": " "}, {"index": 3, "word": "exploit", "characterOffsetEnd": 669, "after": " ", "pos": "VB", "is_root": true, "lemma": "exploit", "segment_span": [0, 15], "tense": "B", "characterOffsetBegin": 662, "originalText": "exploit", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 673, "segment_span": [0, 15], "characterOffsetBegin": 670, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "potential", "lemma": "potential", "after": " ", "pos": "NN", "characterOffsetEnd": 683, "segment_span": [0, 15], "characterOffsetBegin": 674, "originalText": "potential", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 686, "segment_span": [0, 15], "characterOffsetBegin": 684, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 697, "segment_span": [0, 15], "characterOffsetBegin": 687, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 8, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 703, "segment_span": [0, 15], "characterOffsetBegin": 698, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 704, "segment_span": [0, 15], "characterOffsetBegin": 703, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 707, "segment_span": [0, 15], "characterOffsetBegin": 705, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "addition", "lemma": "addition", "after": " ", "pos": "NN", "characterOffsetEnd": 716, "segment_span": [0, 15], "characterOffsetBegin": 708, "originalText": "addition", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 719, "segment_span": [0, 15], "characterOffsetBegin": 717, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 723, "segment_span": [0, 15], "characterOffsetBegin": 720, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 727, "segment_span": [0, 15], "characterOffsetBegin": 724, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 15, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 734, "segment_span": [0, 15], "characterOffsetBegin": 728, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 735, "segment_span": [15, 33], "characterOffsetBegin": 734, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 738, "segment_span": [15, 33], "characterOffsetBegin": 736, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 18, "word": "applied", "characterOffsetEnd": 746, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [15, 33], "tense": "D", "characterOffsetBegin": 739, "originalText": "applied", "ArgType": "verb", "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 750, "segment_span": [15, 33], "characterOffsetBegin": 747, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 758, "segment_span": [15, 33], "characterOffsetBegin": 751, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 21, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 763, "segment_span": [15, 33], "characterOffsetBegin": 759, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 765, "segment_span": [15, 33], "characterOffsetBegin": 764, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "PT", "lemma": "pt", "after": "", "pos": "NN", "characterOffsetEnd": 767, "segment_span": [15, 33], "characterOffsetBegin": 765, "originalText": "PT", "ArgType": null, "before": ""}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 768, "segment_span": [15, 33], "characterOffsetBegin": 767, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 775, "segment_span": [15, 33], "characterOffsetBegin": 769, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "proposed", "lemma": "propose", "after": " ", "pos": "VBN", "characterOffsetEnd": 784, "segment_span": [15, 33], "characterOffsetBegin": 776, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 27, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 787, "segment_span": [15, 33], "characterOffsetBegin": 785, "originalText": "in", "ArgType": null, "before": " "}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 789, "segment_span": [15, 33], "characterOffsetBegin": 788, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 798, "segment_span": [15, 33], "characterOffsetBegin": 789, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 799, "segment_span": [15, 33], "characterOffsetBegin": 798, "originalText": ",", "ArgType": null, "before": ""}, {"index": 31, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 804, "segment_span": [15, 33], "characterOffsetBegin": 800, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 805, "segment_span": [15, 33], "characterOffsetBegin": 804, "originalText": ")", "ArgType": null, "before": ""}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 806, "segment_span": [15, 33], "characterOffsetBegin": 805, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 812, "segment_span": [33, 44], "characterOffsetBegin": 807, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 35, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 815, "segment_span": [33, 44], "characterOffsetBegin": 813, "originalText": "is", "ArgType": null, "before": " "}, {"index": 36, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 817, "segment_span": [33, 44], "characterOffsetBegin": 816, "originalText": "a", "ArgType": null, "before": " "}, {"index": 37, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 825, "segment_span": [33, 44], "characterOffsetBegin": 818, "originalText": "general", "ArgType": null, "before": " "}, {"index": 38, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 837, "segment_span": [33, 44], "characterOffsetBegin": 826, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 39, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 842, "segment_span": [33, 44], "characterOffsetBegin": 838, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 40, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 849, "segment_span": [33, 44], "characterOffsetBegin": 843, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 41, "word": "adaptable", "lemma": "adaptable", "after": " ", "pos": "JJ", "characterOffsetEnd": 859, "segment_span": [33, 44], "characterOffsetBegin": 850, "originalText": "adaptable", "ArgType": null, "before": " "}, {"index": 42, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 863, "segment_span": [33, 44], "characterOffsetBegin": 860, "originalText": "for", "ArgType": null, "before": " "}, {"index": 43, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 874, "segment_span": [33, 44], "characterOffsetBegin": 864, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 44, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 885, "segment_span": [33, 44], "characterOffsetBegin": 875, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 45, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 886, "characterOffsetBegin": 885, "originalText": ".", "ArgType": null, "before": ""}], "text": "To fully exploit the potential of dependency trees , in addition to the SST kernel , we applied the partial tree ( PT ) kernel proposed in ( Moschitti , 2006 ) , which is a general convolution tree kernel adaptable for dependency structures ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 889, "segment_span": [0, 23], "characterOffsetBegin": 887, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 894, "segment_span": [0, 23], "characterOffsetBegin": 890, "originalText": "also", "ArgType": null, "before": " "}, {"index": 3, "word": "investigate", "characterOffsetEnd": 906, "after": " ", "pos": "VBP", "is_root": true, "lemma": "investigate", "segment_span": [0, 23], "tense": "P", "characterOffsetBegin": 895, "originalText": "investigate", "ArgType": "verb", "before": " "}, {"index": 4, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 914, "segment_span": [0, 23], "characterOffsetBegin": 907, "originalText": "various", "ArgType": null, "before": " "}, {"index": 5, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 923, "segment_span": [0, 23], "characterOffsetBegin": 915, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 6, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 931, "segment_span": [0, 23], "characterOffsetBegin": 924, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 933, "segment_span": [0, 23], "characterOffsetBegin": 932, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 937, "segment_span": [0, 23], "characterOffsetBegin": 933, "originalText": "e.g.", "ArgType": null, "before": ""}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 941, "segment_span": [0, 23], "characterOffsetBegin": 938, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 946, "segment_span": [0, 23], "characterOffsetBegin": 942, "originalText": "word", "ArgType": null, "before": " "}, {"index": 11, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 955, "segment_span": [0, 23], "characterOffsetBegin": 947, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 12, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 962, "segment_span": [0, 23], "characterOffsetBegin": 956, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 964, "segment_span": [0, 23], "characterOffsetBegin": 963, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "WSK", "lemma": "wsk", "after": "", "pos": "NN", "characterOffsetEnd": 967, "segment_span": [0, 23], "characterOffsetBegin": 964, "originalText": "WSK", "ArgType": null, "before": ""}, {"index": 15, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 968, "segment_span": [0, 23], "characterOffsetBegin": 967, "originalText": ")", "ArgType": null, "before": ""}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 970, "segment_span": [0, 23], "characterOffsetBegin": 969, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Cancedda", "lemma": "Cancedda", "after": " ", "pos": "NNP", "characterOffsetEnd": 978, "segment_span": [0, 23], "characterOffsetBegin": 970, "originalText": "Cancedda", "ArgType": null, "before": ""}, {"index": 18, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 981, "segment_span": [0, 23], "characterOffsetBegin": 979, "originalText": "et", "ArgType": null, "before": " "}, {"index": 19, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 985, "segment_span": [0, 23], "characterOffsetBegin": 982, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 986, "segment_span": [0, 23], "characterOffsetBegin": 985, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2003", "lemma": "2003", "after": "", "pos": "CD", "characterOffsetEnd": 991, "segment_span": [0, 23], "characterOffsetBegin": 987, "originalText": "2003", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 992, "segment_span": [0, 23], "characterOffsetBegin": 991, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 993, "segment_span": [0, 23], "characterOffsetBegin": 992, "originalText": ")", "ArgType": null, "before": ""}, {"index": 24, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 996, "segment_span": [23, 30], "characterOffsetBegin": 994, "originalText": "by", "ArgType": null, "before": " "}, {"index": 25, "word": "incorporating", "characterOffsetEnd": 1010, "after": " ", "pos": "VBG", "is_root": true, "lemma": "incorporate", "segment_span": [23, 30], "tense": "G", "characterOffsetBegin": 997, "originalText": "incorporating", "ArgType": null, "before": " "}, {"index": 26, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1021, "segment_span": [23, 30], "characterOffsetBegin": 1011, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 27, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 1032, "segment_span": [23, 30], "characterOffsetBegin": 1022, "originalText": "structures", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 1037, "segment_span": [23, 30], "characterOffsetBegin": 1033, "originalText": "into", "ArgType": null, "before": " "}, {"index": 29, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 1042, "segment_span": [23, 30], "characterOffsetBegin": 1038, "originalText": "word", "ArgType": null, "before": " "}, {"index": 30, "word": "sequences", "lemma": "sequence", "after": "", "pos": "NNS", "characterOffsetEnd": 1052, "segment_span": [23, 30], "characterOffsetBegin": 1043, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1053, "characterOffsetBegin": 1052, "originalText": ".", "ArgType": null, "before": ""}], "text": "We also investigate various sequence kernels ( e.g. the word sequence kernel ( WSK ) ( Cancedda et al. , 2003 ) ) by incorporating dependency structures into word sequences ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 1059, "segment_span": [0, 11], "characterOffsetBegin": 1054, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1063, "segment_span": [0, 11], "characterOffsetBegin": 1060, "originalText": "are", "ArgType": null, "before": " "}, {"index": 3, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 1068, "segment_span": [0, 11], "characterOffsetBegin": 1064, "originalText": "also", "ArgType": null, "before": " "}, {"index": 4, "word": "enriched", "characterOffsetEnd": 1077, "after": " ", "pos": "VBN", "is_root": true, "lemma": "enrich", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 1069, "before": " ", "originalText": "enriched", "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1080, "segment_span": [0, 11], "characterOffsetBegin": 1078, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "including", "lemma": "include", "after": " ", "pos": "VBG", "characterOffsetEnd": 1090, "segment_span": [0, 11], "characterOffsetBegin": 1081, "originalText": "including", "ArgType": null, "before": " "}, {"index": 7, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 1102, "segment_span": [0, 11], "characterOffsetBegin": 1091, "originalText": "information", "ArgType": null, "before": " "}, {"index": 8, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1107, "segment_span": [0, 11], "characterOffsetBegin": 1103, "originalText": "from", "ArgType": null, "before": " "}, {"index": 9, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 1119, "segment_span": [0, 11], "characterOffsetBegin": 1108, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 10, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1125, "segment_span": [0, 11], "characterOffsetBegin": 1120, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 11, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1131, "segment_span": [0, 11], "characterOffsetBegin": 1126, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1132, "characterOffsetBegin": 1131, "originalText": ".", "ArgType": null, "before": ""}], "text": "These are also enriched by including information from constituent parse trees ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1135, "segment_span": [0, 13], "characterOffsetBegin": 1133, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "conduct", "characterOffsetEnd": 1143, "after": " ", "pos": "VBP", "is_root": true, "lemma": "conduct", "segment_span": [0, 13], "tense": "P", "characterOffsetBegin": 1136, "originalText": "conduct", "ArgType": "verb", "before": " "}, {"index": 3, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 1155, "segment_span": [0, 13], "characterOffsetBegin": 1144, "originalText": "experiments", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1158, "segment_span": [0, 13], "characterOffsetBegin": 1156, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1162, "segment_span": [0, 13], "characterOffsetBegin": 1159, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "standard", "lemma": "standard", "after": " ", "pos": "JJ", "characterOffsetEnd": 1171, "segment_span": [0, 13], "characterOffsetBegin": 1163, "originalText": "standard", "ArgType": null, "before": " "}, {"index": 7, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 1175, "segment_span": [0, 13], "characterOffsetBegin": 1172, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 8, "word": "2004", "lemma": "2004", "after": " ", "pos": "CD", "characterOffsetEnd": 1180, "segment_span": [0, 13], "characterOffsetBegin": 1176, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 9, "word": "newswire", "lemma": "newswire", "after": " ", "pos": "NN", "characterOffsetEnd": 1189, "segment_span": [0, 13], "characterOffsetBegin": 1181, "originalText": "newswire", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1193, "segment_span": [0, 13], "characterOffsetBegin": 1190, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "broadcast", "lemma": "broadcast", "after": " ", "pos": "NN", "characterOffsetEnd": 1203, "segment_span": [0, 13], "characterOffsetBegin": 1194, "originalText": "broadcast", "ArgType": null, "before": " "}, {"index": 12, "word": "news", "lemma": "news", "after": " ", "pos": "NN", "characterOffsetEnd": 1208, "segment_span": [0, 13], "characterOffsetBegin": 1204, "originalText": "news", "ArgType": null, "before": " "}, {"index": 13, "word": "domain", "lemma": "domain", "after": "", "pos": "NN", "characterOffsetEnd": 1215, "segment_span": [0, 13], "characterOffsetBegin": 1209, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1216, "characterOffsetBegin": 1215, "originalText": ".", "ArgType": null, "before": ""}], "text": "We conduct experiments on the standard ACE 2004 newswire and broadcast news domain ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1220, "segment_span": [0, 3], "characterOffsetBegin": 1217, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 1228, "segment_span": [0, 3], "characterOffsetBegin": 1221, "originalText": "results", "ArgType": "subj", "before": " "}, {"index": 3, "word": "show", "characterOffsetEnd": 1233, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 1229, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 4, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1238, "segment_span": [3, 16], "characterOffsetBegin": 1234, "originalText": "that", "ArgType": null, "before": " "}, {"index": 5, "word": "although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 1247, "segment_span": [3, 16], "characterOffsetBegin": 1239, "originalText": "although", "ArgType": null, "before": " "}, {"index": 6, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 1252, "segment_span": [3, 16], "characterOffsetBegin": 1248, "originalText": "some", "ArgType": null, "before": " "}, {"index": 7, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1260, "segment_span": [3, 16], "characterOffsetBegin": 1253, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 8, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1264, "segment_span": [3, 16], "characterOffsetBegin": 1261, "originalText": "are", "ArgType": null, "before": " "}, {"index": 9, "word": "less", "lemma": "less", "after": " ", "pos": "RBR", "characterOffsetEnd": 1269, "segment_span": [3, 16], "characterOffsetBegin": 1265, "originalText": "less", "ArgType": null, "before": " "}, {"index": 10, "word": "effective", "lemma": "effective", "after": " ", "pos": "JJ", "characterOffsetEnd": 1279, "segment_span": [3, 16], "characterOffsetBegin": 1270, "originalText": "effective", "ArgType": null, "before": " "}, {"index": 11, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1284, "segment_span": [3, 16], "characterOffsetBegin": 1280, "originalText": "than", "ArgType": null, "before": " "}, {"index": 12, "word": "others", "lemma": "other", "after": "", "pos": "NNS", "characterOffsetEnd": 1291, "segment_span": [3, 16], "characterOffsetBegin": 1285, "originalText": "others", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1292, "segment_span": [3, 16], "characterOffsetBegin": 1291, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 1297, "segment_span": [3, 16], "characterOffsetBegin": 1293, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 15, "word": "exhibit", "characterOffsetEnd": 1305, "after": " ", "pos": "VBP", "is_root": true, "lemma": "exhibit", "segment_span": [3, 16], "tense": "P", "characterOffsetBegin": 1298, "originalText": "exhibit", "ArgType": null, "before": " "}, {"index": 16, "word": "properties", "lemma": "property", "after": " ", "pos": "NNS", "characterOffsetEnd": 1316, "segment_span": [3, 16], "characterOffsetBegin": 1306, "originalText": "properties", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 1321, "segment_span": [16, 22], "characterOffsetBegin": 1317, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1325, "segment_span": [16, 22], "characterOffsetBegin": 1322, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "complementary", "lemma": "complementary", "after": " ", "pos": "JJ", "characterOffsetEnd": 1339, "segment_span": [16, 22], "characterOffsetBegin": 1326, "originalText": "complementary", "ArgType": null, "before": " "}, {"index": 20, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1342, "segment_span": [16, 22], "characterOffsetBegin": 1340, "originalText": "to", "ArgType": null, "before": " "}, {"index": 21, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 1347, "segment_span": [16, 22], "characterOffsetBegin": 1343, "originalText": "each", "ArgType": null, "before": " "}, {"index": 22, "word": "other", "lemma": "other", "after": "", "pos": "JJ", "characterOffsetEnd": 1353, "segment_span": [16, 22], "characterOffsetBegin": 1348, "originalText": "other", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1354, "characterOffsetBegin": 1353, "originalText": ".", "ArgType": null, "before": ""}], "text": "The results show that although some kernels are less effective than others , they exhibit properties that are complementary to each other ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1357, "segment_span": [0, 5], "characterOffsetBegin": 1355, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "particular", "lemma": "particular", "after": "", "pos": "JJ", "characterOffsetEnd": 1368, "segment_span": [0, 5], "characterOffsetBegin": 1358, "originalText": "particular", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1369, "segment_span": [0, 5], "characterOffsetBegin": 1368, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1372, "segment_span": [0, 5], "characterOffsetBegin": 1370, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "found", "characterOffsetEnd": 1378, "after": " ", "pos": "VBD", "is_root": true, "lemma": "find", "segment_span": [0, 5], "tense": "D", "characterOffsetBegin": 1373, "originalText": "found", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1383, "segment_span": [5, 10], "characterOffsetBegin": 1379, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 1392, "segment_span": [5, 10], "characterOffsetBegin": 1384, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 8, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 1403, "segment_span": [5, 10], "characterOffsetBegin": 1393, "originalText": "extraction", "ArgType": "subj", "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1407, "segment_span": [5, 10], "characterOffsetBegin": 1404, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "benefit", "characterOffsetEnd": 1415, "after": " ", "pos": "VB", "is_root": true, "lemma": "benefit", "segment_span": [5, 10], "tense": "B", "characterOffsetBegin": 1408, "originalText": "benefit", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1420, "segment_span": [10, 15], "characterOffsetBegin": 1416, "originalText": "from", "ArgType": null, "before": " "}, {"index": 12, "word": "increasing", "characterOffsetEnd": 1431, "after": " ", "pos": "VBG", "is_root": true, "lemma": "increase", "segment_span": [10, 15], "tense": "G", "characterOffsetBegin": 1421, "originalText": "increasing", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1435, "segment_span": [10, 15], "characterOffsetBegin": 1432, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 1443, "segment_span": [10, 15], "characterOffsetBegin": 1436, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 15, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 1449, "segment_span": [10, 15], "characterOffsetBegin": 1444, "originalText": "space", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1452, "segment_span": [15, 30], "characterOffsetBegin": 1450, "originalText": "by", "ArgType": null, "before": " "}, {"index": 17, "word": "combining", "characterOffsetEnd": 1462, "after": " ", "pos": "VBG", "is_root": true, "lemma": "combine", "segment_span": [15, 30], "tense": "G", "characterOffsetBegin": 1453, "originalText": "combining", "ArgType": null, "before": " "}, {"index": 18, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1470, "segment_span": [15, 30], "characterOffsetBegin": 1463, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1472, "segment_span": [15, 30], "characterOffsetBegin": 1471, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1476, "segment_span": [15, 30], "characterOffsetBegin": 1472, "originalText": "with", "ArgType": null, "before": ""}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1478, "segment_span": [15, 30], "characterOffsetBegin": 1477, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 1485, "segment_span": [15, 30], "characterOffsetBegin": 1479, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 23, "word": "summation", "lemma": "summation", "after": "", "pos": "NN", "characterOffsetEnd": 1495, "segment_span": [15, 30], "characterOffsetBegin": 1486, "originalText": "summation", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1496, "segment_span": [15, 30], "characterOffsetBegin": 1495, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "exploiting", "lemma": "exploit", "after": " ", "pos": "VBG", "characterOffsetEnd": 1507, "segment_span": [15, 30], "characterOffsetBegin": 1497, "originalText": "exploiting", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1511, "segment_span": [15, 30], "characterOffsetBegin": 1508, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1515, "segment_span": [15, 30], "characterOffsetBegin": 1512, "originalText": "two", "ArgType": null, "before": " "}, {"index": 28, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 1525, "segment_span": [15, 30], "characterOffsetBegin": 1516, "originalText": "different", "ArgType": null, "before": " "}, {"index": 29, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 1533, "segment_span": [15, 30], "characterOffsetBegin": 1526, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 30, "word": "paradigms", "lemma": "paradigm", "after": "", "pos": "NNS", "characterOffsetEnd": 1543, "segment_span": [15, 30], "characterOffsetBegin": 1534, "originalText": "paradigms", "ArgType": "dobj", "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1544, "characterOffsetBegin": 1543, "originalText": ".", "ArgType": null, "before": ""}], "text": "In particular , we found that relation extraction can benefit from increasing the feature space by combining kernels ( with a simple summation ) exploiting the two different parsing paradigms ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 1548, "segment_span": [0, 5], "characterOffsetBegin": 1545, "originalText": "Our", "ArgType": null, "before": " "}, {"index": 2, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 1560, "segment_span": [0, 5], "characterOffsetBegin": 1549, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 3, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1563, "segment_span": [0, 5], "characterOffsetBegin": 1561, "originalText": "on", "ArgType": null, "before": " "}, {"index": 4, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 1566, "segment_span": [0, 5], "characterOffsetBegin": 1564, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 5, "word": "show", "characterOffsetEnd": 1571, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [0, 5], "tense": "P", "characterOffsetBegin": 1567, "originalText": "show", "ArgType": "verb", "before": " "}, {"index": 6, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1576, "segment_span": [5, 46], "characterOffsetBegin": 1572, "originalText": "that", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1580, "segment_span": [5, 46], "characterOffsetBegin": 1577, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 1588, "segment_span": [5, 46], "characterOffsetBegin": 1581, "originalText": "current", "ArgType": null, "before": " "}, {"index": 9, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 1598, "segment_span": [5, 46], "characterOffsetBegin": 1589, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 10, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 1605, "segment_span": [5, 46], "characterOffsetBegin": 1599, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1606, "segment_span": [5, 46], "characterOffsetBegin": 1605, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1612, "segment_span": [5, 46], "characterOffsetBegin": 1607, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1615, "segment_span": [5, 46], "characterOffsetBegin": 1613, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "constituent-based", "lemma": "constituent-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1633, "segment_span": [5, 46], "characterOffsetBegin": 1616, "originalText": "constituent-based", "ArgType": null, "before": " "}, {"index": 15, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1636, "segment_span": [5, 46], "characterOffsetBegin": 1634, "originalText": "is", "ArgType": null, "before": " "}, {"index": 16, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1641, "segment_span": [5, 46], "characterOffsetBegin": 1637, "originalText": "more", "ArgType": null, "before": " "}, {"index": 17, "word": "effective", "lemma": "effective", "after": " ", "pos": "JJ", "characterOffsetEnd": 1651, "segment_span": [5, 46], "characterOffsetBegin": 1642, "originalText": "effective", "ArgType": null, "before": " "}, {"index": 18, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1656, "segment_span": [5, 46], "characterOffsetBegin": 1652, "originalText": "than", "ArgType": null, "before": " "}, {"index": 19, "word": "those", "lemma": "those", "after": " ", "pos": "DT", "characterOffsetEnd": 1662, "segment_span": [5, 46], "characterOffsetBegin": 1657, "originalText": "those", "ArgType": null, "before": " "}, {"index": 20, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 1668, "segment_span": [5, 46], "characterOffsetBegin": 1663, "originalText": "based", "ArgType": null, "before": " "}, {"index": 21, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1671, "segment_span": [5, 46], "characterOffsetBegin": 1669, "originalText": "on", "ArgType": null, "before": " "}, {"index": 22, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1682, "segment_span": [5, 46], "characterOffsetBegin": 1672, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 23, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1688, "segment_span": [5, 46], "characterOffsetBegin": 1683, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1692, "segment_span": [5, 46], "characterOffsetBegin": 1689, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "individual", "lemma": "individual", "after": " ", "pos": "JJ", "characterOffsetEnd": 1703, "segment_span": [5, 46], "characterOffsetBegin": 1693, "originalText": "individual", "ArgType": null, "before": " "}, {"index": 26, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 1712, "segment_span": [5, 46], "characterOffsetBegin": 1704, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 27, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1719, "segment_span": [5, 46], "characterOffsetBegin": 1713, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 28, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 1723, "segment_span": [5, 46], "characterOffsetBegin": 1720, "originalText": "but", "ArgType": null, "before": " "}, {"index": 29, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 1726, "segment_span": [5, 46], "characterOffsetBegin": 1724, "originalText": "at", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1730, "segment_span": [5, 46], "characterOffsetBegin": 1727, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 1735, "segment_span": [5, 46], "characterOffsetBegin": 1731, "originalText": "same", "ArgType": null, "before": " "}, {"index": 32, "word": "time", "lemma": "time", "after": " ", "pos": "NN", "characterOffsetEnd": 1740, "segment_span": [5, 46], "characterOffsetBegin": 1736, "originalText": "time", "ArgType": null, "before": " "}, {"index": 33, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 1746, "segment_span": [5, 46], "characterOffsetBegin": 1741, "originalText": "their", "ArgType": null, "before": " "}, {"index": 34, "word": "combinations", "lemma": "combination", "after": "", "pos": "NNS", "characterOffsetEnd": 1759, "segment_span": [5, 46], "characterOffsetBegin": 1747, "originalText": "combinations", "ArgType": "subj", "before": " "}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1760, "segment_span": [5, 46], "characterOffsetBegin": 1759, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 1765, "segment_span": [5, 46], "characterOffsetBegin": 1761, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 37, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1776, "segment_span": [5, 46], "characterOffsetBegin": 1766, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 38, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 1781, "segment_span": [5, 46], "characterOffsetBegin": 1777, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 39, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 1793, "segment_span": [5, 46], "characterOffsetBegin": 1782, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 40, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1799, "segment_span": [5, 46], "characterOffsetBegin": 1794, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 41, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1800, "segment_span": [5, 46], "characterOffsetBegin": 1799, "originalText": ",", "ArgType": null, "before": ""}, {"index": 42, "word": "improve", "lemma": "improve", "after": " ", "pos": "VB", "characterOffsetEnd": 1808, "segment_span": [5, 46], "characterOffsetBegin": 1801, "originalText": "improve", "ArgType": null, "before": " "}, {"index": 43, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1812, "segment_span": [5, 46], "characterOffsetBegin": 1809, "originalText": "the", "ArgType": null, "before": " "}, {"index": 44, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 1829, "segment_span": [5, 46], "characterOffsetBegin": 1813, "originalText": "state-of-the-art", "ArgType": null, "before": " "}, {"index": 45, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1832, "segment_span": [5, 46], "characterOffsetBegin": 1830, "originalText": "in", "ArgType": null, "before": " "}, {"index": 46, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 1835, "segment_span": [5, 46], "characterOffsetBegin": 1833, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 47, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1836, "characterOffsetBegin": 1835, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our experiments on RE show that the current composite kernel , which is constituent-based is more effective than those based on dependency trees and individual sequence kernel but at the same time their combinations , i.e. dependency plus constituent trees , improve the state-of-the-art in RE ."}, {"tokens": [{"index": 1, "word": "More", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1841, "segment_span": [0, 25], "characterOffsetBegin": 1837, "originalText": "More", "ArgType": null, "before": " "}, {"index": 2, "word": "interestingly", "lemma": "interestingly", "after": "", "pos": "RB", "characterOffsetEnd": 1855, "segment_span": [0, 25], "characterOffsetBegin": 1842, "originalText": "interestingly", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1856, "segment_span": [0, 25], "characterOffsetBegin": 1855, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 1861, "segment_span": [0, 25], "characterOffsetBegin": 1857, "originalText": "also", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1865, "segment_span": [0, 25], "characterOffsetBegin": 1862, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 1878, "segment_span": [0, 25], "characterOffsetBegin": 1866, "originalText": "combinations", "ArgType": "subj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1881, "segment_span": [0, 25], "characterOffsetBegin": 1879, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 1889, "segment_span": [0, 25], "characterOffsetBegin": 1882, "originalText": "various", "ArgType": null, "before": " "}, {"index": 9, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 1898, "segment_span": [0, 25], "characterOffsetBegin": 1890, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 10, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1906, "segment_span": [0, 25], "characterOffsetBegin": 1899, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 11, "word": "gain", "characterOffsetEnd": 1911, "after": " ", "pos": "VB", "is_root": true, "lemma": "gain", "segment_span": [0, 25], "tense": "B", "characterOffsetBegin": 1907, "originalText": "gain", "ArgType": "verb", "before": " "}, {"index": 12, "word": "significant", "lemma": "significant", "after": " ", "pos": "JJ", "characterOffsetEnd": 1923, "segment_span": [0, 25], "characterOffsetBegin": 1912, "originalText": "significant", "ArgType": null, "before": " "}, {"index": 13, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 1930, "segment_span": [0, 25], "characterOffsetBegin": 1924, "originalText": "better", "ArgType": null, "before": " "}, {"index": 14, "word": "performance", "lemma": "performance", "after": " ", "pos": "NN", "characterOffsetEnd": 1942, "segment_span": [0, 25], "characterOffsetBegin": 1931, "originalText": "performance", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1947, "segment_span": [0, 25], "characterOffsetBegin": 1943, "originalText": "than", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1951, "segment_span": [0, 25], "characterOffsetBegin": 1948, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "current", "lemma": "current", "after": " ", "pos": "JJ", "characterOffsetEnd": 1959, "segment_span": [0, 25], "characterOffsetBegin": 1952, "originalText": "current", "ArgType": null, "before": " "}, {"index": 18, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 1976, "segment_span": [0, 25], "characterOffsetBegin": 1960, "originalText": "state-of-the-art", "ArgType": null, "before": " "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1978, "segment_span": [0, 25], "characterOffsetBegin": 1977, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 1983, "segment_span": [0, 25], "characterOffsetBegin": 1978, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 21, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1986, "segment_span": [0, 25], "characterOffsetBegin": 1984, "originalText": "et", "ArgType": null, "before": " "}, {"index": 22, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1990, "segment_span": [0, 25], "characterOffsetBegin": 1987, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1991, "segment_span": [0, 25], "characterOffsetBegin": 1990, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 1996, "segment_span": [0, 25], "characterOffsetBegin": 1992, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1997, "segment_span": [0, 25], "characterOffsetBegin": 1996, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1998, "characterOffsetBegin": 1997, "originalText": ".", "ArgType": null, "before": ""}], "text": "More interestingly , also the combinations of various sequence kernels gain significant better performance than the current state-of-the-art ( Zhang et al. , 2005 ) ."}, {"tokens": [{"index": 1, "word": "Overall", "lemma": "overall", "after": "", "pos": "RB", "characterOffsetEnd": 2006, "segment_span": [0, 11], "characterOffsetBegin": 1999, "originalText": "Overall", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2007, "segment_span": [0, 11], "characterOffsetBegin": 2006, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 2013, "segment_span": [0, 11], "characterOffsetBegin": 2008, "originalText": "these", "ArgType": null, "before": " "}, {"index": 4, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 2021, "segment_span": [0, 11], "characterOffsetBegin": 2014, "originalText": "results", "ArgType": "subj", "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 2025, "segment_span": [0, 11], "characterOffsetBegin": 2022, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "interesting", "lemma": "interesting", "after": " ", "pos": "JJ", "characterOffsetEnd": 2037, "segment_span": [0, 11], "characterOffsetBegin": 2026, "originalText": "interesting", "ArgType": "verb", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 2041, "segment_span": [0, 11], "characterOffsetBegin": 2038, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2045, "segment_span": [0, 11], "characterOffsetBegin": 2042, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "computational", "lemma": "computational", "after": " ", "pos": "JJ", "characterOffsetEnd": 2059, "segment_span": [0, 11], "characterOffsetBegin": 2046, "originalText": "computational", "ArgType": null, "before": " "}, {"index": 10, "word": "linguistics", "lemma": "linguistics", "after": " ", "pos": "NNS", "characterOffsetEnd": 2071, "segment_span": [0, 11], "characterOffsetBegin": 2060, "originalText": "linguistics", "ArgType": null, "before": " "}, {"index": 11, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 2080, "segment_span": [0, 11], "characterOffsetBegin": 2072, "originalText": "research", "ArgType": null, "before": " "}, {"index": 12, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 2086, "segment_span": [11, 14], "characterOffsetBegin": 2081, "originalText": "since", "ArgType": null, "before": " "}, {"index": 13, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 2091, "segment_span": [11, 14], "characterOffsetBegin": 2087, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 14, "word": "show", "characterOffsetEnd": 2096, "after": " ", "pos": "VBP", "is_root": true, "lemma": "show", "segment_span": [11, 14], "tense": "P", "characterOffsetBegin": 2092, "originalText": "show", "ArgType": null, "before": " "}, {"index": 15, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 2101, "segment_span": [14, 32], "characterOffsetBegin": 2097, "originalText": "that", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2105, "segment_span": [14, 32], "characterOffsetBegin": 2102, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 2111, "segment_span": [14, 32], "characterOffsetBegin": 2106, "originalText": "above", "ArgType": null, "before": " "}, {"index": 18, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 2115, "segment_span": [14, 32], "characterOffsetBegin": 2112, "originalText": "two", "ArgType": null, "before": " "}, {"index": 19, "word": "parsing", "lemma": "parse", "after": " ", "pos": "VBG", "characterOffsetEnd": 2123, "segment_span": [14, 32], "characterOffsetBegin": 2116, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 20, "word": "paradigms", "lemma": "paradigm", "after": " ", "pos": "NNS", "characterOffsetEnd": 2133, "segment_span": [14, 32], "characterOffsetBegin": 2124, "originalText": "paradigms", "ArgType": "subj", "before": " "}, {"index": 21, "word": "provide", "characterOffsetEnd": 2141, "after": " ", "pos": "VBP", "is_root": true, "lemma": "provide", "segment_span": [14, 32], "tense": "P", "characterOffsetBegin": 2134, "originalText": "provide", "ArgType": null, "before": " "}, {"index": 22, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 2151, "segment_span": [14, 32], "characterOffsetBegin": 2142, "originalText": "different", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2155, "segment_span": [14, 32], "characterOffsetBegin": 2152, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "important", "lemma": "important", "after": " ", "pos": "JJ", "characterOffsetEnd": 2165, "segment_span": [14, 32], "characterOffsetBegin": 2156, "originalText": "important", "ArgType": null, "before": " "}, {"index": 25, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 2177, "segment_span": [14, 32], "characterOffsetBegin": 2166, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 26, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 2181, "segment_span": [14, 32], "characterOffsetBegin": 2178, "originalText": "for", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2183, "segment_span": [14, 32], "characterOffsetBegin": 2182, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 2192, "segment_span": [14, 32], "characterOffsetBegin": 2184, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 29, "word": "task", "lemma": "task", "after": " ", "pos": "NN", "characterOffsetEnd": 2197, "segment_span": [14, 32], "characterOffsetBegin": 2193, "originalText": "task", "ArgType": null, "before": " "}, {"index": 30, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 2202, "segment_span": [14, 32], "characterOffsetBegin": 2198, "originalText": "such", "ArgType": null, "before": " "}, {"index": 31, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 2205, "segment_span": [14, 32], "characterOffsetBegin": 2203, "originalText": "as", "ArgType": null, "before": " "}, {"index": 32, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 2208, "segment_span": [14, 32], "characterOffsetBegin": 2206, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2209, "characterOffsetBegin": 2208, "originalText": ".", "ArgType": null, "before": ""}], "text": "Overall , these results are interesting for the computational linguistics research since they show that the above two parsing paradigms provide different and important information for a semantic task such as RE ."}, {"tokens": [{"index": 1, "word": "Regarding", "lemma": "regard", "after": " ", "pos": "VBG", "characterOffsetEnd": 2219, "segment_span": [0, 17], "characterOffsetBegin": 2210, "originalText": "Regarding", "ArgType": null, "before": " "}, {"index": 2, "word": "sequence-based", "lemma": "sequence-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 2234, "segment_span": [0, 17], "characterOffsetBegin": 2220, "originalText": "sequence-based", "ArgType": null, "before": " "}, {"index": 3, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 2242, "segment_span": [0, 17], "characterOffsetBegin": 2235, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2243, "segment_span": [0, 17], "characterOffsetBegin": 2242, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2247, "segment_span": [0, 17], "characterOffsetBegin": 2244, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "WSK", "lemma": "WSK", "after": " ", "pos": "NNP", "characterOffsetEnd": 2251, "segment_span": [0, 17], "characterOffsetBegin": 2248, "originalText": "WSK", "ArgType": null, "before": " "}, {"index": 7, "word": "gains", "lemma": "gain", "after": " ", "pos": "NNS", "characterOffsetEnd": 2257, "segment_span": [0, 17], "characterOffsetBegin": 2252, "originalText": "gains", "ArgType": null, "before": " "}, {"index": 8, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 2264, "segment_span": [0, 17], "characterOffsetBegin": 2258, "originalText": "better", "ArgType": null, "before": " "}, {"index": 9, "word": "performance", "lemma": "performance", "after": " ", "pos": "NN", "characterOffsetEnd": 2276, "segment_span": [0, 17], "characterOffsetBegin": 2265, "originalText": "performance", "ArgType": null, "before": " "}, {"index": 10, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 2281, "segment_span": [0, 17], "characterOffsetBegin": 2277, "originalText": "than", "ArgType": null, "before": " "}, {"index": 11, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 2290, "segment_span": [0, 17], "characterOffsetBegin": 2282, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 12, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 2299, "segment_span": [0, 17], "characterOffsetBegin": 2291, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2303, "segment_span": [0, 17], "characterOffsetBegin": 2300, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 2314, "segment_span": [0, 17], "characterOffsetBegin": 2304, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 15, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 2321, "segment_span": [0, 17], "characterOffsetBegin": 2315, "originalText": "models", "ArgType": null, "before": " "}, {"index": 16, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 2325, "segment_span": [0, 17], "characterOffsetBegin": 2322, "originalText": "for", "ArgType": null, "before": " "}, {"index": 17, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 2328, "segment_span": [0, 17], "characterOffsetBegin": 2326, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 2329, "characterOffsetBegin": 2328, "originalText": ".", "ArgType": null, "before": ""}], "text": "Regarding sequence-based kernels , the WSK gains better performance than previous sequence and dependency models for RE ."}, {"tokens": [{"index": 1, "word": "1The", "lemma": "1the", "after": " ", "pos": "NN", "characterOffsetEnd": 4, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "1The", "ArgType": null, "before": ""}, {"index": 2, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 23], "characterOffsetBegin": 5, "originalText": "function", "ArgType": null, "before": " "}, {"index": 3, "word": "defined", "lemma": "define", "after": " ", "pos": "VBN", "characterOffsetEnd": 21, "segment_span": [0, 23], "characterOffsetBegin": 14, "originalText": "defined", "ArgType": null, "before": " "}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 23], "characterOffsetBegin": 22, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 26, "segment_span": [0, 23], "characterOffsetBegin": 25, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 33, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "Culotta", "ArgType": null, "before": ""}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 37, "segment_span": [0, 23], "characterOffsetBegin": 34, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 46, "segment_span": [0, 23], "characterOffsetBegin": 38, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 47, "segment_span": [0, 23], "characterOffsetBegin": 46, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 52, "segment_span": [0, 23], "characterOffsetBegin": 48, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 11, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 53, "segment_span": [0, 23], "characterOffsetBegin": 52, "originalText": ")", "ArgType": null, "before": ""}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [0, 23], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 63, "segment_span": [0, 23], "characterOffsetBegin": 55, "originalText": "although", "ArgType": null, "before": " "}, {"index": 14, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 23], "characterOffsetBegin": 64, "originalText": "on", "ArgType": null, "before": " "}, {"index": 15, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 77, "segment_span": [0, 23], "characterOffsetBegin": 67, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 16, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [0, 23], "characterOffsetBegin": 78, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 84, "segment_span": [0, 23], "characterOffsetBegin": 83, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 87, "segment_span": [0, 23], "characterOffsetBegin": 85, "originalText": "is", "ArgType": null, "before": " "}, {"index": 19, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 91, "segment_span": [0, 23], "characterOffsetBegin": 88, "originalText": "not", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 93, "segment_span": [0, 23], "characterOffsetBegin": 92, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 105, "segment_span": [0, 23], "characterOffsetBegin": 94, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 22, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 23], "characterOffsetBegin": 106, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 23, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [0, 23], "characterOffsetBegin": 111, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 118, "characterOffsetBegin": 117, "originalText": ".", "ArgType": null, "before": ""}], "text": "1The function defined on ( Culotta and Sorensen , 2004 ) , although on dependency trees , is not a convolution tree kernel ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 12], "characterOffsetBegin": 0, "originalText": "A", "ArgType": null, "before": ""}, {"index": 2, "word": "review", "lemma": "review", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 12], "characterOffsetBegin": 2, "originalText": "review", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 11, "segment_span": [0, 12], "characterOffsetBegin": 9, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 20, "segment_span": [0, 12], "characterOffsetBegin": 12, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 5, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 12], "characterOffsetBegin": 21, "originalText": "work", "ArgType": null, "before": " "}, {"index": 6, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 28, "segment_span": [0, 12], "characterOffsetBegin": 26, "originalText": "on", "ArgType": null, "before": " "}, {"index": 7, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 12], "characterOffsetBegin": 29, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 34, "segment_span": [0, 12], "characterOffsetBegin": 32, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "described", "characterOffsetEnd": 44, "after": " ", "pos": "VBN", "is_root": true, "lemma": "describe", "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 35, "before": " ", "originalText": "described", "ArgType": null, "is_pass": true}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 12], "characterOffsetBegin": 45, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 55, "segment_span": [0, 12], "characterOffsetBegin": 48, "originalText": "Section", "ArgType": null, "before": " "}, {"index": 12, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 57, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": "2", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 58, "characterOffsetBegin": 57, "originalText": ".", "ArgType": null, "before": ""}], "text": "A review of previous work on RE is described in Section 2 ."}, {"tokens": [{"index": 1, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 66, "segment_span": [0, 20], "characterOffsetBegin": 59, "originalText": "Section", "ArgType": "subj", "before": " "}, {"index": 2, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 68, "segment_span": [0, 20], "characterOffsetBegin": 67, "originalText": "3", "ArgType": null, "before": " "}, {"index": 3, "word": "introduces", "characterOffsetEnd": 79, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "introduce", "segment_span": [0, 20], "tense": "Z", "characterOffsetBegin": 69, "originalText": "introduces", "ArgType": "verb", "before": " "}, {"index": 4, "word": "support", "lemma": "support", "after": " ", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 20], "characterOffsetBegin": 80, "originalText": "support", "ArgType": null, "before": " "}, {"index": 5, "word": "vector", "lemma": "vector", "after": " ", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [0, 20], "characterOffsetBegin": 88, "originalText": "vector", "ArgType": null, "before": " "}, {"index": 6, "word": "machines", "lemma": "machine", "after": " ", "pos": "NNS", "characterOffsetEnd": 103, "segment_span": [0, 20], "characterOffsetBegin": 95, "originalText": "machines", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 107, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [0, 20], "characterOffsetBegin": 108, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 9, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 122, "segment_span": [0, 20], "characterOffsetBegin": 115, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 10, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 130, "segment_span": [9, 17], "characterOffsetBegin": 123, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 11, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 134, "segment_span": [9, 17], "characterOffsetBegin": 131, "originalText": "our", "ArgType": null, "before": " "}, {"index": 12, "word": "specific", "lemma": "specific", "after": " ", "pos": "JJ", "characterOffsetEnd": 143, "segment_span": [9, 17], "characterOffsetBegin": 135, "originalText": "specific", "ArgType": null, "before": " "}, {"index": 13, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 151, "segment_span": [9, 17], "characterOffsetBegin": 144, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 14, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 155, "segment_span": [9, 17], "characterOffsetBegin": 152, "originalText": "for", "ArgType": null, "before": " "}, {"index": 15, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [9, 17], "characterOffsetBegin": 156, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 16, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 162, "segment_span": [9, 17], "characterOffsetBegin": 159, "originalText": "are", "ArgType": null, "before": " "}, {"index": 17, "word": "described", "characterOffsetEnd": 172, "after": " ", "pos": "VBN", "is_root": true, "lemma": "describe", "segment_span": [9, 17], "tense": "N", "characterOffsetBegin": 163, "before": " ", "originalText": "described", "ArgType": null, "is_pass": true}, {"index": 18, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 175, "segment_span": [0, 20], "characterOffsetBegin": 173, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 19, "word": "Section", "lemma": "Section", "after": " ", "pos": "NNP", "characterOffsetEnd": 183, "segment_span": [0, 20], "characterOffsetBegin": 176, "originalText": "Section", "ArgType": "subj", "before": " "}, {"index": 20, "word": "4", "lemma": "4", "after": "", "pos": "CD", "characterOffsetEnd": 185, "segment_span": [0, 20], "characterOffsetBegin": 184, "originalText": "4", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 186, "characterOffsetBegin": 185, "originalText": ".", "ArgType": null, "before": ""}], "text": "Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4 ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 190, "segment_span": [0, 13], "characterOffsetBegin": 187, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 202, "segment_span": [0, 13], "characterOffsetBegin": 191, "originalText": "experiments", "ArgType": null, "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 206, "segment_span": [0, 13], "characterOffsetBegin": 203, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "conclusions", "lemma": "conclusion", "after": " ", "pos": "NNS", "characterOffsetEnd": 218, "segment_span": [0, 13], "characterOffsetBegin": 207, "originalText": "conclusions", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 222, "segment_span": [0, 13], "characterOffsetBegin": 219, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "presented", "characterOffsetEnd": 232, "after": " ", "pos": "VBN", "is_root": true, "lemma": "present", "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 223, "before": " ", "originalText": "presented", "ArgType": null, "is_pass": true}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [0, 13], "characterOffsetBegin": 233, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "sections", "lemma": "section", "after": " ", "pos": "NNS", "characterOffsetEnd": 244, "segment_span": [0, 13], "characterOffsetBegin": 236, "originalText": "sections", "ArgType": null, "before": " "}, {"index": 9, "word": "5", "lemma": "5", "after": " ", "pos": "CD", "characterOffsetEnd": 246, "segment_span": [0, 13], "characterOffsetBegin": 245, "originalText": "5", "ArgType": null, "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 250, "segment_span": [0, 13], "characterOffsetBegin": 247, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "6", "lemma": "6", "after": "", "pos": "CD", "characterOffsetEnd": 252, "segment_span": [0, 13], "characterOffsetBegin": 251, "originalText": "6", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 253, "segment_span": [0, 13], "characterOffsetBegin": 252, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 266, "segment_span": [0, 13], "characterOffsetBegin": 254, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 267, "characterOffsetBegin": 266, "originalText": ".", "ArgType": null, "before": ""}], "text": "The experiments and conclusions are presented in sections 5 and 6 , respectively ."}]}], "title": "1 Introduction"}, {"num": 3, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2, "segment_span": [0, 7], "characterOffsetBegin": 0, "originalText": "To", "ArgType": null, "before": ""}, {"index": 2, "word": "identify", "characterOffsetEnd": 11, "after": " ", "pos": "VB", "is_root": true, "lemma": "identify", "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 3, "originalText": "identify", "ArgType": null, "before": " "}, {"index": 3, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 20, "segment_span": [0, 7], "characterOffsetBegin": 12, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 4, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 30, "segment_span": [0, 7], "characterOffsetBegin": 21, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 36, "segment_span": [0, 7], "characterOffsetBegin": 31, "originalText": "using", "ArgType": null, "before": " "}, {"index": 6, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 7], "characterOffsetBegin": 37, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 7, "word": "learning", "lemma": "learning", "after": "", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 7], "characterOffsetBegin": 45, "originalText": "learning", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 54, "segment_span": [7, 74], "characterOffsetBegin": 53, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 60, "segment_span": [7, 74], "characterOffsetBegin": 55, "originalText": "three", "ArgType": null, "before": " "}, {"index": 10, "word": "learning", "lemma": "learn", "after": " ", "pos": "VBG", "characterOffsetEnd": 69, "segment_span": [7, 74], "characterOffsetBegin": 61, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 11, "word": "settings", "lemma": "setting", "after": " ", "pos": "NNS", "characterOffsetEnd": 78, "segment_span": [7, 74], "characterOffsetBegin": 70, "originalText": "settings", "ArgType": null, "before": " "}, {"index": 12, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 83, "segment_span": [7, 74], "characterOffsetBegin": 79, "originalText": "have", "ArgType": null, "before": " "}, {"index": 13, "word": "mainly", "lemma": "mainly", "after": " ", "pos": "RB", "characterOffsetEnd": 90, "segment_span": [7, 74], "characterOffsetBegin": 84, "originalText": "mainly", "ArgType": null, "before": " "}, {"index": 14, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 95, "segment_span": [7, 74], "characterOffsetBegin": 91, "originalText": "been", "ArgType": null, "before": " "}, {"index": 15, "word": "applied", "characterOffsetEnd": 103, "after": "", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [7, 74], "tense": "N", "characterOffsetBegin": 96, "before": " ", "originalText": "applied", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 104, "segment_span": [7, 74], "characterOffsetBegin": 103, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "namely", "lemma": "namely", "after": " ", "pos": "RB", "characterOffsetEnd": 111, "segment_span": [7, 74], "characterOffsetBegin": 105, "originalText": "namely", "ArgType": null, "before": " "}, {"index": 18, "word": "supervised", "lemma": "supervised", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [7, 74], "characterOffsetBegin": 112, "originalText": "supervised", "ArgType": null, "before": " "}, {"index": 19, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 130, "segment_span": [7, 74], "characterOffsetBegin": 123, "originalText": "methods", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 132, "segment_span": [7, 74], "characterOffsetBegin": 131, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "Miller", "lemma": "Miller", "after": " ", "pos": "NNP", "characterOffsetEnd": 138, "segment_span": [7, 74], "characterOffsetBegin": 132, "originalText": "Miller", "ArgType": null, "before": ""}, {"index": 22, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 141, "segment_span": [7, 74], "characterOffsetBegin": 139, "originalText": "et", "ArgType": null, "before": " "}, {"index": 23, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 145, "segment_span": [7, 74], "characterOffsetBegin": 142, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 146, "segment_span": [7, 74], "characterOffsetBegin": 145, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2000", "lemma": "2000", "after": "", "pos": "CD", "characterOffsetEnd": 151, "segment_span": [7, 74], "characterOffsetBegin": 147, "originalText": "2000", "ArgType": null, "before": " "}, {"index": 26, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 152, "segment_span": [7, 74], "characterOffsetBegin": 151, "originalText": ";", "ArgType": null, "before": ""}, {"index": 27, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 160, "segment_span": [7, 74], "characterOffsetBegin": 153, "originalText": "Zelenko", "ArgType": null, "before": " "}, {"index": 28, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 163, "segment_span": [7, 74], "characterOffsetBegin": 161, "originalText": "et", "ArgType": null, "before": " "}, {"index": 29, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 167, "segment_span": [7, 74], "characterOffsetBegin": 164, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 168, "segment_span": [7, 74], "characterOffsetBegin": 167, "originalText": ",", "ArgType": null, "before": ""}, {"index": 31, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 173, "segment_span": [7, 74], "characterOffsetBegin": 169, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 32, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 174, "segment_span": [7, 74], "characterOffsetBegin": 173, "originalText": ";", "ArgType": null, "before": ""}, {"index": 33, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 182, "segment_span": [7, 74], "characterOffsetBegin": 175, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 34, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 186, "segment_span": [7, 74], "characterOffsetBegin": 183, "originalText": "and", "ArgType": null, "before": " "}, {"index": 35, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 195, "segment_span": [7, 74], "characterOffsetBegin": 187, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 36, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 196, "segment_span": [7, 74], "characterOffsetBegin": 195, "originalText": ",", "ArgType": null, "before": ""}, {"index": 37, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 201, "segment_span": [7, 74], "characterOffsetBegin": 197, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 38, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 202, "segment_span": [7, 74], "characterOffsetBegin": 201, "originalText": ";", "ArgType": null, "before": ""}, {"index": 39, "word": "Kambhatla", "lemma": "Kambhatla", "after": "", "pos": "NNP", "characterOffsetEnd": 212, "segment_span": [7, 74], "characterOffsetBegin": 203, "originalText": "Kambhatla", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 213, "segment_span": [7, 74], "characterOffsetBegin": 212, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 218, "segment_span": [7, 74], "characterOffsetBegin": 214, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 42, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 219, "segment_span": [7, 74], "characterOffsetBegin": 218, "originalText": ";", "ArgType": null, "before": ""}, {"index": 43, "word": "Zhou", "lemma": "Zhou", "after": " ", "pos": "NNP", "characterOffsetEnd": 224, "segment_span": [7, 74], "characterOffsetBegin": 220, "originalText": "Zhou", "ArgType": null, "before": " "}, {"index": 44, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 227, "segment_span": [7, 74], "characterOffsetBegin": 225, "originalText": "et", "ArgType": null, "before": " "}, {"index": 45, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 231, "segment_span": [7, 74], "characterOffsetBegin": 228, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 46, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 232, "segment_span": [7, 74], "characterOffsetBegin": 231, "originalText": ",", "ArgType": null, "before": ""}, {"index": 47, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 237, "segment_span": [7, 74], "characterOffsetBegin": 233, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 48, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 238, "segment_span": [7, 74], "characterOffsetBegin": 237, "originalText": ")", "ArgType": null, "before": ""}, {"index": 49, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 239, "segment_span": [7, 74], "characterOffsetBegin": 238, "originalText": ",", "ArgType": null, "before": ""}, {"index": 50, "word": "semi", "lemma": "semi", "after": " ", "pos": "NN", "characterOffsetEnd": 244, "segment_span": [49, 63], "characterOffsetBegin": 240, "originalText": "semi", "ArgType": "subj", "before": " "}, {"index": 51, "word": "supervised", "characterOffsetEnd": 255, "after": " ", "pos": "VBD", "is_root": true, "lemma": "supervise", "segment_span": [49, 63], "tense": "D", "characterOffsetBegin": 245, "originalText": "supervised", "ArgType": null, "before": " "}, {"index": 52, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 263, "segment_span": [49, 63], "characterOffsetBegin": 256, "originalText": "methods", "ArgType": "dobj", "before": " "}, {"index": 53, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 265, "segment_span": [49, 63], "characterOffsetBegin": 264, "originalText": "(", "ArgType": null, "before": " "}, {"index": 54, "word": "Brin", "lemma": "Brin", "after": "", "pos": "NNP", "characterOffsetEnd": 269, "segment_span": [49, 63], "characterOffsetBegin": 265, "originalText": "Brin", "ArgType": null, "before": ""}, {"index": 55, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 270, "segment_span": [49, 63], "characterOffsetBegin": 269, "originalText": ",", "ArgType": null, "before": ""}, {"index": 56, "word": "1998", "lemma": "1998", "after": "", "pos": "CD", "characterOffsetEnd": 275, "segment_span": [49, 63], "characterOffsetBegin": 271, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 57, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 276, "segment_span": [49, 63], "characterOffsetBegin": 275, "originalText": ";", "ArgType": null, "before": ""}, {"index": 58, "word": "Agichtein", "lemma": "Agichtein", "after": " ", "pos": "NNP", "characterOffsetEnd": 286, "segment_span": [49, 63], "characterOffsetBegin": 277, "originalText": "Agichtein", "ArgType": null, "before": " "}, {"index": 59, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 290, "segment_span": [49, 63], "characterOffsetBegin": 287, "originalText": "and", "ArgType": null, "before": " "}, {"index": 60, "word": "Gravano", "lemma": "Gravano", "after": "", "pos": "NNP", "characterOffsetEnd": 298, "segment_span": [49, 63], "characterOffsetBegin": 291, "originalText": "Gravano", "ArgType": null, "before": " "}, {"index": 61, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 299, "segment_span": [49, 63], "characterOffsetBegin": 298, "originalText": ",", "ArgType": null, "before": ""}, {"index": 62, "word": "2000", "lemma": "2000", "after": "", "pos": "CD", "characterOffsetEnd": 304, "segment_span": [49, 63], "characterOffsetBegin": 300, "originalText": "2000", "ArgType": null, "before": " "}, {"index": 63, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 305, "segment_span": [49, 63], "characterOffsetBegin": 304, "originalText": ")", "ArgType": null, "before": ""}, {"index": 64, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 306, "segment_span": [7, 74], "characterOffsetBegin": 305, "originalText": ",", "ArgType": null, "before": ""}, {"index": 65, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 310, "segment_span": [7, 74], "characterOffsetBegin": 307, "originalText": "and", "ArgType": null, "before": " "}, {"index": 66, "word": "unsupervised", "lemma": "unsupervised", "after": " ", "pos": "JJ", "characterOffsetEnd": 323, "segment_span": [7, 74], "characterOffsetBegin": 311, "originalText": "unsupervised", "ArgType": null, "before": " "}, {"index": 67, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 330, "segment_span": [7, 74], "characterOffsetBegin": 324, "originalText": "method", "ArgType": null, "before": " "}, {"index": 68, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 332, "segment_span": [7, 74], "characterOffsetBegin": 331, "originalText": "(", "ArgType": null, "before": " "}, {"index": 69, "word": "Hasegawa", "lemma": "Hasegawa", "after": " ", "pos": "NNP", "characterOffsetEnd": 340, "segment_span": [7, 74], "characterOffsetBegin": 332, "originalText": "Hasegawa", "ArgType": null, "before": ""}, {"index": 70, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 343, "segment_span": [7, 74], "characterOffsetBegin": 341, "originalText": "et", "ArgType": null, "before": " "}, {"index": 71, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 347, "segment_span": [7, 74], "characterOffsetBegin": 344, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 72, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 348, "segment_span": [7, 74], "characterOffsetBegin": 347, "originalText": ",", "ArgType": null, "before": ""}, {"index": 73, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 353, "segment_span": [7, 74], "characterOffsetBegin": 349, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 74, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 354, "segment_span": [7, 74], "characterOffsetBegin": 353, "originalText": ")", "ArgType": null, "before": ""}, {"index": 75, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 355, "characterOffsetBegin": 354, "originalText": ".", "ArgType": null, "before": ""}], "text": "To identify semantic relations using machine learning , three learning settings have mainly been applied , namely supervised methods ( Miller et al. , 2000 ; Zelenko et al. , 2002 ; Culotta and Sorensen , 2004 ; Kambhatla , 2004 ; Zhou et al. , 2005 ) , semi supervised methods ( Brin , 1998 ; Agichtein and Gravano , 2000 ) , and unsupervised method ( Hasegawa et al. , 2004 ) ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 358, "segment_span": [0, 86], "characterOffsetBegin": 356, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 360, "segment_span": [0, 86], "characterOffsetBegin": 359, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "supervised", "lemma": "supervised", "after": " ", "pos": "JJ", "characterOffsetEnd": 371, "segment_span": [0, 86], "characterOffsetBegin": 361, "originalText": "supervised", "ArgType": null, "before": " "}, {"index": 4, "word": "learning", "lemma": "learning", "after": " ", "pos": "NN", "characterOffsetEnd": 380, "segment_span": [0, 86], "characterOffsetBegin": 372, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 5, "word": "setting", "lemma": "setting", "after": "", "pos": "NN", "characterOffsetEnd": 388, "segment_span": [0, 86], "characterOffsetBegin": 381, "originalText": "setting", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 389, "segment_span": [0, 86], "characterOffsetBegin": 388, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "representative", "lemma": "representative", "after": " ", "pos": "JJ", "characterOffsetEnd": 404, "segment_span": [0, 86], "characterOffsetBegin": 390, "originalText": "representative", "ArgType": null, "before": " "}, {"index": 8, "word": "related", "lemma": "related", "after": " ", "pos": "JJ", "characterOffsetEnd": 412, "segment_span": [0, 86], "characterOffsetBegin": 405, "originalText": "related", "ArgType": null, "before": " "}, {"index": 9, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 417, "segment_span": [0, 86], "characterOffsetBegin": 413, "originalText": "work", "ArgType": null, "before": " "}, {"index": 10, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 421, "segment_span": [0, 86], "characterOffsetBegin": 418, "originalText": "can", "ArgType": null, "before": " "}, {"index": 11, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 424, "segment_span": [0, 86], "characterOffsetBegin": 422, "originalText": "be", "ArgType": null, "before": " "}, {"index": 12, "word": "classified", "characterOffsetEnd": 435, "after": " ", "pos": "VBN", "is_root": true, "lemma": "classify", "segment_span": [0, 86], "tense": "N", "characterOffsetBegin": 425, "before": " ", "originalText": "classified", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 13, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 440, "segment_span": [0, 86], "characterOffsetBegin": 436, "originalText": "into", "ArgType": null, "before": " "}, {"index": 14, "word": "generative", "lemma": "generative", "after": " ", "pos": "JJ", "characterOffsetEnd": 451, "segment_span": [0, 86], "characterOffsetBegin": 441, "originalText": "generative", "ArgType": null, "before": " "}, {"index": 15, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 458, "segment_span": [0, 86], "characterOffsetBegin": 452, "originalText": "models", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 460, "segment_span": [0, 86], "characterOffsetBegin": 459, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Miller", "lemma": "Miller", "after": " ", "pos": "NNP", "characterOffsetEnd": 466, "segment_span": [0, 86], "characterOffsetBegin": 460, "originalText": "Miller", "ArgType": null, "before": ""}, {"index": 18, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 469, "segment_span": [0, 86], "characterOffsetBegin": 467, "originalText": "et", "ArgType": null, "before": " "}, {"index": 19, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 473, "segment_span": [0, 86], "characterOffsetBegin": 470, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 474, "segment_span": [0, 86], "characterOffsetBegin": 473, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2000", "lemma": "2000", "after": "", "pos": "CD", "characterOffsetEnd": 479, "segment_span": [0, 86], "characterOffsetBegin": 475, "originalText": "2000", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 480, "segment_span": [0, 86], "characterOffsetBegin": 479, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 481, "segment_span": [0, 86], "characterOffsetBegin": 480, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "feature-based", "lemma": "feature-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 495, "segment_span": [0, 86], "characterOffsetBegin": 482, "originalText": "feature-based", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 497, "segment_span": [0, 86], "characterOffsetBegin": 496, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "Roth", "lemma": "Roth", "after": " ", "pos": "NNP", "characterOffsetEnd": 501, "segment_span": [0, 86], "characterOffsetBegin": 497, "originalText": "Roth", "ArgType": null, "before": ""}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 505, "segment_span": [0, 86], "characterOffsetBegin": 502, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "tau", "lemma": "tau", "after": " ", "pos": "NNP", "characterOffsetEnd": 509, "segment_span": [0, 86], "characterOffsetBegin": 506, "originalText": "tau", "ArgType": null, "before": " "}, {"index": 29, "word": "Yih", "lemma": "Yih", "after": "", "pos": "NNP", "characterOffsetEnd": 513, "segment_span": [0, 86], "characterOffsetBegin": 510, "originalText": "Yih", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 514, "segment_span": [0, 86], "characterOffsetBegin": 513, "originalText": ",", "ArgType": null, "before": ""}, {"index": 31, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 519, "segment_span": [0, 86], "characterOffsetBegin": 515, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 32, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 520, "segment_span": [0, 86], "characterOffsetBegin": 519, "originalText": ";", "ArgType": null, "before": ""}, {"index": 33, "word": "Kambhatla", "lemma": "Kambhatla", "after": "", "pos": "NNP", "characterOffsetEnd": 530, "segment_span": [0, 86], "characterOffsetBegin": 521, "originalText": "Kambhatla", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 531, "segment_span": [0, 86], "characterOffsetBegin": 530, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 536, "segment_span": [0, 86], "characterOffsetBegin": 532, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 36, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 537, "segment_span": [0, 86], "characterOffsetBegin": 536, "originalText": ";", "ArgType": null, "before": ""}, {"index": 37, "word": "Zhao", "lemma": "Zhao", "after": " ", "pos": "NNP", "characterOffsetEnd": 542, "segment_span": [0, 86], "characterOffsetBegin": 538, "originalText": "Zhao", "ArgType": null, "before": " "}, {"index": 38, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 546, "segment_span": [0, 86], "characterOffsetBegin": 543, "originalText": "and", "ArgType": null, "before": " "}, {"index": 39, "word": "Grishman", "lemma": "Grishman", "after": "", "pos": "NNP", "characterOffsetEnd": 555, "segment_span": [0, 86], "characterOffsetBegin": 547, "originalText": "Grishman", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 556, "segment_span": [0, 86], "characterOffsetBegin": 555, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 561, "segment_span": [0, 86], "characterOffsetBegin": 557, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 42, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 562, "segment_span": [0, 86], "characterOffsetBegin": 561, "originalText": ";", "ArgType": null, "before": ""}, {"index": 43, "word": "Zhou", "lemma": "Zhou", "after": " ", "pos": "NNP", "characterOffsetEnd": 567, "segment_span": [0, 86], "characterOffsetBegin": 563, "originalText": "Zhou", "ArgType": null, "before": " "}, {"index": 44, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 570, "segment_span": [0, 86], "characterOffsetBegin": 568, "originalText": "et", "ArgType": null, "before": " "}, {"index": 45, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 574, "segment_span": [0, 86], "characterOffsetBegin": 571, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 46, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 575, "segment_span": [0, 86], "characterOffsetBegin": 574, "originalText": ",", "ArgType": null, "before": ""}, {"index": 47, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 580, "segment_span": [0, 86], "characterOffsetBegin": 576, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 48, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 581, "segment_span": [0, 86], "characterOffsetBegin": 580, "originalText": ")", "ArgType": null, "before": ""}, {"index": 49, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 584, "segment_span": [0, 86], "characterOffsetBegin": 582, "originalText": "or", "ArgType": null, "before": " "}, {"index": 50, "word": "kernel-based", "lemma": "kernel-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 597, "segment_span": [0, 86], "characterOffsetBegin": 585, "originalText": "kernel-based", "ArgType": null, "before": " "}, {"index": 51, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 605, "segment_span": [0, 86], "characterOffsetBegin": 598, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 52, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 607, "segment_span": [0, 86], "characterOffsetBegin": 606, "originalText": "(", "ArgType": null, "before": " "}, {"index": 53, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 614, "segment_span": [0, 86], "characterOffsetBegin": 607, "originalText": "Zelenko", "ArgType": null, "before": ""}, {"index": 54, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 617, "segment_span": [0, 86], "characterOffsetBegin": 615, "originalText": "et", "ArgType": null, "before": " "}, {"index": 55, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 621, "segment_span": [0, 86], "characterOffsetBegin": 618, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 56, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 622, "segment_span": [0, 86], "characterOffsetBegin": 621, "originalText": ",", "ArgType": null, "before": ""}, {"index": 57, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 627, "segment_span": [0, 86], "characterOffsetBegin": 623, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 58, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 628, "segment_span": [0, 86], "characterOffsetBegin": 627, "originalText": ";", "ArgType": null, "before": ""}, {"index": 59, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 636, "segment_span": [0, 86], "characterOffsetBegin": 629, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 60, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 640, "segment_span": [0, 86], "characterOffsetBegin": 637, "originalText": "and", "ArgType": null, "before": " "}, {"index": 61, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 649, "segment_span": [0, 86], "characterOffsetBegin": 641, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 62, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 650, "segment_span": [0, 86], "characterOffsetBegin": 649, "originalText": ",", "ArgType": null, "before": ""}, {"index": 63, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 655, "segment_span": [0, 86], "characterOffsetBegin": 651, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 64, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 656, "segment_span": [0, 86], "characterOffsetBegin": 655, "originalText": ";", "ArgType": null, "before": ""}, {"index": 65, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 664, "segment_span": [0, 86], "characterOffsetBegin": 657, "originalText": "Bunescu", "ArgType": null, "before": " "}, {"index": 66, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 668, "segment_span": [0, 86], "characterOffsetBegin": 665, "originalText": "and", "ArgType": null, "before": " "}, {"index": 67, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 675, "segment_span": [0, 86], "characterOffsetBegin": 669, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 68, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 676, "segment_span": [0, 86], "characterOffsetBegin": 675, "originalText": ",", "ArgType": null, "before": ""}, {"index": 69, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 682, "segment_span": [0, 86], "characterOffsetBegin": 677, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 70, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 683, "segment_span": [0, 86], "characterOffsetBegin": 682, "originalText": ";", "ArgType": null, "before": ""}, {"index": 71, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 689, "segment_span": [0, 86], "characterOffsetBegin": 684, "originalText": "Zhang", "ArgType": null, "before": " "}, {"index": 72, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 692, "segment_span": [0, 86], "characterOffsetBegin": 690, "originalText": "et", "ArgType": null, "before": " "}, {"index": 73, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 696, "segment_span": [0, 86], "characterOffsetBegin": 693, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 74, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 697, "segment_span": [0, 86], "characterOffsetBegin": 696, "originalText": ",", "ArgType": null, "before": ""}, {"index": 75, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 702, "segment_span": [0, 86], "characterOffsetBegin": 698, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 76, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 703, "segment_span": [0, 86], "characterOffsetBegin": 702, "originalText": ";", "ArgType": null, "before": ""}, {"index": 77, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 708, "segment_span": [0, 86], "characterOffsetBegin": 704, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 78, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 709, "segment_span": [0, 86], "characterOffsetBegin": 708, "originalText": ",", "ArgType": null, "before": ""}, {"index": 79, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 714, "segment_span": [0, 86], "characterOffsetBegin": 710, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 80, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 715, "segment_span": [0, 86], "characterOffsetBegin": 714, "originalText": ";", "ArgType": null, "before": ""}, {"index": 81, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 721, "segment_span": [0, 86], "characterOffsetBegin": 716, "originalText": "Zhang", "ArgType": null, "before": " "}, {"index": 82, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 724, "segment_span": [0, 86], "characterOffsetBegin": 722, "originalText": "et", "ArgType": null, "before": " "}, {"index": 83, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 728, "segment_span": [0, 86], "characterOffsetBegin": 725, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 84, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 729, "segment_span": [0, 86], "characterOffsetBegin": 728, "originalText": ",", "ArgType": null, "before": ""}, {"index": 85, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 734, "segment_span": [0, 86], "characterOffsetBegin": 730, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 86, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 735, "segment_span": [0, 86], "characterOffsetBegin": 734, "originalText": ")", "ArgType": null, "before": ""}, {"index": 87, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 736, "characterOffsetBegin": 735, "originalText": ".", "ArgType": null, "before": ""}], "text": "In a supervised learning setting , representative related work can be classified into generative models ( Miller et al. , 2000 ) , feature-based ( Roth and tau Yih , 2002 ; Kambhatla , 2004 ; Zhao and Grishman , 2005 ; Zhou et al. , 2005 ) or kernel-based methods ( Zelenko et al. , 2002 ; Culotta and Sorensen , 2004 ; Bunescu and Mooney , 2005a ; Zhang et al. , 2005 ; Wang , 2008 ; Zhang et al. , 2006 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 740, "segment_span": [0, 21], "characterOffsetBegin": 737, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "learning", "lemma": "learning", "after": " ", "pos": "NN", "characterOffsetEnd": 749, "segment_span": [0, 21], "characterOffsetBegin": 741, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 3, "word": "model", "lemma": "model", "after": " ", "pos": "NN", "characterOffsetEnd": 755, "segment_span": [0, 21], "characterOffsetBegin": 750, "originalText": "model", "ArgType": null, "before": " "}, {"index": 4, "word": "employed", "lemma": "employ", "after": " ", "pos": "VBN", "characterOffsetEnd": 764, "segment_span": [0, 21], "characterOffsetBegin": 756, "originalText": "employed", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 767, "segment_span": [0, 21], "characterOffsetBegin": 765, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 769, "segment_span": [0, 21], "characterOffsetBegin": 768, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "Miller", "lemma": "Miller", "after": " ", "pos": "NNP", "characterOffsetEnd": 775, "segment_span": [0, 21], "characterOffsetBegin": 769, "originalText": "Miller", "ArgType": null, "before": ""}, {"index": 8, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 778, "segment_span": [0, 21], "characterOffsetBegin": 776, "originalText": "et", "ArgType": null, "before": " "}, {"index": 9, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 782, "segment_span": [0, 21], "characterOffsetBegin": 779, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 783, "segment_span": [0, 21], "characterOffsetBegin": 782, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "2000", "lemma": "2000", "after": "", "pos": "CD", "characterOffsetEnd": 788, "segment_span": [0, 21], "characterOffsetBegin": 784, "originalText": "2000", "ArgType": null, "before": " "}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 789, "segment_span": [0, 21], "characterOffsetBegin": 788, "originalText": ")", "ArgType": null, "before": ""}, {"index": 13, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 794, "segment_span": [0, 21], "characterOffsetBegin": 790, "originalText": "used", "ArgType": null, "before": " "}, {"index": 14, "word": "statistical", "lemma": "statistical", "after": " ", "pos": "JJ", "characterOffsetEnd": 806, "segment_span": [0, 21], "characterOffsetBegin": 795, "originalText": "statistical", "ArgType": null, "before": " "}, {"index": 15, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 814, "segment_span": [0, 21], "characterOffsetBegin": 807, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 16, "word": "techniques", "lemma": "technique", "after": " ", "pos": "NNS", "characterOffsetEnd": 825, "segment_span": [0, 21], "characterOffsetBegin": 815, "originalText": "techniques", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 828, "segment_span": [0, 21], "characterOffsetBegin": 826, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "learn", "lemma": "learn", "after": " ", "pos": "VB", "characterOffsetEnd": 834, "segment_span": [0, 21], "characterOffsetBegin": 829, "originalText": "learn", "ArgType": null, "before": " "}, {"index": 19, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 844, "segment_span": [0, 21], "characterOffsetBegin": 835, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 20, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 850, "segment_span": [0, 21], "characterOffsetBegin": 845, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 21, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 856, "segment_span": [0, 21], "characterOffsetBegin": 851, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 857, "characterOffsetBegin": 856, "originalText": ".", "ArgType": null, "before": ""}], "text": "The learning model employed in ( Miller et al. , 2000 ) used statistical parsing techniques to learn syntactic parse trees ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 860, "segment_span": [0, 19], "characterOffsetBegin": 858, "originalText": "It", "ArgType": "subj", "before": " "}, {"index": 2, "word": "demonstrated", "characterOffsetEnd": 873, "after": " ", "pos": "VBD", "is_root": true, "lemma": "demonstrate", "segment_span": [0, 19], "tense": "D", "characterOffsetBegin": 861, "originalText": "demonstrated", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 878, "segment_span": [0, 19], "characterOffsetBegin": 874, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 880, "segment_span": [0, 19], "characterOffsetBegin": 879, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "lexicalized", "lemma": "lexicalize", "after": "", "pos": "VBN", "characterOffsetEnd": 892, "segment_span": [0, 19], "characterOffsetBegin": 881, "originalText": "lexicalized", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 893, "segment_span": [0, 19], "characterOffsetBegin": 892, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "probabilistic", "lemma": "probabilistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 907, "segment_span": [0, 19], "characterOffsetBegin": 894, "originalText": "probabilistic", "ArgType": null, "before": " "}, {"index": 8, "word": "context-free", "lemma": "context-free", "after": " ", "pos": "JJ", "characterOffsetEnd": 920, "segment_span": [0, 19], "characterOffsetBegin": 908, "originalText": "context-free", "ArgType": null, "before": " "}, {"index": 9, "word": "parser", "lemma": "parser", "after": " ", "pos": "NN", "characterOffsetEnd": 927, "segment_span": [0, 19], "characterOffsetBegin": 921, "originalText": "parser", "ArgType": null, "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 932, "segment_span": [0, 19], "characterOffsetBegin": 928, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "head", "lemma": "head", "after": " ", "pos": "NN", "characterOffsetEnd": 937, "segment_span": [0, 19], "characterOffsetBegin": 933, "originalText": "head", "ArgType": null, "before": " "}, {"index": 12, "word": "rules", "lemma": "rule", "after": " ", "pos": "NNS", "characterOffsetEnd": 943, "segment_span": [0, 19], "characterOffsetBegin": 938, "originalText": "rules", "ArgType": null, "before": " "}, {"index": 13, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 947, "segment_span": [0, 19], "characterOffsetBegin": 944, "originalText": "can", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 950, "segment_span": [0, 19], "characterOffsetBegin": 948, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 955, "segment_span": [0, 19], "characterOffsetBegin": 951, "originalText": "used", "ArgType": null, "before": " "}, {"index": 16, "word": "effectively", "lemma": "effectively", "after": " ", "pos": "RB", "characterOffsetEnd": 967, "segment_span": [0, 19], "characterOffsetBegin": 956, "originalText": "effectively", "ArgType": null, "before": " "}, {"index": 17, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 971, "segment_span": [0, 19], "characterOffsetBegin": 968, "originalText": "for", "ArgType": null, "before": " "}, {"index": 18, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 983, "segment_span": [0, 19], "characterOffsetBegin": 972, "originalText": "information", "ArgType": null, "before": " "}, {"index": 19, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 994, "segment_span": [0, 19], "characterOffsetBegin": 984, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 995, "characterOffsetBegin": 994, "originalText": ".", "ArgType": null, "before": ""}], "text": "It demonstrated that a lexicalized , probabilistic context-free parser with head rules can be used effectively for information extraction ."}, {"tokens": [{"index": 1, "word": "Meanwhile", "lemma": "meanwhile", "after": "", "pos": "RB", "characterOffsetEnd": 1005, "segment_span": [0, 16], "characterOffsetBegin": 996, "originalText": "Meanwhile", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1006, "segment_span": [0, 16], "characterOffsetBegin": 1005, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "feature-based", "lemma": "feature-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1020, "segment_span": [0, 16], "characterOffsetBegin": 1007, "originalText": "feature-based", "ArgType": null, "before": " "}, {"index": 4, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 1031, "segment_span": [0, 16], "characterOffsetBegin": 1021, "originalText": "approaches", "ArgType": "subj", "before": " "}, {"index": 5, "word": "often", "lemma": "often", "after": " ", "pos": "RB", "characterOffsetEnd": 1037, "segment_span": [0, 16], "characterOffsetBegin": 1032, "originalText": "often", "ArgType": null, "before": " "}, {"index": 6, "word": "employ", "characterOffsetEnd": 1044, "after": " ", "pos": "VBP", "is_root": true, "lemma": "employ", "segment_span": [0, 16], "tense": "P", "characterOffsetBegin": 1038, "originalText": "employ", "ArgType": "verb", "before": " "}, {"index": 7, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 1052, "segment_span": [0, 16], "characterOffsetBegin": 1045, "originalText": "various", "ArgType": null, "before": " "}, {"index": 8, "word": "kinds", "lemma": "kind", "after": " ", "pos": "NNS", "characterOffsetEnd": 1058, "segment_span": [0, 16], "characterOffsetBegin": 1053, "originalText": "kinds", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1061, "segment_span": [0, 16], "characterOffsetBegin": 1059, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "linguistic", "lemma": "linguistic", "after": "", "pos": "JJ", "characterOffsetEnd": 1072, "segment_span": [0, 16], "characterOffsetBegin": 1062, "originalText": "linguistic", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1073, "segment_span": [0, 16], "characterOffsetBegin": 1072, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1083, "segment_span": [0, 16], "characterOffsetBegin": 1074, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 13, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 1086, "segment_span": [0, 16], "characterOffsetBegin": 1084, "originalText": "or", "ArgType": null, "before": " "}, {"index": 14, "word": "contextual", "lemma": "contextual", "after": " ", "pos": "JJ", "characterOffsetEnd": 1097, "segment_span": [0, 16], "characterOffsetBegin": 1087, "originalText": "contextual", "ArgType": null, "before": " "}, {"index": 15, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 1109, "segment_span": [0, 16], "characterOffsetBegin": 1098, "originalText": "information", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1113, "segment_span": [0, 16], "characterOffsetBegin": 1110, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "integrate", "characterOffsetEnd": 1123, "after": " ", "pos": "VB", "is_root": true, "lemma": "integrate", "segment_span": [16, 21], "tense": "B", "characterOffsetBegin": 1114, "originalText": "integrate", "ArgType": null, "before": " "}, {"index": 18, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 1128, "segment_span": [16, 21], "characterOffsetBegin": 1124, "originalText": "into", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1132, "segment_span": [16, 21], "characterOffsetBegin": 1129, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 1140, "segment_span": [16, 21], "characterOffsetBegin": 1133, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 21, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 1146, "segment_span": [16, 21], "characterOffsetBegin": 1141, "originalText": "space", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1147, "characterOffsetBegin": 1146, "originalText": ".", "ArgType": null, "before": ""}], "text": "Meanwhile , feature-based approaches often employ various kinds of linguistic , syntactic or contextual information and integrate into the feature space ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1149, "segment_span": [0, 39], "characterOffsetBegin": 1148, "originalText": "(", "ArgType": null, "before": " "}, {"index": 2, "word": "Roth", "lemma": "Roth", "after": " ", "pos": "NNP", "characterOffsetEnd": 1153, "segment_span": [0, 39], "characterOffsetBegin": 1149, "originalText": "Roth", "ArgType": "subj", "before": ""}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1157, "segment_span": [0, 39], "characterOffsetBegin": 1154, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "tau", "lemma": "tau", "after": " ", "pos": "NNP", "characterOffsetEnd": 1161, "segment_span": [0, 39], "characterOffsetBegin": 1158, "originalText": "tau", "ArgType": null, "before": " "}, {"index": 5, "word": "Yih", "lemma": "Yih", "after": "", "pos": "NNP", "characterOffsetEnd": 1165, "segment_span": [0, 39], "characterOffsetBegin": 1162, "originalText": "Yih", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1166, "segment_span": [0, 39], "characterOffsetBegin": 1165, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 1171, "segment_span": [0, 39], "characterOffsetBegin": 1167, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1172, "segment_span": [0, 39], "characterOffsetBegin": 1171, "originalText": ")", "ArgType": null, "before": ""}, {"index": 9, "word": "applied", "characterOffsetEnd": 1180, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [0, 39], "tense": "D", "characterOffsetBegin": 1173, "originalText": "applied", "ArgType": "verb", "before": " "}, {"index": 10, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1182, "segment_span": [0, 39], "characterOffsetBegin": 1181, "originalText": "a", "ArgType": null, "before": " "}, {"index": 11, "word": "probabilistic", "lemma": "probabilistic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1196, "segment_span": [0, 39], "characterOffsetBegin": 1183, "originalText": "probabilistic", "ArgType": null, "before": " "}, {"index": 12, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 1205, "segment_span": [0, 39], "characterOffsetBegin": 1197, "originalText": "approach", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1208, "segment_span": [0, 39], "characterOffsetBegin": 1206, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "solve", "lemma": "solve", "after": " ", "pos": "VB", "characterOffsetEnd": 1214, "segment_span": [0, 39], "characterOffsetBegin": 1209, "originalText": "solve", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1218, "segment_span": [0, 39], "characterOffsetBegin": 1215, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "problems", "lemma": "problem", "after": " ", "pos": "NNS", "characterOffsetEnd": 1227, "segment_span": [0, 39], "characterOffsetBegin": 1219, "originalText": "problems", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1230, "segment_span": [0, 39], "characterOffsetBegin": 1228, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "named", "lemma": "name", "after": " ", "pos": "VBN", "characterOffsetEnd": 1236, "segment_span": [0, 39], "characterOffsetBegin": 1231, "originalText": "named", "ArgType": null, "before": " "}, {"index": 19, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 1243, "segment_span": [0, 39], "characterOffsetBegin": 1237, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1247, "segment_span": [0, 39], "characterOffsetBegin": 1244, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 1256, "segment_span": [0, 39], "characterOffsetBegin": 1248, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 22, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 1267, "segment_span": [0, 39], "characterOffsetBegin": 1257, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 23, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1272, "segment_span": [0, 39], "characterOffsetBegin": 1268, "originalText": "with", "ArgType": null, "before": " "}, {"index": 24, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1276, "segment_span": [0, 39], "characterOffsetBegin": 1273, "originalText": "the", "ArgType": null, "before": " "}, {"index": 25, "word": "incorporation", "lemma": "incorporation", "after": " ", "pos": "NN", "characterOffsetEnd": 1290, "segment_span": [0, 39], "characterOffsetBegin": 1277, "originalText": "incorporation", "ArgType": null, "before": " "}, {"index": 26, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1293, "segment_span": [0, 39], "characterOffsetBegin": 1291, "originalText": "of", "ArgType": null, "before": " "}, {"index": 27, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 1301, "segment_span": [0, 39], "characterOffsetBegin": 1294, "originalText": "various", "ArgType": null, "before": " "}, {"index": 28, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 1310, "segment_span": [0, 39], "characterOffsetBegin": 1302, "originalText": "features", "ArgType": null, "before": " "}, {"index": 29, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 1315, "segment_span": [0, 39], "characterOffsetBegin": 1311, "originalText": "such", "ArgType": null, "before": " "}, {"index": 30, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1318, "segment_span": [0, 39], "characterOffsetBegin": 1316, "originalText": "as", "ArgType": null, "before": " "}, {"index": 31, "word": "word", "lemma": "word", "after": "", "pos": "NN", "characterOffsetEnd": 1323, "segment_span": [0, 39], "characterOffsetBegin": 1319, "originalText": "word", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1324, "segment_span": [0, 39], "characterOffsetBegin": 1323, "originalText": ",", "ArgType": null, "before": ""}, {"index": 33, "word": "part-of-speech", "lemma": "part-of-speech", "after": "", "pos": "NN", "characterOffsetEnd": 1339, "segment_span": [0, 39], "characterOffsetBegin": 1325, "originalText": "part-of-speech", "ArgType": null, "before": " "}, {"index": 34, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1340, "segment_span": [0, 39], "characterOffsetBegin": 1339, "originalText": ",", "ArgType": null, "before": ""}, {"index": 35, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1344, "segment_span": [0, 39], "characterOffsetBegin": 1341, "originalText": "and", "ArgType": null, "before": " "}, {"index": 36, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1353, "segment_span": [0, 39], "characterOffsetBegin": 1345, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 37, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 1365, "segment_span": [0, 39], "characterOffsetBegin": 1354, "originalText": "information", "ArgType": null, "before": " "}, {"index": 38, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1370, "segment_span": [0, 39], "characterOffsetBegin": 1366, "originalText": "from", "ArgType": null, "before": " "}, {"index": 39, "word": "WordNet", "lemma": "WordNet", "after": "", "pos": "NNP", "characterOffsetEnd": 1378, "segment_span": [0, 39], "characterOffsetBegin": 1371, "originalText": "WordNet", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1379, "characterOffsetBegin": 1378, "originalText": ".", "ArgType": null, "before": ""}], "text": "( Roth and tau Yih , 2002 ) applied a probabilistic approach to solve the problems of named entity and relation extraction with the incorporation of various features such as word , part-of-speech , and semantic information from WordNet ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1381, "segment_span": [0, 25], "characterOffsetBegin": 1380, "originalText": "(", "ArgType": null, "before": " "}, {"index": 2, "word": "Kambhatla", "lemma": "Kambhatla", "after": "", "pos": "NNP", "characterOffsetEnd": 1390, "segment_span": [0, 25], "characterOffsetBegin": 1381, "originalText": "Kambhatla", "ArgType": null, "before": ""}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1391, "segment_span": [0, 25], "characterOffsetBegin": 1390, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 1396, "segment_span": [0, 25], "characterOffsetBegin": 1392, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1397, "segment_span": [0, 25], "characterOffsetBegin": 1396, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": "employed", "characterOffsetEnd": 1406, "after": " ", "pos": "VBN", "is_root": true, "lemma": "employ", "segment_span": [0, 25], "tense": "N", "characterOffsetBegin": 1398, "originalText": "employed", "ArgType": null, "before": " "}, {"index": 7, "word": "maximum", "lemma": "maximum", "after": " ", "pos": "NN", "characterOffsetEnd": 1414, "segment_span": [0, 25], "characterOffsetBegin": 1407, "originalText": "maximum", "ArgType": null, "before": " "}, {"index": 8, "word": "entropy", "lemma": "entropy", "after": " ", "pos": "NN", "characterOffsetEnd": 1422, "segment_span": [0, 25], "characterOffsetBegin": 1415, "originalText": "entropy", "ArgType": null, "before": " "}, {"index": 9, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 1429, "segment_span": [0, 25], "characterOffsetBegin": 1423, "originalText": "models", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1434, "segment_span": [0, 25], "characterOffsetBegin": 1430, "originalText": "with", "ArgType": null, "before": " "}, {"index": 11, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 1442, "segment_span": [0, 25], "characterOffsetBegin": 1435, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 12, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 1451, "segment_span": [0, 25], "characterOffsetBegin": 1443, "originalText": "features", "ArgType": null, "before": " "}, {"index": 13, "word": "including", "lemma": "include", "after": " ", "pos": "VBG", "characterOffsetEnd": 1461, "segment_span": [0, 25], "characterOffsetBegin": 1452, "originalText": "including", "ArgType": null, "before": " "}, {"index": 14, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 1467, "segment_span": [0, 25], "characterOffsetBegin": 1462, "originalText": "words", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1468, "segment_span": [0, 25], "characterOffsetBegin": 1467, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 1475, "segment_span": [0, 25], "characterOffsetBegin": 1469, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1479, "segment_span": [0, 25], "characterOffsetBegin": 1476, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "mention", "lemma": "mention", "after": " ", "pos": "NN", "characterOffsetEnd": 1487, "segment_span": [0, 25], "characterOffsetBegin": 1480, "originalText": "mention", "ArgType": null, "before": " "}, {"index": 19, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 1493, "segment_span": [0, 25], "characterOffsetBegin": 1488, "originalText": "types", "ArgType": null, "before": " "}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1497, "segment_span": [0, 25], "characterOffsetBegin": 1494, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1501, "segment_span": [0, 25], "characterOffsetBegin": 1498, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 1508, "segment_span": [0, 25], "characterOffsetBegin": 1502, "originalText": "number", "ArgType": null, "before": " "}, {"index": 23, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1511, "segment_span": [0, 25], "characterOffsetBegin": 1509, "originalText": "of", "ArgType": null, "before": " "}, {"index": 24, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 1517, "segment_span": [0, 25], "characterOffsetBegin": 1512, "originalText": "words", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1519, "segment_span": [0, 25], "characterOffsetBegin": 1518, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "if", "lemma": "if", "after": " ", "pos": "IN", "characterOffsetEnd": 1521, "segment_span": [25, 32], "characterOffsetBegin": 1519, "originalText": "if", "ArgType": null, "before": ""}, {"index": 27, "word": "any", "lemma": "any", "after": "", "pos": "DT", "characterOffsetEnd": 1525, "segment_span": [25, 32], "characterOffsetBegin": 1522, "originalText": "any", "ArgType": null, "before": " "}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1526, "segment_span": [25, 32], "characterOffsetBegin": 1525, "originalText": ")", "ArgType": null, "before": ""}, {"index": 29, "word": "separating", "characterOffsetEnd": 1537, "after": " ", "pos": "VBG", "is_root": true, "lemma": "separate", "segment_span": [25, 32], "tense": "G", "characterOffsetBegin": 1527, "originalText": "separating", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1541, "segment_span": [25, 32], "characterOffsetBegin": 1538, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1545, "segment_span": [25, 32], "characterOffsetBegin": 1542, "originalText": "two", "ArgType": null, "before": " "}, {"index": 32, "word": "entities", "lemma": "entity", "after": "", "pos": "NNS", "characterOffsetEnd": 1554, "segment_span": [25, 32], "characterOffsetBegin": 1546, "originalText": "entities", "ArgType": "dobj", "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1555, "characterOffsetBegin": 1554, "originalText": ".", "ArgType": null, "before": ""}], "text": "( Kambhatla , 2004 ) employed maximum entropy models with diverse features including words , entity and mention types and the number of words ( if any ) separating the two entities ."}, {"tokens": [{"index": 1, "word": "Recent", "lemma": "recent", "after": " ", "pos": "JJ", "characterOffsetEnd": 1562, "segment_span": [0, 14], "characterOffsetBegin": 1556, "originalText": "Recent", "ArgType": null, "before": " "}, {"index": 2, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 1567, "segment_span": [0, 14], "characterOffsetBegin": 1563, "originalText": "work", "ArgType": "subj", "before": " "}, {"index": 3, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1570, "segment_span": [0, 14], "characterOffsetBegin": 1568, "originalText": "on", "ArgType": null, "before": " "}, {"index": 4, "word": "Relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 1579, "segment_span": [0, 14], "characterOffsetBegin": 1571, "originalText": "Relation", "ArgType": null, "before": " "}, {"index": 5, "word": "Extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 1590, "segment_span": [0, 14], "characterOffsetBegin": 1580, "originalText": "Extraction", "ArgType": null, "before": " "}, {"index": 6, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1594, "segment_span": [0, 14], "characterOffsetBegin": 1591, "originalText": "has", "ArgType": null, "before": " "}, {"index": 7, "word": "mostly", "lemma": "mostly", "after": " ", "pos": "RB", "characterOffsetEnd": 1601, "segment_span": [0, 14], "characterOffsetBegin": 1595, "originalText": "mostly", "ArgType": null, "before": " "}, {"index": 8, "word": "employed", "characterOffsetEnd": 1610, "after": " ", "pos": "VBN", "is_root": true, "lemma": "employ", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 1602, "originalText": "employed", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 9, "word": "kernel-based", "lemma": "kernel-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1623, "segment_span": [0, 14], "characterOffsetBegin": 1611, "originalText": "kernel-based", "ArgType": null, "before": " "}, {"index": 10, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 1634, "segment_span": [0, 14], "characterOffsetBegin": 1624, "originalText": "approaches", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 1639, "segment_span": [0, 14], "characterOffsetBegin": 1635, "originalText": "over", "ArgType": null, "before": " "}, {"index": 12, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1649, "segment_span": [0, 14], "characterOffsetBegin": 1640, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 13, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1655, "segment_span": [0, 14], "characterOffsetBegin": 1650, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 14, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1661, "segment_span": [0, 14], "characterOffsetBegin": 1656, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1662, "characterOffsetBegin": 1661, "originalText": ".", "ArgType": null, "before": ""}], "text": "Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees ."}, {"tokens": [{"index": 1, "word": "Kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1670, "segment_span": [0, 14], "characterOffsetBegin": 1663, "originalText": "Kernels", "ArgType": null, "before": " "}, {"index": 2, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1673, "segment_span": [0, 14], "characterOffsetBegin": 1671, "originalText": "on", "ArgType": null, "before": " "}, {"index": 3, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1679, "segment_span": [0, 14], "characterOffsetBegin": 1674, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 4, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1685, "segment_span": [0, 14], "characterOffsetBegin": 1680, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 5, "word": "were", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 1690, "segment_span": [0, 14], "characterOffsetBegin": 1686, "originalText": "were", "ArgType": null, "before": " "}, {"index": 6, "word": "pioneered", "characterOffsetEnd": 1700, "after": " ", "pos": "VBN", "is_root": true, "lemma": "pioneer", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 1691, "before": " ", "originalText": "pioneered", "ArgType": null, "is_pass": true}, {"index": 7, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1703, "segment_span": [0, 14], "characterOffsetBegin": 1701, "originalText": "by", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1705, "segment_span": [0, 14], "characterOffsetBegin": 1704, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "Collins", "lemma": "Collins", "after": " ", "pos": "NNP", "characterOffsetEnd": 1712, "segment_span": [0, 14], "characterOffsetBegin": 1705, "originalText": "Collins", "ArgType": null, "before": ""}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1716, "segment_span": [0, 14], "characterOffsetBegin": 1713, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "Duffy", "lemma": "duffy", "after": "", "pos": "NN", "characterOffsetEnd": 1722, "segment_span": [0, 14], "characterOffsetBegin": 1717, "originalText": "Duffy", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1723, "segment_span": [0, 14], "characterOffsetBegin": 1722, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 1728, "segment_span": [0, 14], "characterOffsetBegin": 1724, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1729, "segment_span": [0, 14], "characterOffsetBegin": 1728, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1730, "characterOffsetBegin": 1729, "originalText": ".", "ArgType": null, "before": ""}], "text": "Kernels on parse trees were pioneered by ( Collins and Duffy , 2001 ) ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 1735, "segment_span": [0, 22], "characterOffsetBegin": 1731, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1742, "segment_span": [0, 22], "characterOffsetBegin": 1736, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 1751, "segment_span": [0, 22], "characterOffsetBegin": 1743, "originalText": "function", "ArgType": "subj", "before": " "}, {"index": 4, "word": "counts", "characterOffsetEnd": 1758, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "count", "segment_span": [0, 22], "tense": "Z", "characterOffsetBegin": 1752, "originalText": "counts", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1762, "segment_span": [0, 22], "characterOffsetBegin": 1759, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 1769, "segment_span": [0, 22], "characterOffsetBegin": 1763, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1772, "segment_span": [0, 22], "characterOffsetBegin": 1770, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "common", "lemma": "common", "after": " ", "pos": "JJ", "characterOffsetEnd": 1779, "segment_span": [0, 22], "characterOffsetBegin": 1773, "originalText": "common", "ArgType": null, "before": " "}, {"index": 9, "word": "subtrees", "lemma": "subtree", "after": "", "pos": "NNS", "characterOffsetEnd": 1788, "segment_span": [0, 22], "characterOffsetBegin": 1780, "originalText": "subtrees", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1789, "segment_span": [0, 22], "characterOffsetBegin": 1788, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "weighted", "lemma": "weighted", "after": " ", "pos": "JJ", "characterOffsetEnd": 1798, "segment_span": [0, 22], "characterOffsetBegin": 1790, "originalText": "weighted", "ArgType": null, "before": " "}, {"index": 12, "word": "appropriately", "lemma": "appropriately", "after": "", "pos": "RB", "characterOffsetEnd": 1812, "segment_span": [0, 22], "characterOffsetBegin": 1799, "originalText": "appropriately", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1813, "segment_span": [0, 22], "characterOffsetBegin": 1812, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1816, "segment_span": [0, 22], "characterOffsetBegin": 1814, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1820, "segment_span": [0, 22], "characterOffsetBegin": 1817, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "measure", "lemma": "measure", "after": " ", "pos": "NN", "characterOffsetEnd": 1828, "segment_span": [0, 22], "characterOffsetBegin": 1821, "originalText": "measure", "ArgType": null, "before": " "}, {"index": 17, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1831, "segment_span": [0, 22], "characterOffsetBegin": 1829, "originalText": "of", "ArgType": null, "before": " "}, {"index": 18, "word": "similarity", "lemma": "similarity", "after": " ", "pos": "NN", "characterOffsetEnd": 1842, "segment_span": [0, 22], "characterOffsetBegin": 1832, "originalText": "similarity", "ArgType": null, "before": " "}, {"index": 19, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 1850, "segment_span": [0, 22], "characterOffsetBegin": 1843, "originalText": "between", "ArgType": null, "before": " "}, {"index": 20, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1854, "segment_span": [0, 22], "characterOffsetBegin": 1851, "originalText": "two", "ArgType": null, "before": " "}, {"index": 21, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1860, "segment_span": [0, 22], "characterOffsetBegin": 1855, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 22, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1866, "segment_span": [0, 22], "characterOffsetBegin": 1861, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1867, "characterOffsetBegin": 1866, "originalText": ".", "ArgType": null, "before": ""}], "text": "This kernel function counts the number of common subtrees , weighted appropriately , as the measure of similarity between two parse trees ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1869, "segment_span": [0, 17], "characterOffsetBegin": 1868, "originalText": "(", "ArgType": null, "before": " "}, {"index": 2, "word": "Culotta", "lemma": "culotta", "after": " ", "pos": "NN", "characterOffsetEnd": 1876, "segment_span": [0, 17], "characterOffsetBegin": 1869, "originalText": "Culotta", "ArgType": null, "before": ""}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1880, "segment_span": [0, 17], "characterOffsetBegin": 1877, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 1889, "segment_span": [0, 17], "characterOffsetBegin": 1881, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1890, "segment_span": [0, 17], "characterOffsetBegin": 1889, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 1895, "segment_span": [0, 17], "characterOffsetBegin": 1891, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1896, "segment_span": [0, 17], "characterOffsetBegin": 1895, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "extended", "characterOffsetEnd": 1905, "after": " ", "pos": "VBD", "is_root": true, "lemma": "extend", "segment_span": [0, 17], "tense": "D", "characterOffsetBegin": 1897, "originalText": "extended", "ArgType": null, "before": " "}, {"index": 9, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 1910, "segment_span": [0, 17], "characterOffsetBegin": 1906, "originalText": "this", "ArgType": null, "before": " "}, {"index": 10, "word": "work", "lemma": "work", "after": " ", "pos": "NN", "characterOffsetEnd": 1915, "segment_span": [0, 17], "characterOffsetBegin": 1911, "originalText": "work", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1918, "segment_span": [0, 17], "characterOffsetBegin": 1916, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "calculate", "lemma": "calculate", "after": " ", "pos": "VB", "characterOffsetEnd": 1928, "segment_span": [0, 17], "characterOffsetBegin": 1919, "originalText": "calculate", "ArgType": null, "before": " "}, {"index": 13, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1936, "segment_span": [0, 17], "characterOffsetBegin": 1929, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 1944, "segment_span": [0, 17], "characterOffsetBegin": 1937, "originalText": "between", "ArgType": null, "before": " "}, {"index": 15, "word": "augmented", "lemma": "augmented", "after": " ", "pos": "JJ", "characterOffsetEnd": 1954, "segment_span": [0, 17], "characterOffsetBegin": 1945, "originalText": "augmented", "ArgType": null, "before": " "}, {"index": 16, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1965, "segment_span": [0, 17], "characterOffsetBegin": 1955, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 17, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1971, "segment_span": [0, 17], "characterOffsetBegin": 1966, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1972, "characterOffsetBegin": 1971, "originalText": ".", "ArgType": null, "before": ""}], "text": "( Culotta and Sorensen , 2004 ) extended this work to calculate kernels between augmented dependency trees ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1974, "segment_span": [0, 9], "characterOffsetBegin": 1973, "originalText": "(", "ArgType": null, "before": " "}, {"index": 2, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 1981, "segment_span": [0, 9], "characterOffsetBegin": 1974, "originalText": "Zelenko", "ArgType": null, "before": ""}, {"index": 3, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1984, "segment_span": [0, 9], "characterOffsetBegin": 1982, "originalText": "et", "ArgType": null, "before": " "}, {"index": 4, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1988, "segment_span": [0, 9], "characterOffsetBegin": 1985, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1989, "segment_span": [0, 9], "characterOffsetBegin": 1988, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 1994, "segment_span": [0, 9], "characterOffsetBegin": 1990, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1995, "segment_span": [0, 9], "characterOffsetBegin": 1994, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "proposed", "lemma": "propose", "after": " ", "pos": "VBN", "characterOffsetEnd": 2004, "segment_span": [0, 9], "characterOffsetBegin": 1996, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 9, "word": "extracting", "characterOffsetEnd": 2015, "after": "", "pos": "VBG", "is_root": true, "lemma": "extract", "segment_span": [0, 9], "tense": "G", "characterOffsetBegin": 2005, "originalText": "extracting", "ArgType": null, "before": " "}], "text": "( Zelenko et al. , 2002 ) proposed extracting"}, {"tokens": [{"index": 1, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 9, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "relations", "ArgType": null, "before": ""}, {"index": 2, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 12, "segment_span": [0, 8], "characterOffsetBegin": 10, "originalText": "by", "ArgType": null, "before": " "}, {"index": 3, "word": "computing", "lemma": "compute", "after": " ", "pos": "VBG", "characterOffsetEnd": 22, "segment_span": [0, 8], "characterOffsetBegin": 13, "originalText": "computing", "ArgType": null, "before": " "}, {"index": 4, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 29, "segment_span": [0, 8], "characterOffsetBegin": 23, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 5, "word": "functions", "lemma": "function", "after": " ", "pos": "NNS", "characterOffsetEnd": 39, "segment_span": [0, 8], "characterOffsetBegin": 30, "originalText": "functions", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 47, "segment_span": [0, 8], "characterOffsetBegin": 40, "originalText": "between", "ArgType": null, "before": " "}, {"index": 7, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 8], "characterOffsetBegin": 48, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 8, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [0, 8], "characterOffsetBegin": 54, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 9, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 60, "characterOffsetBegin": 59, "originalText": ".", "ArgType": null, "before": ""}], "text": "relations by computing kernel functions between parse trees ."}, {"tokens": [{"index": 1, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 61, "originalText": "(", "ArgType": null, "before": " "}, {"index": 2, "word": "Bunescu", "lemma": "bunescu", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [0, 13], "characterOffsetBegin": 62, "originalText": "Bunescu", "ArgType": "subj", "before": ""}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 73, "segment_span": [0, 13], "characterOffsetBegin": 70, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "Mooney", "lemma": "mooney", "after": "", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 13], "characterOffsetBegin": 74, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 81, "segment_span": [0, 13], "characterOffsetBegin": 80, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [0, 13], "characterOffsetBegin": 82, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 88, "segment_span": [0, 13], "characterOffsetBegin": 87, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "proposed", "characterOffsetEnd": 97, "after": " ", "pos": "VBD", "is_root": true, "lemma": "propose", "segment_span": [0, 13], "tense": "D", "characterOffsetBegin": 89, "originalText": "proposed", "ArgType": "verb", "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 99, "segment_span": [0, 13], "characterOffsetBegin": 98, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "shortest", "lemma": "shortest", "after": " ", "pos": "JJS", "characterOffsetEnd": 108, "segment_span": [0, 13], "characterOffsetBegin": 100, "originalText": "shortest", "ArgType": null, "before": " "}, {"index": 11, "word": "path", "lemma": "path", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 13], "characterOffsetBegin": 109, "originalText": "path", "ArgType": null, "before": " "}, {"index": 12, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [0, 13], "characterOffsetBegin": 114, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 13, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [0, 13], "characterOffsetBegin": 125, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 134, "segment_span": [13, 15], "characterOffsetBegin": 132, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "stipulating", "characterOffsetEnd": 146, "after": " ", "pos": "VBG", "is_root": true, "lemma": "stipulate", "segment_span": [13, 15], "tense": "G", "characterOffsetBegin": 135, "originalText": "stipulating", "ArgType": null, "before": " "}, {"index": 16, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 151, "segment_span": [15, 38], "characterOffsetBegin": 147, "originalText": "that", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 155, "segment_span": [15, 38], "characterOffsetBegin": 152, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [15, 38], "characterOffsetBegin": 156, "originalText": "information", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 170, "segment_span": [15, 38], "characterOffsetBegin": 168, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "model", "lemma": "model", "after": " ", "pos": "VB", "characterOffsetEnd": 176, "segment_span": [15, 38], "characterOffsetBegin": 171, "originalText": "model", "ArgType": null, "before": " "}, {"index": 21, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 178, "segment_span": [15, 38], "characterOffsetBegin": 177, "originalText": "a", "ArgType": null, "before": " "}, {"index": 22, "word": "relationship", "lemma": "relationship", "after": " ", "pos": "NN", "characterOffsetEnd": 191, "segment_span": [15, 38], "characterOffsetBegin": 179, "originalText": "relationship", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 199, "segment_span": [15, 38], "characterOffsetBegin": 192, "originalText": "between", "ArgType": null, "before": " "}, {"index": 24, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 203, "segment_span": [15, 38], "characterOffsetBegin": 200, "originalText": "two", "ArgType": null, "before": " "}, {"index": 25, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 212, "segment_span": [15, 38], "characterOffsetBegin": 204, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 26, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 216, "segment_span": [15, 38], "characterOffsetBegin": 213, "originalText": "can", "ArgType": null, "before": " "}, {"index": 27, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 219, "segment_span": [15, 38], "characterOffsetBegin": 217, "originalText": "be", "ArgType": null, "before": " "}, {"index": 28, "word": "captured", "characterOffsetEnd": 228, "after": " ", "pos": "VBN", "is_root": true, "lemma": "capture", "segment_span": [15, 38], "tense": "N", "characterOffsetBegin": 220, "before": " ", "originalText": "captured", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 29, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 231, "segment_span": [15, 38], "characterOffsetBegin": 229, "originalText": "by", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 235, "segment_span": [15, 38], "characterOffsetBegin": 232, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "shortest", "lemma": "shortest", "after": " ", "pos": "JJS", "characterOffsetEnd": 244, "segment_span": [15, 38], "characterOffsetBegin": 236, "originalText": "shortest", "ArgType": null, "before": " "}, {"index": 32, "word": "path", "lemma": "path", "after": " ", "pos": "NN", "characterOffsetEnd": 249, "segment_span": [15, 38], "characterOffsetBegin": 245, "originalText": "path", "ArgType": null, "before": " "}, {"index": 33, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 257, "segment_span": [15, 38], "characterOffsetBegin": 250, "originalText": "between", "ArgType": null, "before": " "}, {"index": 34, "word": "them", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 262, "segment_span": [15, 38], "characterOffsetBegin": 258, "originalText": "them", "ArgType": null, "before": " "}, {"index": 35, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 265, "segment_span": [15, 38], "characterOffsetBegin": 263, "originalText": "in", "ArgType": null, "before": " "}, {"index": 36, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 269, "segment_span": [15, 38], "characterOffsetBegin": 266, "originalText": "the", "ArgType": null, "before": " "}, {"index": 37, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 280, "segment_span": [15, 38], "characterOffsetBegin": 270, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 38, "word": "graph", "lemma": "graph", "after": "", "pos": "NN", "characterOffsetEnd": 286, "segment_span": [15, 38], "characterOffsetBegin": 281, "originalText": "graph", "ArgType": null, "before": " "}, {"index": 39, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 287, "characterOffsetBegin": 286, "originalText": ".", "ArgType": null, "before": ""}], "text": "( Bunescu and Mooney , 2005a ) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph ."}, {"tokens": [{"index": 1, "word": "Although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 296, "segment_span": [0, 10], "characterOffsetBegin": 288, "originalText": "Although", "ArgType": null, "before": " "}, {"index": 2, "word": "approaches", "lemma": "approach", "after": " ", "pos": "NNS", "characterOffsetEnd": 307, "segment_span": [0, 10], "characterOffsetBegin": 297, "originalText": "approaches", "ArgType": null, "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 310, "segment_span": [0, 10], "characterOffsetBegin": 308, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 313, "segment_span": [0, 10], "characterOffsetBegin": 311, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 5, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 318, "segment_span": [0, 10], "characterOffsetBegin": 314, "originalText": "have", "ArgType": null, "before": " "}, {"index": 6, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 323, "segment_span": [0, 10], "characterOffsetBegin": 319, "originalText": "been", "ArgType": null, "before": " "}, {"index": 7, "word": "dominated", "characterOffsetEnd": 333, "after": " ", "pos": "VBN", "is_root": true, "lemma": "dominate", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 324, "before": " ", "originalText": "dominated", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 336, "segment_span": [0, 10], "characterOffsetBegin": 334, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "kernel-based", "lemma": "kernel-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 349, "segment_span": [0, 10], "characterOffsetBegin": 337, "originalText": "kernel-based", "ArgType": null, "before": " "}, {"index": 10, "word": "methods", "lemma": "method", "after": "", "pos": "NNS", "characterOffsetEnd": 357, "segment_span": [0, 10], "characterOffsetBegin": 350, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 358, "segment_span": [10, 24], "characterOffsetBegin": 357, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "until", "lemma": "until", "after": " ", "pos": "IN", "characterOffsetEnd": 364, "segment_span": [11, 13], "characterOffsetBegin": 359, "originalText": "until", "ArgType": null, "before": " "}, {"index": 13, "word": "now", "lemma": "now", "after": "", "pos": "RB", "characterOffsetEnd": 368, "segment_span": [11, 13], "characterOffsetBegin": 365, "originalText": "now", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 369, "segment_span": [10, 24], "characterOffsetBegin": 368, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "most", "lemma": "most", "after": " ", "pos": "JJS", "characterOffsetEnd": 374, "segment_span": [10, 24], "characterOffsetBegin": 370, "originalText": "most", "ArgType": "subj", "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 377, "segment_span": [10, 24], "characterOffsetBegin": 375, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 386, "segment_span": [10, 24], "characterOffsetBegin": 378, "originalText": "research", "ArgType": null, "before": " "}, {"index": 18, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 389, "segment_span": [10, 24], "characterOffsetBegin": 387, "originalText": "in", "ArgType": null, "before": " "}, {"index": 19, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 394, "segment_span": [10, 24], "characterOffsetBegin": 390, "originalText": "this", "ArgType": null, "before": " "}, {"index": 20, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 399, "segment_span": [10, 24], "characterOffsetBegin": 395, "originalText": "line", "ArgType": null, "before": " "}, {"index": 21, "word": "has", "lemma": "have", "after": " ", "pos": "VBZ", "characterOffsetEnd": 403, "segment_span": [10, 24], "characterOffsetBegin": 400, "originalText": "has", "ArgType": null, "before": " "}, {"index": 22, "word": "used", "characterOffsetEnd": 408, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [10, 24], "tense": "N", "characterOffsetBegin": 404, "originalText": "used", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 412, "segment_span": [10, 24], "characterOffsetBegin": 409, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 419, "segment_span": [10, 24], "characterOffsetBegin": 413, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 422, "segment_span": [24, 60], "characterOffsetBegin": 420, "originalText": "as", "ArgType": null, "before": " "}, {"index": 26, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 427, "segment_span": [24, 60], "characterOffsetBegin": 423, "originalText": "some", "ArgType": null, "before": " "}, {"index": 27, "word": "similarity", "lemma": "similarity", "after": " ", "pos": "NN", "characterOffsetEnd": 438, "segment_span": [24, 60], "characterOffsetBegin": 428, "originalText": "similarity", "ArgType": "subj", "before": " "}, {"index": 28, "word": "measures", "characterOffsetEnd": 447, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "measure", "segment_span": [24, 60], "tense": "Z", "characterOffsetBegin": 439, "originalText": "measures", "ArgType": null, "before": " "}, {"index": 29, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 452, "segment_span": [24, 60], "characterOffsetBegin": 448, "originalText": "over", "ArgType": null, "before": " "}, {"index": 30, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 460, "segment_span": [24, 60], "characterOffsetBegin": 453, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 31, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 469, "segment_span": [24, 60], "characterOffsetBegin": 461, "originalText": "features", "ArgType": null, "before": " "}, {"index": 32, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 471, "segment_span": [24, 60], "characterOffsetBegin": 470, "originalText": "(", "ArgType": null, "before": " "}, {"index": 33, "word": "Zelenko", "lemma": "Zelenko", "after": " ", "pos": "NNP", "characterOffsetEnd": 478, "segment_span": [24, 60], "characterOffsetBegin": 471, "originalText": "Zelenko", "ArgType": null, "before": ""}, {"index": 34, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 481, "segment_span": [24, 60], "characterOffsetBegin": 479, "originalText": "et", "ArgType": null, "before": " "}, {"index": 35, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 485, "segment_span": [24, 60], "characterOffsetBegin": 482, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 36, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 486, "segment_span": [24, 60], "characterOffsetBegin": 485, "originalText": ",", "ArgType": null, "before": ""}, {"index": 37, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 491, "segment_span": [24, 60], "characterOffsetBegin": 487, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 38, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 492, "segment_span": [24, 60], "characterOffsetBegin": 491, "originalText": ";", "ArgType": null, "before": ""}, {"index": 39, "word": "Culotta", "lemma": "Culotta", "after": " ", "pos": "NNP", "characterOffsetEnd": 500, "segment_span": [24, 60], "characterOffsetBegin": 493, "originalText": "Culotta", "ArgType": null, "before": " "}, {"index": 40, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 504, "segment_span": [24, 60], "characterOffsetBegin": 501, "originalText": "and", "ArgType": null, "before": " "}, {"index": 41, "word": "Sorensen", "lemma": "Sorensen", "after": "", "pos": "NNP", "characterOffsetEnd": 513, "segment_span": [24, 60], "characterOffsetBegin": 505, "originalText": "Sorensen", "ArgType": null, "before": " "}, {"index": 42, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 514, "segment_span": [24, 60], "characterOffsetBegin": 513, "originalText": ",", "ArgType": null, "before": ""}, {"index": 43, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 519, "segment_span": [24, 60], "characterOffsetBegin": 515, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 44, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 520, "segment_span": [24, 60], "characterOffsetBegin": 519, "originalText": ";", "ArgType": null, "before": ""}, {"index": 45, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 528, "segment_span": [24, 60], "characterOffsetBegin": 521, "originalText": "Bunescu", "ArgType": null, "before": " "}, {"index": 46, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 532, "segment_span": [24, 60], "characterOffsetBegin": 529, "originalText": "and", "ArgType": null, "before": " "}, {"index": 47, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 539, "segment_span": [24, 60], "characterOffsetBegin": 533, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 48, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 540, "segment_span": [24, 60], "characterOffsetBegin": 539, "originalText": ",", "ArgType": null, "before": ""}, {"index": 49, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 546, "segment_span": [24, 60], "characterOffsetBegin": 541, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 50, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 547, "segment_span": [24, 60], "characterOffsetBegin": 546, "originalText": ";", "ArgType": null, "before": ""}, {"index": 51, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 553, "segment_span": [24, 60], "characterOffsetBegin": 548, "originalText": "Zhang", "ArgType": null, "before": " "}, {"index": 52, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 556, "segment_span": [24, 60], "characterOffsetBegin": 554, "originalText": "et", "ArgType": null, "before": " "}, {"index": 53, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 560, "segment_span": [24, 60], "characterOffsetBegin": 557, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 54, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 561, "segment_span": [24, 60], "characterOffsetBegin": 560, "originalText": ",", "ArgType": null, "before": ""}, {"index": 55, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 566, "segment_span": [24, 60], "characterOffsetBegin": 562, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 56, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 567, "segment_span": [24, 60], "characterOffsetBegin": 566, "originalText": ";", "ArgType": null, "before": ""}, {"index": 57, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 572, "segment_span": [24, 60], "characterOffsetBegin": 568, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 58, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 573, "segment_span": [24, 60], "characterOffsetBegin": 572, "originalText": ",", "ArgType": null, "before": ""}, {"index": 59, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 578, "segment_span": [24, 60], "characterOffsetBegin": 574, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 60, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 579, "segment_span": [24, 60], "characterOffsetBegin": 578, "originalText": ")", "ArgType": null, "before": ""}, {"index": 61, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 580, "characterOffsetBegin": 579, "originalText": ".", "ArgType": null, "before": ""}], "text": "Although approaches in RE have been dominated by kernel-based methods , until now , most of research in this line has used the kernel as some similarity measures over diverse features ( Zelenko et al. , 2002 ; Culotta and Sorensen , 2004 ; Bunescu and Mooney , 2005a ; Zhang et al. , 2005 ; Wang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 586, "segment_span": [0, 17], "characterOffsetBegin": 581, "originalText": "These", "ArgType": "subj", "before": " "}, {"index": 2, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 590, "segment_span": [0, 17], "characterOffsetBegin": 587, "originalText": "are", "ArgType": null, "before": " "}, {"index": 3, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 594, "segment_span": [0, 17], "characterOffsetBegin": 591, "originalText": "not", "ArgType": null, "before": " "}, {"index": 4, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 606, "segment_span": [0, 17], "characterOffsetBegin": 595, "originalText": "convolution", "ArgType": "verb", "before": " "}, {"index": 5, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 614, "segment_span": [0, 17], "characterOffsetBegin": 607, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 618, "segment_span": [0, 17], "characterOffsetBegin": 615, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "produce", "lemma": "produce", "after": " ", "pos": "VBP", "characterOffsetEnd": 626, "segment_span": [0, 17], "characterOffsetBegin": 619, "originalText": "produce", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 628, "segment_span": [0, 17], "characterOffsetBegin": 627, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "much", "lemma": "much", "after": " ", "pos": "RB", "characterOffsetEnd": 633, "segment_span": [0, 17], "characterOffsetBegin": 629, "originalText": "much", "ArgType": null, "before": " "}, {"index": 10, "word": "lower", "lemma": "lower", "after": " ", "pos": "JJR", "characterOffsetEnd": 639, "segment_span": [0, 17], "characterOffsetBegin": 634, "originalText": "lower", "ArgType": null, "before": " "}, {"index": 11, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 646, "segment_span": [0, 17], "characterOffsetBegin": 640, "originalText": "number", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 649, "segment_span": [0, 17], "characterOffsetBegin": 647, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "substructures", "lemma": "substructure", "after": " ", "pos": "NNS", "characterOffsetEnd": 663, "segment_span": [0, 17], "characterOffsetBegin": 650, "originalText": "substructures", "ArgType": null, "before": " "}, {"index": 14, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 668, "segment_span": [0, 17], "characterOffsetBegin": 664, "originalText": "than", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 672, "segment_span": [0, 17], "characterOffsetBegin": 669, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "PT", "lemma": "pt", "after": " ", "pos": "NN", "characterOffsetEnd": 675, "segment_span": [0, 17], "characterOffsetBegin": 673, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 17, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 682, "segment_span": [0, 17], "characterOffsetBegin": 676, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 683, "characterOffsetBegin": 682, "originalText": ".", "ArgType": null, "before": ""}], "text": "These are not convolution kernels and produce a much lower number of substructures than the PT kernel ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 685, "segment_span": [0, 43], "characterOffsetBegin": 684, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "recent", "lemma": "recent", "after": " ", "pos": "JJ", "characterOffsetEnd": 692, "segment_span": [0, 43], "characterOffsetBegin": 686, "originalText": "recent", "ArgType": null, "before": " "}, {"index": 3, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 701, "segment_span": [0, 43], "characterOffsetBegin": 693, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 4, "word": "successfully", "lemma": "successfully", "after": " ", "pos": "RB", "characterOffsetEnd": 714, "segment_span": [0, 43], "characterOffsetBegin": 702, "originalText": "successfully", "ArgType": null, "before": " "}, {"index": 5, "word": "employs", "characterOffsetEnd": 722, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "employ", "segment_span": [0, 43], "tense": "Z", "characterOffsetBegin": 715, "originalText": "employs", "ArgType": "verb", "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 724, "segment_span": [0, 43], "characterOffsetBegin": 723, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 736, "segment_span": [0, 43], "characterOffsetBegin": 725, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 8, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 741, "segment_span": [0, 43], "characterOffsetBegin": 737, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 9, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 748, "segment_span": [0, 43], "characterOffsetBegin": 742, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 750, "segment_span": [0, 43], "characterOffsetBegin": 749, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 752, "segment_span": [0, 43], "characterOffsetBegin": 750, "originalText": "of", "ArgType": null, "before": ""}, {"index": 12, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 757, "segment_span": [0, 43], "characterOffsetBegin": 753, "originalText": "type", "ArgType": null, "before": " "}, {"index": 13, "word": "SST", "lemma": "sst", "after": "", "pos": "NN", "characterOffsetEnd": 761, "segment_span": [0, 43], "characterOffsetBegin": 758, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 762, "segment_span": [0, 43], "characterOffsetBegin": 761, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 767, "segment_span": [0, 43], "characterOffsetBegin": 763, "originalText": "over", "ArgType": null, "before": " "}, {"index": 16, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 779, "segment_span": [0, 43], "characterOffsetBegin": 768, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 17, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 789, "segment_span": [0, 43], "characterOffsetBegin": 780, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 18, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 795, "segment_span": [0, 43], "characterOffsetBegin": 790, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 19, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 800, "segment_span": [0, 43], "characterOffsetBegin": 796, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 802, "segment_span": [0, 43], "characterOffsetBegin": 801, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 807, "segment_span": [0, 43], "characterOffsetBegin": 802, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 22, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 810, "segment_span": [0, 43], "characterOffsetBegin": 808, "originalText": "et", "ArgType": null, "before": " "}, {"index": 23, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 814, "segment_span": [0, 43], "characterOffsetBegin": 811, "originalText": "al.", "ArgType": "dobj", "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 815, "segment_span": [0, 43], "characterOffsetBegin": 814, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 820, "segment_span": [0, 43], "characterOffsetBegin": 816, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 26, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 821, "segment_span": [0, 43], "characterOffsetBegin": 820, "originalText": ";", "ArgType": null, "before": ""}, {"index": 27, "word": "Zhou", "lemma": "Zhou", "after": " ", "pos": "NNP", "characterOffsetEnd": 826, "segment_span": [0, 43], "characterOffsetBegin": 822, "originalText": "Zhou", "ArgType": null, "before": " "}, {"index": 28, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 829, "segment_span": [0, 43], "characterOffsetBegin": 827, "originalText": "et", "ArgType": null, "before": " "}, {"index": 29, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 833, "segment_span": [0, 43], "characterOffsetBegin": 830, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 30, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 834, "segment_span": [0, 43], "characterOffsetBegin": 833, "originalText": ",", "ArgType": null, "before": ""}, {"index": 31, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 839, "segment_span": [0, 43], "characterOffsetBegin": 835, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 840, "segment_span": [0, 43], "characterOffsetBegin": 839, "originalText": ")", "ArgType": null, "before": ""}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 841, "segment_span": [0, 43], "characterOffsetBegin": 840, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 845, "segment_span": [0, 43], "characterOffsetBegin": 842, "originalText": "but", "ArgType": null, "before": " "}, {"index": 35, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 848, "segment_span": [0, 43], "characterOffsetBegin": 846, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 36, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 853, "segment_span": [0, 43], "characterOffsetBegin": 849, "originalText": "does", "ArgType": null, "before": " "}, {"index": 37, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 857, "segment_span": [0, 43], "characterOffsetBegin": 854, "originalText": "not", "ArgType": null, "before": " "}, {"index": 38, "word": "capture", "lemma": "capture", "after": " ", "pos": "VB", "characterOffsetEnd": 865, "segment_span": [0, 43], "characterOffsetBegin": 858, "originalText": "capture", "ArgType": null, "before": " "}, {"index": 39, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 877, "segment_span": [0, 43], "characterOffsetBegin": 866, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 40, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 887, "segment_span": [0, 43], "characterOffsetBegin": 878, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 41, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 890, "segment_span": [0, 43], "characterOffsetBegin": 888, "originalText": "in", "ArgType": null, "before": " "}, {"index": 42, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 901, "segment_span": [0, 43], "characterOffsetBegin": 891, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 43, "word": "structure", "lemma": "structure", "after": "", "pos": "NN", "characterOffsetEnd": 911, "segment_span": [0, 43], "characterOffsetBegin": 902, "originalText": "structure", "ArgType": null, "before": " "}, {"index": 44, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 912, "characterOffsetBegin": 911, "originalText": ".", "ArgType": null, "before": ""}], "text": "A recent approach successfully employs a convolution tree kernel ( of type SST ) over constituent syntactic parse tree ( Zhang et al. , 2006 ; Zhou et al. , 2007 ) , but it does not capture grammatical relations in dependency structure ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 915, "segment_span": [0, 2], "characterOffsetBegin": 913, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "believe", "characterOffsetEnd": 923, "after": " ", "pos": "VBP", "is_root": true, "lemma": "believe", "segment_span": [0, 2], "tense": "P", "characterOffsetBegin": 916, "originalText": "believe", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 928, "segment_span": [2, 30], "characterOffsetBegin": 924, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 931, "segment_span": [2, 30], "characterOffsetBegin": 929, "originalText": "an", "ArgType": null, "before": " "}, {"index": 5, "word": "efficient", "lemma": "efficient", "after": " ", "pos": "JJ", "characterOffsetEnd": 941, "segment_span": [2, 30], "characterOffsetBegin": 932, "originalText": "efficient", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 945, "segment_span": [2, 30], "characterOffsetBegin": 942, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "appropriate", "lemma": "appropriate", "after": " ", "pos": "JJ", "characterOffsetEnd": 957, "segment_span": [2, 30], "characterOffsetBegin": 946, "originalText": "appropriate", "ArgType": null, "before": " "}, {"index": 8, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 964, "segment_span": [2, 30], "characterOffsetBegin": 958, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 968, "segment_span": [2, 30], "characterOffsetBegin": 965, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 971, "segment_span": [2, 30], "characterOffsetBegin": 969, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "used", "characterOffsetEnd": 976, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [2, 30], "tense": "N", "characterOffsetBegin": 972, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 979, "segment_span": [2, 30], "characterOffsetBegin": 977, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "solve", "lemma": "solve", "after": " ", "pos": "VB", "characterOffsetEnd": 985, "segment_span": [2, 30], "characterOffsetBegin": 980, "originalText": "solve", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 989, "segment_span": [2, 30], "characterOffsetBegin": 986, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 992, "segment_span": [2, 30], "characterOffsetBegin": 990, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 16, "word": "problem", "lemma": "problem", "after": "", "pos": "NN", "characterOffsetEnd": 1000, "segment_span": [2, 30], "characterOffsetBegin": 993, "originalText": "problem", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1001, "segment_span": [2, 30], "characterOffsetBegin": 1000, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "exploiting", "lemma": "exploit", "after": " ", "pos": "VBG", "characterOffsetEnd": 1012, "segment_span": [2, 30], "characterOffsetBegin": 1002, "originalText": "exploiting", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1016, "segment_span": [2, 30], "characterOffsetBegin": 1013, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "advantages", "lemma": "advantage", "after": " ", "pos": "NNS", "characterOffsetEnd": 1027, "segment_span": [2, 30], "characterOffsetBegin": 1017, "originalText": "advantages", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1030, "segment_span": [2, 30], "characterOffsetBegin": 1028, "originalText": "of", "ArgType": null, "before": " "}, {"index": 22, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1041, "segment_span": [2, 30], "characterOffsetBegin": 1031, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 23, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 1052, "segment_span": [2, 30], "characterOffsetBegin": 1042, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1053, "segment_span": [2, 30], "characterOffsetBegin": 1052, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 1065, "segment_span": [2, 30], "characterOffsetBegin": 1054, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 26, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1070, "segment_span": [2, 30], "characterOffsetBegin": 1066, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 27, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1078, "segment_span": [2, 30], "characterOffsetBegin": 1071, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 28, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1082, "segment_span": [2, 30], "characterOffsetBegin": 1079, "originalText": "and", "ArgType": null, "before": " "}, {"index": 29, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 1091, "segment_span": [2, 30], "characterOffsetBegin": 1083, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 30, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 1099, "segment_span": [2, 30], "characterOffsetBegin": 1092, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1100, "characterOffsetBegin": 1099, "originalText": ".", "ArgType": null, "before": ""}], "text": "We believe that an efficient and appropriate kernel can be used to solve the RE problem , exploiting the advantages of dependency structures , convolution tree kernels and sequence kernels ."}]}], "title": "2 Related Work"}, {"num": 4, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 23], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 23], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 23], "characterOffsetBegin": 8, "originalText": "section", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [0, 23], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "give", "characterOffsetEnd": 23, "after": " ", "pos": "VBP", "is_root": true, "lemma": "give", "segment_span": [0, 23], "tense": "P", "characterOffsetBegin": 19, "originalText": "give", "ArgType": "verb", "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 25, "segment_span": [0, 23], "characterOffsetBegin": 24, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "brief", "lemma": "brief", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [0, 23], "characterOffsetBegin": 26, "originalText": "brief", "ArgType": null, "before": " "}, {"index": 8, "word": "introduction", "lemma": "introduction", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 23], "characterOffsetBegin": 32, "originalText": "introduction", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 47, "segment_span": [0, 23], "characterOffsetBegin": 45, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "support", "lemma": "support", "after": " ", "pos": "VB", "characterOffsetEnd": 55, "segment_span": [0, 23], "characterOffsetBegin": 48, "originalText": "support", "ArgType": null, "before": " "}, {"index": 11, "word": "vector", "lemma": "vector", "after": " ", "pos": "NN", "characterOffsetEnd": 62, "segment_span": [0, 23], "characterOffsetBegin": 56, "originalText": "vector", "ArgType": null, "before": " "}, {"index": 12, "word": "machines", "lemma": "machine", "after": "", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [0, 23], "characterOffsetBegin": 63, "originalText": "machines", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 72, "segment_span": [0, 23], "characterOffsetBegin": 71, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 23], "characterOffsetBegin": 73, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 15, "word": "methods", "lemma": "method", "after": "", "pos": "NNS", "characterOffsetEnd": 87, "segment_span": [0, 23], "characterOffsetBegin": 80, "originalText": "methods", "ArgType": "dobj", "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 88, "segment_span": [0, 23], "characterOffsetBegin": 87, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 96, "segment_span": [0, 23], "characterOffsetBegin": 89, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 18, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 23], "characterOffsetBegin": 97, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 105, "segment_span": [0, 23], "characterOffsetBegin": 102, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 114, "segment_span": [0, 23], "characterOffsetBegin": 106, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 21, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 23], "characterOffsetBegin": 115, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 22, "word": "spaces", "lemma": "space", "after": "", "pos": "NNS", "characterOffsetEnd": 128, "segment_span": [0, 23], "characterOffsetBegin": 122, "originalText": "spaces", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 129, "segment_span": [0, 23], "characterOffsetBegin": 128, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 135, "segment_span": [23, 31], "characterOffsetBegin": 130, "originalText": "which", "ArgType": null, "before": " "}, {"index": 25, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 139, "segment_span": [23, 31], "characterOffsetBegin": 136, "originalText": "can", "ArgType": null, "before": " "}, {"index": 26, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 142, "segment_span": [23, 31], "characterOffsetBegin": 140, "originalText": "be", "ArgType": null, "before": " "}, {"index": 27, "word": "applied", "characterOffsetEnd": 150, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [23, 31], "tense": "N", "characterOffsetBegin": 143, "before": " ", "originalText": "applied", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 28, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 153, "segment_span": [23, 31], "characterOffsetBegin": 151, "originalText": "to", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 157, "segment_span": [23, 31], "characterOffsetBegin": 154, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 160, "segment_span": [23, 31], "characterOffsetBegin": 158, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 31, "word": "task", "lemma": "task", "after": "", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [23, 31], "characterOffsetBegin": 161, "originalText": "task", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 166, "characterOffsetBegin": 165, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this section we give a brief introduction to support vector machines , kernel methods , diverse tree and sequence kernel spaces , which can be applied to the RE task ."}]}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Support", "lemma": "support", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 25], "characterOffsetBegin": 0, "originalText": "Support", "ArgType": null, "before": ""}, {"index": 2, "word": "Vector", "lemma": "Vector", "after": " ", "pos": "NNP", "characterOffsetEnd": 14, "segment_span": [0, 25], "characterOffsetBegin": 8, "originalText": "Vector", "ArgType": null, "before": " "}, {"index": 3, "word": "Machines", "lemma": "Machines", "after": " ", "pos": "NNP", "characterOffsetEnd": 23, "segment_span": [0, 25], "characterOffsetBegin": 15, "originalText": "Machines", "ArgType": "subj", "before": " "}, {"index": 4, "word": "refer", "characterOffsetEnd": 29, "after": " ", "pos": "VB", "is_root": true, "lemma": "refer", "segment_span": [0, 25], "tense": "B", "characterOffsetBegin": 24, "originalText": "refer", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 32, "segment_span": [0, 25], "characterOffsetBegin": 30, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 25], "characterOffsetBegin": 33, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "supervised", "lemma": "supervised", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 25], "characterOffsetBegin": 35, "originalText": "supervised", "ArgType": null, "before": " "}, {"index": 8, "word": "machine", "lemma": "machine", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 25], "characterOffsetBegin": 46, "originalText": "machine", "ArgType": null, "before": " "}, {"index": 9, "word": "learning", "lemma": "learn", "after": " ", "pos": "VBG", "characterOffsetEnd": 62, "segment_span": [0, 25], "characterOffsetBegin": 54, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 10, "word": "technique", "lemma": "technique", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 25], "characterOffsetBegin": 63, "originalText": "technique", "ArgType": null, "before": " "}, {"index": 11, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 78, "segment_span": [0, 25], "characterOffsetBegin": 73, "originalText": "based", "ArgType": null, "before": " "}, {"index": 12, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 81, "segment_span": [0, 25], "characterOffsetBegin": 79, "originalText": "on", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 85, "segment_span": [0, 25], "characterOffsetBegin": 82, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "latest", "lemma": "latest", "after": " ", "pos": "JJS", "characterOffsetEnd": 92, "segment_span": [0, 25], "characterOffsetBegin": 86, "originalText": "latest", "ArgType": null, "before": " "}, {"index": 15, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 100, "segment_span": [0, 25], "characterOffsetBegin": 93, "originalText": "results", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [0, 25], "characterOffsetBegin": 101, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [0, 25], "characterOffsetBegin": 104, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "statistical", "lemma": "statistical", "after": " ", "pos": "JJ", "characterOffsetEnd": 119, "segment_span": [0, 25], "characterOffsetBegin": 108, "originalText": "statistical", "ArgType": null, "before": " "}, {"index": 19, "word": "learning", "lemma": "learning", "after": " ", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [0, 25], "characterOffsetBegin": 120, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 20, "word": "theory", "lemma": "theory", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [0, 25], "characterOffsetBegin": 129, "originalText": "theory", "ArgType": null, "before": " "}, {"index": 21, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 137, "segment_span": [0, 25], "characterOffsetBegin": 136, "originalText": "(", "ArgType": null, "before": " "}, {"index": 22, "word": "Vapnik", "lemma": "Vapnik", "after": "", "pos": "NNP", "characterOffsetEnd": 143, "segment_span": [0, 25], "characterOffsetBegin": 137, "originalText": "Vapnik", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 144, "segment_span": [0, 25], "characterOffsetBegin": 143, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "1998", "lemma": "1998", "after": "", "pos": "CD", "characterOffsetEnd": 149, "segment_span": [0, 25], "characterOffsetBegin": 145, "originalText": "1998", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 150, "segment_span": [0, 25], "characterOffsetBegin": 149, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 151, "characterOffsetBegin": 150, "originalText": ".", "ArgType": null, "before": ""}], "text": "Support Vector Machines refer to a supervised machine learning technique based on the latest results of the statistical learning theory ( Vapnik , 1998 ) ."}, {"tokens": [{"index": 1, "word": "Given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 157, "segment_span": [0, 34], "characterOffsetBegin": 152, "originalText": "Given", "ArgType": null, "before": " "}, {"index": 2, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 159, "segment_span": [0, 34], "characterOffsetBegin": 158, "originalText": "a", "ArgType": null, "before": " "}, {"index": 3, "word": "vector", "lemma": "vector", "after": " ", "pos": "NN", "characterOffsetEnd": 166, "segment_span": [0, 34], "characterOffsetBegin": 160, "originalText": "vector", "ArgType": null, "before": " "}, {"index": 4, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [0, 34], "characterOffsetBegin": 167, "originalText": "space", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 176, "segment_span": [0, 34], "characterOffsetBegin": 173, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 178, "segment_span": [0, 34], "characterOffsetBegin": 177, "originalText": "a", "ArgType": null, "before": " "}, {"index": 7, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [0, 34], "characterOffsetBegin": 179, "originalText": "set", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 185, "segment_span": [0, 34], "characterOffsetBegin": 183, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "training", "lemma": "training", "after": " ", "pos": "NN", "characterOffsetEnd": 194, "segment_span": [0, 34], "characterOffsetBegin": 186, "originalText": "training", "ArgType": null, "before": " "}, {"index": 10, "word": "points", "lemma": "point", "after": "", "pos": "NNS", "characterOffsetEnd": 201, "segment_span": [0, 34], "characterOffsetBegin": 195, "originalText": "points", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 202, "segment_span": [0, 34], "characterOffsetBegin": 201, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 207, "segment_span": [0, 34], "characterOffsetBegin": 203, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 13, "word": "positive", "lemma": "positive", "after": " ", "pos": "JJ", "characterOffsetEnd": 216, "segment_span": [0, 34], "characterOffsetBegin": 208, "originalText": "positive", "ArgType": null, "before": " "}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 220, "segment_span": [0, 34], "characterOffsetBegin": 217, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "negative", "lemma": "negative", "after": " ", "pos": "JJ", "characterOffsetEnd": 229, "segment_span": [0, 34], "characterOffsetBegin": 221, "originalText": "negative", "ArgType": null, "before": " "}, {"index": 16, "word": "examples", "lemma": "example", "after": "", "pos": "NNS", "characterOffsetEnd": 238, "segment_span": [0, 34], "characterOffsetBegin": 230, "originalText": "examples", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 239, "segment_span": [0, 34], "characterOffsetBegin": 238, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "SVMs", "lemma": "svm", "after": " ", "pos": "NNS", "characterOffsetEnd": 244, "segment_span": [0, 34], "characterOffsetBegin": 240, "originalText": "SVMs", "ArgType": "subj", "before": " "}, {"index": 19, "word": "find", "characterOffsetEnd": 249, "after": " ", "pos": "VBP", "is_root": true, "lemma": "find", "segment_span": [0, 34], "tense": "P", "characterOffsetBegin": 245, "originalText": "find", "ArgType": "verb", "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 251, "segment_span": [0, 34], "characterOffsetBegin": 250, "originalText": "a", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "separating", "lemma": "separate", "after": " ", "pos": "VBG", "characterOffsetEnd": 262, "segment_span": [0, 34], "characterOffsetBegin": 252, "originalText": "separating", "ArgType": null, "before": " "}, {"index": 22, "word": "hyperplane", "lemma": "hyperplane", "after": " ", "pos": "NN", "characterOffsetEnd": 273, "segment_span": [0, 34], "characterOffsetBegin": 263, "originalText": "hyperplane", "ArgType": null, "before": " "}, {"index": 23, "word": "H", "lemma": "h", "after": "", "pos": "NN", "characterOffsetEnd": 275, "segment_span": [0, 34], "characterOffsetBegin": 274, "originalText": "H", "ArgType": null, "before": " "}, {"index": 24, "word": "-LRB-~x-RRB-", "lemma": "-lrb-~x-rrb-", "after": " ", "pos": "NN", "characterOffsetEnd": 279, "segment_span": [0, 34], "characterOffsetBegin": 275, "originalText": "(~x)", "ArgType": "dobj", "before": ""}, {"index": 25, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 281, "segment_span": [0, 34], "characterOffsetBegin": 280, "originalText": "=", "ArgType": null, "before": " "}, {"index": 26, "word": "\u00cf\u0089", "lemma": "\u00cf\u0089", "after": "", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [0, 34], "characterOffsetBegin": 282, "originalText": "\u00cf\u0089", "ArgType": null, "before": " "}, {"index": 27, "word": "~", "lemma": "~", "after": " ", "pos": "CD", "characterOffsetEnd": 284, "segment_span": [0, 34], "characterOffsetBegin": 283, "originalText": "~", "ArgType": null, "before": ""}, {"index": 28, "word": "x", "lemma": "x", "after": " ", "pos": "CC", "characterOffsetEnd": 286, "segment_span": [0, 34], "characterOffsetBegin": 285, "originalText": "x", "ArgType": null, "before": " "}, {"index": 29, "word": "x", "lemma": "x", "after": "", "pos": "CC", "characterOffsetEnd": 288, "segment_span": [0, 34], "characterOffsetBegin": 287, "originalText": "x", "ArgType": null, "before": " "}, {"index": 30, "word": "~", "lemma": "~", "after": " ", "pos": "NN", "characterOffsetEnd": 289, "segment_span": [0, 34], "characterOffsetBegin": 288, "originalText": "~", "ArgType": null, "before": ""}, {"index": 31, "word": "+", "lemma": "+", "after": " ", "pos": "CC", "characterOffsetEnd": 291, "segment_span": [0, 34], "characterOffsetBegin": 290, "originalText": "+", "ArgType": null, "before": " "}, {"index": 32, "word": "b", "lemma": "b", "after": " ", "pos": "NN", "characterOffsetEnd": 293, "segment_span": [0, 34], "characterOffsetBegin": 292, "originalText": "b", "ArgType": null, "before": " "}, {"index": 33, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 295, "segment_span": [0, 34], "characterOffsetBegin": 294, "originalText": "=", "ArgType": null, "before": " "}, {"index": 34, "word": "0", "lemma": "0", "after": " ", "pos": "CD", "characterOffsetEnd": 297, "segment_span": [0, 34], "characterOffsetBegin": 296, "originalText": "0", "ArgType": "dobj", "before": " "}, {"index": 35, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 303, "segment_span": [34, 44], "characterOffsetBegin": 298, "originalText": "where", "ArgType": null, "before": " "}, {"index": 36, "word": "\u00cf\u0089", "lemma": "\u00cf\u0089", "after": " ", "pos": "JJ", "characterOffsetEnd": 305, "segment_span": [34, 44], "characterOffsetBegin": 304, "originalText": "\u00cf\u0089", "ArgType": null, "before": " "}, {"index": 37, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 307, "segment_span": [34, 44], "characterOffsetBegin": 306, "originalText": "E", "ArgType": null, "before": " "}, {"index": 38, "word": "Rn", "lemma": "rn", "after": " ", "pos": "NN", "characterOffsetEnd": 310, "segment_span": [34, 44], "characterOffsetBegin": 308, "originalText": "Rn", "ArgType": null, "before": " "}, {"index": 39, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 314, "segment_span": [34, 44], "characterOffsetBegin": 311, "originalText": "and", "ArgType": null, "before": " "}, {"index": 40, "word": "b", "lemma": "b", "after": " ", "pos": "NN", "characterOffsetEnd": 316, "segment_span": [34, 44], "characterOffsetBegin": 315, "originalText": "b", "ArgType": null, "before": " "}, {"index": 41, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 318, "segment_span": [34, 44], "characterOffsetBegin": 317, "originalText": "E", "ArgType": null, "before": " "}, {"index": 42, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 320, "segment_span": [34, 44], "characterOffsetBegin": 319, "originalText": "R", "ArgType": null, "before": " "}, {"index": 43, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 324, "segment_span": [34, 44], "characterOffsetBegin": 321, "originalText": "are", "ArgType": null, "before": " "}, {"index": 44, "word": "learned", "characterOffsetEnd": 332, "after": " ", "pos": "VBN", "is_root": true, "lemma": "learn", "segment_span": [34, 44], "tense": "N", "characterOffsetBegin": 325, "before": " ", "originalText": "learned", "ArgType": null, "is_pass": true}, {"index": 45, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 335, "segment_span": [44, 56], "characterOffsetBegin": 333, "originalText": "by", "ArgType": null, "before": " "}, {"index": 46, "word": "applying", "characterOffsetEnd": 344, "after": " ", "pos": "VBG", "is_root": true, "lemma": "apply", "segment_span": [44, 56], "tense": "G", "characterOffsetBegin": 336, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 47, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 348, "segment_span": [44, 56], "characterOffsetBegin": 345, "originalText": "the", "ArgType": null, "before": " "}, {"index": 48, "word": "Structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 359, "segment_span": [44, 56], "characterOffsetBegin": 349, "originalText": "Structural", "ArgType": null, "before": " "}, {"index": 49, "word": "Risk", "lemma": "risk", "after": " ", "pos": "NN", "characterOffsetEnd": 364, "segment_span": [44, 56], "characterOffsetBegin": 360, "originalText": "Risk", "ArgType": null, "before": " "}, {"index": 50, "word": "Minimization", "lemma": "minimization", "after": " ", "pos": "NN", "characterOffsetEnd": 377, "segment_span": [44, 56], "characterOffsetBegin": 365, "originalText": "Minimization", "ArgType": null, "before": " "}, {"index": 51, "word": "principle", "lemma": "principle", "after": " ", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [44, 56], "characterOffsetBegin": 378, "originalText": "principle", "ArgType": "dobj", "before": " "}, {"index": 52, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 389, "segment_span": [44, 56], "characterOffsetBegin": 388, "originalText": "(", "ArgType": null, "before": " "}, {"index": 53, "word": "Vapnik", "lemma": "Vapnik", "after": "", "pos": "NNP", "characterOffsetEnd": 395, "segment_span": [44, 56], "characterOffsetBegin": 389, "originalText": "Vapnik", "ArgType": null, "before": ""}, {"index": 54, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 396, "segment_span": [44, 56], "characterOffsetBegin": 395, "originalText": ",", "ArgType": null, "before": ""}, {"index": 55, "word": "1995", "lemma": "1995", "after": "", "pos": "CD", "characterOffsetEnd": 401, "segment_span": [44, 56], "characterOffsetBegin": 397, "originalText": "1995", "ArgType": null, "before": " "}, {"index": 56, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 402, "segment_span": [44, 56], "characterOffsetBegin": 401, "originalText": ")", "ArgType": null, "before": ""}, {"index": 57, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 403, "characterOffsetBegin": 402, "originalText": ".", "ArgType": null, "before": ""}], "text": "Given a vector space and a set of training points , i.e. positive and negative examples , SVMs find a separating hyperplane H -LRB-~x-RRB- = \u00cf\u0089 ~ x x ~ + b = 0 where \u00cf\u0089 E Rn and b E R are learned by applying the Structural Risk Minimization principle ( Vapnik , 1995 ) ."}, {"tokens": [{"index": 1, "word": "SVMs", "lemma": "svm", "after": " ", "pos": "NNS", "characterOffsetEnd": 408, "segment_span": [0, 30], "characterOffsetBegin": 404, "originalText": "SVMs", "ArgType": "subj", "before": " "}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 411, "segment_span": [0, 30], "characterOffsetBegin": 409, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 413, "segment_span": [0, 30], "characterOffsetBegin": 412, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "binary", "lemma": "binary", "after": " ", "pos": "JJ", "characterOffsetEnd": 420, "segment_span": [0, 30], "characterOffsetBegin": 414, "originalText": "binary", "ArgType": null, "before": " "}, {"index": 5, "word": "classifier", "lemma": "classifier", "after": "", "pos": "NN", "characterOffsetEnd": 431, "segment_span": [0, 30], "characterOffsetBegin": 421, "originalText": "classifier", "ArgType": "verb", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 432, "segment_span": [0, 30], "characterOffsetBegin": 431, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 436, "segment_span": [0, 30], "characterOffsetBegin": 433, "originalText": "but", "ArgType": null, "before": " "}, {"index": 8, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 439, "segment_span": [0, 30], "characterOffsetBegin": 437, "originalText": "it", "ArgType": null, "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 443, "segment_span": [0, 30], "characterOffsetBegin": 440, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 446, "segment_span": [0, 30], "characterOffsetBegin": 444, "originalText": "be", "ArgType": null, "before": " "}, {"index": 11, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 453, "segment_span": [0, 30], "characterOffsetBegin": 447, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 12, "word": "extended", "lemma": "extend", "after": " ", "pos": "VBN", "characterOffsetEnd": 462, "segment_span": [0, 30], "characterOffsetBegin": 454, "originalText": "extended", "ArgType": null, "before": " "}, {"index": 13, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 465, "segment_span": [0, 30], "characterOffsetBegin": 463, "originalText": "to", "ArgType": null, "before": " "}, {"index": 14, "word": "multi-class", "lemma": "multi-class", "after": " ", "pos": "JJ", "characterOffsetEnd": 477, "segment_span": [0, 30], "characterOffsetBegin": 466, "originalText": "multi-class", "ArgType": null, "before": " "}, {"index": 15, "word": "classifier", "lemma": "classifier", "after": "", "pos": "NN", "characterOffsetEnd": 488, "segment_span": [0, 30], "characterOffsetBegin": 478, "originalText": "classifier", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 489, "segment_span": [0, 30], "characterOffsetBegin": 488, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 494, "segment_span": [0, 30], "characterOffsetBegin": 490, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 497, "segment_span": [0, 30], "characterOffsetBegin": 495, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "means", "lemma": "means", "after": " ", "pos": "NNS", "characterOffsetEnd": 503, "segment_span": [0, 30], "characterOffsetBegin": 498, "originalText": "means", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 506, "segment_span": [0, 30], "characterOffsetBegin": 504, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 510, "segment_span": [0, 30], "characterOffsetBegin": 507, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "one-vs-all", "lemma": "one-vs-all", "after": " ", "pos": "JJ", "characterOffsetEnd": 521, "segment_span": [0, 30], "characterOffsetBegin": 511, "originalText": "one-vs-all", "ArgType": null, "before": " "}, {"index": 23, "word": "method", "lemma": "method", "after": " ", "pos": "NN", "characterOffsetEnd": 528, "segment_span": [0, 30], "characterOffsetBegin": 522, "originalText": "method", "ArgType": null, "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 530, "segment_span": [0, 30], "characterOffsetBegin": 529, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "Rifkin", "lemma": "Rifkin", "after": " ", "pos": "NNP", "characterOffsetEnd": 536, "segment_span": [0, 30], "characterOffsetBegin": 530, "originalText": "Rifkin", "ArgType": null, "before": ""}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 540, "segment_span": [0, 30], "characterOffsetBegin": 537, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "Poggio", "lemma": "Poggio", "after": "", "pos": "NNP", "characterOffsetEnd": 547, "segment_span": [0, 30], "characterOffsetBegin": 541, "originalText": "Poggio", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 548, "segment_span": [0, 30], "characterOffsetBegin": 547, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 553, "segment_span": [0, 30], "characterOffsetBegin": 549, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 554, "segment_span": [0, 30], "characterOffsetBegin": 553, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 555, "characterOffsetBegin": 554, "originalText": ".", "ArgType": null, "before": ""}], "text": "SVMs is a binary classifier , but it can be easily extended to multi-class classifier , e.g. by means of the one-vs-all method ( Rifkin and Poggio , 2002 ) ."}, {"tokens": [{"index": 1, "word": "One", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 559, "segment_span": [0, 28], "characterOffsetBegin": 556, "originalText": "One", "ArgType": null, "before": " "}, {"index": 2, "word": "strong", "lemma": "strong", "after": " ", "pos": "JJ", "characterOffsetEnd": 566, "segment_span": [0, 28], "characterOffsetBegin": 560, "originalText": "strong", "ArgType": null, "before": " "}, {"index": 3, "word": "point", "lemma": "point", "after": " ", "pos": "NN", "characterOffsetEnd": 572, "segment_span": [0, 28], "characterOffsetBegin": 567, "originalText": "point", "ArgType": "subj", "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 575, "segment_span": [0, 28], "characterOffsetBegin": 573, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "SVMs", "lemma": "svm", "after": " ", "pos": "NNS", "characterOffsetEnd": 580, "segment_span": [0, 28], "characterOffsetBegin": 576, "originalText": "SVMs", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 583, "segment_span": [0, 28], "characterOffsetBegin": 581, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 587, "segment_span": [0, 28], "characterOffsetBegin": 584, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "possibility", "lemma": "possibility", "after": " ", "pos": "NN", "characterOffsetEnd": 599, "segment_span": [0, 28], "characterOffsetBegin": 588, "originalText": "possibility", "ArgType": "verb", "before": " "}, {"index": 9, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 602, "segment_span": [0, 28], "characterOffsetBegin": 600, "originalText": "to", "ArgType": null, "before": " "}, {"index": 10, "word": "apply", "lemma": "apply", "after": " ", "pos": "VB", "characterOffsetEnd": 608, "segment_span": [0, 28], "characterOffsetBegin": 603, "originalText": "apply", "ArgType": null, "before": " "}, {"index": 11, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 615, "segment_span": [0, 28], "characterOffsetBegin": 609, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 12, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 623, "segment_span": [0, 28], "characterOffsetBegin": 616, "originalText": "methods", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 625, "segment_span": [0, 28], "characterOffsetBegin": 624, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "robert", "lemma": "robert", "after": " ", "pos": "NN", "characterOffsetEnd": 631, "segment_span": [0, 28], "characterOffsetBegin": 625, "originalText": "robert", "ArgType": null, "before": ""}, {"index": 15, "word": "Mller", "lemma": "Mller", "after": " ", "pos": "NNP", "characterOffsetEnd": 637, "segment_span": [0, 28], "characterOffsetBegin": 632, "originalText": "Mller", "ArgType": null, "before": " "}, {"index": 16, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 640, "segment_span": [0, 28], "characterOffsetBegin": 638, "originalText": "et", "ArgType": null, "before": " "}, {"index": 17, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 644, "segment_span": [0, 28], "characterOffsetBegin": 641, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 645, "segment_span": [0, 28], "characterOffsetBegin": 644, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 650, "segment_span": [0, 28], "characterOffsetBegin": 646, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 651, "segment_span": [0, 28], "characterOffsetBegin": 650, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 654, "segment_span": [0, 28], "characterOffsetBegin": 652, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "implicitly", "lemma": "implicitly", "after": " ", "pos": "RB", "characterOffsetEnd": 665, "segment_span": [0, 28], "characterOffsetBegin": 655, "originalText": "implicitly", "ArgType": null, "before": " "}, {"index": 23, "word": "map", "lemma": "map", "after": " ", "pos": "VB", "characterOffsetEnd": 669, "segment_span": [0, 28], "characterOffsetBegin": 666, "originalText": "map", "ArgType": null, "before": " "}, {"index": 24, "word": "data", "lemma": "datum", "after": " ", "pos": "NNS", "characterOffsetEnd": 674, "segment_span": [0, 28], "characterOffsetBegin": 670, "originalText": "data", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 677, "segment_span": [0, 28], "characterOffsetBegin": 675, "originalText": "in", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 679, "segment_span": [0, 28], "characterOffsetBegin": 678, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 683, "segment_span": [0, 28], "characterOffsetBegin": 680, "originalText": "new", "ArgType": null, "before": " "}, {"index": 28, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 689, "segment_span": [0, 28], "characterOffsetBegin": 684, "originalText": "space", "ArgType": null, "before": " "}, {"index": 29, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 695, "segment_span": [28, 35], "characterOffsetBegin": 690, "originalText": "where", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 699, "segment_span": [28, 35], "characterOffsetBegin": 696, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 708, "segment_span": [28, 35], "characterOffsetBegin": 700, "originalText": "examples", "ArgType": "subj", "before": " "}, {"index": 32, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 712, "segment_span": [28, 35], "characterOffsetBegin": 709, "originalText": "are", "ArgType": null, "before": " "}, {"index": 33, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 717, "segment_span": [28, 35], "characterOffsetBegin": 713, "originalText": "more", "ArgType": null, "before": " "}, {"index": 34, "word": "easily", "lemma": "easily", "after": " ", "pos": "RB", "characterOffsetEnd": 724, "segment_span": [28, 35], "characterOffsetBegin": 718, "originalText": "easily", "ArgType": null, "before": " "}, {"index": 35, "word": "separable", "lemma": "separable", "after": " ", "pos": "JJ", "characterOffsetEnd": 734, "segment_span": [28, 35], "characterOffsetBegin": 725, "originalText": "separable", "ArgType": null, "before": " "}, {"index": 36, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 737, "segment_span": [35, 41], "characterOffsetBegin": 735, "originalText": "as", "ArgType": null, "before": " "}, {"index": 37, "word": "described", "characterOffsetEnd": 747, "after": " ", "pos": "VBN", "is_root": true, "lemma": "describe", "segment_span": [35, 41], "tense": "N", "characterOffsetBegin": 738, "originalText": "described", "ArgType": null, "before": " "}, {"index": 38, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 750, "segment_span": [35, 41], "characterOffsetBegin": 748, "originalText": "in", "ArgType": null, "before": " "}, {"index": 39, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 754, "segment_span": [35, 41], "characterOffsetBegin": 751, "originalText": "the", "ArgType": null, "before": " "}, {"index": 40, "word": "next", "lemma": "next", "after": " ", "pos": "JJ", "characterOffsetEnd": 759, "segment_span": [35, 41], "characterOffsetBegin": 755, "originalText": "next", "ArgType": null, "before": " "}, {"index": 41, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 767, "segment_span": [35, 41], "characterOffsetBegin": 760, "originalText": "section", "ArgType": null, "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": "\u0000\u0000", "pos": ".", "characterOffsetEnd": 768, "characterOffsetBegin": 767, "originalText": ".", "ArgType": null, "before": ""}], "text": "One strong point of SVMs is the possibility to apply kernel methods ( robert Mller et al. , 2001 ) to implicitly map data in a new space where the examples are more easily separable as described in the next section ."}], "title": "3.1 Support Vector Machines (SVMs)"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Kernel", "lemma": "Kernel", "after": " ", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 45], "characterOffsetBegin": 0, "originalText": "Kernel", "ArgType": null, "before": ""}, {"index": 2, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 14, "segment_span": [0, 45], "characterOffsetBegin": 7, "originalText": "methods", "ArgType": "subj", "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 16, "segment_span": [0, 45], "characterOffsetBegin": 15, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "Schlkopf", "lemma": "schlkopf", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 45], "characterOffsetBegin": 16, "originalText": "Schlkopf", "ArgType": null, "before": ""}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 28, "segment_span": [0, 45], "characterOffsetBegin": 25, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "Smola", "lemma": "smola", "after": "", "pos": "NN", "characterOffsetEnd": 34, "segment_span": [0, 45], "characterOffsetBegin": 29, "originalText": "Smola", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 35, "segment_span": [0, 45], "characterOffsetBegin": 34, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 40, "segment_span": [0, 45], "characterOffsetBegin": 36, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 41, "segment_span": [0, 45], "characterOffsetBegin": 40, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 45, "segment_span": [0, 45], "characterOffsetBegin": 42, "originalText": "are", "ArgType": null, "before": " "}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 48, "segment_span": [0, 45], "characterOffsetBegin": 46, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "attractive", "lemma": "attractive", "after": " ", "pos": "JJ", "characterOffsetEnd": 59, "segment_span": [0, 45], "characterOffsetBegin": 49, "originalText": "attractive", "ArgType": null, "before": " "}, {"index": 13, "word": "alternative", "lemma": "alternative", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 45], "characterOffsetBegin": 60, "originalText": "alternative", "ArgType": "verb", "before": " "}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 74, "segment_span": [0, 45], "characterOffsetBegin": 72, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "feature-based", "lemma": "feature-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 88, "segment_span": [0, 45], "characterOffsetBegin": 75, "originalText": "feature-based", "ArgType": null, "before": " "}, {"index": 16, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 96, "segment_span": [0, 45], "characterOffsetBegin": 89, "originalText": "methods", "ArgType": null, "before": " "}, {"index": 17, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 102, "segment_span": [0, 45], "characterOffsetBegin": 97, "originalText": "since", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 106, "segment_span": [0, 45], "characterOffsetBegin": 103, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBN", "characterOffsetEnd": 114, "segment_span": [0, 45], "characterOffsetBegin": 107, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 20, "word": "learning", "lemma": "learning", "after": " ", "pos": "NN", "characterOffsetEnd": 123, "segment_span": [0, 45], "characterOffsetBegin": 115, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 21, "word": "algorithm", "lemma": "algorithm", "after": " ", "pos": "NN", "characterOffsetEnd": 133, "segment_span": [0, 45], "characterOffsetBegin": 124, "originalText": "algorithm", "ArgType": null, "before": " "}, {"index": 22, "word": "only", "lemma": "only", "after": " ", "pos": "RB", "characterOffsetEnd": 138, "segment_span": [0, 45], "characterOffsetBegin": 134, "originalText": "only", "ArgType": null, "before": " "}, {"index": 23, "word": "needs", "lemma": "need", "after": " ", "pos": "VBZ", "characterOffsetEnd": 144, "segment_span": [0, 45], "characterOffsetBegin": 139, "originalText": "needs", "ArgType": null, "before": " "}, {"index": 24, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 147, "segment_span": [0, 45], "characterOffsetBegin": 145, "originalText": "to", "ArgType": null, "before": " "}, {"index": 25, "word": "compute", "lemma": "compute", "after": " ", "pos": "VB", "characterOffsetEnd": 155, "segment_span": [0, 45], "characterOffsetBegin": 148, "originalText": "compute", "ArgType": null, "before": " "}, {"index": 26, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 157, "segment_span": [0, 45], "characterOffsetBegin": 156, "originalText": "a", "ArgType": null, "before": " "}, {"index": 27, "word": "product", "lemma": "product", "after": " ", "pos": "NN", "characterOffsetEnd": 165, "segment_span": [0, 45], "characterOffsetBegin": 158, "originalText": "product", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 173, "segment_span": [0, 45], "characterOffsetBegin": 166, "originalText": "between", "ArgType": null, "before": " "}, {"index": 29, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 175, "segment_span": [0, 45], "characterOffsetBegin": 174, "originalText": "a", "ArgType": null, "before": " "}, {"index": 30, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 180, "segment_span": [0, 45], "characterOffsetBegin": 176, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 31, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 183, "segment_span": [0, 45], "characterOffsetBegin": 181, "originalText": "of", "ArgType": null, "before": " "}, {"index": 32, "word": "objects", "lemma": "object", "after": " ", "pos": "NNS", "characterOffsetEnd": 191, "segment_span": [0, 45], "characterOffsetBegin": 184, "originalText": "objects", "ArgType": null, "before": " "}, {"index": 33, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 193, "segment_span": [0, 45], "characterOffsetBegin": 192, "originalText": "(", "ArgType": null, "before": " "}, {"index": 34, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 195, "segment_span": [0, 45], "characterOffsetBegin": 193, "originalText": "by", "ArgType": null, "before": ""}, {"index": 35, "word": "means", "lemma": "means", "after": " ", "pos": "NNS", "characterOffsetEnd": 201, "segment_span": [0, 45], "characterOffsetBegin": 196, "originalText": "means", "ArgType": null, "before": " "}, {"index": 36, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 204, "segment_span": [0, 45], "characterOffsetBegin": 202, "originalText": "of", "ArgType": null, "before": " "}, {"index": 37, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 211, "segment_span": [0, 45], "characterOffsetBegin": 205, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 38, "word": "functions", "lemma": "function", "after": "", "pos": "NNS", "characterOffsetEnd": 221, "segment_span": [0, 45], "characterOffsetBegin": 212, "originalText": "functions", "ArgType": null, "before": " "}, {"index": 39, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 222, "segment_span": [0, 45], "characterOffsetBegin": 221, "originalText": ")", "ArgType": null, "before": ""}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 223, "segment_span": [0, 45], "characterOffsetBegin": 222, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "avoiding", "lemma": "avoid", "after": " ", "pos": "VBG", "characterOffsetEnd": 232, "segment_span": [0, 45], "characterOffsetBegin": 224, "originalText": "avoiding", "ArgType": null, "before": " "}, {"index": 42, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 236, "segment_span": [0, 45], "characterOffsetBegin": 233, "originalText": "the", "ArgType": null, "before": " "}, {"index": 43, "word": "explicit", "lemma": "explicit", "after": " ", "pos": "JJ", "characterOffsetEnd": 245, "segment_span": [0, 45], "characterOffsetBegin": 237, "originalText": "explicit", "ArgType": null, "before": " "}, {"index": 44, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 253, "segment_span": [0, 45], "characterOffsetBegin": 246, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 45, "word": "representation", "lemma": "representation", "after": "", "pos": "NN", "characterOffsetEnd": 268, "segment_span": [0, 45], "characterOffsetBegin": 254, "originalText": "representation", "ArgType": "dobj", "before": " "}, {"index": 46, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 269, "characterOffsetBegin": 268, "originalText": ".", "ArgType": null, "before": ""}], "text": "Kernel methods ( Schlkopf and Smola , 2001 ) are an attractive alternative to feature-based methods since the applied learning algorithm only needs to compute a product between a pair of objects ( by means of kernel functions ) , avoiding the explicit feature representation ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 271, "segment_span": [0, 13], "characterOffsetBegin": 270, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 278, "segment_span": [0, 13], "characterOffsetBegin": 272, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 287, "segment_span": [0, 13], "characterOffsetBegin": 279, "originalText": "function", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 290, "segment_span": [0, 13], "characterOffsetBegin": 288, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 292, "segment_span": [0, 13], "characterOffsetBegin": 291, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "scalar", "lemma": "scalar", "after": " ", "pos": "JJ", "characterOffsetEnd": 299, "segment_span": [0, 13], "characterOffsetBegin": 293, "originalText": "scalar", "ArgType": null, "before": " "}, {"index": 7, "word": "product", "lemma": "product", "after": " ", "pos": "NN", "characterOffsetEnd": 307, "segment_span": [0, 13], "characterOffsetBegin": 300, "originalText": "product", "ArgType": "verb", "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 310, "segment_span": [0, 13], "characterOffsetBegin": 308, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 312, "segment_span": [0, 13], "characterOffsetBegin": 311, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "possibly", "lemma": "possibly", "after": " ", "pos": "RB", "characterOffsetEnd": 321, "segment_span": [0, 13], "characterOffsetBegin": 313, "originalText": "possibly", "ArgType": null, "before": " "}, {"index": 11, "word": "unknown", "lemma": "unknown", "after": " ", "pos": "JJ", "characterOffsetEnd": 329, "segment_span": [0, 13], "characterOffsetBegin": 322, "originalText": "unknown", "ArgType": null, "before": " "}, {"index": 12, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 337, "segment_span": [0, 13], "characterOffsetBegin": 330, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 13, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 343, "segment_span": [0, 13], "characterOffsetBegin": 338, "originalText": "space", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 344, "characterOffsetBegin": 343, "originalText": ".", "ArgType": null, "before": ""}], "text": "A kernel function is a scalar product in a possibly unknown feature space ."}, {"tokens": [{"index": 1, "word": "More", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 349, "segment_span": [0, 22], "characterOffsetBegin": 345, "originalText": "More", "ArgType": null, "before": " "}, {"index": 2, "word": "precisely", "lemma": "precisely", "after": "", "pos": "RB", "characterOffsetEnd": 359, "segment_span": [0, 22], "characterOffsetBegin": 350, "originalText": "precisely", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 360, "segment_span": [0, 22], "characterOffsetBegin": 359, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 364, "segment_span": [0, 22], "characterOffsetBegin": 361, "originalText": "The", "ArgType": null, "before": " "}, {"index": 5, "word": "object", "lemma": "object", "after": " ", "pos": "NN", "characterOffsetEnd": 371, "segment_span": [0, 22], "characterOffsetBegin": 365, "originalText": "object", "ArgType": null, "before": " "}, {"index": 6, "word": "o", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 373, "segment_span": [0, 22], "characterOffsetBegin": 372, "originalText": "o", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 376, "segment_span": [0, 22], "characterOffsetBegin": 374, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "mapped", "characterOffsetEnd": 383, "after": " ", "pos": "VBN", "is_root": true, "lemma": "map", "segment_span": [0, 22], "tense": "N", "characterOffsetBegin": 377, "before": " ", "originalText": "mapped", "ArgType": null, "is_pass": true}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 386, "segment_span": [0, 22], "characterOffsetBegin": 384, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "x", "lemma": "x", "after": "", "pos": "CC", "characterOffsetEnd": 388, "segment_span": [0, 22], "characterOffsetBegin": 387, "originalText": "x", "ArgType": null, "before": " "}, {"index": 11, "word": "~", "lemma": "~", "after": " ", "pos": "NN", "characterOffsetEnd": 389, "segment_span": [0, 22], "characterOffsetBegin": 388, "originalText": "~", "ArgType": null, "before": ""}, {"index": 12, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 394, "segment_span": [0, 22], "characterOffsetBegin": 390, "originalText": "with", "ArgType": null, "before": " "}, {"index": 13, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 396, "segment_span": [0, 22], "characterOffsetBegin": 395, "originalText": "a", "ArgType": null, "before": " "}, {"index": 14, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 404, "segment_span": [0, 22], "characterOffsetBegin": 397, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 15, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 413, "segment_span": [0, 22], "characterOffsetBegin": 405, "originalText": "function", "ArgType": null, "before": " "}, {"index": 16, "word": "\u00cf\u0086", "lemma": "\u00cf\u0086", "after": " ", "pos": "NN", "characterOffsetEnd": 415, "segment_span": [0, 22], "characterOffsetBegin": 414, "originalText": "\u00cf\u0086", "ArgType": null, "before": " "}, {"index": 17, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 417, "segment_span": [0, 22], "characterOffsetBegin": 416, "originalText": ":", "ArgType": null, "before": " "}, {"index": 18, "word": "O", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 419, "segment_span": [0, 22], "characterOffsetBegin": 418, "originalText": "O", "ArgType": null, "before": " "}, {"index": 19, "word": "--", "lemma": "--", "after": "", "pos": ":", "characterOffsetEnd": 421, "segment_span": [0, 22], "characterOffsetBegin": 420, "originalText": "\u00e2\u0080\u0094", "ArgType": null, "before": " "}, {"index": 20, "word": "*", "lemma": "*", "after": " ", "pos": "SYM", "characterOffsetEnd": 422, "segment_span": [0, 22], "characterOffsetBegin": 421, "originalText": "*", "ArgType": null, "before": ""}, {"index": 21, "word": "Rn", "lemma": "rn", "after": "", "pos": "NN", "characterOffsetEnd": 425, "segment_span": [0, 22], "characterOffsetBegin": 423, "originalText": "Rn", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 426, "segment_span": [0, 22], "characterOffsetBegin": 425, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 432, "segment_span": [22, 30], "characterOffsetBegin": 427, "originalText": "where", "ArgType": null, "before": " "}, {"index": 24, "word": "O", "lemma": "o", "after": " ", "pos": "NN", "characterOffsetEnd": 434, "segment_span": [22, 30], "characterOffsetBegin": 433, "originalText": "O", "ArgType": "subj", "before": " "}, {"index": 25, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 437, "segment_span": [22, 30], "characterOffsetBegin": 435, "originalText": "is", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 441, "segment_span": [22, 30], "characterOffsetBegin": 438, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 445, "segment_span": [22, 30], "characterOffsetBegin": 442, "originalText": "set", "ArgType": null, "before": " "}, {"index": 28, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 448, "segment_span": [22, 30], "characterOffsetBegin": 446, "originalText": "of", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 452, "segment_span": [22, 30], "characterOffsetBegin": 449, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "objects", "lemma": "object", "after": "", "pos": "NNS", "characterOffsetEnd": 460, "segment_span": [22, 30], "characterOffsetBegin": 453, "originalText": "objects", "ArgType": null, "before": " "}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 461, "characterOffsetBegin": 460, "originalText": ".", "ArgType": null, "before": ""}], "text": "More precisely , The object o is mapped in x ~ with a feature function \u00cf\u0086 : O -- * Rn , where O is the set of the objects ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 465, "segment_span": [0, 11], "characterOffsetBegin": 462, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 472, "segment_span": [0, 11], "characterOffsetBegin": 466, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "trick", "lemma": "trick", "after": " ", "pos": "NN", "characterOffsetEnd": 478, "segment_span": [0, 11], "characterOffsetBegin": 473, "originalText": "trick", "ArgType": "subj", "before": " "}, {"index": 4, "word": "allows", "characterOffsetEnd": 485, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "allow", "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 479, "originalText": "allows", "ArgType": "verb", "before": " "}, {"index": 5, "word": "us", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 488, "segment_span": [0, 11], "characterOffsetBegin": 486, "originalText": "us", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 491, "segment_span": [0, 11], "characterOffsetBegin": 489, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "rewrite", "lemma": "rewrite", "after": " ", "pos": "VB", "characterOffsetEnd": 499, "segment_span": [0, 11], "characterOffsetBegin": 492, "originalText": "rewrite", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 503, "segment_span": [0, 11], "characterOffsetBegin": 500, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "decision", "lemma": "decision", "after": " ", "pos": "NN", "characterOffsetEnd": 512, "segment_span": [0, 11], "characterOffsetBegin": 504, "originalText": "decision", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "hyperplane", "lemma": "hyperplane", "after": " ", "pos": "NN", "characterOffsetEnd": 523, "segment_span": [0, 11], "characterOffsetBegin": 513, "originalText": "hyperplane", "ArgType": null, "before": " "}, {"index": 11, "word": "as", "lemma": "as", "after": "", "pos": "IN", "characterOffsetEnd": 526, "segment_span": [0, 11], "characterOffsetBegin": 524, "originalText": "as", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": "\u0000\u0000\u0000", "pos": ":", "characterOffsetEnd": 527, "characterOffsetBegin": 526, "originalText": ":", "ArgType": null, "before": ""}], "text": "The kernel trick allows us to rewrite the decision hyperplane as :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 27], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "yi", "lemma": "yi", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 27], "characterOffsetBegin": 6, "originalText": "yi", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 11, "segment_span": [0, 27], "characterOffsetBegin": 9, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "equal", "lemma": "equal", "after": " ", "pos": "JJ", "characterOffsetEnd": 17, "segment_span": [0, 27], "characterOffsetBegin": 12, "originalText": "equal", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 20, "segment_span": [0, 27], "characterOffsetBegin": 18, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 22, "segment_span": [0, 27], "characterOffsetBegin": 21, "originalText": "1", "ArgType": null, "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [0, 27], "characterOffsetBegin": 23, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "positive", "lemma": "positive", "after": " ", "pos": "JJ", "characterOffsetEnd": 35, "segment_span": [0, 27], "characterOffsetBegin": 27, "originalText": "positive", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 39, "segment_span": [0, 27], "characterOffsetBegin": 36, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "-1", "lemma": "-1", "after": " ", "pos": "CD", "characterOffsetEnd": 42, "segment_span": [0, 27], "characterOffsetBegin": 40, "originalText": "-1", "ArgType": null, "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 27], "characterOffsetBegin": 43, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "negative", "lemma": "negative", "after": " ", "pos": "JJ", "characterOffsetEnd": 55, "segment_span": [0, 27], "characterOffsetBegin": 47, "originalText": "negative", "ArgType": null, "before": " "}, {"index": 13, "word": "examples", "lemma": "example", "after": "", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 27], "characterOffsetBegin": 56, "originalText": "examples", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 65, "segment_span": [0, 27], "characterOffsetBegin": 64, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "\u00ce\u00b1i", "lemma": "\u00ce\u00b1i", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 27], "characterOffsetBegin": 66, "originalText": "\u00ce\u00b1i", "ArgType": null, "before": " "}, {"index": 16, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 27], "characterOffsetBegin": 69, "originalText": "E", "ArgType": null, "before": " "}, {"index": 17, "word": "R", "lemma": "r", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 27], "characterOffsetBegin": 71, "originalText": "R", "ArgType": null, "before": " "}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 77, "segment_span": [0, 27], "characterOffsetBegin": 73, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "\u00ce\u00b1i", "lemma": "\u00ce\u00b1i", "after": " ", "pos": "NN", "characterOffsetEnd": 80, "segment_span": [0, 27], "characterOffsetBegin": 78, "originalText": "\u00ce\u00b1i", "ArgType": null, "before": " "}, {"index": 20, "word": ">", "lemma": ">", "after": " ", "pos": "JJR", "characterOffsetEnd": 82, "segment_span": [0, 27], "characterOffsetBegin": 81, "originalText": ">", "ArgType": null, "before": " "}, {"index": 21, "word": "0", "lemma": "0", "after": "", "pos": "CD", "characterOffsetEnd": 84, "segment_span": [0, 27], "characterOffsetBegin": 83, "originalText": "0", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 85, "segment_span": [0, 27], "characterOffsetBegin": 84, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "oi", "lemma": "oi", "after": " ", "pos": "FW", "characterOffsetEnd": 88, "segment_span": [0, 27], "characterOffsetBegin": 86, "originalText": "oi", "ArgType": null, "before": " "}, {"index": 24, "word": "Vi", "lemma": "vi", "after": " ", "pos": "FW", "characterOffsetEnd": 91, "segment_span": [0, 27], "characterOffsetBegin": 89, "originalText": "Vi", "ArgType": null, "before": " "}, {"index": 25, "word": "E", "lemma": "e", "after": " ", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [0, 27], "characterOffsetBegin": 92, "originalText": "E", "ArgType": null, "before": " "}, {"index": 26, "word": "11", "lemma": "11", "after": "", "pos": "CD", "characterOffsetEnd": 96, "segment_span": [0, 27], "characterOffsetBegin": 94, "originalText": "11", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 97, "segment_span": [0, 27], "characterOffsetBegin": 96, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 99, "characterOffsetBegin": 98, "originalText": ".", "ArgType": null, "before": " "}], "text": "where yi is equal to 1 for positive and -1 for negative examples , \u00ce\u00b1i E R with \u00ce\u00b1i > 0 , oi Vi E 11 , ."}, {"tokens": [{"index": 1, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 100, "segment_span": [0, 1], "characterOffsetBegin": 99, "originalText": ".", "ArgType": null, "before": ""}], "text": "."}, {"tokens": [{"index": 1, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 101, "segment_span": [0, 37], "characterOffsetBegin": 100, "originalText": ",", "ArgType": null, "before": ""}, {"index": 2, "word": "l", "lemma": "l", "after": "", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 37], "characterOffsetBegin": 102, "originalText": "l", "ArgType": "subj", "before": " "}, {"index": 3, "word": "-RCB-", "lemma": "-rcb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 104, "segment_span": [0, 37], "characterOffsetBegin": 103, "originalText": "}", "ArgType": null, "before": ""}, {"index": 4, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 108, "segment_span": [0, 37], "characterOffsetBegin": 105, "originalText": "are", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 112, "segment_span": [0, 37], "characterOffsetBegin": 109, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "training", "lemma": "training", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 37], "characterOffsetBegin": 113, "originalText": "training", "ArgType": null, "before": " "}, {"index": 7, "word": "instances", "lemma": "instance", "after": " ", "pos": "NNS", "characterOffsetEnd": 131, "segment_span": [0, 37], "characterOffsetBegin": 122, "originalText": "instances", "ArgType": "subj", "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 135, "segment_span": [0, 37], "characterOffsetBegin": 132, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 139, "segment_span": [0, 37], "characterOffsetBegin": 136, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "product", "lemma": "product", "after": " ", "pos": "NN", "characterOffsetEnd": 147, "segment_span": [0, 37], "characterOffsetBegin": 140, "originalText": "product", "ArgType": null, "before": " "}, {"index": 11, "word": "K", "lemma": "k", "after": "", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [0, 37], "characterOffsetBegin": 148, "originalText": "K", "ArgType": null, "before": " "}, {"index": 12, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 150, "segment_span": [0, 37], "characterOffsetBegin": 149, "originalText": "(", "ArgType": null, "before": ""}, {"index": 13, "word": "oi", "lemma": "oi", "after": "", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [0, 37], "characterOffsetBegin": 150, "originalText": "oi", "ArgType": null, "before": ""}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 153, "segment_span": [0, 37], "characterOffsetBegin": 152, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "o", "lemma": "o", "after": "", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [0, 37], "characterOffsetBegin": 154, "originalText": "o", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 156, "segment_span": [0, 37], "characterOffsetBegin": 155, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 158, "segment_span": [0, 37], "characterOffsetBegin": 157, "originalText": "=", "ArgType": null, "before": " "}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 160, "segment_span": [0, 37], "characterOffsetBegin": 159, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "\u00cf\u0086", "lemma": "\u00cf\u0086", "after": "", "pos": "NN", "characterOffsetEnd": 161, "segment_span": [0, 37], "characterOffsetBegin": 160, "originalText": "\u00cf\u0086", "ArgType": null, "before": ""}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 162, "segment_span": [0, 37], "characterOffsetBegin": 161, "originalText": "(", "ArgType": null, "before": ""}, {"index": 21, "word": "oi", "lemma": "oi", "after": "", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [0, 37], "characterOffsetBegin": 162, "originalText": "oi", "ArgType": null, "before": ""}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 165, "segment_span": [0, 37], "characterOffsetBegin": 164, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": "\u00c2\u00b7", "lemma": "\u00c2\u00b7", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [0, 37], "characterOffsetBegin": 166, "originalText": "\u00c2\u00b7", "ArgType": null, "before": " "}, {"index": 24, "word": "\u00cf\u0086", "lemma": "\u00cf\u0086", "after": "", "pos": "NN", "characterOffsetEnd": 169, "segment_span": [0, 37], "characterOffsetBegin": 168, "originalText": "\u00cf\u0086", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 170, "segment_span": [0, 37], "characterOffsetBegin": 169, "originalText": "(", "ArgType": null, "before": ""}, {"index": 26, "word": "o", "lemma": "o", "after": "", "pos": "NN", "characterOffsetEnd": 171, "segment_span": [0, 37], "characterOffsetBegin": 170, "originalText": "o", "ArgType": null, "before": ""}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 172, "segment_span": [0, 37], "characterOffsetBegin": 171, "originalText": ")", "ArgType": null, "before": ""}, {"index": 28, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 173, "segment_span": [0, 37], "characterOffsetBegin": 172, "originalText": ")", "ArgType": null, "before": ""}, {"index": 29, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 176, "segment_span": [0, 37], "characterOffsetBegin": 174, "originalText": "is", "ArgType": null, "before": " "}, {"index": 30, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 180, "segment_span": [0, 37], "characterOffsetBegin": 177, "originalText": "the", "ArgType": null, "before": " "}, {"index": 31, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 187, "segment_span": [0, 37], "characterOffsetBegin": 181, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 32, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 196, "segment_span": [0, 37], "characterOffsetBegin": 188, "originalText": "function", "ArgType": "verb", "before": " "}, {"index": 33, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 207, "segment_span": [0, 37], "characterOffsetBegin": 197, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 34, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 212, "segment_span": [0, 37], "characterOffsetBegin": 208, "originalText": "with", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 216, "segment_span": [0, 37], "characterOffsetBegin": 213, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "mapping", "lemma": "mapping", "after": " ", "pos": "NN", "characterOffsetEnd": 224, "segment_span": [0, 37], "characterOffsetBegin": 217, "originalText": "mapping", "ArgType": null, "before": " "}, {"index": 37, "word": "\u00cf\u0086", "lemma": "\u00cf\u0086", "after": "", "pos": "NN", "characterOffsetEnd": 226, "segment_span": [0, 37], "characterOffsetBegin": 225, "originalText": "\u00cf\u0086", "ArgType": null, "before": " "}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 227, "characterOffsetBegin": 226, "originalText": ".", "ArgType": null, "before": ""}], "text": ", l -RCB- are the training instances and the product K ( oi , o ) = ( \u00cf\u0086 ( oi ) \u00c2\u00b7 \u00cf\u0086 ( o ) ) is the kernel function associated with the mapping \u00cf\u0086 ."}, {"tokens": [{"index": 1, "word": "Kernel", "lemma": "Kernel", "after": " ", "pos": "NNP", "characterOffsetEnd": 234, "segment_span": [0, 6], "characterOffsetBegin": 228, "originalText": "Kernel", "ArgType": null, "before": " "}, {"index": 2, "word": "engineering", "lemma": "engineering", "after": " ", "pos": "NN", "characterOffsetEnd": 246, "segment_span": [0, 6], "characterOffsetBegin": 235, "originalText": "engineering", "ArgType": null, "before": " "}, {"index": 3, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 250, "segment_span": [0, 6], "characterOffsetBegin": 247, "originalText": "can", "ArgType": null, "before": " "}, {"index": 4, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 253, "segment_span": [0, 6], "characterOffsetBegin": 251, "originalText": "be", "ArgType": null, "before": " "}, {"index": 5, "word": "carried", "characterOffsetEnd": 261, "after": " ", "pos": "VBN", "is_root": true, "lemma": "carry", "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 254, "before": " ", "originalText": "carried", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 6, "word": "out", "lemma": "out", "after": " ", "pos": "RP", "characterOffsetEnd": 265, "segment_span": [0, 6], "characterOffsetBegin": 262, "originalText": "out", "ArgType": null, "before": " "}, {"index": 7, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 268, "segment_span": [6, 16], "characterOffsetBegin": 266, "originalText": "by", "ArgType": null, "before": " "}, {"index": 8, "word": "combining", "characterOffsetEnd": 278, "after": " ", "pos": "VBG", "is_root": true, "lemma": "combine", "segment_span": [6, 16], "tense": "G", "characterOffsetBegin": 269, "originalText": "combining", "ArgType": null, "before": " "}, {"index": 9, "word": "basic", "lemma": "basic", "after": " ", "pos": "JJ", "characterOffsetEnd": 284, "segment_span": [6, 16], "characterOffsetBegin": 279, "originalText": "basic", "ArgType": null, "before": " "}, {"index": 10, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 292, "segment_span": [6, 16], "characterOffsetBegin": 285, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 297, "segment_span": [6, 16], "characterOffsetBegin": 293, "originalText": "with", "ArgType": null, "before": " "}, {"index": 12, "word": "additive", "lemma": "additive", "after": " ", "pos": "JJ", "characterOffsetEnd": 306, "segment_span": [6, 16], "characterOffsetBegin": 298, "originalText": "additive", "ArgType": null, "before": " "}, {"index": 13, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 309, "segment_span": [6, 16], "characterOffsetBegin": 307, "originalText": "or", "ArgType": null, "before": " "}, {"index": 14, "word": "multiplicative", "lemma": "multiplicative", "after": " ", "pos": "JJ", "characterOffsetEnd": 324, "segment_span": [6, 16], "characterOffsetBegin": 310, "originalText": "multiplicative", "ArgType": null, "before": " "}, {"index": 15, "word": "operators", "lemma": "operator", "after": " ", "pos": "NNS", "characterOffsetEnd": 334, "segment_span": [6, 16], "characterOffsetBegin": 325, "originalText": "operators", "ArgType": null, "before": " "}, {"index": 16, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 337, "segment_span": [6, 16], "characterOffsetBegin": 335, "originalText": "or", "ArgType": null, "before": " "}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 340, "segment_span": [16, 33], "characterOffsetBegin": 338, "originalText": "by", "ArgType": null, "before": " "}, {"index": 18, "word": "designing", "characterOffsetEnd": 350, "after": " ", "pos": "VBG", "is_root": true, "lemma": "design", "segment_span": [16, 33], "tense": "G", "characterOffsetBegin": 341, "originalText": "designing", "ArgType": null, "before": " "}, {"index": 19, "word": "specific", "lemma": "specific", "after": " ", "pos": "JJ", "characterOffsetEnd": 359, "segment_span": [16, 33], "characterOffsetBegin": 351, "originalText": "specific", "ArgType": null, "before": " "}, {"index": 20, "word": "data", "lemma": "datum", "after": " ", "pos": "NNS", "characterOffsetEnd": 364, "segment_span": [16, 33], "characterOffsetBegin": 360, "originalText": "data", "ArgType": null, "before": " "}, {"index": 21, "word": "objects", "lemma": "object", "after": " ", "pos": "NNS", "characterOffsetEnd": 372, "segment_span": [16, 33], "characterOffsetBegin": 365, "originalText": "objects", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 374, "segment_span": [16, 33], "characterOffsetBegin": 373, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "vectors", "lemma": "vector", "after": "", "pos": "NNS", "characterOffsetEnd": 381, "segment_span": [16, 33], "characterOffsetBegin": 374, "originalText": "vectors", "ArgType": null, "before": ""}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 382, "segment_span": [16, 33], "characterOffsetBegin": 381, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 392, "segment_span": [16, 33], "characterOffsetBegin": 383, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 396, "segment_span": [16, 33], "characterOffsetBegin": 393, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 401, "segment_span": [16, 33], "characterOffsetBegin": 397, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 28, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 412, "segment_span": [16, 33], "characterOffsetBegin": 402, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 413, "segment_span": [16, 33], "characterOffsetBegin": 412, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 417, "segment_span": [16, 33], "characterOffsetBegin": 414, "originalText": "for", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 421, "segment_span": [16, 33], "characterOffsetBegin": 418, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 428, "segment_span": [16, 33], "characterOffsetBegin": 422, "originalText": "target", "ArgType": null, "before": " "}, {"index": 33, "word": "tasks", "lemma": "task", "after": "", "pos": "NNS", "characterOffsetEnd": 434, "segment_span": [16, 33], "characterOffsetBegin": 429, "originalText": "tasks", "ArgType": null, "before": " "}, {"index": 34, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 435, "characterOffsetBegin": 434, "originalText": ".", "ArgType": null, "before": ""}], "text": "Kernel engineering can be carried out by combining basic kernels with additive or multiplicative operators or by designing specific data objects ( vectors , sequences and tree structures ) for the target tasks ."}, {"tokens": [{"index": 1, "word": "Regarding", "lemma": "regard", "after": " ", "pos": "VBG", "characterOffsetEnd": 445, "segment_span": [0, 29], "characterOffsetBegin": 436, "originalText": "Regarding", "ArgType": null, "before": " "}, {"index": 2, "word": "NLP", "lemma": "nlp", "after": " ", "pos": "NN", "characterOffsetEnd": 449, "segment_span": [0, 29], "characterOffsetBegin": 446, "originalText": "NLP", "ArgType": null, "before": " "}, {"index": 3, "word": "applications", "lemma": "application", "after": "", "pos": "NNS", "characterOffsetEnd": 462, "segment_span": [0, 29], "characterOffsetBegin": 450, "originalText": "applications", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 463, "segment_span": [0, 29], "characterOffsetBegin": 462, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 470, "segment_span": [0, 29], "characterOffsetBegin": 464, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 6, "word": "methods", "lemma": "method", "after": " ", "pos": "NNS", "characterOffsetEnd": 478, "segment_span": [0, 29], "characterOffsetBegin": 471, "originalText": "methods", "ArgType": "subj", "before": " "}, {"index": 7, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 483, "segment_span": [0, 29], "characterOffsetBegin": 479, "originalText": "have", "ArgType": null, "before": " "}, {"index": 8, "word": "attracted", "characterOffsetEnd": 493, "after": " ", "pos": "VBN", "is_root": true, "lemma": "attract", "segment_span": [0, 29], "tense": "N", "characterOffsetBegin": 484, "originalText": "attracted", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 9, "word": "much", "lemma": "much", "after": " ", "pos": "JJ", "characterOffsetEnd": 498, "segment_span": [0, 29], "characterOffsetBegin": 494, "originalText": "much", "ArgType": null, "before": " "}, {"index": 10, "word": "interest", "lemma": "interest", "after": " ", "pos": "NN", "characterOffsetEnd": 507, "segment_span": [0, 29], "characterOffsetBegin": 499, "originalText": "interest", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "due", "lemma": "due", "after": " ", "pos": "JJ", "characterOffsetEnd": 511, "segment_span": [0, 29], "characterOffsetBegin": 508, "originalText": "due", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 514, "segment_span": [0, 29], "characterOffsetBegin": 512, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 520, "segment_span": [0, 29], "characterOffsetBegin": 515, "originalText": "their", "ArgType": null, "before": " "}, {"index": 14, "word": "ability", "lemma": "ability", "after": " ", "pos": "NN", "characterOffsetEnd": 528, "segment_span": [0, 29], "characterOffsetBegin": 521, "originalText": "ability", "ArgType": null, "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 531, "segment_span": [0, 29], "characterOffsetBegin": 529, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "implicitly", "lemma": "implicitly", "after": " ", "pos": "RB", "characterOffsetEnd": 542, "segment_span": [0, 29], "characterOffsetBegin": 532, "originalText": "implicitly", "ArgType": null, "before": " "}, {"index": 17, "word": "exploring", "lemma": "explore", "after": " ", "pos": "VBG", "characterOffsetEnd": 552, "segment_span": [0, 29], "characterOffsetBegin": 543, "originalText": "exploring", "ArgType": null, "before": " "}, {"index": 18, "word": "huge", "lemma": "huge", "after": " ", "pos": "JJ", "characterOffsetEnd": 557, "segment_span": [0, 29], "characterOffsetBegin": 553, "originalText": "huge", "ArgType": null, "before": " "}, {"index": 19, "word": "amounts", "lemma": "amount", "after": " ", "pos": "NNS", "characterOffsetEnd": 565, "segment_span": [0, 29], "characterOffsetBegin": 558, "originalText": "amounts", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 568, "segment_span": [0, 29], "characterOffsetBegin": 566, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 579, "segment_span": [0, 29], "characterOffsetBegin": 569, "originalText": "structural", "ArgType": null, "before": " "}, {"index": 22, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 588, "segment_span": [0, 29], "characterOffsetBegin": 580, "originalText": "features", "ArgType": null, "before": " "}, {"index": 23, "word": "automatically", "lemma": "automatically", "after": " ", "pos": "RB", "characterOffsetEnd": 602, "segment_span": [0, 29], "characterOffsetBegin": 589, "originalText": "automatically", "ArgType": null, "before": " "}, {"index": 24, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 612, "segment_span": [0, 29], "characterOffsetBegin": 603, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 25, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 617, "segment_span": [0, 29], "characterOffsetBegin": 613, "originalText": "from", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 621, "segment_span": [0, 29], "characterOffsetBegin": 618, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 630, "segment_span": [0, 29], "characterOffsetBegin": 622, "originalText": "original", "ArgType": null, "before": " "}, {"index": 28, "word": "object", "lemma": "object", "after": " ", "pos": "NN", "characterOffsetEnd": 637, "segment_span": [0, 29], "characterOffsetBegin": 631, "originalText": "object", "ArgType": null, "before": " "}, {"index": 29, "word": "representation", "lemma": "representation", "after": "", "pos": "NN", "characterOffsetEnd": 652, "segment_span": [0, 29], "characterOffsetBegin": 638, "originalText": "representation", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 653, "characterOffsetBegin": 652, "originalText": ".", "ArgType": null, "before": ""}], "text": "Regarding NLP applications , kernel methods have attracted much interest due to their ability of implicitly exploring huge amounts of structural features automatically extracted from the original object representation ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 657, "segment_span": [0, 42], "characterOffsetBegin": 654, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 665, "segment_span": [0, 42], "characterOffsetBegin": 658, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 3, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 669, "segment_span": [0, 42], "characterOffsetBegin": 666, "originalText": "for", "ArgType": null, "before": " "}, {"index": 4, "word": "structured", "lemma": "structured", "after": " ", "pos": "JJ", "characterOffsetEnd": 680, "segment_span": [0, 42], "characterOffsetBegin": 670, "originalText": "structured", "ArgType": null, "before": " "}, {"index": 5, "word": "natural", "lemma": "natural", "after": " ", "pos": "JJ", "characterOffsetEnd": 688, "segment_span": [0, 42], "characterOffsetBegin": 681, "originalText": "natural", "ArgType": null, "before": " "}, {"index": 6, "word": "language", "lemma": "language", "after": " ", "pos": "NN", "characterOffsetEnd": 697, "segment_span": [0, 42], "characterOffsetBegin": 689, "originalText": "language", "ArgType": null, "before": " "}, {"index": 7, "word": "data", "lemma": "datum", "after": "", "pos": "NNS", "characterOffsetEnd": 702, "segment_span": [0, 42], "characterOffsetBegin": 698, "originalText": "data", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 703, "segment_span": [0, 42], "characterOffsetBegin": 702, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 708, "segment_span": [0, 42], "characterOffsetBegin": 704, "originalText": "such", "ArgType": null, "before": " "}, {"index": 10, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 711, "segment_span": [0, 42], "characterOffsetBegin": 709, "originalText": "as", "ArgType": null, "before": " "}, {"index": 11, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 717, "segment_span": [0, 42], "characterOffsetBegin": 712, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 12, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 722, "segment_span": [0, 42], "characterOffsetBegin": 718, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 13, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 729, "segment_span": [0, 42], "characterOffsetBegin": 723, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 731, "segment_span": [0, 42], "characterOffsetBegin": 730, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "Collins", "lemma": "Collins", "after": " ", "pos": "NNP", "characterOffsetEnd": 738, "segment_span": [0, 42], "characterOffsetBegin": 731, "originalText": "Collins", "ArgType": null, "before": ""}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 742, "segment_span": [0, 42], "characterOffsetBegin": 739, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "Duffy", "lemma": "duffy", "after": "", "pos": "NN", "characterOffsetEnd": 748, "segment_span": [0, 42], "characterOffsetBegin": 743, "originalText": "Duffy", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 749, "segment_span": [0, 42], "characterOffsetBegin": 748, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 754, "segment_span": [0, 42], "characterOffsetBegin": 750, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 755, "segment_span": [0, 42], "characterOffsetBegin": 754, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 759, "segment_span": [0, 42], "characterOffsetBegin": 756, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "string", "lemma": "string", "after": " ", "pos": "NN", "characterOffsetEnd": 766, "segment_span": [0, 42], "characterOffsetBegin": 760, "originalText": "string", "ArgType": null, "before": " "}, {"index": 23, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 773, "segment_span": [0, 42], "characterOffsetBegin": 767, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 775, "segment_span": [0, 42], "characterOffsetBegin": 774, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "Lodhi", "lemma": "Lodhi", "after": " ", "pos": "NNP", "characterOffsetEnd": 780, "segment_span": [0, 42], "characterOffsetBegin": 775, "originalText": "Lodhi", "ArgType": null, "before": ""}, {"index": 26, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 783, "segment_span": [0, 42], "characterOffsetBegin": 781, "originalText": "et", "ArgType": null, "before": " "}, {"index": 27, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 787, "segment_span": [0, 42], "characterOffsetBegin": 784, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 788, "segment_span": [0, 42], "characterOffsetBegin": 787, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 793, "segment_span": [0, 42], "characterOffsetBegin": 789, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 794, "segment_span": [0, 42], "characterOffsetBegin": 793, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 798, "segment_span": [0, 42], "characterOffsetBegin": 795, "originalText": "are", "ArgType": null, "before": " "}, {"index": 32, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 807, "segment_span": [0, 42], "characterOffsetBegin": 799, "originalText": "examples", "ArgType": "verb", "before": " "}, {"index": 33, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 810, "segment_span": [0, 42], "characterOffsetBegin": 808, "originalText": "of", "ArgType": null, "before": " "}, {"index": 34, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 814, "segment_span": [0, 42], "characterOffsetBegin": 811, "originalText": "the", "ArgType": null, "before": " "}, {"index": 35, "word": "wellknown", "lemma": "wellknown", "after": " ", "pos": "JJ", "characterOffsetEnd": 824, "segment_span": [0, 42], "characterOffsetBegin": 815, "originalText": "wellknown", "ArgType": null, "before": " "}, {"index": 36, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 836, "segment_span": [0, 42], "characterOffsetBegin": 825, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 37, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 844, "segment_span": [0, 42], "characterOffsetBegin": 837, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 38, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 849, "segment_span": [0, 42], "characterOffsetBegin": 845, "originalText": "used", "ArgType": null, "before": " "}, {"index": 39, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 852, "segment_span": [0, 42], "characterOffsetBegin": 850, "originalText": "in", "ArgType": null, "before": " "}, {"index": 40, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 857, "segment_span": [0, 42], "characterOffsetBegin": 853, "originalText": "many", "ArgType": null, "before": " "}, {"index": 41, "word": "NLP", "lemma": "nlp", "after": " ", "pos": "NN", "characterOffsetEnd": 861, "segment_span": [0, 42], "characterOffsetBegin": 858, "originalText": "NLP", "ArgType": null, "before": " "}, {"index": 42, "word": "applications", "lemma": "application", "after": "", "pos": "NNS", "characterOffsetEnd": 874, "segment_span": [0, 42], "characterOffsetBegin": 862, "originalText": "applications", "ArgType": null, "before": " "}, {"index": 43, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 875, "characterOffsetBegin": 874, "originalText": ".", "ArgType": null, "before": ""}], "text": "The kernels for structured natural language data , such as parse tree kernel ( Collins and Duffy , 2001 ) and string kernel ( Lodhi et al. , 2002 ) are examples of the wellknown convolution kernels used in many NLP applications ."}, {"tokens": [{"index": 1, "word": "Tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 880, "segment_span": [0, 14], "characterOffsetBegin": 876, "originalText": "Tree", "ArgType": null, "before": " "}, {"index": 2, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 888, "segment_span": [0, 14], "characterOffsetBegin": 881, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 3, "word": "represent", "characterOffsetEnd": 898, "after": " ", "pos": "VBP", "is_root": true, "lemma": "represent", "segment_span": [0, 14], "tense": "P", "characterOffsetBegin": 889, "originalText": "represent", "ArgType": "verb", "before": " "}, {"index": 4, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 904, "segment_span": [0, 14], "characterOffsetBegin": 899, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 907, "segment_span": [0, 14], "characterOffsetBegin": 905, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 913, "segment_span": [0, 14], "characterOffsetBegin": 908, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 7, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 916, "segment_span": [0, 14], "characterOffsetBegin": 914, "originalText": "of", "ArgType": null, "before": " "}, {"index": 8, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 922, "segment_span": [0, 14], "characterOffsetBegin": 917, "originalText": "their", "ArgType": null, "before": " "}, {"index": 9, "word": "substructures", "lemma": "substructure", "after": " ", "pos": "NNS", "characterOffsetEnd": 936, "segment_span": [0, 14], "characterOffsetBegin": 923, "originalText": "substructures", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 938, "segment_span": [0, 14], "characterOffsetBegin": 937, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "called", "lemma": "call", "after": " ", "pos": "VBN", "characterOffsetEnd": 944, "segment_span": [0, 14], "characterOffsetBegin": 938, "originalText": "called", "ArgType": null, "before": ""}, {"index": 12, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 949, "segment_span": [0, 14], "characterOffsetBegin": 945, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 13, "word": "fragments", "lemma": "fragment", "after": "", "pos": "NNS", "characterOffsetEnd": 959, "segment_span": [0, 14], "characterOffsetBegin": 950, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 14, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 960, "segment_span": [0, 14], "characterOffsetBegin": 959, "originalText": ")", "ArgType": null, "before": ""}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 961, "characterOffsetBegin": 960, "originalText": ".", "ArgType": null, "before": ""}], "text": "Tree kernels represent trees in terms of their substructures ( called tree fragments ) ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 966, "segment_span": [0, 6], "characterOffsetBegin": 962, "originalText": "Such", "ArgType": null, "before": " "}, {"index": 2, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 976, "segment_span": [0, 6], "characterOffsetBegin": 967, "originalText": "fragments", "ArgType": "subj", "before": " "}, {"index": 3, "word": "form", "characterOffsetEnd": 981, "after": " ", "pos": "VBP", "is_root": true, "lemma": "form", "segment_span": [0, 6], "tense": "P", "characterOffsetBegin": 977, "originalText": "form", "ArgType": "verb", "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 983, "segment_span": [0, 6], "characterOffsetBegin": 982, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 991, "segment_span": [0, 6], "characterOffsetBegin": 984, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 6, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 997, "segment_span": [0, 6], "characterOffsetBegin": 992, "originalText": "space", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "which", "lemma": "which", "after": "", "pos": "WDT", "characterOffsetEnd": 1003, "segment_span": [6, 17], "characterOffsetBegin": 998, "originalText": "which", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1004, "segment_span": [6, 17], "characterOffsetBegin": 1003, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1007, "segment_span": [6, 17], "characterOffsetBegin": 1005, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "turn", "lemma": "turn", "after": "", "pos": "NN", "characterOffsetEnd": 1012, "segment_span": [6, 17], "characterOffsetBegin": 1008, "originalText": "turn", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1013, "segment_span": [6, 17], "characterOffsetBegin": 1012, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1016, "segment_span": [6, 17], "characterOffsetBegin": 1014, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "mapped", "characterOffsetEnd": 1023, "after": " ", "pos": "VBN", "is_root": true, "lemma": "map", "segment_span": [6, 17], "tense": "N", "characterOffsetBegin": 1017, "before": " ", "originalText": "mapped", "ArgType": null, "is_pass": true}, {"index": 14, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 1028, "segment_span": [6, 17], "characterOffsetBegin": 1024, "originalText": "into", "ArgType": null, "before": " "}, {"index": 15, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1030, "segment_span": [6, 17], "characterOffsetBegin": 1029, "originalText": "a", "ArgType": null, "before": " "}, {"index": 16, "word": "vector", "lemma": "vector", "after": " ", "pos": "NN", "characterOffsetEnd": 1037, "segment_span": [6, 17], "characterOffsetBegin": 1031, "originalText": "vector", "ArgType": null, "before": " "}, {"index": 17, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 1043, "segment_span": [6, 17], "characterOffsetBegin": 1038, "originalText": "space", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1044, "characterOffsetBegin": 1043, "originalText": ".", "ArgType": null, "before": ""}], "text": "Such fragments form a feature space which , in turn , is mapped into a vector space ."}, {"tokens": [{"index": 1, "word": "Tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1049, "segment_span": [0, 9], "characterOffsetBegin": 1045, "originalText": "Tree", "ArgType": null, "before": " "}, {"index": 2, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 1057, "segment_span": [0, 9], "characterOffsetBegin": 1050, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 3, "word": "measure", "characterOffsetEnd": 1065, "after": " ", "pos": "VB", "is_root": true, "lemma": "measure", "segment_span": [0, 9], "tense": "B", "characterOffsetBegin": 1058, "originalText": "measure", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1069, "segment_span": [0, 9], "characterOffsetBegin": 1066, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "similarity", "lemma": "similarity", "after": " ", "pos": "NN", "characterOffsetEnd": 1080, "segment_span": [0, 9], "characterOffsetBegin": 1070, "originalText": "similarity", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 1088, "segment_span": [0, 9], "characterOffsetBegin": 1081, "originalText": "between", "ArgType": null, "before": " "}, {"index": 7, "word": "pair", "lemma": "pair", "after": " ", "pos": "NN", "characterOffsetEnd": 1093, "segment_span": [0, 9], "characterOffsetBegin": 1089, "originalText": "pair", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1096, "segment_span": [0, 9], "characterOffsetBegin": 1094, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1102, "segment_span": [0, 9], "characterOffsetBegin": 1097, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 10, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1105, "segment_span": [9, 17], "characterOffsetBegin": 1103, "originalText": "by", "ArgType": null, "before": " "}, {"index": 11, "word": "counting", "characterOffsetEnd": 1114, "after": " ", "pos": "VBG", "is_root": true, "lemma": "count", "segment_span": [9, 17], "tense": "G", "characterOffsetBegin": 1106, "originalText": "counting", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1118, "segment_span": [9, 17], "characterOffsetBegin": 1115, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "number", "lemma": "number", "after": " ", "pos": "NN", "characterOffsetEnd": 1125, "segment_span": [9, 17], "characterOffsetBegin": 1119, "originalText": "number", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1128, "segment_span": [9, 17], "characterOffsetBegin": 1126, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "fragments", "lemma": "fragment", "after": " ", "pos": "NNS", "characterOffsetEnd": 1138, "segment_span": [9, 17], "characterOffsetBegin": 1129, "originalText": "fragments", "ArgType": null, "before": " "}, {"index": 16, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1141, "segment_span": [9, 17], "characterOffsetBegin": 1139, "originalText": "in", "ArgType": null, "before": " "}, {"index": 17, "word": "common", "lemma": "common", "after": "", "pos": "JJ", "characterOffsetEnd": 1148, "segment_span": [9, 17], "characterOffsetBegin": 1142, "originalText": "common", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1149, "characterOffsetBegin": 1148, "originalText": ".", "ArgType": null, "before": ""}], "text": "Tree kernels measure the similarity between pair of trees by counting the number of fragments in common ."}, {"tokens": [{"index": 1, "word": "There", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 1155, "segment_span": [0, 33], "characterOffsetBegin": 1150, "originalText": "There", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "characterOffsetEnd": 1159, "after": " ", "pos": "VBP", "is_root": true, "lemma": "be", "segment_span": [0, 33], "tense": "P", "characterOffsetBegin": 1156, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 3, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 1165, "segment_span": [0, 33], "characterOffsetBegin": 1160, "originalText": "three", "ArgType": null, "before": " "}, {"index": 4, "word": "important", "lemma": "important", "after": " ", "pos": "JJ", "characterOffsetEnd": 1175, "segment_span": [0, 33], "characterOffsetBegin": 1166, "originalText": "important", "ArgType": null, "before": " "}, {"index": 5, "word": "characterizations", "lemma": "characterization", "after": " ", "pos": "NNS", "characterOffsetEnd": 1193, "segment_span": [0, 33], "characterOffsetBegin": 1176, "originalText": "characterizations", "ArgType": "subj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1196, "segment_span": [0, 33], "characterOffsetBegin": 1194, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "fragment", "lemma": "fragment", "after": " ", "pos": "NN", "characterOffsetEnd": 1205, "segment_span": [0, 33], "characterOffsetBegin": 1197, "originalText": "fragment", "ArgType": null, "before": " "}, {"index": 8, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 1210, "segment_span": [0, 33], "characterOffsetBegin": 1206, "originalText": "type", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1212, "segment_span": [0, 33], "characterOffsetBegin": 1211, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 1221, "segment_span": [0, 33], "characterOffsetBegin": 1212, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1222, "segment_span": [0, 33], "characterOffsetBegin": 1221, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 1227, "segment_span": [0, 33], "characterOffsetBegin": 1223, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1228, "segment_span": [0, 33], "characterOffsetBegin": 1227, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 1229, "segment_span": [0, 33], "characterOffsetBegin": 1228, "originalText": ":", "ArgType": null, "before": ""}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1233, "segment_span": [0, 33], "characterOffsetBegin": 1230, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "SubTrees", "lemma": "SubTrees", "after": " ", "pos": "NNP", "characterOffsetEnd": 1242, "segment_span": [0, 33], "characterOffsetBegin": 1234, "originalText": "SubTrees", "ArgType": null, "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1244, "segment_span": [0, 33], "characterOffsetBegin": 1243, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "ST", "lemma": "st", "after": "", "pos": "JJ", "characterOffsetEnd": 1246, "segment_span": [0, 33], "characterOffsetBegin": 1244, "originalText": "ST", "ArgType": null, "before": ""}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1247, "segment_span": [0, 33], "characterOffsetBegin": 1246, "originalText": ")", "ArgType": null, "before": ""}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1248, "segment_span": [0, 33], "characterOffsetBegin": 1247, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1252, "segment_span": [0, 33], "characterOffsetBegin": 1249, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "SubSet", "lemma": "SubSet", "after": " ", "pos": "NNP", "characterOffsetEnd": 1259, "segment_span": [0, 33], "characterOffsetBegin": 1253, "originalText": "SubSet", "ArgType": null, "before": " "}, {"index": 23, "word": "Trees", "lemma": "Trees", "after": " ", "pos": "NNP", "characterOffsetEnd": 1265, "segment_span": [0, 33], "characterOffsetBegin": 1260, "originalText": "Trees", "ArgType": null, "before": " "}, {"index": 24, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1267, "segment_span": [0, 33], "characterOffsetBegin": 1266, "originalText": "(", "ArgType": null, "before": " "}, {"index": 25, "word": "SST", "lemma": "SST", "after": "", "pos": "NNP", "characterOffsetEnd": 1270, "segment_span": [0, 33], "characterOffsetBegin": 1267, "originalText": "SST", "ArgType": null, "before": ""}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1271, "segment_span": [0, 33], "characterOffsetBegin": 1270, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1275, "segment_span": [0, 33], "characterOffsetBegin": 1272, "originalText": "and", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1279, "segment_span": [0, 33], "characterOffsetBegin": 1276, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "Partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 1287, "segment_span": [0, 33], "characterOffsetBegin": 1280, "originalText": "Partial", "ArgType": null, "before": " "}, {"index": 30, "word": "Trees", "lemma": "Trees", "after": " ", "pos": "NNP", "characterOffsetEnd": 1293, "segment_span": [0, 33], "characterOffsetBegin": 1288, "originalText": "Trees", "ArgType": null, "before": " "}, {"index": 31, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1295, "segment_span": [0, 33], "characterOffsetBegin": 1294, "originalText": "(", "ArgType": null, "before": " "}, {"index": 32, "word": "PT", "lemma": "pt", "after": "", "pos": "NN", "characterOffsetEnd": 1297, "segment_span": [0, 33], "characterOffsetBegin": 1295, "originalText": "PT", "ArgType": null, "before": ""}, {"index": 33, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1298, "segment_span": [0, 33], "characterOffsetBegin": 1297, "originalText": ")", "ArgType": null, "before": ""}, {"index": 34, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1299, "characterOffsetBegin": 1298, "originalText": ".", "ArgType": null, "before": ""}], "text": "There are three important characterizations of fragment type ( Moschitti , 2006 ) : the SubTrees ( ST ) , the SubSet Trees ( SST ) and the Partial Trees ( PT ) ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 1303, "segment_span": [0, 15], "characterOffsetBegin": 1300, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "sake", "lemma": "sake", "after": " ", "pos": "NN", "characterOffsetEnd": 1308, "segment_span": [0, 15], "characterOffsetBegin": 1304, "originalText": "sake", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1311, "segment_span": [0, 15], "characterOffsetBegin": 1309, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 1317, "segment_span": [0, 15], "characterOffsetBegin": 1312, "originalText": "space", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1318, "segment_span": [0, 15], "characterOffsetBegin": 1317, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1321, "segment_span": [0, 15], "characterOffsetBegin": 1319, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 1324, "segment_span": [0, 15], "characterOffsetBegin": 1322, "originalText": "do", "ArgType": null, "before": " "}, {"index": 8, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 1328, "segment_span": [0, 15], "characterOffsetBegin": 1325, "originalText": "not", "ArgType": null, "before": " "}, {"index": 9, "word": "report", "characterOffsetEnd": 1335, "after": " ", "pos": "VB", "is_root": true, "lemma": "report", "segment_span": [0, 15], "tense": "B", "characterOffsetBegin": 1329, "originalText": "report", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1339, "segment_span": [0, 15], "characterOffsetBegin": 1336, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "mathematical", "lemma": "mathematical", "after": " ", "pos": "JJ", "characterOffsetEnd": 1352, "segment_span": [0, 15], "characterOffsetBegin": 1340, "originalText": "mathematical", "ArgType": null, "before": " "}, {"index": 12, "word": "description", "lemma": "description", "after": " ", "pos": "NN", "characterOffsetEnd": 1364, "segment_span": [0, 15], "characterOffsetBegin": 1353, "originalText": "description", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1367, "segment_span": [0, 15], "characterOffsetBegin": 1365, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "them", "lemma": "they", "after": "", "pos": "PRP", "characterOffsetEnd": 1372, "segment_span": [0, 15], "characterOffsetBegin": 1368, "originalText": "them", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1373, "segment_span": [0, 15], "characterOffsetBegin": 1372, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1379, "segment_span": [15, 31], "characterOffsetBegin": 1374, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 17, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1382, "segment_span": [15, 31], "characterOffsetBegin": 1380, "originalText": "is", "ArgType": null, "before": " "}, {"index": 18, "word": "available", "lemma": "available", "after": " ", "pos": "JJ", "characterOffsetEnd": 1392, "segment_span": [15, 31], "characterOffsetBegin": 1383, "originalText": "available", "ArgType": null, "before": " "}, {"index": 19, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1395, "segment_span": [15, 31], "characterOffsetBegin": 1393, "originalText": "in", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1397, "segment_span": [15, 31], "characterOffsetBegin": 1396, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "Vishwanathan", "lemma": "Vishwanathan", "after": " ", "pos": "NNP", "characterOffsetEnd": 1409, "segment_span": [15, 31], "characterOffsetBegin": 1397, "originalText": "Vishwanathan", "ArgType": null, "before": ""}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1413, "segment_span": [15, 31], "characterOffsetBegin": 1410, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "Smola", "lemma": "Smola", "after": "", "pos": "NNP", "characterOffsetEnd": 1419, "segment_span": [15, 31], "characterOffsetBegin": 1414, "originalText": "Smola", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1420, "segment_span": [15, 31], "characterOffsetBegin": 1419, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "2002", "lemma": "2002", "after": "", "pos": "CD", "characterOffsetEnd": 1425, "segment_span": [15, 31], "characterOffsetBegin": 1421, "originalText": "2002", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1426, "segment_span": [15, 31], "characterOffsetBegin": 1425, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1427, "segment_span": [15, 31], "characterOffsetBegin": 1426, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1429, "segment_span": [15, 31], "characterOffsetBegin": 1428, "originalText": "(", "ArgType": null, "before": " "}, {"index": 29, "word": "Collins", "lemma": "Collins", "after": " ", "pos": "NNP", "characterOffsetEnd": 1436, "segment_span": [15, 31], "characterOffsetBegin": 1429, "originalText": "Collins", "ArgType": null, "before": ""}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1440, "segment_span": [15, 31], "characterOffsetBegin": 1437, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "Duffy", "lemma": "duffy", "after": "", "pos": "NN", "characterOffsetEnd": 1446, "segment_span": [15, 31], "characterOffsetBegin": 1441, "originalText": "Duffy", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": "\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ",", "characterOffsetEnd": 1447, "characterOffsetBegin": 1446, "originalText": ",", "ArgType": null, "before": ""}], "text": "For sake of space , we do not report the mathematical description of them , which is available in ( Vishwanathan and Smola , 2002 ) , ( Collins and Duffy ,"}, {"tokens": [{"index": 1, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 4, "segment_span": [0, 10], "characterOffsetBegin": 0, "originalText": "2001", "ArgType": null, "before": ""}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 5, "segment_span": [0, 10], "characterOffsetBegin": 4, "originalText": ")", "ArgType": null, "before": ""}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 9, "segment_span": [0, 10], "characterOffsetBegin": 6, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 11, "segment_span": [0, 10], "characterOffsetBegin": 10, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 11, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 21, "segment_span": [0, 10], "characterOffsetBegin": 20, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 26, "segment_span": [0, 10], "characterOffsetBegin": 22, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 27, "segment_span": [0, 10], "characterOffsetBegin": 26, "originalText": ")", "ArgType": null, "before": ""}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 28, "segment_span": [0, 10], "characterOffsetBegin": 27, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 41, "segment_span": [0, 10], "characterOffsetBegin": 29, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 42, "characterOffsetBegin": 41, "originalText": ".", "ArgType": null, "before": ""}], "text": "2001 ) and ( Moschitti , 2006 ) , respectively ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 45, "segment_span": [0, 12], "characterOffsetBegin": 43, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "contrast", "lemma": "contrast", "after": "", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 12], "characterOffsetBegin": 46, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 55, "segment_span": [0, 12], "characterOffsetBegin": 54, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 58, "segment_span": [0, 12], "characterOffsetBegin": 56, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "report", "characterOffsetEnd": 65, "after": " ", "pos": "VBP", "is_root": true, "lemma": "report", "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 59, "originalText": "report", "ArgType": "verb", "before": " "}, {"index": 6, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 70, "segment_span": [0, 12], "characterOffsetBegin": 66, "originalText": "some", "ArgType": null, "before": " "}, {"index": 7, "word": "descriptions", "lemma": "description", "after": " ", "pos": "NNS", "characterOffsetEnd": 83, "segment_span": [0, 12], "characterOffsetBegin": 71, "originalText": "descriptions", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [0, 12], "characterOffsetBegin": 84, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 92, "segment_span": [0, 12], "characterOffsetBegin": 87, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 95, "segment_span": [0, 12], "characterOffsetBegin": 93, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 12], "characterOffsetBegin": 96, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 12, "word": "space", "lemma": "space", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [0, 12], "characterOffsetBegin": 104, "originalText": "space", "ArgType": null, "before": " "}, {"index": 13, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 114, "segment_span": [12, 22], "characterOffsetBegin": 110, "originalText": "that", "ArgType": "subj", "before": " "}, {"index": 14, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 118, "segment_span": [12, 22], "characterOffsetBegin": 115, "originalText": "may", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 121, "segment_span": [12, 22], "characterOffsetBegin": 119, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 128, "segment_span": [12, 22], "has_aux": true, "characterOffsetBegin": 122, "originalText": "useful", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 131, "segment_span": [12, 22], "characterOffsetBegin": 129, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "understand", "lemma": "understand", "after": " ", "pos": "VB", "characterOffsetEnd": 142, "segment_span": [12, 22], "characterOffsetBegin": 132, "originalText": "understand", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 146, "segment_span": [12, 22], "characterOffsetBegin": 143, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 150, "segment_span": [12, 22], "characterOffsetBegin": 147, "originalText": "new", "ArgType": null, "before": " "}, {"index": 21, "word": "engineered", "lemma": "engineer", "after": " ", "pos": "VBN", "characterOffsetEnd": 161, "segment_span": [12, 22], "characterOffsetBegin": 151, "originalText": "engineered", "ArgType": null, "before": " "}, {"index": 22, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 169, "segment_span": [12, 22], "characterOffsetBegin": 162, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 170, "characterOffsetBegin": 169, "originalText": ".", "ArgType": null, "before": ""}], "text": "In contrast , we report some descriptions in terms of feature space that may be useful to understand the new engineered kernels ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 173, "segment_span": [0, 10], "characterOffsetBegin": 171, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "principle", "lemma": "principle", "after": "", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [0, 10], "characterOffsetBegin": 174, "originalText": "principle", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 184, "segment_span": [0, 10], "characterOffsetBegin": 183, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 186, "segment_span": [0, 10], "characterOffsetBegin": 185, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "SubTree", "lemma": "SubTree", "after": " ", "pos": "NNP", "characterOffsetEnd": 194, "segment_span": [0, 10], "characterOffsetBegin": 187, "originalText": "SubTree", "ArgType": null, "before": " "}, {"index": 6, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 196, "segment_span": [0, 10], "characterOffsetBegin": 195, "originalText": "(", "ArgType": null, "before": " "}, {"index": 7, "word": "ST", "lemma": "st", "after": "", "pos": "JJ", "characterOffsetEnd": 198, "segment_span": [0, 10], "characterOffsetBegin": 196, "originalText": "ST", "ArgType": null, "before": ""}, {"index": 8, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 199, "segment_span": [0, 10], "characterOffsetBegin": 198, "originalText": ")", "ArgType": null, "before": ""}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 202, "segment_span": [0, 10], "characterOffsetBegin": 200, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "defined", "characterOffsetEnd": 210, "after": " ", "pos": "VBN", "is_root": true, "lemma": "define", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 203, "before": " ", "originalText": "defined", "ArgType": null, "is_pass": true}, {"index": 11, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 213, "segment_span": [10, 18], "characterOffsetBegin": 211, "originalText": "by", "ArgType": null, "before": " "}, {"index": 12, "word": "taking", "characterOffsetEnd": 220, "after": " ", "pos": "VBG", "is_root": true, "lemma": "take", "segment_span": [10, 18], "tense": "G", "characterOffsetBegin": 214, "originalText": "taking", "ArgType": null, "before": " "}, {"index": 13, "word": "any", "lemma": "any", "after": " ", "pos": "DT", "characterOffsetEnd": 224, "segment_span": [10, 18], "characterOffsetBegin": 221, "originalText": "any", "ArgType": null, "before": " "}, {"index": 14, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 229, "segment_span": [10, 18], "characterOffsetBegin": 225, "originalText": "node", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "along", "lemma": "along", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [10, 18], "characterOffsetBegin": 230, "originalText": "along", "ArgType": null, "before": " "}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 240, "segment_span": [10, 18], "characterOffsetBegin": 236, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "its", "lemma": "its", "after": " ", "pos": "PRP$", "characterOffsetEnd": 244, "segment_span": [10, 18], "characterOffsetBegin": 241, "originalText": "its", "ArgType": null, "before": " "}, {"index": 18, "word": "descendants", "lemma": "descendant", "after": "", "pos": "NNS", "characterOffsetEnd": 256, "segment_span": [10, 18], "characterOffsetBegin": 245, "originalText": "descendants", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 257, "characterOffsetBegin": 256, "originalText": ".", "ArgType": null, "before": ""}], "text": "In principle , a SubTree ( ST ) is defined by taking any node along with its descendants ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 259, "segment_span": [0, 11], "characterOffsetBegin": 258, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "SubSet", "lemma": "SubSet", "after": " ", "pos": "NNP", "characterOffsetEnd": 266, "segment_span": [0, 11], "characterOffsetBegin": 260, "originalText": "SubSet", "ArgType": null, "before": " "}, {"index": 3, "word": "Tree", "lemma": "Tree", "after": " ", "pos": "NNP", "characterOffsetEnd": 271, "segment_span": [0, 11], "characterOffsetBegin": 267, "originalText": "Tree", "ArgType": "subj", "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 273, "segment_span": [0, 11], "characterOffsetBegin": 272, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "SST", "lemma": "SST", "after": "", "pos": "NNP", "characterOffsetEnd": 276, "segment_span": [0, 11], "characterOffsetBegin": 273, "originalText": "SST", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 277, "segment_span": [0, 11], "characterOffsetBegin": 276, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 280, "segment_span": [0, 11], "characterOffsetBegin": 278, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 282, "segment_span": [0, 11], "characterOffsetBegin": 281, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 287, "segment_span": [0, 11], "characterOffsetBegin": 283, "originalText": "more", "ArgType": null, "before": " "}, {"index": 10, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 295, "segment_span": [0, 11], "characterOffsetBegin": 288, "originalText": "general", "ArgType": null, "before": " "}, {"index": 11, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 305, "segment_span": [0, 11], "characterOffsetBegin": 296, "originalText": "structure", "ArgType": "verb", "before": " "}, {"index": 12, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 311, "segment_span": [11, 19], "characterOffsetBegin": 306, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 13, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 316, "segment_span": [11, 19], "characterOffsetBegin": 312, "originalText": "does", "ArgType": null, "before": " "}, {"index": 14, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 320, "segment_span": [11, 19], "characterOffsetBegin": 317, "originalText": "not", "ArgType": null, "before": " "}, {"index": 15, "word": "necessarily", "lemma": "necessarily", "after": " ", "pos": "RB", "characterOffsetEnd": 332, "segment_span": [11, 19], "characterOffsetBegin": 321, "originalText": "necessarily", "ArgType": null, "before": " "}, {"index": 16, "word": "include", "characterOffsetEnd": 340, "after": " ", "pos": "VB", "is_root": true, "lemma": "include", "segment_span": [11, 19], "tense": "B", "characterOffsetBegin": 333, "originalText": "include", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "all", "lemma": "all", "after": " ", "pos": "PDT", "characterOffsetEnd": 344, "segment_span": [11, 19], "characterOffsetBegin": 341, "originalText": "all", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 348, "segment_span": [11, 19], "characterOffsetBegin": 345, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "descendants", "lemma": "descendant", "after": "", "pos": "NNS", "characterOffsetEnd": 360, "segment_span": [11, 19], "characterOffsetBegin": 349, "originalText": "descendants", "ArgType": "dobj", "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 361, "characterOffsetBegin": 360, "originalText": ".", "ArgType": null, "before": ""}], "text": "A SubSet Tree ( SST ) is a more general structure which does not necessarily include all the descendants ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 364, "segment_span": [0, 4], "characterOffsetBegin": 362, "originalText": "It", "ArgType": null, "before": " "}, {"index": 2, "word": "must", "lemma": "must", "after": " ", "pos": "MD", "characterOffsetEnd": 369, "segment_span": [0, 4], "characterOffsetBegin": 365, "originalText": "must", "ArgType": null, "before": " "}, {"index": 3, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 372, "segment_span": [0, 4], "characterOffsetBegin": 370, "originalText": "be", "ArgType": null, "before": " "}, {"index": 4, "word": "generated", "characterOffsetEnd": 382, "after": " ", "pos": "VBN", "is_root": true, "lemma": "generate", "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 373, "before": " ", "originalText": "generated", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 385, "segment_span": [4, 6], "characterOffsetBegin": 383, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "applying", "characterOffsetEnd": 394, "after": " ", "pos": "VBG", "is_root": true, "lemma": "apply", "segment_span": [4, 6], "tense": "G", "characterOffsetBegin": 386, "originalText": "applying", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 398, "segment_span": [6, 12], "characterOffsetBegin": 395, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 403, "segment_span": [6, 12], "characterOffsetBegin": 399, "originalText": "same", "ArgType": null, "before": " "}, {"index": 9, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 415, "segment_span": [6, 12], "characterOffsetBegin": 404, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 10, "word": "rule", "lemma": "rule", "after": " ", "pos": "NN", "characterOffsetEnd": 420, "segment_span": [6, 12], "characterOffsetBegin": 416, "originalText": "rule", "ArgType": "subj", "before": " "}, {"index": 11, "word": "set", "lemma": "set", "after": "", "pos": "NN", "characterOffsetEnd": 424, "segment_span": [6, 12], "characterOffsetBegin": 421, "originalText": "set", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 425, "segment_span": [6, 12], "characterOffsetBegin": 424, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 431, "segment_span": [12, 17], "characterOffsetBegin": 426, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 14, "word": "generated", "characterOffsetEnd": 441, "after": " ", "pos": "VBD", "is_root": true, "lemma": "generate", "segment_span": [12, 17], "tense": "D", "characterOffsetBegin": 432, "originalText": "generated", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 445, "segment_span": [12, 17], "characterOffsetBegin": 442, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 454, "segment_span": [12, 17], "characterOffsetBegin": 446, "originalText": "original", "ArgType": null, "before": " "}, {"index": 17, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 459, "segment_span": [12, 17], "characterOffsetBegin": 455, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 460, "characterOffsetBegin": 459, "originalText": ".", "ArgType": null, "before": ""}], "text": "It must be generated by applying the same grammatical rule set , which generated the original tree ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 462, "segment_span": [0, 14], "characterOffsetBegin": 461, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "Partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 470, "segment_span": [0, 14], "characterOffsetBegin": 463, "originalText": "Partial", "ArgType": null, "before": " "}, {"index": 3, "word": "Tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 475, "segment_span": [0, 14], "characterOffsetBegin": 471, "originalText": "Tree", "ArgType": "subj", "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 477, "segment_span": [0, 14], "characterOffsetBegin": 476, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "PT", "lemma": "pt", "after": "", "pos": "NN", "characterOffsetEnd": 479, "segment_span": [0, 14], "characterOffsetBegin": 477, "originalText": "PT", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 480, "segment_span": [0, 14], "characterOffsetBegin": 479, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 483, "segment_span": [0, 14], "characterOffsetBegin": 481, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 485, "segment_span": [0, 14], "characterOffsetBegin": 484, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 490, "segment_span": [0, 14], "characterOffsetBegin": 486, "originalText": "more", "ArgType": null, "before": " "}, {"index": 10, "word": "general", "lemma": "general", "after": " ", "pos": "JJ", "characterOffsetEnd": 498, "segment_span": [0, 14], "characterOffsetBegin": 491, "originalText": "general", "ArgType": null, "before": " "}, {"index": 11, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 503, "segment_span": [0, 14], "characterOffsetBegin": 499, "originalText": "form", "ArgType": "verb", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 506, "segment_span": [0, 14], "characterOffsetBegin": 504, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "substructures", "lemma": "substructure", "after": " ", "pos": "NNS", "characterOffsetEnd": 520, "segment_span": [0, 14], "characterOffsetBegin": 507, "originalText": "substructures", "ArgType": null, "before": " "}, {"index": 14, "word": "obtained", "lemma": "obtain", "after": " ", "pos": "VBN", "characterOffsetEnd": 529, "segment_span": [0, 14], "characterOffsetBegin": 521, "originalText": "obtained", "ArgType": null, "before": " "}, {"index": 15, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 532, "segment_span": [14, 20], "characterOffsetBegin": 530, "originalText": "by", "ArgType": null, "before": " "}, {"index": 16, "word": "relaxing", "characterOffsetEnd": 541, "after": " ", "pos": "VBG", "is_root": true, "lemma": "relax", "segment_span": [14, 20], "tense": "G", "characterOffsetBegin": 533, "originalText": "relaxing", "ArgType": null, "before": " "}, {"index": 17, "word": "constraints", "lemma": "constraint", "after": " ", "pos": "NNS", "characterOffsetEnd": 553, "segment_span": [14, 20], "characterOffsetBegin": 542, "originalText": "constraints", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 558, "segment_span": [14, 20], "characterOffsetBegin": 554, "originalText": "over", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 562, "segment_span": [14, 20], "characterOffsetBegin": 559, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "SST", "lemma": "SST", "after": "", "pos": "NNP", "characterOffsetEnd": 566, "segment_span": [14, 20], "characterOffsetBegin": 563, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 567, "characterOffsetBegin": 566, "originalText": ".", "ArgType": null, "before": ""}], "text": "A Partial Tree ( PT ) is a more general form of substructures obtained by relaxing constraints over the SST ."}], "title": "3.2 Kernel Methods"}], "title": "3 Support Vector Machines and Kernel\nMethods"}, {"num": 7, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 28], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 28], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 28], "characterOffsetBegin": 8, "originalText": "section", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 18, "segment_span": [0, 28], "characterOffsetBegin": 16, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "describe", "characterOffsetEnd": 27, "after": " ", "pos": "VBP", "is_root": true, "lemma": "describe", "segment_span": [0, 28], "tense": "P", "characterOffsetBegin": 19, "originalText": "describe", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 28], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 40, "segment_span": [0, 28], "characterOffsetBegin": 32, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 8, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 28], "characterOffsetBegin": 41, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 54, "segment_span": [0, 28], "characterOffsetBegin": 49, "originalText": "based", "ArgType": null, "before": " "}, {"index": 10, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [0, 28], "characterOffsetBegin": 55, "originalText": "on", "ArgType": null, "before": " "}, {"index": 11, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [0, 28], "characterOffsetBegin": 58, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 12, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 75, "segment_span": [0, 28], "characterOffsetBegin": 70, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 13, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 78, "segment_span": [0, 28], "characterOffsetBegin": 76, "originalText": "as", "ArgType": null, "before": " "}, {"index": 14, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 83, "segment_span": [0, 28], "characterOffsetBegin": 79, "originalText": "well", "ArgType": null, "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 86, "segment_span": [0, 28], "characterOffsetBegin": 84, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 90, "segment_span": [0, 28], "characterOffsetBegin": 87, "originalText": "new", "ArgType": null, "before": " "}, {"index": 17, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 98, "segment_span": [0, 28], "characterOffsetBegin": 91, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 18, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 104, "segment_span": [0, 28], "characterOffsetBegin": 99, "originalText": "based", "ArgType": null, "before": " "}, {"index": 19, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 107, "segment_span": [0, 28], "characterOffsetBegin": 105, "originalText": "on", "ArgType": null, "before": " "}, {"index": 20, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 115, "segment_span": [0, 28], "characterOffsetBegin": 108, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 21, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 121, "segment_span": [0, 28], "characterOffsetBegin": 116, "originalText": "types", "ArgType": null, "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 124, "segment_span": [0, 28], "characterOffsetBegin": 122, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 130, "segment_span": [0, 28], "characterOffsetBegin": 125, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 24, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 134, "segment_span": [0, 28], "characterOffsetBegin": 131, "originalText": "and", "ArgType": null, "before": " "}, {"index": 25, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 144, "segment_span": [0, 28], "characterOffsetBegin": 135, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 26, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 148, "segment_span": [0, 28], "characterOffsetBegin": 145, "originalText": "for", "ArgType": null, "before": " "}, {"index": 27, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [0, 28], "characterOffsetBegin": 149, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 28, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 168, "segment_span": [0, 28], "characterOffsetBegin": 158, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 169, "characterOffsetBegin": 168, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this section we describe the previous kernels based on constituent trees as well as new kernels based on diverse types of trees and sequences for relation extraction ."}, {"tokens": [{"index": 1, "word": "As", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 172, "segment_span": [0, 6], "characterOffsetBegin": 170, "originalText": "As", "ArgType": null, "before": " "}, {"index": 2, "word": "mentioned", "characterOffsetEnd": 182, "after": " ", "pos": "VBN", "is_root": true, "lemma": "mention", "segment_span": [0, 6], "tense": "N", "characterOffsetBegin": 173, "originalText": "mentioned", "ArgType": null, "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 185, "segment_span": [0, 6], "characterOffsetBegin": 183, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 189, "segment_span": [0, 6], "characterOffsetBegin": 186, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 198, "segment_span": [0, 6], "characterOffsetBegin": 190, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 6, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 206, "segment_span": [0, 6], "characterOffsetBegin": 199, "originalText": "section", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 207, "segment_span": [6, 11], "characterOffsetBegin": 206, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 210, "segment_span": [6, 11], "characterOffsetBegin": 208, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 9, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 214, "segment_span": [6, 11], "characterOffsetBegin": 211, "originalText": "can", "ArgType": null, "before": " "}, {"index": 10, "word": "engineer", "characterOffsetEnd": 223, "after": " ", "pos": "VB", "is_root": true, "lemma": "engineer", "segment_span": [6, 11], "tense": "B", "characterOffsetBegin": 215, "originalText": "engineer", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 11, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 231, "segment_span": [6, 11], "characterOffsetBegin": 224, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 234, "segment_span": [11, 17], "characterOffsetBegin": 232, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "combining", "characterOffsetEnd": 244, "after": " ", "pos": "VBG", "is_root": true, "lemma": "combine", "segment_span": [11, 17], "tense": "G", "characterOffsetBegin": 235, "originalText": "combining", "ArgType": null, "before": " "}, {"index": 14, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 249, "segment_span": [11, 17], "characterOffsetBegin": 245, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 253, "segment_span": [11, 17], "characterOffsetBegin": 250, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 262, "segment_span": [11, 17], "characterOffsetBegin": 254, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 17, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 270, "segment_span": [11, 17], "characterOffsetBegin": 263, "originalText": "kernels", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 271, "characterOffsetBegin": 270, "originalText": ".", "ArgType": null, "before": ""}], "text": "As mentioned in the previous section , we can engineer kernels by combining tree and sequence kernels ."}, {"tokens": [{"index": 1, "word": "Thus", "lemma": "thus", "after": " ", "pos": "RB", "characterOffsetEnd": 276, "segment_span": [0, 22], "characterOffsetBegin": 272, "originalText": "Thus", "ArgType": null, "before": " "}, {"index": 2, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 279, "segment_span": [0, 22], "characterOffsetBegin": 277, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 3, "word": "focus", "characterOffsetEnd": 285, "after": " ", "pos": "VBP", "is_root": true, "lemma": "focus", "segment_span": [0, 22], "tense": "P", "characterOffsetBegin": 280, "originalText": "focus", "ArgType": "verb", "before": " "}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 288, "segment_span": [0, 22], "characterOffsetBegin": 286, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 292, "segment_span": [0, 22], "characterOffsetBegin": 289, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 300, "segment_span": [0, 22], "characterOffsetBegin": 293, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 7, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 303, "segment_span": [0, 22], "characterOffsetBegin": 301, "originalText": "to", "ArgType": null, "before": " "}, {"index": 8, "word": "define", "lemma": "define", "after": " ", "pos": "VB", "characterOffsetEnd": 310, "segment_span": [0, 22], "characterOffsetBegin": 304, "originalText": "define", "ArgType": null, "before": " "}, {"index": 9, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 320, "segment_span": [0, 22], "characterOffsetBegin": 311, "originalText": "structure", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "embedding", "lemma": "embed", "after": " ", "pos": "VBG", "characterOffsetEnd": 330, "segment_span": [0, 22], "characterOffsetBegin": 321, "originalText": "embedding", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 334, "segment_span": [0, 22], "characterOffsetBegin": 331, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "desired", "lemma": "desire", "after": " ", "pos": "VBN", "characterOffsetEnd": 342, "segment_span": [0, 22], "characterOffsetBegin": 335, "originalText": "desired", "ArgType": null, "before": " "}, {"index": 13, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "NN", "characterOffsetEnd": 352, "segment_span": [0, 22], "characterOffsetBegin": 343, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 14, "word": "relational", "lemma": "relational", "after": " ", "pos": "JJ", "characterOffsetEnd": 363, "segment_span": [0, 22], "characterOffsetBegin": 353, "originalText": "relational", "ArgType": null, "before": " "}, {"index": 15, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 375, "segment_span": [0, 22], "characterOffsetBegin": 364, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 383, "segment_span": [0, 22], "characterOffsetBegin": 376, "originalText": "between", "ArgType": null, "before": " "}, {"index": 17, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 387, "segment_span": [0, 22], "characterOffsetBegin": 384, "originalText": "two", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "named", "lemma": "name", "after": " ", "pos": "VBN", "characterOffsetEnd": 393, "segment_span": [0, 22], "characterOffsetBegin": 388, "originalText": "named", "ArgType": null, "before": " "}, {"index": 19, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 402, "segment_span": [0, 22], "characterOffsetBegin": 394, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 404, "segment_span": [0, 22], "characterOffsetBegin": 403, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 407, "segment_span": [0, 22], "characterOffsetBegin": 404, "originalText": "NEs", "ArgType": null, "before": ""}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 408, "segment_span": [0, 22], "characterOffsetBegin": 407, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 409, "characterOffsetBegin": 408, "originalText": ".", "ArgType": null, "before": ""}], "text": "Thus we focus on the problem to define structure embedding the desired syntactic relational information between two named entities ( NEs ) ."}]}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "Syntactic", "ArgType": null, "before": ""}, {"index": 2, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 17, "segment_span": [0, 8], "characterOffsetBegin": 10, "originalText": "parsing", "ArgType": "subj", "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 18, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 21, "segment_span": [0, 8], "characterOffsetBegin": 19, "originalText": "or", "ArgType": null, "before": ""}, {"index": 5, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 31, "segment_span": [0, 8], "characterOffsetBegin": 22, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 6, "word": "analysis", "lemma": "analysis", "after": "", "pos": "NN", "characterOffsetEnd": 40, "segment_span": [0, 8], "characterOffsetBegin": 32, "originalText": "analysis", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 41, "segment_span": [0, 8], "characterOffsetBegin": 40, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "aims", "characterOffsetEnd": 46, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "aim", "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 42, "originalText": "aims", "ArgType": "verb", "before": " "}, {"index": 9, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 49, "segment_span": [8, 15], "characterOffsetBegin": 47, "originalText": "at", "ArgType": null, "before": " "}, {"index": 10, "word": "identifying", "characterOffsetEnd": 61, "after": " ", "pos": "VBG", "is_root": true, "lemma": "identify", "segment_span": [8, 15], "tense": "G", "characterOffsetBegin": 50, "originalText": "identifying", "ArgType": null, "before": " "}, {"index": 11, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 73, "segment_span": [8, 15], "characterOffsetBegin": 62, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 12, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 84, "segment_span": [8, 15], "characterOffsetBegin": 74, "originalText": "structures", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 87, "segment_span": [8, 15], "characterOffsetBegin": 85, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [8, 15], "characterOffsetBegin": 88, "originalText": "a", "ArgType": null, "before": " "}, {"index": 15, "word": "text", "lemma": "text", "after": "", "pos": "NN", "characterOffsetEnd": 94, "segment_span": [8, 15], "characterOffsetBegin": 90, "originalText": "text", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 95, "characterOffsetBegin": 94, "originalText": ".", "ArgType": null, "before": ""}], "text": "Syntactic parsing ( or syntactic analysis ) aims at identifying grammatical structures in a text ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 97, "segment_span": [0, 12], "characterOffsetBegin": 96, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "parser", "lemma": "parser", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [0, 12], "characterOffsetBegin": 98, "originalText": "parser", "ArgType": "subj", "before": " "}, {"index": 3, "word": "thus", "lemma": "thus", "after": " ", "pos": "RB", "characterOffsetEnd": 109, "segment_span": [0, 12], "characterOffsetBegin": 105, "originalText": "thus", "ArgType": null, "before": " "}, {"index": 4, "word": "captures", "characterOffsetEnd": 118, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "capture", "segment_span": [0, 12], "tense": "Z", "characterOffsetBegin": 110, "originalText": "captures", "ArgType": "verb", "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 122, "segment_span": [0, 12], "characterOffsetBegin": 119, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "hidden", "lemma": "hidden", "after": " ", "pos": "JJ", "characterOffsetEnd": 129, "segment_span": [0, 12], "characterOffsetBegin": 123, "originalText": "hidden", "ArgType": null, "before": " "}, {"index": 7, "word": "hierarchy", "lemma": "hierarchy", "after": " ", "pos": "NN", "characterOffsetEnd": 139, "segment_span": [0, 12], "characterOffsetBegin": 130, "originalText": "hierarchy", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 142, "segment_span": [0, 12], "characterOffsetBegin": 140, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 146, "segment_span": [0, 12], "characterOffsetBegin": 143, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "input", "lemma": "input", "after": " ", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [0, 12], "characterOffsetBegin": 147, "originalText": "input", "ArgType": null, "before": " "}, {"index": 11, "word": "text", "lemma": "text", "after": " ", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [0, 12], "characterOffsetBegin": 153, "originalText": "text", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 161, "segment_span": [0, 12], "characterOffsetBegin": 158, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "processes", "characterOffsetEnd": 171, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "process", "segment_span": [12, 21], "tense": "Z", "characterOffsetBegin": 162, "originalText": "processes", "ArgType": null, "before": " "}, {"index": 14, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 174, "segment_span": [12, 21], "characterOffsetBegin": 172, "originalText": "it", "ArgType": "dobj", "before": " "}, {"index": 15, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 179, "segment_span": [12, 21], "characterOffsetBegin": 175, "originalText": "into", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 181, "segment_span": [12, 21], "characterOffsetBegin": 180, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "form", "lemma": "form", "after": " ", "pos": "NN", "characterOffsetEnd": 186, "segment_span": [12, 21], "characterOffsetBegin": 182, "originalText": "form", "ArgType": null, "before": " "}, {"index": 18, "word": "suitable", "lemma": "suitable", "after": " ", "pos": "JJ", "characterOffsetEnd": 195, "segment_span": [12, 21], "characterOffsetBegin": 187, "originalText": "suitable", "ArgType": null, "before": " "}, {"index": 19, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 199, "segment_span": [12, 21], "characterOffsetBegin": 196, "originalText": "for", "ArgType": null, "before": " "}, {"index": 20, "word": "further", "lemma": "further", "after": " ", "pos": "JJ", "characterOffsetEnd": 207, "segment_span": [12, 21], "characterOffsetBegin": 200, "originalText": "further", "ArgType": null, "before": " "}, {"index": 21, "word": "processing", "lemma": "processing", "after": "", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [12, 21], "characterOffsetBegin": 208, "originalText": "processing", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 219, "characterOffsetBegin": 218, "originalText": ".", "ArgType": null, "before": ""}], "text": "A parser thus captures the hidden hierarchy of the input text and processes it into a form suitable for further processing ."}, {"tokens": [{"index": 1, "word": "There", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 225, "segment_span": [0, 15], "characterOffsetBegin": 220, "originalText": "There", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "characterOffsetEnd": 229, "after": " ", "pos": "VBP", "is_root": true, "lemma": "be", "segment_span": [0, 15], "tense": "P", "characterOffsetBegin": 226, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 3, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 233, "segment_span": [0, 15], "characterOffsetBegin": 230, "originalText": "two", "ArgType": null, "before": " "}, {"index": 4, "word": "main", "lemma": "main", "after": " ", "pos": "JJ", "characterOffsetEnd": 238, "segment_span": [0, 15], "characterOffsetBegin": 234, "originalText": "main", "ArgType": null, "before": " "}, {"index": 5, "word": "paradigms", "lemma": "paradigm", "after": " ", "pos": "NNS", "characterOffsetEnd": 248, "segment_span": [0, 15], "characterOffsetBegin": 239, "originalText": "paradigms", "ArgType": "subj", "before": " "}, {"index": 6, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 252, "segment_span": [0, 15], "characterOffsetBegin": 249, "originalText": "for", "ArgType": null, "before": " "}, {"index": 7, "word": "representing", "lemma": "represent", "after": " ", "pos": "VBG", "characterOffsetEnd": 265, "segment_span": [0, 15], "characterOffsetBegin": 253, "originalText": "representing", "ArgType": null, "before": " "}, {"index": 8, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 275, "segment_span": [0, 15], "characterOffsetBegin": 266, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 9, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 287, "segment_span": [0, 15], "characterOffsetBegin": 276, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 288, "segment_span": [0, 15], "characterOffsetBegin": 287, "originalText": ":", "ArgType": null, "before": ""}, {"index": 11, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 300, "segment_span": [0, 15], "characterOffsetBegin": 289, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 304, "segment_span": [0, 15], "characterOffsetBegin": 301, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 315, "segment_span": [0, 15], "characterOffsetBegin": 305, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 14, "word": "parsing", "lemma": "parsing", "after": "", "pos": "NN", "characterOffsetEnd": 323, "segment_span": [0, 15], "characterOffsetBegin": 316, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 324, "segment_span": [0, 15], "characterOffsetBegin": 323, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 330, "segment_span": [15, 21], "characterOffsetBegin": 325, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 17, "word": "produces", "characterOffsetEnd": 339, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "produce", "segment_span": [15, 21], "tense": "Z", "characterOffsetBegin": 331, "originalText": "produces", "ArgType": null, "before": " "}, {"index": 18, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 343, "segment_span": [15, 21], "characterOffsetBegin": 340, "originalText": "two", "ArgType": null, "before": " "}, {"index": 19, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 353, "segment_span": [15, 21], "characterOffsetBegin": 344, "originalText": "different", "ArgType": null, "before": " "}, {"index": 20, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 358, "segment_span": [15, 21], "characterOffsetBegin": 354, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 21, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 369, "segment_span": [15, 21], "characterOffsetBegin": 359, "originalText": "structures", "ArgType": "dobj", "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 370, "characterOffsetBegin": 369, "originalText": ".", "ArgType": null, "before": ""}], "text": "There are two main paradigms for representing syntactic information : constituent and dependency parsing , which produces two different tree structures ."}, {"tokens": [{"index": 1, "word": "Constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 382, "segment_span": [0, 8], "characterOffsetBegin": 371, "originalText": "Constituent", "ArgType": null, "before": " "}, {"index": 2, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 387, "segment_span": [0, 8], "characterOffsetBegin": 383, "originalText": "tree", "ArgType": "subj", "before": " "}, {"index": 3, "word": "encodes", "characterOffsetEnd": 395, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "encode", "segment_span": [0, 8], "tense": "Z", "characterOffsetBegin": 388, "originalText": "encodes", "ArgType": "verb", "before": " "}, {"index": 4, "word": "structural", "lemma": "structural", "after": " ", "pos": "JJ", "characterOffsetEnd": 406, "segment_span": [0, 8], "characterOffsetBegin": 396, "originalText": "structural", "ArgType": null, "before": " "}, {"index": 5, "word": "properties", "lemma": "property", "after": " ", "pos": "NNS", "characterOffsetEnd": 417, "segment_span": [0, 8], "characterOffsetBegin": 407, "originalText": "properties", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 420, "segment_span": [0, 8], "characterOffsetBegin": 418, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 422, "segment_span": [0, 8], "characterOffsetBegin": 421, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 431, "segment_span": [0, 8], "characterOffsetBegin": 423, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 9, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 432, "characterOffsetBegin": 431, "originalText": ".", "ArgType": null, "before": ""}], "text": "Constituent tree encodes structural properties of a sentence ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 436, "segment_span": [0, 37], "characterOffsetBegin": 433, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 442, "segment_span": [0, 37], "characterOffsetBegin": 437, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 3, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 447, "segment_span": [0, 37], "characterOffsetBegin": 443, "originalText": "tree", "ArgType": "subj", "before": " "}, {"index": 4, "word": "contains", "characterOffsetEnd": 456, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "contain", "segment_span": [0, 37], "tense": "Z", "characterOffsetBegin": 448, "originalText": "contains", "ArgType": "verb", "before": " "}, {"index": 5, "word": "constituents", "lemma": "constituent", "after": "", "pos": "NNS", "characterOffsetEnd": 469, "segment_span": [0, 37], "characterOffsetBegin": 457, "originalText": "constituents", "ArgType": "dobj", "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 470, "segment_span": [0, 37], "characterOffsetBegin": 469, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 475, "segment_span": [0, 37], "characterOffsetBegin": 471, "originalText": "such", "ArgType": null, "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 478, "segment_span": [0, 37], "characterOffsetBegin": 476, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "noun", "lemma": "noun", "after": " ", "pos": "NN", "characterOffsetEnd": 483, "segment_span": [0, 37], "characterOffsetBegin": 479, "originalText": "noun", "ArgType": null, "before": " "}, {"index": 10, "word": "phrases", "lemma": "phrase", "after": " ", "pos": "NNS", "characterOffsetEnd": 491, "segment_span": [0, 37], "characterOffsetBegin": 484, "originalText": "phrases", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 493, "segment_span": [0, 37], "characterOffsetBegin": 492, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "NP", "lemma": "np", "after": "", "pos": "NN", "characterOffsetEnd": 495, "segment_span": [0, 37], "characterOffsetBegin": 493, "originalText": "NP", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 496, "segment_span": [0, 37], "characterOffsetBegin": 495, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 500, "segment_span": [0, 37], "characterOffsetBegin": 497, "originalText": "and", "ArgType": null, "before": " "}, {"index": 15, "word": "verb", "lemma": "verb", "after": " ", "pos": "VB", "characterOffsetEnd": 505, "segment_span": [0, 37], "characterOffsetBegin": 501, "originalText": "verb", "ArgType": null, "before": " "}, {"index": 16, "word": "phrases", "lemma": "phrase", "after": " ", "pos": "NNS", "characterOffsetEnd": 513, "segment_span": [0, 37], "characterOffsetBegin": 506, "originalText": "phrases", "ArgType": "dobj", "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 515, "segment_span": [0, 37], "characterOffsetBegin": 514, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "VP", "lemma": "vp", "after": "", "pos": "NN", "characterOffsetEnd": 517, "segment_span": [0, 37], "characterOffsetBegin": 515, "originalText": "VP", "ArgType": null, "before": ""}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 518, "segment_span": [0, 37], "characterOffsetBegin": 517, "originalText": ")", "ArgType": null, "before": ""}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 519, "segment_span": [0, 37], "characterOffsetBegin": 518, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "as", "lemma": "as", "after": " ", "pos": "RB", "characterOffsetEnd": 522, "segment_span": [0, 37], "characterOffsetBegin": 520, "originalText": "as", "ArgType": null, "before": " "}, {"index": 22, "word": "well", "lemma": "well", "after": " ", "pos": "RB", "characterOffsetEnd": 527, "segment_span": [0, 37], "characterOffsetBegin": 523, "originalText": "well", "ArgType": null, "before": " "}, {"index": 23, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 530, "segment_span": [0, 37], "characterOffsetBegin": 528, "originalText": "as", "ArgType": null, "before": " "}, {"index": 24, "word": "terminals/part-of-speech", "lemma": "terminals/part-of-speech", "after": " ", "pos": "JJ", "characterOffsetEnd": 555, "segment_span": [0, 37], "characterOffsetBegin": 531, "originalText": "terminals/part-of-speech", "ArgType": null, "before": " "}, {"index": 25, "word": "tags", "lemma": "tag", "after": "", "pos": "NNS", "characterOffsetEnd": 560, "segment_span": [0, 37], "characterOffsetBegin": 556, "originalText": "tags", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 561, "segment_span": [0, 37], "characterOffsetBegin": 560, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 566, "segment_span": [0, 37], "characterOffsetBegin": 562, "originalText": "such", "ArgType": null, "before": " "}, {"index": 28, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 569, "segment_span": [0, 37], "characterOffsetBegin": 567, "originalText": "as", "ArgType": null, "before": " "}, {"index": 29, "word": "determiners", "lemma": "determiner", "after": " ", "pos": "NNS", "characterOffsetEnd": 581, "segment_span": [0, 37], "characterOffsetBegin": 570, "originalText": "determiners", "ArgType": null, "before": " "}, {"index": 30, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 583, "segment_span": [0, 37], "characterOffsetBegin": 582, "originalText": "(", "ArgType": null, "before": " "}, {"index": 31, "word": "DT", "lemma": "dt", "after": "", "pos": "NN", "characterOffsetEnd": 585, "segment_span": [0, 37], "characterOffsetBegin": 583, "originalText": "DT", "ArgType": null, "before": ""}, {"index": 32, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 586, "segment_span": [0, 37], "characterOffsetBegin": 585, "originalText": ")", "ArgType": null, "before": ""}, {"index": 33, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 589, "segment_span": [0, 37], "characterOffsetBegin": 587, "originalText": "or", "ArgType": null, "before": " "}, {"index": 34, "word": "nouns", "lemma": "noun", "after": " ", "pos": "NNS", "characterOffsetEnd": 595, "segment_span": [0, 37], "characterOffsetBegin": 590, "originalText": "nouns", "ArgType": null, "before": " "}, {"index": 35, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 597, "segment_span": [0, 37], "characterOffsetBegin": 596, "originalText": "(", "ArgType": null, "before": " "}, {"index": 36, "word": "NN", "lemma": "NN", "after": "", "pos": "NNP", "characterOffsetEnd": 599, "segment_span": [0, 37], "characterOffsetBegin": 597, "originalText": "NN", "ArgType": null, "before": ""}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 600, "segment_span": [0, 37], "characterOffsetBegin": 599, "originalText": ")", "ArgType": null, "before": ""}, {"index": 38, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 601, "characterOffsetBegin": 600, "originalText": ".", "ArgType": null, "before": ""}], "text": "The parse tree contains constituents , such as noun phrases ( NP ) and verb phrases ( VP ) , as well as terminals/part-of-speech tags , such as determiners ( DT ) or nouns ( NN ) ."}, {"tokens": [{"index": 1, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 608, "segment_span": [0, 2], "characterOffsetBegin": 602, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 2, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 610, "segment_span": [0, 2], "characterOffsetBegin": 609, "originalText": "2", "ArgType": null, "before": " "}, {"index": 3, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 611, "characterOffsetBegin": 610, "originalText": ".", "ArgType": null, "before": ""}], "text": "Figure 2 ."}, {"tokens": [{"index": 1, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 612, "segment_span": [0, 9], "characterOffsetBegin": 611, "originalText": "a", "ArgType": "subj", "before": ""}, {"index": 2, "word": "shows", "characterOffsetEnd": 618, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 613, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 622, "segment_span": [0, 9], "characterOffsetBegin": 619, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 634, "segment_span": [0, 9], "characterOffsetBegin": 623, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 639, "segment_span": [0, 9], "characterOffsetBegin": 635, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 642, "segment_span": [0, 9], "characterOffsetBegin": 640, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 646, "segment_span": [0, 9], "characterOffsetBegin": 643, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 655, "segment_span": [0, 9], "characterOffsetBegin": 647, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 656, "segment_span": [0, 9], "characterOffsetBegin": 655, "originalText": ":", "ArgType": null, "before": ""}, {"index": 10, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 659, "segment_span": [9, 17], "characterOffsetBegin": 657, "originalText": "In", "ArgType": null, "before": " "}, {"index": 11, "word": "Washington", "lemma": "Washington", "after": "", "pos": "NNP", "characterOffsetEnd": 670, "segment_span": [9, 17], "characterOffsetBegin": 660, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 671, "segment_span": [9, 17], "characterOffsetBegin": 670, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "U.S.", "lemma": "U.S.", "after": " ", "pos": "NNP", "characterOffsetEnd": 676, "segment_span": [9, 17], "characterOffsetBegin": 672, "originalText": "U.S.", "ArgType": null, "before": " "}, {"index": 14, "word": "officials", "lemma": "official", "after": " ", "pos": "NNS", "characterOffsetEnd": 686, "segment_span": [9, 17], "characterOffsetBegin": 677, "originalText": "officials", "ArgType": "subj", "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 690, "segment_span": [9, 17], "characterOffsetBegin": 687, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "working", "characterOffsetEnd": 698, "after": " ", "pos": "VBG", "is_root": true, "lemma": "work", "segment_span": [9, 17], "tense": "G", "characterOffsetBegin": 691, "originalText": "working", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "overtime", "lemma": "overtime", "after": "", "pos": "RB", "characterOffsetEnd": 707, "segment_span": [9, 17], "characterOffsetBegin": 699, "originalText": "overtime", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 708, "characterOffsetBegin": 707, "originalText": ".", "ArgType": null, "before": ""}], "text": "a shows the constituent tree of the sentence : In Washington , U.S. officials are working overtime ."}, {"tokens": [{"index": 1, "word": "Dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 719, "segment_span": [0, 20], "characterOffsetBegin": 709, "originalText": "Dependency", "ArgType": null, "before": " "}, {"index": 2, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 724, "segment_span": [0, 20], "characterOffsetBegin": 720, "originalText": "tree", "ArgType": "subj", "before": " "}, {"index": 3, "word": "encodes", "characterOffsetEnd": 732, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "encode", "segment_span": [0, 20], "tense": "Z", "characterOffsetBegin": 725, "originalText": "encodes", "ArgType": "verb", "before": " "}, {"index": 4, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 744, "segment_span": [0, 20], "characterOffsetBegin": 733, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 5, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 754, "segment_span": [0, 20], "characterOffsetBegin": 745, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 762, "segment_span": [0, 20], "characterOffsetBegin": 755, "originalText": "between", "ArgType": null, "before": " "}, {"index": 7, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 768, "segment_span": [0, 20], "characterOffsetBegin": 763, "originalText": "words", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 771, "segment_span": [0, 20], "characterOffsetBegin": 769, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 773, "segment_span": [0, 20], "characterOffsetBegin": 772, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 782, "segment_span": [0, 20], "characterOffsetBegin": 774, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 11, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 787, "segment_span": [0, 20], "characterOffsetBegin": 783, "originalText": "with", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 791, "segment_span": [0, 20], "characterOffsetBegin": 788, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 797, "segment_span": [0, 20], "characterOffsetBegin": 792, "originalText": "words", "ArgType": null, "before": " "}, {"index": 14, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 800, "segment_span": [0, 20], "characterOffsetBegin": 798, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 806, "segment_span": [0, 20], "characterOffsetBegin": 801, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 810, "segment_span": [0, 20], "characterOffsetBegin": 807, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 821, "segment_span": [0, 20], "characterOffsetBegin": 811, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 18, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 827, "segment_span": [0, 20], "characterOffsetBegin": 822, "originalText": "types", "ArgType": null, "before": " "}, {"index": 19, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 830, "segment_span": [0, 20], "characterOffsetBegin": 828, "originalText": "as", "ArgType": null, "before": " "}, {"index": 20, "word": "edges", "lemma": "edge", "after": "", "pos": "NNS", "characterOffsetEnd": 836, "segment_span": [0, 20], "characterOffsetBegin": 831, "originalText": "edges", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 837, "characterOffsetBegin": 836, "originalText": ".", "ArgType": null, "before": ""}], "text": "Dependency tree encodes grammatical relations between words in a sentence with the words as nodes and dependency types as edges ."}, {"tokens": [{"index": 1, "word": "An", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 840, "segment_span": [0, 14], "characterOffsetBegin": 838, "originalText": "An", "ArgType": null, "before": " "}, {"index": 2, "word": "edge", "lemma": "edge", "after": " ", "pos": "NN", "characterOffsetEnd": 845, "segment_span": [0, 14], "characterOffsetBegin": 841, "originalText": "edge", "ArgType": "subj", "before": " "}, {"index": 3, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 850, "segment_span": [0, 14], "characterOffsetBegin": 846, "originalText": "from", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 852, "segment_span": [0, 14], "characterOffsetBegin": 851, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 857, "segment_span": [0, 14], "characterOffsetBegin": 853, "originalText": "word", "ArgType": null, "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 860, "segment_span": [0, 14], "characterOffsetBegin": 858, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "another", "lemma": "another", "after": " ", "pos": "DT", "characterOffsetEnd": 868, "segment_span": [0, 14], "characterOffsetBegin": 861, "originalText": "another", "ArgType": null, "before": " "}, {"index": 8, "word": "represents", "characterOffsetEnd": 879, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "represent", "segment_span": [0, 14], "tense": "Z", "characterOffsetBegin": 869, "originalText": "represents", "ArgType": "verb", "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 881, "segment_span": [0, 14], "characterOffsetBegin": 880, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 893, "segment_span": [0, 14], "characterOffsetBegin": 882, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 11, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 902, "segment_span": [0, 14], "characterOffsetBegin": 894, "originalText": "relation", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 910, "segment_span": [0, 14], "characterOffsetBegin": 903, "originalText": "between", "ArgType": null, "before": " "}, {"index": 13, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 916, "segment_span": [0, 14], "characterOffsetBegin": 911, "originalText": "these", "ArgType": null, "before": " "}, {"index": 14, "word": "two", "lemma": "two", "after": "", "pos": "CD", "characterOffsetEnd": 920, "segment_span": [0, 14], "characterOffsetBegin": 917, "originalText": "two", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 921, "characterOffsetBegin": 920, "originalText": ".", "ArgType": null, "before": ""}], "text": "An edge from a word to another represents a grammatical relation between these two ."}, {"tokens": [{"index": 1, "word": "Every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 927, "segment_span": [0, 13], "characterOffsetBegin": 922, "originalText": "Every", "ArgType": null, "before": " "}, {"index": 2, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 932, "segment_span": [0, 13], "characterOffsetBegin": 928, "originalText": "word", "ArgType": "subj", "before": " "}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 935, "segment_span": [0, 13], "characterOffsetBegin": 933, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 937, "segment_span": [0, 13], "characterOffsetBegin": 936, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 948, "segment_span": [0, 13], "characterOffsetBegin": 938, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 6, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 953, "segment_span": [0, 13], "characterOffsetBegin": 949, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 7, "word": "has", "characterOffsetEnd": 957, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 954, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 8, "word": "exactly", "lemma": "exactly", "after": " ", "pos": "RB", "characterOffsetEnd": 965, "segment_span": [0, 13], "characterOffsetBegin": 958, "originalText": "exactly", "ArgType": null, "before": " "}, {"index": 9, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 969, "segment_span": [0, 13], "characterOffsetBegin": 966, "originalText": "one", "ArgType": null, "before": " "}, {"index": 10, "word": "parent", "lemma": "parent", "after": " ", "pos": "NN", "characterOffsetEnd": 976, "segment_span": [0, 13], "characterOffsetBegin": 970, "originalText": "parent", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "except", "lemma": "except", "after": " ", "pos": "IN", "characterOffsetEnd": 983, "segment_span": [0, 13], "characterOffsetBegin": 977, "originalText": "except", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 987, "segment_span": [0, 13], "characterOffsetBegin": 984, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "root", "lemma": "root", "after": "", "pos": "NN", "characterOffsetEnd": 992, "segment_span": [0, 13], "characterOffsetBegin": 988, "originalText": "root", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 993, "characterOffsetBegin": 992, "originalText": ".", "ArgType": null, "before": ""}], "text": "Every word in a dependency tree has exactly one parent except the root ."}, {"tokens": [{"index": 1, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 1000, "segment_span": [0, 2], "characterOffsetBegin": 994, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 2, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 1002, "segment_span": [0, 2], "characterOffsetBegin": 1001, "originalText": "2", "ArgType": null, "before": " "}, {"index": 3, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1003, "characterOffsetBegin": 1002, "originalText": ".", "ArgType": null, "before": ""}], "text": "Figure 2 ."}, {"tokens": [{"index": 1, "word": "b", "lemma": "b", "after": " ", "pos": "NN", "characterOffsetEnd": 1004, "segment_span": [0, 12], "characterOffsetBegin": 1003, "originalText": "b", "ArgType": null, "before": ""}, {"index": 2, "word": "shows", "lemma": "show", "after": " ", "pos": "NNS", "characterOffsetEnd": 1010, "segment_span": [0, 12], "characterOffsetBegin": 1005, "originalText": "shows", "ArgType": null, "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1014, "segment_span": [0, 12], "characterOffsetBegin": 1011, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "example", "lemma": "example", "after": " ", "pos": "NN", "characterOffsetEnd": 1022, "segment_span": [0, 12], "characterOffsetBegin": 1015, "originalText": "example", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1025, "segment_span": [0, 12], "characterOffsetBegin": 1023, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1029, "segment_span": [0, 12], "characterOffsetBegin": 1026, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1040, "segment_span": [0, 12], "characterOffsetBegin": 1030, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 8, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1045, "segment_span": [0, 12], "characterOffsetBegin": 1041, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1048, "segment_span": [0, 12], "characterOffsetBegin": 1046, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1052, "segment_span": [0, 12], "characterOffsetBegin": 1049, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 1061, "segment_span": [0, 12], "characterOffsetBegin": 1053, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 12, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 1070, "segment_span": [0, 12], "characterOffsetBegin": 1062, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1071, "characterOffsetBegin": 1070, "originalText": ".", "ArgType": null, "before": ""}], "text": "b shows and example of the dependency tree of the previous sentence ."}, {"tokens": [{"index": 1, "word": "Given", "lemma": "give", "after": " ", "pos": "VBN", "characterOffsetEnd": 1077, "segment_span": [0, 10], "characterOffsetBegin": 1072, "originalText": "Given", "ArgType": null, "before": " "}, {"index": 2, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1081, "segment_span": [0, 10], "characterOffsetBegin": 1078, "originalText": "two", "ArgType": null, "before": " "}, {"index": 3, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 1085, "segment_span": [0, 10], "characterOffsetBegin": 1082, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1086, "segment_span": [0, 10], "characterOffsetBegin": 1085, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 1091, "segment_span": [0, 10], "characterOffsetBegin": 1087, "originalText": "such", "ArgType": null, "before": " "}, {"index": 6, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1094, "segment_span": [0, 10], "characterOffsetBegin": 1092, "originalText": "as", "ArgType": null, "before": " "}, {"index": 7, "word": "Washington", "lemma": "Washington", "after": " ", "pos": "NNP", "characterOffsetEnd": 1105, "segment_span": [0, 10], "characterOffsetBegin": 1095, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1109, "segment_span": [0, 10], "characterOffsetBegin": 1106, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "officials", "lemma": "official", "after": "", "pos": "NNS", "characterOffsetEnd": 1119, "segment_span": [0, 10], "characterOffsetBegin": 1110, "originalText": "officials", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1120, "segment_span": [0, 10], "characterOffsetBegin": 1119, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "both", "lemma": "both", "after": " ", "pos": "CC", "characterOffsetEnd": 1125, "segment_span": [10, 21], "characterOffsetBegin": 1121, "originalText": "both", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1129, "segment_span": [10, 21], "characterOffsetBegin": 1126, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 1135, "segment_span": [10, 21], "characterOffsetBegin": 1130, "originalText": "above", "ArgType": null, "before": " "}, {"index": 14, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1141, "segment_span": [10, 21], "characterOffsetBegin": 1136, "originalText": "trees", "ArgType": "subj", "before": " "}, {"index": 15, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1145, "segment_span": [10, 21], "characterOffsetBegin": 1142, "originalText": "can", "ArgType": null, "before": " "}, {"index": 16, "word": "encode", "characterOffsetEnd": 1152, "after": " ", "pos": "VB", "is_root": true, "lemma": "encode", "segment_span": [10, 21], "tense": "B", "characterOffsetBegin": 1146, "originalText": "encode", "has_aux": true, "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1156, "segment_span": [10, 21], "characterOffsetBegin": 1153, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1166, "segment_span": [10, 21], "characterOffsetBegin": 1157, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 19, "word": "dependencies", "lemma": "dependency", "after": " ", "pos": "NNS", "characterOffsetEnd": 1179, "segment_span": [10, 21], "characterOffsetBegin": 1167, "originalText": "dependencies", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 1187, "segment_span": [10, 21], "characterOffsetBegin": 1180, "originalText": "between", "ArgType": null, "before": " "}, {"index": 21, "word": "them", "lemma": "they", "after": "", "pos": "PRP", "characterOffsetEnd": 1192, "segment_span": [10, 21], "characterOffsetBegin": 1188, "originalText": "them", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1193, "characterOffsetBegin": 1192, "originalText": ".", "ArgType": null, "before": ""}], "text": "Given two NEs , such as Washington and officials , both the above trees can encode the syntactic dependencies between them ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 1201, "segment_span": [0, 25], "characterOffsetBegin": 1194, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1202, "segment_span": [0, 25], "characterOffsetBegin": 1201, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 1208, "segment_span": [2, 10], "characterOffsetBegin": 1203, "originalText": "since", "ArgType": null, "before": " "}, {"index": 4, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 1213, "segment_span": [2, 10], "characterOffsetBegin": 1209, "originalText": "each", "ArgType": null, "before": " "}, {"index": 5, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1219, "segment_span": [2, 10], "characterOffsetBegin": 1214, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 6, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1224, "segment_span": [2, 10], "characterOffsetBegin": 1220, "originalText": "tree", "ArgType": "subj", "before": " "}, {"index": 7, "word": "corresponds", "characterOffsetEnd": 1236, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "correspond", "segment_span": [2, 10], "tense": "Z", "characterOffsetBegin": 1225, "originalText": "corresponds", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1239, "segment_span": [2, 10], "characterOffsetBegin": 1237, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1241, "segment_span": [2, 10], "characterOffsetBegin": 1240, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 1250, "segment_span": [2, 10], "characterOffsetBegin": 1242, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1251, "segment_span": [0, 25], "characterOffsetBegin": 1250, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 1257, "segment_span": [0, 25], "characterOffsetBegin": 1252, "originalText": "there", "ArgType": null, "before": " "}, {"index": 13, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 1261, "segment_span": [0, 25], "characterOffsetBegin": 1258, "originalText": "may", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 1264, "segment_span": [0, 25], "characterOffsetBegin": 1262, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 1269, "segment_span": [0, 25], "characterOffsetBegin": 1265, "originalText": "more", "ArgType": null, "before": " "}, {"index": 16, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 1274, "segment_span": [0, 25], "characterOffsetBegin": 1270, "originalText": "than", "ArgType": null, "before": " "}, {"index": 17, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1278, "segment_span": [0, 25], "characterOffsetBegin": 1275, "originalText": "two", "ArgType": null, "before": " "}, {"index": 18, "word": "NEs", "lemma": "ne", "after": " ", "pos": "NNS", "characterOffsetEnd": 1282, "segment_span": [0, 25], "has_aux": true, "characterOffsetBegin": 1279, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1286, "segment_span": [0, 25], "characterOffsetBegin": 1283, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 1291, "segment_span": [0, 25], "characterOffsetBegin": 1287, "originalText": "many", "ArgType": null, "before": " "}, {"index": 21, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 1301, "segment_span": [0, 25], "characterOffsetBegin": 1292, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 22, "word": "expressed", "lemma": "express", "after": " ", "pos": "VBN", "characterOffsetEnd": 1311, "segment_span": [0, 25], "characterOffsetBegin": 1302, "originalText": "expressed", "ArgType": null, "before": " "}, {"index": 23, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1314, "segment_span": [0, 25], "characterOffsetBegin": 1312, "originalText": "in", "ArgType": null, "before": " "}, {"index": 24, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1316, "segment_span": [0, 25], "characterOffsetBegin": 1315, "originalText": "a", "ArgType": null, "before": " "}, {"index": 25, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 1325, "segment_span": [0, 25], "characterOffsetBegin": 1317, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1326, "characterOffsetBegin": 1325, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , since each parse tree corresponds to a sentence , there may be more than two NEs and many relations expressed in a sentence ."}, {"tokens": [{"index": 1, "word": "Thus", "lemma": "thus", "after": "", "pos": "RB", "characterOffsetEnd": 1331, "segment_span": [0, 18], "characterOffsetBegin": 1327, "originalText": "Thus", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1332, "segment_span": [0, 18], "characterOffsetBegin": 1331, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1336, "segment_span": [0, 18], "characterOffsetBegin": 1333, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 1340, "segment_span": [0, 18], "characterOffsetBegin": 1337, "originalText": "use", "ArgType": "subj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1343, "segment_span": [0, 18], "characterOffsetBegin": 1341, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1347, "segment_span": [0, 18], "characterOffsetBegin": 1344, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "entire", "lemma": "entire", "after": " ", "pos": "JJ", "characterOffsetEnd": 1354, "segment_span": [0, 18], "characterOffsetBegin": 1348, "originalText": "entire", "ArgType": null, "before": " "}, {"index": 8, "word": "parse", "lemma": "parse", "after": " ", "pos": "JJ", "characterOffsetEnd": 1360, "segment_span": [0, 18], "characterOffsetBegin": 1355, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 9, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1365, "segment_span": [0, 18], "characterOffsetBegin": 1361, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1368, "segment_span": [0, 18], "characterOffsetBegin": 1366, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1372, "segment_span": [0, 18], "characterOffsetBegin": 1369, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "whole", "lemma": "whole", "after": " ", "pos": "JJ", "characterOffsetEnd": 1378, "segment_span": [0, 18], "characterOffsetBegin": 1373, "originalText": "whole", "ArgType": null, "before": " "}, {"index": 13, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 1387, "segment_span": [0, 18], "characterOffsetBegin": 1379, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 14, "word": "holds", "characterOffsetEnd": 1393, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "hold", "segment_span": [0, 18], "tense": "Z", "characterOffsetBegin": 1388, "originalText": "holds", "ArgType": "verb", "before": " "}, {"index": 15, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1397, "segment_span": [0, 18], "characterOffsetBegin": 1394, "originalText": "two", "ArgType": null, "before": " "}, {"index": 16, "word": "major", "lemma": "major", "after": " ", "pos": "JJ", "characterOffsetEnd": 1403, "segment_span": [0, 18], "characterOffsetBegin": 1398, "originalText": "major", "ArgType": null, "before": " "}, {"index": 17, "word": "drawbacks", "lemma": "drawback", "after": "", "pos": "NNS", "characterOffsetEnd": 1413, "segment_span": [0, 18], "characterOffsetBegin": 1404, "originalText": "drawbacks", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 1414, "segment_span": [0, 18], "characterOffsetBegin": 1413, "originalText": ":", "ArgType": null, "before": ""}, {"index": 19, "word": "first", "lemma": "first", "after": "", "pos": "RB", "characterOffsetEnd": 1420, "segment_span": [18, 85], "characterOffsetBegin": 1415, "originalText": "first", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1421, "segment_span": [18, 85], "characterOffsetBegin": 1420, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 1424, "segment_span": [18, 85], "characterOffsetBegin": 1422, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 22, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 1428, "segment_span": [18, 85], "characterOffsetBegin": 1425, "originalText": "may", "ArgType": null, "before": " "}, {"index": 23, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 1431, "segment_span": [18, 85], "characterOffsetBegin": 1429, "originalText": "be", "ArgType": null, "before": " "}, {"index": 24, "word": "too", "lemma": "too", "after": " ", "pos": "RB", "characterOffsetEnd": 1435, "segment_span": [18, 85], "characterOffsetBegin": 1432, "originalText": "too", "ArgType": null, "before": " "}, {"index": 25, "word": "computationally", "lemma": "computationally", "after": " ", "pos": "RB", "characterOffsetEnd": 1451, "segment_span": [18, 85], "characterOffsetBegin": 1436, "originalText": "computationally", "ArgType": null, "before": " "}, {"index": 26, "word": "expensive", "lemma": "expensive", "after": " ", "pos": "JJ", "characterOffsetEnd": 1461, "segment_span": [18, 85], "characterOffsetBegin": 1452, "originalText": "expensive", "ArgType": "subj", "before": " "}, {"index": 27, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 1465, "segment_span": [18, 85], "characterOffsetBegin": 1462, "originalText": "for", "ArgType": null, "before": " "}, {"index": 28, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1472, "segment_span": [18, 85], "characterOffsetBegin": 1466, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 29, "word": "calculation", "lemma": "calculation", "after": " ", "pos": "NN", "characterOffsetEnd": 1484, "segment_span": [18, 85], "characterOffsetBegin": 1473, "originalText": "calculation", "ArgType": null, "before": " "}, {"index": 30, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 1490, "segment_span": [18, 85], "characterOffsetBegin": 1485, "originalText": "since", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1494, "segment_span": [18, 85], "characterOffsetBegin": 1491, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "size", "lemma": "size", "after": " ", "pos": "NN", "characterOffsetEnd": 1499, "segment_span": [18, 85], "characterOffsetBegin": 1495, "originalText": "size", "ArgType": null, "before": " "}, {"index": 33, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1502, "segment_span": [18, 85], "characterOffsetBegin": 1500, "originalText": "of", "ArgType": null, "before": " "}, {"index": 34, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1504, "segment_span": [18, 85], "characterOffsetBegin": 1503, "originalText": "a", "ArgType": null, "before": " "}, {"index": 35, "word": "complete", "lemma": "complete", "after": " ", "pos": "JJ", "characterOffsetEnd": 1513, "segment_span": [18, 85], "characterOffsetBegin": 1505, "originalText": "complete", "ArgType": null, "before": " "}, {"index": 36, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1519, "segment_span": [18, 85], "characterOffsetBegin": 1514, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 37, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1524, "segment_span": [18, 85], "characterOffsetBegin": 1520, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 38, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 1528, "segment_span": [18, 85], "characterOffsetBegin": 1525, "originalText": "may", "ArgType": null, "before": " "}, {"index": 39, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 1531, "segment_span": [18, 85], "characterOffsetBegin": 1529, "originalText": "be", "ArgType": null, "before": " "}, {"index": 40, "word": "very", "lemma": "very", "after": " ", "pos": "RB", "characterOffsetEnd": 1536, "segment_span": [18, 85], "characterOffsetBegin": 1532, "originalText": "very", "ArgType": null, "before": " "}, {"index": 41, "word": "large", "lemma": "large", "after": " ", "pos": "JJ", "characterOffsetEnd": 1542, "segment_span": [18, 85], "characterOffsetBegin": 1537, "originalText": "large", "ArgType": null, "before": " "}, {"index": 42, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1544, "segment_span": [18, 85], "characterOffsetBegin": 1543, "originalText": "(", "ArgType": null, "before": " "}, {"index": 43, "word": "up", "lemma": "up", "after": " ", "pos": "RB", "characterOffsetEnd": 1546, "segment_span": [18, 85], "characterOffsetBegin": 1544, "originalText": "up", "ArgType": null, "before": ""}, {"index": 44, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1549, "segment_span": [18, 85], "characterOffsetBegin": 1547, "originalText": "to", "ArgType": null, "before": " "}, {"index": 45, "word": "300", "lemma": "300", "after": " ", "pos": "CD", "characterOffsetEnd": 1553, "segment_span": [18, 85], "characterOffsetBegin": 1550, "originalText": "300", "ArgType": null, "before": " "}, {"index": 46, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 1559, "segment_span": [18, 85], "characterOffsetBegin": 1554, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 47, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1562, "segment_span": [18, 85], "characterOffsetBegin": 1560, "originalText": "in", "ArgType": null, "before": " "}, {"index": 48, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1566, "segment_span": [18, 85], "characterOffsetBegin": 1563, "originalText": "the", "ArgType": null, "before": " "}, {"index": 49, "word": "Penn", "lemma": "Penn", "after": " ", "pos": "NNP", "characterOffsetEnd": 1571, "segment_span": [18, 85], "characterOffsetBegin": 1567, "originalText": "Penn", "ArgType": null, "before": " "}, {"index": 50, "word": "Treebank", "lemma": "Treebank", "after": " ", "pos": "NNP", "characterOffsetEnd": 1580, "segment_span": [18, 85], "characterOffsetBegin": 1572, "originalText": "Treebank", "ArgType": null, "before": " "}, {"index": 51, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1582, "segment_span": [18, 85], "characterOffsetBegin": 1581, "originalText": "(", "ArgType": null, "before": " "}, {"index": 52, "word": "Marcus", "lemma": "Marcus", "after": " ", "pos": "NNP", "characterOffsetEnd": 1588, "segment_span": [18, 85], "characterOffsetBegin": 1582, "originalText": "Marcus", "ArgType": null, "before": ""}, {"index": 53, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1591, "segment_span": [18, 85], "characterOffsetBegin": 1589, "originalText": "et", "ArgType": null, "before": " "}, {"index": 54, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1595, "segment_span": [18, 85], "characterOffsetBegin": 1592, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 55, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1596, "segment_span": [18, 85], "characterOffsetBegin": 1595, "originalText": ",", "ArgType": null, "before": ""}, {"index": 56, "word": "1993", "lemma": "1993", "after": "", "pos": "CD", "characterOffsetEnd": 1601, "segment_span": [18, 85], "characterOffsetBegin": 1597, "originalText": "1993", "ArgType": null, "before": " "}, {"index": 57, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1602, "segment_span": [18, 85], "characterOffsetBegin": 1601, "originalText": ")", "ArgType": null, "before": ""}, {"index": 58, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1603, "segment_span": [18, 85], "characterOffsetBegin": 1602, "originalText": ")", "ArgType": null, "before": ""}, {"index": 59, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1604, "segment_span": [18, 85], "characterOffsetBegin": 1603, "originalText": ";", "ArgType": null, "before": ""}, {"index": 60, "word": "second", "lemma": "second", "after": "", "pos": "JJ", "characterOffsetEnd": 1611, "segment_span": [18, 85], "characterOffsetBegin": 1605, "originalText": "second", "ArgType": null, "before": " "}, {"index": 61, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1612, "segment_span": [18, 85], "characterOffsetBegin": 1611, "originalText": ",", "ArgType": null, "before": ""}, {"index": 62, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 1618, "segment_span": [18, 85], "characterOffsetBegin": 1613, "originalText": "there", "ArgType": null, "before": " "}, {"index": 63, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1621, "segment_span": [18, 85], "characterOffsetBegin": 1619, "originalText": "is", "ArgType": null, "before": " "}, {"index": 64, "word": "ambiguity", "lemma": "ambiguity", "after": " ", "pos": "NN", "characterOffsetEnd": 1631, "segment_span": [18, 85], "characterOffsetBegin": 1622, "originalText": "ambiguity", "ArgType": null, "before": " "}, {"index": 65, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1634, "segment_span": [18, 85], "characterOffsetBegin": 1632, "originalText": "on", "ArgType": null, "before": " "}, {"index": 66, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1638, "segment_span": [18, 85], "characterOffsetBegin": 1635, "originalText": "the", "ArgType": null, "before": " "}, {"index": 67, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 1645, "segment_span": [18, 85], "characterOffsetBegin": 1639, "originalText": "target", "ArgType": null, "before": " "}, {"index": 68, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 1651, "segment_span": [18, 85], "characterOffsetBegin": 1646, "originalText": "pairs", "ArgType": null, "before": " "}, {"index": 69, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1654, "segment_span": [18, 85], "characterOffsetBegin": 1652, "originalText": "of", "ArgType": null, "before": " "}, {"index": 70, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 1658, "segment_span": [18, 85], "characterOffsetBegin": 1655, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 71, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1659, "segment_span": [18, 85], "characterOffsetBegin": 1658, "originalText": ",", "ArgType": null, "before": ""}, {"index": 72, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 1664, "segment_span": [18, 85], "characterOffsetBegin": 1660, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 73, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 1674, "segment_span": [18, 85], "characterOffsetBegin": 1665, "originalText": "different", "ArgType": null, "before": " "}, {"index": 74, "word": "NEs", "lemma": "ne", "after": " ", "pos": "NNS", "characterOffsetEnd": 1678, "segment_span": [18, 85], "characterOffsetBegin": 1675, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 75, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 1689, "segment_span": [18, 85], "characterOffsetBegin": 1679, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 76, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1694, "segment_span": [18, 85], "characterOffsetBegin": 1690, "originalText": "with", "ArgType": null, "before": " "}, {"index": 77, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 1704, "segment_span": [18, 85], "characterOffsetBegin": 1695, "originalText": "different", "ArgType": null, "before": " "}, {"index": 78, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 1714, "segment_span": [18, 85], "characterOffsetBegin": 1705, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 79, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1718, "segment_span": [18, 85], "characterOffsetBegin": 1715, "originalText": "are", "ArgType": null, "before": " "}, {"index": 80, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 1728, "segment_span": [18, 85], "characterOffsetBegin": 1719, "originalText": "described", "ArgType": null, "before": " "}, {"index": 81, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1731, "segment_span": [18, 85], "characterOffsetBegin": 1729, "originalText": "by", "ArgType": null, "before": " "}, {"index": 82, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1735, "segment_span": [18, 85], "characterOffsetBegin": 1732, "originalText": "the", "ArgType": null, "before": " "}, {"index": 83, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 1740, "segment_span": [18, 85], "characterOffsetBegin": 1736, "originalText": "same", "ArgType": null, "before": " "}, {"index": 84, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1746, "segment_span": [18, 85], "characterOffsetBegin": 1741, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 85, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 1751, "segment_span": [18, 85], "characterOffsetBegin": 1747, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 86, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1752, "characterOffsetBegin": 1751, "originalText": ".", "ArgType": null, "before": ""}], "text": "Thus , the use of the entire parse tree of the whole sentence holds two major drawbacks : first , it may be too computationally expensive for kernel calculation since the size of a complete parse tree may be very large ( up to 300 nodes in the Penn Treebank ( Marcus et al. , 1993 ) ) ; second , there is ambiguity on the target pairs of NEs , i.e. different NEs associated with different relations are described by the same parse tree ."}, {"tokens": [{"index": 1, "word": "Therefore", "lemma": "therefore", "after": "", "pos": "RB", "characterOffsetEnd": 1762, "segment_span": [0, 13], "characterOffsetBegin": 1753, "originalText": "Therefore", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1763, "segment_span": [0, 13], "characterOffsetBegin": 1762, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 1766, "segment_span": [0, 13], "characterOffsetBegin": 1764, "originalText": "it", "ArgType": "subj", "before": " "}, {"index": 4, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1769, "segment_span": [0, 13], "characterOffsetBegin": 1767, "originalText": "is", "ArgType": null, "before": " "}, {"index": 5, "word": "necessary", "lemma": "necessary", "after": " ", "pos": "JJ", "characterOffsetEnd": 1779, "segment_span": [0, 13], "characterOffsetBegin": 1770, "originalText": "necessary", "ArgType": "verb", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1782, "segment_span": [0, 13], "characterOffsetBegin": 1780, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "identify", "lemma": "identify", "after": " ", "pos": "VB", "characterOffsetEnd": 1791, "segment_span": [0, 13], "characterOffsetBegin": 1783, "originalText": "identify", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1795, "segment_span": [0, 13], "characterOffsetBegin": 1792, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 1803, "segment_span": [0, 13], "characterOffsetBegin": 1796, "originalText": "portion", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1806, "segment_span": [0, 13], "characterOffsetBegin": 1804, "originalText": "of", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1810, "segment_span": [0, 13], "characterOffsetBegin": 1807, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 1816, "segment_span": [0, 13], "characterOffsetBegin": 1811, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1821, "segment_span": [0, 13], "characterOffsetBegin": 1817, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 1826, "segment_span": [13, 20], "characterOffsetBegin": 1822, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 1831, "segment_span": [13, 20], "characterOffsetBegin": 1827, "originalText": "best", "ArgType": "subj", "before": " "}, {"index": 16, "word": "represent", "characterOffsetEnd": 1841, "after": " ", "pos": "VBP", "is_root": true, "lemma": "represent", "segment_span": [13, 20], "tense": "P", "characterOffsetBegin": 1832, "originalText": "represent", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1845, "segment_span": [13, 20], "characterOffsetBegin": 1842, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "useful", "lemma": "useful", "after": " ", "pos": "JJ", "characterOffsetEnd": 1852, "segment_span": [13, 20], "characterOffsetBegin": 1846, "originalText": "useful", "ArgType": null, "before": " "}, {"index": 19, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1862, "segment_span": [13, 20], "characterOffsetBegin": 1853, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 20, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 1874, "segment_span": [13, 20], "characterOffsetBegin": 1863, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1875, "characterOffsetBegin": 1874, "originalText": ".", "ArgType": null, "before": ""}], "text": "Therefore , it is necessary to identify the portion of the parse tree that best represent the useful syntactic information ."}, {"tokens": [{"index": 1, "word": "Let", "characterOffsetEnd": 1879, "after": " ", "pos": "VB", "is_root": true, "lemma": "let", "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 1876, "originalText": "Let", "ArgType": null, "before": " "}, {"index": 2, "word": "e1", "lemma": "e1", "after": " ", "pos": "NN", "characterOffsetEnd": 1882, "segment_span": [1, 26], "characterOffsetBegin": 1880, "originalText": "e1", "ArgType": "subj", "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1886, "segment_span": [1, 26], "characterOffsetBegin": 1883, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "e2", "lemma": "e2", "after": " ", "pos": "NN", "characterOffsetEnd": 1889, "segment_span": [1, 26], "characterOffsetBegin": 1887, "originalText": "e2", "ArgType": null, "before": " "}, {"index": 5, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 1892, "segment_span": [1, 26], "characterOffsetBegin": 1890, "originalText": "be", "ArgType": null, "before": " "}, {"index": 6, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 1896, "segment_span": [1, 26], "characterOffsetBegin": 1893, "originalText": "two", "ArgType": null, "before": " "}, {"index": 7, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 1903, "segment_span": [1, 26], "characterOffsetBegin": 1897, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 8, "word": "mentions", "lemma": "mention", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1912, "segment_span": [1, 26], "characterOffsetBegin": 1904, "originalText": "mentions", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1915, "segment_span": [1, 26], "characterOffsetBegin": 1913, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1919, "segment_span": [1, 26], "characterOffsetBegin": 1916, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 1924, "segment_span": [1, 26], "characterOffsetBegin": 1920, "originalText": "same", "ArgType": null, "before": " "}, {"index": 12, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 1933, "segment_span": [1, 26], "characterOffsetBegin": 1925, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 13, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 1938, "segment_span": [1, 26], "characterOffsetBegin": 1934, "originalText": "such", "ArgType": null, "before": " "}, {"index": 14, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1943, "segment_span": [1, 26], "characterOffsetBegin": 1939, "originalText": "that", "ArgType": null, "before": " "}, {"index": 15, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 1948, "segment_span": [1, 26], "characterOffsetBegin": 1944, "originalText": "they", "ArgType": "subj", "before": " "}, {"index": 16, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1952, "segment_span": [1, 26], "characterOffsetBegin": 1949, "originalText": "are", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1955, "segment_span": [1, 26], "characterOffsetBegin": 1953, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1957, "segment_span": [1, 26], "characterOffsetBegin": 1956, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "relationship", "lemma": "relationship", "after": " ", "pos": "NN", "characterOffsetEnd": 1970, "segment_span": [1, 26], "characterOffsetBegin": 1958, "originalText": "relationship", "ArgType": null, "before": " "}, {"index": 20, "word": "R.", "lemma": "R.", "after": " ", "pos": "NNP", "characterOffsetEnd": 1973, "segment_span": [1, 26], "characterOffsetBegin": 1971, "originalText": "R.", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 1977, "segment_span": [1, 26], "characterOffsetBegin": 1974, "originalText": "For", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1981, "segment_span": [1, 26], "characterOffsetBegin": 1978, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 1993, "segment_span": [1, 26], "characterOffsetBegin": 1982, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 24, "word": "parse", "lemma": "parse", "after": " ", "pos": "VB", "characterOffsetEnd": 1999, "segment_span": [1, 26], "characterOffsetBegin": 1994, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 25, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 2004, "segment_span": [1, 26], "characterOffsetBegin": 2000, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2005, "segment_span": [1, 26], "characterOffsetBegin": 2004, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2008, "segment_span": [26, 35], "characterOffsetBegin": 2006, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 28, "word": "used", "characterOffsetEnd": 2013, "after": " ", "pos": "VBD", "is_root": true, "lemma": "use", "segment_span": [26, 35], "tense": "D", "characterOffsetBegin": 2009, "originalText": "used", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2017, "segment_span": [26, 35], "characterOffsetBegin": 2014, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "pathenclosed", "lemma": "pathenclosed", "after": " ", "pos": "JJ", "characterOffsetEnd": 2030, "segment_span": [26, 35], "characterOffsetBegin": 2018, "originalText": "pathenclosed", "ArgType": null, "before": " "}, {"index": 31, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 2035, "segment_span": [26, 35], "characterOffsetBegin": 2031, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2037, "segment_span": [26, 35], "characterOffsetBegin": 2036, "originalText": "(", "ArgType": null, "before": " "}, {"index": 33, "word": "PET", "lemma": "pet", "after": "", "pos": "NN", "characterOffsetEnd": 2040, "segment_span": [26, 35], "characterOffsetBegin": 2037, "originalText": "PET", "ArgType": null, "before": ""}, {"index": 34, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 2041, "segment_span": [26, 35], "characterOffsetBegin": 2040, "originalText": ")", "ArgType": null, "before": ""}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2042, "segment_span": [26, 35], "characterOffsetBegin": 2041, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 2048, "segment_span": [35, 63], "characterOffsetBegin": 2043, "originalText": "which", "ArgType": null, "before": " "}, {"index": 37, "word": "was", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 2052, "segment_span": [35, 63], "characterOffsetBegin": 2049, "originalText": "was", "ArgType": null, "before": " "}, {"index": 38, "word": "firstly", "lemma": "firstly", "after": " ", "pos": "RB", "characterOffsetEnd": 2060, "segment_span": [35, 63], "characterOffsetBegin": 2053, "originalText": "firstly", "ArgType": null, "before": " "}, {"index": 39, "word": "proposed", "characterOffsetEnd": 2069, "after": " ", "pos": "VBN", "is_root": true, "lemma": "propose", "segment_span": [35, 63], "tense": "N", "characterOffsetBegin": 2061, "before": " ", "originalText": "proposed", "ArgType": null, "is_pass": true}, {"index": 40, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2072, "segment_span": [35, 63], "characterOffsetBegin": 2070, "originalText": "in", "ArgType": null, "before": " "}, {"index": 41, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2074, "segment_span": [35, 63], "characterOffsetBegin": 2073, "originalText": "(", "ArgType": null, "before": " "}, {"index": 42, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 2083, "segment_span": [35, 63], "characterOffsetBegin": 2074, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 43, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2084, "segment_span": [35, 63], "characterOffsetBegin": 2083, "originalText": ",", "ArgType": null, "before": ""}, {"index": 44, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 2089, "segment_span": [35, 63], "characterOffsetBegin": 2085, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 45, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 2090, "segment_span": [35, 63], "characterOffsetBegin": 2089, "originalText": ")", "ArgType": null, "before": ""}, {"index": 46, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 2094, "segment_span": [35, 63], "characterOffsetBegin": 2091, "originalText": "for", "ArgType": null, "before": " "}, {"index": 47, "word": "Semantic", "lemma": "Semantic", "after": " ", "pos": "NNP", "characterOffsetEnd": 2103, "segment_span": [35, 63], "characterOffsetBegin": 2095, "originalText": "Semantic", "ArgType": null, "before": " "}, {"index": 48, "word": "Role", "lemma": "role", "after": " ", "pos": "NN", "characterOffsetEnd": 2108, "segment_span": [35, 63], "characterOffsetBegin": 2104, "originalText": "Role", "ArgType": null, "before": " "}, {"index": 49, "word": "Labeling", "lemma": "label", "after": " ", "pos": "VBG", "characterOffsetEnd": 2117, "segment_span": [35, 63], "characterOffsetBegin": 2109, "originalText": "Labeling", "ArgType": null, "before": " "}, {"index": 50, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2121, "segment_span": [35, 63], "characterOffsetBegin": 2118, "originalText": "and", "ArgType": null, "before": " "}, {"index": 51, "word": "then", "lemma": "then", "after": " ", "pos": "RB", "characterOffsetEnd": 2126, "segment_span": [50, 60], "characterOffsetBegin": 2122, "originalText": "then", "ArgType": null, "before": " "}, {"index": 52, "word": "adapted", "characterOffsetEnd": 2134, "after": " ", "pos": "VBN", "is_root": true, "lemma": "adapt", "segment_span": [50, 60], "tense": "N", "characterOffsetBegin": 2127, "originalText": "adapted", "ArgType": null, "before": " "}, {"index": 53, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 2137, "segment_span": [50, 60], "characterOffsetBegin": 2135, "originalText": "by", "ArgType": null, "before": " "}, {"index": 54, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2139, "segment_span": [50, 60], "characterOffsetBegin": 2138, "originalText": "(", "ArgType": null, "before": " "}, {"index": 55, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 2144, "segment_span": [50, 60], "characterOffsetBegin": 2139, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 56, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 2147, "segment_span": [50, 60], "characterOffsetBegin": 2145, "originalText": "et", "ArgType": null, "before": " "}, {"index": 57, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 2151, "segment_span": [50, 60], "characterOffsetBegin": 2148, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 58, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2152, "segment_span": [50, 60], "characterOffsetBegin": 2151, "originalText": ",", "ArgType": null, "before": ""}, {"index": 59, "word": "2005", "lemma": "2005", "after": "", "pos": "CD", "characterOffsetEnd": 2157, "segment_span": [50, 60], "characterOffsetBegin": 2153, "originalText": "2005", "ArgType": null, "before": " "}, {"index": 60, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 2158, "segment_span": [50, 60], "characterOffsetBegin": 2157, "originalText": ")", "ArgType": null, "before": ""}, {"index": 61, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 2162, "segment_span": [35, 63], "characterOffsetBegin": 2159, "originalText": "for", "ArgType": null, "before": " "}, {"index": 62, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 2171, "segment_span": [35, 63], "characterOffsetBegin": 2163, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 63, "word": "extraction", "lemma": "extraction", "after": "", "pos": "NN", "characterOffsetEnd": 2182, "segment_span": [35, 63], "characterOffsetBegin": 2172, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 64, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2183, "characterOffsetBegin": 2182, "originalText": ".", "ArgType": null, "before": ""}], "text": "Let e1 and e2 be two entity mentions in the same sentence such that they are in a relationship R. For the constituent parse tree , we used the pathenclosed tree ( PET ) , which was firstly proposed in ( Moschitti , 2004 ) for Semantic Role Labeling and then adapted by ( Zhang et al. , 2005 ) for relation extraction ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2186, "segment_span": [0, 13], "characterOffsetBegin": 2184, "originalText": "It", "ArgType": "subj", "before": " "}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 2189, "segment_span": [0, 13], "characterOffsetBegin": 2187, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2193, "segment_span": [0, 13], "characterOffsetBegin": 2190, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "smallest", "lemma": "smallest", "after": " ", "pos": "JJS", "characterOffsetEnd": 2202, "segment_span": [0, 13], "characterOffsetBegin": 2194, "originalText": "smallest", "ArgType": null, "before": " "}, {"index": 5, "word": "common", "lemma": "common", "after": " ", "pos": "JJ", "characterOffsetEnd": 2209, "segment_span": [0, 13], "characterOffsetBegin": 2203, "originalText": "common", "ArgType": null, "before": " "}, {"index": 6, "word": "subtree", "lemma": "subtree", "after": " ", "pos": "NN", "characterOffsetEnd": 2217, "segment_span": [0, 13], "characterOffsetBegin": 2210, "originalText": "subtree", "ArgType": "verb", "before": " "}, {"index": 7, "word": "including", "lemma": "include", "after": " ", "pos": "VBG", "characterOffsetEnd": 2227, "segment_span": [0, 13], "characterOffsetBegin": 2218, "originalText": "including", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2231, "segment_span": [0, 13], "characterOffsetBegin": 2228, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 2235, "segment_span": [0, 13], "characterOffsetBegin": 2232, "originalText": "two", "ArgType": null, "before": " "}, {"index": 10, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 2244, "segment_span": [0, 13], "characterOffsetBegin": 2236, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 2247, "segment_span": [0, 13], "characterOffsetBegin": 2245, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2249, "segment_span": [0, 13], "characterOffsetBegin": 2248, "originalText": "a", "ArgType": null, "before": " "}, {"index": 13, "word": "relation", "lemma": "relation", "after": "", "pos": "NN", "characterOffsetEnd": 2258, "segment_span": [0, 13], "characterOffsetBegin": 2250, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2259, "characterOffsetBegin": 2258, "originalText": ".", "ArgType": null, "before": ""}], "text": "It is the smallest common subtree including the two entities of a relation ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2263, "segment_span": [0, 6], "characterOffsetBegin": 2260, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "dashed", "lemma": "dash", "after": " ", "pos": "VBN", "characterOffsetEnd": 2270, "segment_span": [0, 6], "characterOffsetBegin": 2264, "originalText": "dashed", "ArgType": null, "before": " "}, {"index": 3, "word": "frame", "lemma": "frame", "after": " ", "pos": "NN", "characterOffsetEnd": 2276, "segment_span": [0, 6], "characterOffsetBegin": 2271, "originalText": "frame", "ArgType": null, "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2279, "segment_span": [0, 6], "characterOffsetBegin": 2277, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 2286, "segment_span": [0, 6], "characterOffsetBegin": 2280, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 6, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 2288, "segment_span": [0, 6], "characterOffsetBegin": 2287, "originalText": "2", "ArgType": null, "before": " "}, {"index": 7, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 2289, "characterOffsetBegin": 2288, "originalText": ".", "ArgType": null, "before": ""}], "text": "The dashed frame in Figure 2 ."}, {"tokens": [{"index": 1, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2290, "segment_span": [0, 2], "characterOffsetBegin": 2289, "originalText": "a", "ArgType": null, "before": ""}, {"index": 2, "word": "surrounds", "lemma": "surround", "after": " ", "pos": "VBZ", "characterOffsetEnd": 2300, "segment_span": [0, 2], "characterOffsetBegin": 2291, "originalText": "surrounds", "ArgType": null, "before": " "}, {"index": 3, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 2304, "segment_span": [2, 12], "characterOffsetBegin": 2301, "originalText": "PET", "ArgType": "subj", "before": " "}, {"index": 4, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 2315, "segment_span": [2, 12], "characterOffsetBegin": 2305, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 5, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 2320, "segment_span": [2, 12], "characterOffsetBegin": 2316, "originalText": "with", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2324, "segment_span": [2, 12], "characterOffsetBegin": 2321, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 2328, "segment_span": [2, 12], "characterOffsetBegin": 2325, "originalText": "two", "ArgType": null, "before": " "}, {"index": 8, "word": "mentions", "characterOffsetEnd": 2337, "after": "", "pos": "VBZ", "is_root": true, "lemma": "mention", "segment_span": [2, 12], "tense": "Z", "characterOffsetBegin": 2329, "originalText": "mentions", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2338, "segment_span": [2, 12], "characterOffsetBegin": 2337, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "officials", "lemma": "official", "after": " ", "pos": "NNS", "characterOffsetEnd": 2348, "segment_span": [2, 12], "characterOffsetBegin": 2339, "originalText": "officials", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2352, "segment_span": [2, 12], "characterOffsetBegin": 2349, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "Washington", "lemma": "Washington", "after": "", "pos": "NNP", "characterOffsetEnd": 2363, "segment_span": [2, 12], "characterOffsetBegin": 2353, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2364, "characterOffsetBegin": 2363, "originalText": ".", "ArgType": null, "before": ""}], "text": "a surrounds PET associated with the two mentions , officials and Washington ."}, {"tokens": [{"index": 1, "word": "Moreover", "lemma": "moreover", "after": "", "pos": "RB", "characterOffsetEnd": 2373, "segment_span": [0, 7], "characterOffsetBegin": 2365, "originalText": "Moreover", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2374, "segment_span": [0, 7], "characterOffsetBegin": 2373, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2377, "segment_span": [0, 7], "characterOffsetBegin": 2375, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "improve", "characterOffsetEnd": 2385, "after": " ", "pos": "VB", "is_root": true, "lemma": "improve", "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 2378, "originalText": "improve", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2389, "segment_span": [0, 7], "characterOffsetBegin": 2386, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "representation", "lemma": "representation", "after": "", "pos": "NN", "characterOffsetEnd": 2404, "segment_span": [0, 7], "characterOffsetBegin": 2390, "originalText": "representation", "ArgType": "dobj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2405, "segment_span": [0, 7], "characterOffsetBegin": 2404, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 2409, "segment_span": [7, 39], "characterOffsetBegin": 2406, "originalText": "two", "ArgType": null, "before": " "}, {"index": 9, "word": "extra", "lemma": "extra", "after": " ", "pos": "JJ", "characterOffsetEnd": 2415, "segment_span": [7, 39], "characterOffsetBegin": 2410, "originalText": "extra", "ArgType": null, "before": " "}, {"index": 10, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 2421, "segment_span": [7, 39], "characterOffsetBegin": 2416, "originalText": "nodes", "ArgType": null, "before": " "}, {"index": 11, "word": "T1-PER", "lemma": "t1-per", "after": "", "pos": "NN", "characterOffsetEnd": 2428, "segment_span": [7, 39], "characterOffsetBegin": 2422, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2429, "segment_span": [7, 39], "characterOffsetBegin": 2428, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "denoting", "lemma": "denote", "after": " ", "pos": "VBG", "characterOffsetEnd": 2438, "segment_span": [7, 39], "characterOffsetBegin": 2430, "originalText": "denoting", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2442, "segment_span": [7, 39], "characterOffsetBegin": 2439, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 2447, "segment_span": [7, 39], "characterOffsetBegin": 2443, "originalText": "type", "ArgType": null, "before": " "}, {"index": 16, "word": "PERSON", "lemma": "person", "after": "", "pos": "NN", "characterOffsetEnd": 2454, "segment_span": [7, 39], "characterOffsetBegin": 2448, "originalText": "PERSON", "ArgType": "dobj", "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2455, "segment_span": [7, 39], "characterOffsetBegin": 2454, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2459, "segment_span": [7, 39], "characterOffsetBegin": 2456, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "T2-LOC", "lemma": "t2-loc", "after": "", "pos": "NN", "characterOffsetEnd": 2466, "segment_span": [7, 39], "characterOffsetBegin": 2460, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2467, "segment_span": [7, 39], "characterOffsetBegin": 2466, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "denoting", "lemma": "denote", "after": " ", "pos": "VBG", "characterOffsetEnd": 2476, "segment_span": [7, 39], "characterOffsetBegin": 2468, "originalText": "denoting", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2480, "segment_span": [7, 39], "characterOffsetBegin": 2477, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 2485, "segment_span": [7, 39], "characterOffsetBegin": 2481, "originalText": "type", "ArgType": null, "before": " "}, {"index": 24, "word": "LOCATION", "lemma": "location", "after": "", "pos": "NN", "characterOffsetEnd": 2494, "segment_span": [7, 39], "characterOffsetBegin": 2486, "originalText": "LOCATION", "ArgType": "dobj", "before": " "}, {"index": 25, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2495, "segment_span": [7, 39], "characterOffsetBegin": 2494, "originalText": ",", "ArgType": null, "before": ""}, {"index": 26, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 2499, "segment_span": [7, 39], "characterOffsetBegin": 2496, "originalText": "are", "ArgType": null, "before": " "}, {"index": 27, "word": "added", "characterOffsetEnd": 2505, "after": " ", "pos": "VBN", "is_root": true, "lemma": "add", "segment_span": [7, 39], "tense": "N", "characterOffsetBegin": 2500, "before": " ", "originalText": "added", "ArgType": null, "is_pass": true}, {"index": 28, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2508, "segment_span": [7, 39], "characterOffsetBegin": 2506, "originalText": "to", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2512, "segment_span": [7, 39], "characterOffsetBegin": 2509, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 2518, "segment_span": [7, 39], "characterOffsetBegin": 2513, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 31, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 2523, "segment_span": [7, 39], "characterOffsetBegin": 2519, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2524, "segment_span": [7, 39], "characterOffsetBegin": 2523, "originalText": ",", "ArgType": null, "before": ""}, {"index": 33, "word": "above", "lemma": "above", "after": " ", "pos": "IN", "characterOffsetEnd": 2530, "segment_span": [7, 39], "characterOffsetBegin": 2525, "originalText": "above", "ArgType": null, "before": " "}, {"index": 34, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2534, "segment_span": [7, 39], "characterOffsetBegin": 2531, "originalText": "the", "ArgType": null, "before": " "}, {"index": 35, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 2538, "segment_span": [7, 39], "characterOffsetBegin": 2535, "originalText": "two", "ArgType": null, "before": " "}, {"index": 36, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 2545, "segment_span": [7, 39], "characterOffsetBegin": 2539, "originalText": "target", "ArgType": null, "before": " "}, {"index": 37, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 2549, "segment_span": [7, 39], "characterOffsetBegin": 2546, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 38, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2550, "segment_span": [7, 39], "characterOffsetBegin": 2549, "originalText": ",", "ArgType": null, "before": ""}, {"index": 39, "word": "respectively", "lemma": "respectively", "after": "", "pos": "RB", "characterOffsetEnd": 2563, "segment_span": [7, 39], "characterOffsetBegin": 2551, "originalText": "respectively", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2564, "characterOffsetBegin": 2563, "originalText": ".", "ArgType": null, "before": ""}], "text": "Moreover , to improve the representation , two extra nodes T1-PER , denoting the type PERSON , and T2-LOC , denoting the type LOCATION , are added to the parse tree , above the two target NEs , respectively ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2567, "segment_span": [0, 28], "characterOffsetBegin": 2565, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 2572, "segment_span": [0, 28], "characterOffsetBegin": 2568, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 2580, "segment_span": [0, 28], "characterOffsetBegin": 2573, "originalText": "example", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2581, "segment_span": [0, 28], "characterOffsetBegin": 2580, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2585, "segment_span": [0, 28], "characterOffsetBegin": 2582, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "above", "lemma": "above", "after": " ", "pos": "JJ", "characterOffsetEnd": 2591, "segment_span": [0, 28], "characterOffsetBegin": 2586, "originalText": "above", "ArgType": null, "before": " "}, {"index": 7, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 2595, "segment_span": [0, 28], "characterOffsetBegin": 2592, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 2598, "segment_span": [0, 28], "characterOffsetBegin": 2596, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "designed", "characterOffsetEnd": 2607, "after": " ", "pos": "VBN", "is_root": true, "lemma": "design", "segment_span": [0, 28], "tense": "N", "characterOffsetBegin": 2599, "before": " ", "originalText": "designed", "ArgType": null, "is_pass": true}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 2610, "segment_span": [0, 28], "characterOffsetBegin": 2608, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "capture", "lemma": "capture", "after": " ", "pos": "VB", "characterOffsetEnd": 2618, "segment_span": [0, 28], "characterOffsetBegin": 2611, "originalText": "capture", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2622, "segment_span": [0, 28], "characterOffsetBegin": 2619, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 2631, "segment_span": [0, 28], "characterOffsetBegin": 2623, "originalText": "relation", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "Located-in", "lemma": "located-in", "after": " ", "pos": "NN", "characterOffsetEnd": 2642, "segment_span": [0, 28], "characterOffsetBegin": 2632, "originalText": "Located-in", "ArgType": null, "before": " "}, {"index": 15, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 2650, "segment_span": [0, 28], "characterOffsetBegin": 2643, "originalText": "between", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2654, "segment_span": [0, 28], "characterOffsetBegin": 2651, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 2663, "segment_span": [0, 28], "characterOffsetBegin": 2655, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 18, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 2665, "segment_span": [0, 28], "characterOffsetBegin": 2664, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": " "}, {"index": 19, "word": "officials", "lemma": "official", "after": "", "pos": "NNS", "characterOffsetEnd": 2674, "segment_span": [0, 28], "characterOffsetBegin": 2665, "originalText": "officials", "ArgType": null, "before": ""}, {"index": 20, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 2675, "segment_span": [0, 28], "characterOffsetBegin": 2674, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 2679, "segment_span": [0, 28], "characterOffsetBegin": 2676, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "''", "lemma": "''", "after": "", "pos": "''", "characterOffsetEnd": 2681, "segment_span": [0, 28], "characterOffsetBegin": 2680, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": " "}, {"index": 23, "word": "Washington", "lemma": "Washington", "after": "", "pos": "NNP", "characterOffsetEnd": 2691, "segment_span": [0, 28], "characterOffsetBegin": 2681, "originalText": "Washington", "ArgType": "dobj", "before": ""}, {"index": 24, "word": "''", "lemma": "''", "after": " ", "pos": "''", "characterOffsetEnd": 2692, "segment_span": [0, 28], "characterOffsetBegin": 2691, "originalText": "\u00e2\u0080\u009d", "ArgType": null, "before": ""}, {"index": 25, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 2697, "segment_span": [0, 28], "characterOffsetBegin": 2693, "originalText": "from", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2701, "segment_span": [0, 28], "characterOffsetBegin": 2698, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 2705, "segment_span": [0, 28], "characterOffsetBegin": 2702, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 28, "word": "corpus", "lemma": "corpus", "after": "", "pos": "NN", "characterOffsetEnd": 2712, "segment_span": [0, 28], "characterOffsetBegin": 2706, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2713, "characterOffsetBegin": 2712, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this example , the above PET is designed to capture the relation Located-in between the entities '' officials '' and '' Washington '' from the ACE corpus ."}, {"tokens": [{"index": 1, "word": "Note", "characterOffsetEnd": 2718, "after": " ", "pos": "VB", "is_root": true, "lemma": "note", "segment_span": [0, 1], "tense": "B", "characterOffsetBegin": 2714, "originalText": "Note", "ArgType": null, "before": " "}, {"index": 2, "word": "that", "lemma": "that", "after": "", "pos": "IN", "characterOffsetEnd": 2723, "segment_span": [1, 20], "characterOffsetBegin": 2719, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2724, "segment_span": [1, 20], "characterOffsetBegin": 2723, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 2726, "segment_span": [1, 20], "characterOffsetBegin": 2725, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "third", "lemma": "third", "after": " ", "pos": "JJ", "characterOffsetEnd": 2732, "segment_span": [1, 20], "characterOffsetBegin": 2727, "originalText": "third", "ArgType": null, "before": " "}, {"index": 6, "word": "NE", "lemma": "ne", "after": "", "pos": "NN", "characterOffsetEnd": 2735, "segment_span": [1, 20], "characterOffsetBegin": 2733, "originalText": "NE", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2736, "segment_span": [1, 20], "characterOffsetBegin": 2735, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "U.S.", "lemma": "U.S.", "after": "", "pos": "NNP", "characterOffsetEnd": 2741, "segment_span": [1, 20], "characterOffsetBegin": 2737, "originalText": "U.S.", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2742, "segment_span": [1, 20], "characterOffsetBegin": 2741, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 2745, "segment_span": [1, 20], "characterOffsetBegin": 2743, "originalText": "is", "ArgType": null, "before": " "}, {"index": 11, "word": "characterized", "characterOffsetEnd": 2759, "after": " ", "pos": "VBN", "is_root": true, "lemma": "characterize", "segment_span": [1, 20], "tense": "N", "characterOffsetBegin": 2746, "before": " ", "originalText": "characterized", "ArgType": null, "is_pass": true}, {"index": 12, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 2762, "segment_span": [1, 20], "characterOffsetBegin": 2760, "originalText": "by", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2766, "segment_span": [1, 20], "characterOffsetBegin": 2763, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 2771, "segment_span": [1, 20], "characterOffsetBegin": 2767, "originalText": "node", "ArgType": null, "before": " "}, {"index": 15, "word": "GPE", "lemma": "gpe", "after": " ", "pos": "NN", "characterOffsetEnd": 2775, "segment_span": [1, 20], "characterOffsetBegin": 2772, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2777, "segment_span": [1, 20], "characterOffsetBegin": 2776, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "GeoPolitical", "lemma": "geopolitical", "after": " ", "pos": "JJ", "characterOffsetEnd": 2789, "segment_span": [1, 20], "characterOffsetBegin": 2777, "originalText": "GeoPolitical", "ArgType": null, "before": ""}, {"index": 18, "word": "Entity", "lemma": "entity", "after": "", "pos": "NN", "characterOffsetEnd": 2796, "segment_span": [1, 20], "characterOffsetBegin": 2790, "originalText": "Entity", "ArgType": null, "before": " "}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 2797, "segment_span": [1, 20], "characterOffsetBegin": 2796, "originalText": ")", "ArgType": null, "before": ""}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2798, "segment_span": [1, 20], "characterOffsetBegin": 2797, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 2804, "segment_span": [20, 39], "characterOffsetBegin": 2799, "originalText": "where", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2808, "segment_span": [20, 39], "characterOffsetBegin": 2805, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "absence", "lemma": "absence", "after": " ", "pos": "NN", "characterOffsetEnd": 2816, "segment_span": [20, 39], "characterOffsetBegin": 2809, "originalText": "absence", "ArgType": "subj", "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 2819, "segment_span": [20, 39], "characterOffsetBegin": 2817, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2823, "segment_span": [20, 39], "characterOffsetBegin": 2820, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "prefix", "lemma": "prefix", "after": " ", "pos": "NN", "characterOffsetEnd": 2830, "segment_span": [20, 39], "characterOffsetBegin": 2824, "originalText": "prefix", "ArgType": null, "before": " "}, {"index": 27, "word": "T1", "lemma": "t1", "after": " ", "pos": "NN", "characterOffsetEnd": 2833, "segment_span": [20, 39], "characterOffsetBegin": 2831, "originalText": "T1", "ArgType": null, "before": " "}, {"index": 28, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 2836, "segment_span": [20, 39], "characterOffsetBegin": 2834, "originalText": "or", "ArgType": null, "before": " "}, {"index": 29, "word": "T2", "lemma": "t2", "after": " ", "pos": "NN", "characterOffsetEnd": 2839, "segment_span": [20, 39], "characterOffsetBegin": 2837, "originalText": "T2", "ArgType": null, "before": " "}, {"index": 30, "word": "before", "lemma": "before", "after": " ", "pos": "IN", "characterOffsetEnd": 2846, "segment_span": [20, 39], "characterOffsetBegin": 2840, "originalText": "before", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2850, "segment_span": [20, 39], "characterOffsetBegin": 2847, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "NE", "lemma": "ne", "after": " ", "pos": "NN", "characterOffsetEnd": 2853, "segment_span": [20, 39], "characterOffsetBegin": 2851, "originalText": "NE", "ArgType": null, "before": " "}, {"index": 33, "word": "type", "lemma": "type", "after": " ", "pos": "NN", "characterOffsetEnd": 2858, "segment_span": [20, 39], "characterOffsetBegin": 2854, "originalText": "type", "ArgType": null, "before": " "}, {"index": 34, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2860, "segment_span": [20, 39], "characterOffsetBegin": 2859, "originalText": "(", "ArgType": null, "before": " "}, {"index": 35, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 2864, "segment_span": [20, 39], "characterOffsetBegin": 2860, "originalText": "i.e.", "ArgType": null, "before": ""}, {"index": 36, "word": "GPE", "lemma": "gpe", "after": "", "pos": "FW", "characterOffsetEnd": 2868, "segment_span": [20, 39], "characterOffsetBegin": 2865, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 37, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 2869, "segment_span": [20, 39], "characterOffsetBegin": 2868, "originalText": ")", "ArgType": null, "before": ""}, {"index": 38, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2870, "segment_span": [20, 39], "characterOffsetBegin": 2869, "originalText": ",", "ArgType": null, "before": ""}, {"index": 39, "word": "denotes", "characterOffsetEnd": 2878, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "denote", "segment_span": [20, 39], "tense": "Z", "characterOffsetBegin": 2871, "originalText": "denotes", "ArgType": null, "before": " "}, {"index": 40, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 2883, "segment_span": [39, 50], "characterOffsetBegin": 2879, "originalText": "that", "ArgType": null, "before": " "}, {"index": 41, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2887, "segment_span": [39, 50], "characterOffsetBegin": 2884, "originalText": "the", "ArgType": null, "before": " "}, {"index": 42, "word": "NE", "lemma": "ne", "after": " ", "pos": "NN", "characterOffsetEnd": 2890, "segment_span": [39, 50], "characterOffsetBegin": 2888, "originalText": "NE", "ArgType": "subj", "before": " "}, {"index": 43, "word": "does", "lemma": "do", "after": " ", "pos": "VBZ", "characterOffsetEnd": 2895, "segment_span": [39, 50], "characterOffsetBegin": 2891, "originalText": "does", "ArgType": null, "before": " "}, {"index": 44, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 2899, "segment_span": [39, 50], "characterOffsetBegin": 2896, "originalText": "not", "ArgType": null, "before": " "}, {"index": 45, "word": "take", "characterOffsetEnd": 2904, "after": " ", "pos": "VB", "is_root": true, "lemma": "take", "segment_span": [39, 50], "tense": "B", "characterOffsetBegin": 2900, "originalText": "take", "has_aux": true, "ArgType": null, "before": " "}, {"index": 46, "word": "part", "lemma": "part", "after": " ", "pos": "NN", "characterOffsetEnd": 2909, "segment_span": [39, 50], "characterOffsetBegin": 2905, "originalText": "part", "ArgType": "dobj", "before": " "}, {"index": 47, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2912, "segment_span": [39, 50], "characterOffsetBegin": 2910, "originalText": "in", "ArgType": null, "before": " "}, {"index": 48, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 2916, "segment_span": [39, 50], "characterOffsetBegin": 2913, "originalText": "the", "ArgType": null, "before": " "}, {"index": 49, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 2923, "segment_span": [39, 50], "characterOffsetBegin": 2917, "originalText": "target", "ArgType": null, "before": " "}, {"index": 50, "word": "relation", "lemma": "relation", "after": "", "pos": "NN", "characterOffsetEnd": 2932, "segment_span": [39, 50], "characterOffsetBegin": 2924, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 51, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2933, "characterOffsetBegin": 2932, "originalText": ".", "ArgType": null, "before": ""}], "text": "Note that , a third NE , U.S. , is characterized by the node GPE ( GeoPolitical Entity ) , where the absence of the prefix T1 or T2 before the NE type ( i.e. GPE ) , denotes that the NE does not take part in the target relation ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2936, "segment_span": [0, 10], "characterOffsetBegin": 2934, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 2945, "segment_span": [0, 10], "characterOffsetBegin": 2937, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 3, "word": "work", "lemma": "work", "after": "", "pos": "NN", "characterOffsetEnd": 2950, "segment_span": [0, 10], "characterOffsetBegin": 2946, "originalText": "work", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 2951, "segment_span": [0, 10], "characterOffsetBegin": 2950, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 2956, "segment_span": [0, 10], "characterOffsetBegin": 2952, "originalText": "some", "ArgType": null, "before": " "}, {"index": 6, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 2967, "segment_span": [0, 10], "characterOffsetBegin": 2957, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 7, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 2973, "segment_span": [0, 10], "characterOffsetBegin": 2968, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 8, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 2978, "segment_span": [0, 10], "characterOffsetBegin": 2974, "originalText": "have", "ArgType": null, "before": " "}, {"index": 9, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 2983, "segment_span": [0, 10], "characterOffsetBegin": 2979, "originalText": "been", "ArgType": null, "before": " "}, {"index": 10, "word": "used", "characterOffsetEnd": 2988, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 2984, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 2990, "segment_span": [10, 27], "characterOffsetBegin": 2989, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "Bunescu", "lemma": "Bunescu", "after": " ", "pos": "NNP", "characterOffsetEnd": 2997, "segment_span": [10, 27], "characterOffsetBegin": 2990, "originalText": "Bunescu", "ArgType": "subj", "before": ""}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3001, "segment_span": [10, 27], "characterOffsetBegin": 2998, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "Mooney", "lemma": "Mooney", "after": "", "pos": "NNP", "characterOffsetEnd": 3008, "segment_span": [10, 27], "characterOffsetBegin": 3002, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3009, "segment_span": [10, 27], "characterOffsetBegin": 3008, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 3015, "segment_span": [10, 27], "characterOffsetBegin": 3010, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 17, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 3016, "segment_span": [10, 27], "characterOffsetBegin": 3015, "originalText": ";", "ArgType": null, "before": ""}, {"index": 18, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 3021, "segment_span": [10, 27], "characterOffsetBegin": 3017, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3022, "segment_span": [10, 27], "characterOffsetBegin": 3021, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 3027, "segment_span": [10, 27], "characterOffsetBegin": 3023, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 3028, "segment_span": [10, 27], "characterOffsetBegin": 3027, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 3032, "segment_span": [10, 27], "characterOffsetBegin": 3029, "originalText": "but", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3036, "segment_span": [10, 27], "characterOffsetBegin": 3033, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "employed", "lemma": "employ", "after": " ", "pos": "VBN", "characterOffsetEnd": 3045, "segment_span": [10, 27], "characterOffsetBegin": 3037, "originalText": "employed", "ArgType": null, "before": " "}, {"index": 25, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 3052, "segment_span": [10, 27], "characterOffsetBegin": 3046, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 26, "word": "just", "lemma": "just", "after": " ", "pos": "RB", "characterOffsetEnd": 3057, "segment_span": [10, 27], "characterOffsetBegin": 3053, "originalText": "just", "ArgType": null, "before": " "}, {"index": 27, "word": "exploited", "characterOffsetEnd": 3067, "after": " ", "pos": "VBD", "is_root": true, "lemma": "exploit", "segment_span": [10, 27], "tense": "D", "characterOffsetBegin": 3058, "originalText": "exploited", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3071, "segment_span": [27, 38], "characterOffsetBegin": 3068, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 3081, "segment_span": [27, 38], "characterOffsetBegin": 3072, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 30, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 3093, "segment_span": [27, 38], "characterOffsetBegin": 3082, "originalText": "information", "ArgType": "subj", "before": " "}, {"index": 31, "word": "concentrated", "characterOffsetEnd": 3106, "after": " ", "pos": "VBD", "is_root": true, "lemma": "concentrate", "segment_span": [27, 38], "tense": "D", "characterOffsetBegin": 3094, "originalText": "concentrated", "ArgType": null, "before": " "}, {"index": 32, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 3109, "segment_span": [27, 38], "characterOffsetBegin": 3107, "originalText": "in", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3113, "segment_span": [27, 38], "characterOffsetBegin": 3110, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "path", "lemma": "path", "after": " ", "pos": "NN", "characterOffsetEnd": 3118, "segment_span": [27, 38], "characterOffsetBegin": 3114, "originalText": "path", "ArgType": null, "before": " "}, {"index": 35, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 3126, "segment_span": [27, 38], "characterOffsetBegin": 3119, "originalText": "between", "ArgType": null, "before": " "}, {"index": 36, "word": "e1", "lemma": "e1", "after": " ", "pos": "NN", "characterOffsetEnd": 3129, "segment_span": [27, 38], "characterOffsetBegin": 3127, "originalText": "e1", "ArgType": null, "before": " "}, {"index": 37, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3133, "segment_span": [27, 38], "characterOffsetBegin": 3130, "originalText": "and", "ArgType": null, "before": " "}, {"index": 38, "word": "e2", "lemma": "e2", "after": "", "pos": "NN", "characterOffsetEnd": 3136, "segment_span": [27, 38], "characterOffsetBegin": 3134, "originalText": "e2", "ArgType": null, "before": " "}, {"index": 39, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 3137, "characterOffsetBegin": 3136, "originalText": ".", "ArgType": null, "before": ""}], "text": "In previous work , some dependency trees have been used ( Bunescu and Mooney , 2005a ; Wang , 2008 ) but the employed kernel just exploited the syntactic information concentrated in the path between e1 and e2 ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 3140, "segment_span": [0, 24], "characterOffsetBegin": 3138, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "contrast", "lemma": "contrast", "after": "", "pos": "NN", "characterOffsetEnd": 3149, "segment_span": [0, 24], "characterOffsetBegin": 3141, "originalText": "contrast", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3150, "segment_span": [0, 24], "characterOffsetBegin": 3149, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 3153, "segment_span": [0, 24], "characterOffsetBegin": 3151, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "defined", "characterOffsetEnd": 3161, "after": " ", "pos": "VBD", "is_root": true, "lemma": "define", "segment_span": [0, 24], "tense": "D", "characterOffsetBegin": 3154, "originalText": "defined", "ArgType": "verb", "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3165, "segment_span": [0, 24], "characterOffsetBegin": 3162, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "studied", "characterOffsetEnd": 3173, "after": " ", "pos": "VBD", "is_root": true, "lemma": "study", "segment_span": [6, 11], "tense": "D", "characterOffsetBegin": 3166, "originalText": "studied", "ArgType": null, "before": " "}, {"index": 8, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 3179, "segment_span": [6, 11], "characterOffsetBegin": 3174, "originalText": "three", "ArgType": null, "before": " "}, {"index": 9, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 3189, "segment_span": [6, 11], "characterOffsetBegin": 3180, "originalText": "different", "ArgType": null, "before": " "}, {"index": 10, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 3200, "segment_span": [6, 11], "characterOffsetBegin": 3190, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 11, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 3211, "segment_span": [6, 11], "characterOffsetBegin": 3201, "originalText": "structures", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "whose", "lemma": "whose", "after": " ", "pos": "WP$", "characterOffsetEnd": 3217, "segment_span": [11, 23], "characterOffsetBegin": 3212, "originalText": "whose", "ArgType": null, "before": " "}, {"index": 13, "word": "potential", "lemma": "potential", "after": " ", "pos": "NN", "characterOffsetEnd": 3227, "segment_span": [11, 23], "characterOffsetBegin": 3218, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 14, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 3231, "segment_span": [11, 23], "characterOffsetBegin": 3228, "originalText": "can", "ArgType": null, "before": " "}, {"index": 15, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 3234, "segment_span": [11, 23], "characterOffsetBegin": 3232, "originalText": "be", "ArgType": null, "before": " "}, {"index": 16, "word": "fully", "lemma": "fully", "after": " ", "pos": "RB", "characterOffsetEnd": 3240, "segment_span": [11, 23], "characterOffsetBegin": 3235, "originalText": "fully", "ArgType": null, "before": " "}, {"index": 17, "word": "exploited", "characterOffsetEnd": 3250, "after": " ", "pos": "VBN", "is_root": true, "lemma": "exploit", "segment_span": [11, 23], "tense": "N", "characterOffsetBegin": 3241, "before": " ", "originalText": "exploited", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 3253, "segment_span": [11, 23], "characterOffsetBegin": 3251, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 3257, "segment_span": [11, 23], "characterOffsetBegin": 3254, "originalText": "our", "ArgType": null, "before": " "}, {"index": 20, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 3269, "segment_span": [11, 23], "characterOffsetBegin": 3258, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 21, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 3277, "segment_span": [11, 23], "characterOffsetBegin": 3270, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 22, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 3282, "segment_span": [11, 23], "characterOffsetBegin": 3278, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 23, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 3289, "segment_span": [11, 23], "characterOffsetBegin": 3283, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 24, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 3290, "segment_span": [0, 24], "characterOffsetBegin": 3289, "originalText": ":", "ArgType": null, "before": ""}, {"index": 25, "word": "Dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 3301, "segment_span": [24, 42], "characterOffsetBegin": 3291, "originalText": "Dependency", "ArgType": null, "before": " "}, {"index": 26, "word": "Words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 3307, "segment_span": [24, 42], "characterOffsetBegin": 3302, "originalText": "Words", "ArgType": null, "before": " "}, {"index": 27, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 3309, "segment_span": [24, 42], "characterOffsetBegin": 3308, "originalText": "(", "ArgType": null, "before": " "}, {"index": 28, "word": "DW", "lemma": "dw", "after": "", "pos": "NN", "characterOffsetEnd": 3311, "segment_span": [24, 42], "characterOffsetBegin": 3309, "originalText": "DW", "ArgType": null, "before": ""}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 3312, "segment_span": [24, 42], "characterOffsetBegin": 3311, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 3317, "segment_span": [24, 42], "characterOffsetBegin": 3313, "originalText": "tree", "ArgType": "subj", "before": " "}, {"index": 31, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 3320, "segment_span": [24, 42], "characterOffsetBegin": 3318, "originalText": "is", "ArgType": null, "before": " "}, {"index": 32, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 3328, "segment_span": [24, 42], "characterOffsetBegin": 3321, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 33, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 3331, "segment_span": [24, 42], "characterOffsetBegin": 3329, "originalText": "to", "ArgType": null, "before": " "}, {"index": 34, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 3335, "segment_span": [24, 42], "characterOffsetBegin": 3332, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 35, "word": "adapted", "lemma": "adapt", "after": " ", "pos": "VBD", "characterOffsetEnd": 3343, "segment_span": [24, 42], "characterOffsetBegin": 3336, "originalText": "adapted", "ArgType": null, "before": " "}, {"index": 36, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3347, "segment_span": [24, 42], "characterOffsetBegin": 3344, "originalText": "for", "ArgType": null, "before": " "}, {"index": 37, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 3358, "segment_span": [24, 42], "characterOffsetBegin": 3348, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 38, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 3363, "segment_span": [24, 42], "characterOffsetBegin": 3359, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 39, "word": "constituted", "lemma": "constitute", "after": " ", "pos": "VBN", "characterOffsetEnd": 3375, "segment_span": [24, 42], "characterOffsetBegin": 3364, "originalText": "constituted", "ArgType": null, "before": " "}, {"index": 40, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 3378, "segment_span": [24, 42], "characterOffsetBegin": 3376, "originalText": "by", "ArgType": null, "before": " "}, {"index": 41, "word": "simple", "lemma": "simple", "after": " ", "pos": "JJ", "characterOffsetEnd": 3385, "segment_span": [24, 42], "characterOffsetBegin": 3379, "originalText": "simple", "ArgType": null, "before": " "}, {"index": 42, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 3391, "segment_span": [24, 42], "characterOffsetBegin": 3386, "originalText": "words", "ArgType": null, "before": " "}, {"index": 43, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 3392, "characterOffsetBegin": 3391, "originalText": ".", "ArgType": null, "before": ""}], "text": "In contrast , we defined and studied three different dependency structures whose potential can be fully exploited by our convolution partial tree kernel : Dependency Words ( DW ) tree is similar to PET adapted for dependency tree constituted by simple words ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 3395, "segment_span": [0, 12], "characterOffsetBegin": 3393, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "select", "characterOffsetEnd": 3402, "after": " ", "pos": "VBP", "is_root": true, "lemma": "select", "segment_span": [0, 12], "tense": "P", "characterOffsetBegin": 3396, "originalText": "select", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3406, "segment_span": [0, 12], "characterOffsetBegin": 3403, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "minimal", "lemma": "minimal", "after": " ", "pos": "JJ", "characterOffsetEnd": 3414, "segment_span": [0, 12], "characterOffsetBegin": 3407, "originalText": "minimal", "ArgType": null, "before": " "}, {"index": 5, "word": "subtree", "lemma": "subtree", "after": " ", "pos": "NN", "characterOffsetEnd": 3422, "segment_span": [0, 12], "characterOffsetBegin": 3415, "originalText": "subtree", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 3428, "segment_span": [5, 10], "characterOffsetBegin": 3423, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 7, "word": "includes", "characterOffsetEnd": 3437, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "include", "segment_span": [5, 10], "tense": "Z", "characterOffsetBegin": 3429, "originalText": "includes", "ArgType": null, "before": " "}, {"index": 8, "word": "e1", "lemma": "e1", "after": " ", "pos": "NN", "characterOffsetEnd": 3440, "segment_span": [5, 10], "characterOffsetBegin": 3438, "originalText": "e1", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3444, "segment_span": [5, 10], "characterOffsetBegin": 3441, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "e2", "lemma": "e2", "after": "", "pos": "NN", "characterOffsetEnd": 3447, "segment_span": [5, 10], "characterOffsetBegin": 3445, "originalText": "e2", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3448, "segment_span": [0, 12], "characterOffsetBegin": 3447, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 3452, "segment_span": [0, 12], "characterOffsetBegin": 3449, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 3455, "segment_span": [12, 28], "characterOffsetBegin": 3453, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 14, "word": "insert", "characterOffsetEnd": 3462, "after": " ", "pos": "VBP", "is_root": true, "lemma": "insert", "segment_span": [12, 28], "tense": "P", "characterOffsetBegin": 3456, "originalText": "insert", "ArgType": null, "before": " "}, {"index": 15, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 3465, "segment_span": [12, 28], "characterOffsetBegin": 3463, "originalText": "an", "ArgType": null, "before": " "}, {"index": 16, "word": "extra", "lemma": "extra", "after": " ", "pos": "JJ", "characterOffsetEnd": 3471, "segment_span": [12, 28], "characterOffsetBegin": 3466, "originalText": "extra", "ArgType": null, "before": " "}, {"index": 17, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 3476, "segment_span": [12, 28], "characterOffsetBegin": 3472, "originalText": "node", "ArgType": "dobj", "before": " "}, {"index": 18, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 3479, "segment_span": [12, 28], "characterOffsetBegin": 3477, "originalText": "as", "ArgType": null, "before": " "}, {"index": 19, "word": "father", "lemma": "father", "after": " ", "pos": "NN", "characterOffsetEnd": 3486, "segment_span": [12, 28], "characterOffsetBegin": 3480, "originalText": "father", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 3489, "segment_span": [12, 28], "characterOffsetBegin": 3487, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3493, "segment_span": [12, 28], "characterOffsetBegin": 3490, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 3497, "segment_span": [12, 28], "characterOffsetBegin": 3494, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3498, "segment_span": [12, 28], "characterOffsetBegin": 3497, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "labeled", "lemma": "label", "after": " ", "pos": "VBN", "characterOffsetEnd": 3506, "segment_span": [12, 28], "characterOffsetBegin": 3499, "originalText": "labeled", "ArgType": null, "before": " "}, {"index": 25, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 3511, "segment_span": [12, 28], "characterOffsetBegin": 3507, "originalText": "with", "ArgType": null, "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3515, "segment_span": [12, 28], "characterOffsetBegin": 3512, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "NE", "lemma": "ne", "after": " ", "pos": "NN", "characterOffsetEnd": 3518, "segment_span": [12, 28], "characterOffsetBegin": 3516, "originalText": "NE", "ArgType": null, "before": " "}, {"index": 28, "word": "category", "lemma": "category", "after": "", "pos": "NN", "characterOffsetEnd": 3527, "segment_span": [12, 28], "characterOffsetBegin": 3519, "originalText": "category", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 3528, "characterOffsetBegin": 3527, "originalText": ".", "ArgType": null, "before": ""}], "text": "We select the minimal subtree which includes e1 and e2 , and we insert an extra node as father of the NEs , labeled with the NE category ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 3532, "segment_span": [0, 4], "characterOffsetBegin": 3529, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 3540, "segment_span": [0, 4], "characterOffsetBegin": 3533, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 3541, "segment_span": [0, 4], "characterOffsetBegin": 3540, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "given", "lemma": "give", "after": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", "pos": "VBN", "characterOffsetEnd": 3547, "segment_span": [0, 4], "characterOffsetBegin": 3542, "originalText": "given", "ArgType": null, "before": " "}], "text": "For example , given"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 19], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "T1-PER", "lemma": "t1-per", "after": "", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 19], "characterOffsetBegin": 6, "originalText": "T1-PER", "ArgType": "subj", "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 13, "segment_span": [0, 19], "characterOffsetBegin": 12, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "T2-LOC", "lemma": "t2-loc", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 19], "characterOffsetBegin": 14, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 24, "segment_span": [0, 19], "characterOffsetBegin": 21, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "GPE", "lemma": "GPE", "after": " ", "pos": "NNP", "characterOffsetEnd": 28, "segment_span": [0, 19], "characterOffsetBegin": 25, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 32, "segment_span": [0, 19], "characterOffsetBegin": 29, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 36, "segment_span": [0, 19], "characterOffsetBegin": 33, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "extra", "lemma": "extra", "after": " ", "pos": "JJ", "characterOffsetEnd": 42, "segment_span": [0, 19], "characterOffsetBegin": 37, "originalText": "extra", "ArgType": null, "before": " "}, {"index": 10, "word": "nodes", "lemma": "node", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 19], "characterOffsetBegin": 43, "originalText": "nodes", "ArgType": "verb", "before": " "}, {"index": 11, "word": "inserted", "lemma": "insert", "after": " ", "pos": "VBN", "characterOffsetEnd": 57, "segment_span": [0, 19], "characterOffsetBegin": 49, "originalText": "inserted", "ArgType": null, "before": " "}, {"index": 12, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 60, "segment_span": [0, 19], "characterOffsetBegin": 58, "originalText": "as", "ArgType": null, "before": " "}, {"index": 13, "word": "fathers", "lemma": "father", "after": " ", "pos": "NNS", "characterOffsetEnd": 68, "segment_span": [0, 19], "characterOffsetBegin": 61, "originalText": "fathers", "ArgType": null, "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [0, 19], "characterOffsetBegin": 69, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "Washington", "lemma": "Washington", "after": "", "pos": "NNP", "characterOffsetEnd": 82, "segment_span": [0, 19], "characterOffsetBegin": 72, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 83, "segment_span": [0, 19], "characterOffsetBegin": 82, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "soldier", "lemma": "soldier", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 19], "characterOffsetBegin": 84, "originalText": "soldier", "ArgType": null, "before": " "}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 95, "segment_span": [0, 19], "characterOffsetBegin": 92, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "U.S.", "lemma": "U.S.", "after": "", "pos": "NNP", "characterOffsetEnd": 100, "segment_span": [0, 19], "characterOffsetBegin": 96, "originalText": "U.S.", "ArgType": null, "before": " "}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 101, "characterOffsetBegin": 100, "originalText": ".", "ArgType": null, "before": ""}], "text": "where T1-PER , T2-LOC and GPE are the extra nodes inserted as fathers of Washington , soldier and U.S. ."}, {"tokens": [{"index": 1, "word": "Grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 113, "segment_span": [0, 27], "characterOffsetBegin": 102, "originalText": "Grammatical", "ArgType": null, "before": " "}, {"index": 2, "word": "Relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 122, "segment_span": [0, 27], "characterOffsetBegin": 114, "originalText": "Relation", "ArgType": null, "before": " "}, {"index": 3, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 124, "segment_span": [0, 27], "characterOffsetBegin": 123, "originalText": "(", "ArgType": null, "before": " "}, {"index": 4, "word": "GR", "lemma": "gr", "after": "", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [0, 27], "characterOffsetBegin": 124, "originalText": "GR", "ArgType": null, "before": ""}, {"index": 5, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 127, "segment_span": [0, 27], "characterOffsetBegin": 126, "originalText": ")", "ArgType": null, "before": ""}, {"index": 6, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [0, 27], "characterOffsetBegin": 128, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 133, "segment_span": [0, 27], "characterOffsetBegin": 132, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 138, "segment_span": [0, 27], "characterOffsetBegin": 134, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 142, "segment_span": [0, 27], "characterOffsetBegin": 139, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "DW", "lemma": "dw", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [0, 27], "characterOffsetBegin": 143, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 11, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [0, 27], "characterOffsetBegin": 146, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 153, "segment_span": [11, 20], "characterOffsetBegin": 151, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 159, "segment_span": [11, 20], "characterOffsetBegin": 154, "originalText": "which", "ArgType": null, "before": " "}, {"index": 14, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 165, "segment_span": [11, 20], "characterOffsetBegin": 160, "originalText": "words", "ArgType": null, "before": " "}, {"index": 15, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 169, "segment_span": [11, 20], "characterOffsetBegin": 166, "originalText": "are", "ArgType": null, "before": " "}, {"index": 16, "word": "replaced", "characterOffsetEnd": 178, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [11, 20], "tense": "N", "characterOffsetBegin": 170, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 181, "segment_span": [11, 20], "characterOffsetBegin": 179, "originalText": "by", "ArgType": null, "before": " "}, {"index": 18, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 187, "segment_span": [11, 20], "characterOffsetBegin": 182, "originalText": "their", "ArgType": null, "before": " "}, {"index": 19, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 199, "segment_span": [11, 20], "characterOffsetBegin": 188, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 20, "word": "functions", "lemma": "function", "after": "", "pos": "NNS", "characterOffsetEnd": 209, "segment_span": [11, 20], "characterOffsetBegin": 200, "originalText": "functions", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 210, "segment_span": [0, 27], "characterOffsetBegin": 209, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 215, "segment_span": [0, 27], "characterOffsetBegin": 211, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 23, "word": "prep", "lemma": "prep", "after": "", "pos": "FW", "characterOffsetEnd": 220, "segment_span": [0, 27], "characterOffsetBegin": 216, "originalText": "prep", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 221, "segment_span": [0, 27], "characterOffsetBegin": 220, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "pobj", "lemma": "pobj", "after": " ", "pos": "NN", "characterOffsetEnd": 226, "segment_span": [0, 27], "characterOffsetBegin": 222, "originalText": "pobj", "ArgType": null, "before": " "}, {"index": 26, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 230, "segment_span": [0, 27], "characterOffsetBegin": 227, "originalText": "and", "ArgType": null, "before": " "}, {"index": 27, "word": "nsubj", "lemma": "nsubj", "after": "", "pos": "NN", "characterOffsetEnd": 236, "segment_span": [0, 27], "characterOffsetBegin": 231, "originalText": "nsubj", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 237, "characterOffsetBegin": 236, "originalText": ".", "ArgType": null, "before": ""}], "text": "Grammatical Relation ( GR ) tree , i.e. the DW tree in which words are replaced by their grammatical functions , e.g. prep , pobj and nsubj ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 241, "segment_span": [0, 5], "characterOffsetBegin": 238, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 249, "segment_span": [0, 5], "characterOffsetBegin": 242, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 250, "segment_span": [0, 5], "characterOffsetBegin": 249, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 257, "segment_span": [0, 5], "characterOffsetBegin": 251, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 5, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 259, "segment_span": [0, 5], "characterOffsetBegin": 258, "originalText": "2", "ArgType": null, "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 260, "characterOffsetBegin": 259, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , Figure 2 ."}, {"tokens": [{"index": 1, "word": "d", "lemma": "d", "after": "", "pos": "NN", "characterOffsetEnd": 261, "segment_span": [0, 11], "characterOffsetBegin": 260, "originalText": "d", "ArgType": "subj", "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 262, "segment_span": [0, 11], "characterOffsetBegin": 261, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "shows", "characterOffsetEnd": 268, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 11], "tense": "Z", "characterOffsetBegin": 263, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 272, "segment_span": [0, 11], "characterOffsetBegin": 269, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 275, "segment_span": [0, 11], "characterOffsetBegin": 273, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 6, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 280, "segment_span": [0, 11], "characterOffsetBegin": 276, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 284, "segment_span": [0, 11], "characterOffsetBegin": 281, "originalText": "for", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 288, "segment_span": [0, 11], "characterOffsetBegin": 285, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 297, "segment_span": [0, 11], "characterOffsetBegin": 289, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 10, "word": "relation", "lemma": "relation", "after": "", "pos": "NN", "characterOffsetEnd": 306, "segment_span": [0, 11], "characterOffsetBegin": 298, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 11, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 307, "segment_span": [0, 11], "characterOffsetBegin": 306, "originalText": ":", "ArgType": null, "before": ""}, {"index": 12, "word": "In", "lemma": "In", "after": " ", "pos": "NNP", "characterOffsetEnd": 310, "segment_span": [11, 23], "characterOffsetBegin": 308, "originalText": "In", "ArgType": null, "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 313, "segment_span": [11, 23], "characterOffsetBegin": 311, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "replaced", "characterOffsetEnd": 322, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [11, 23], "tense": "N", "characterOffsetBegin": 314, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 15, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 325, "segment_span": [11, 23], "characterOffsetBegin": 323, "originalText": "by", "ArgType": null, "before": " "}, {"index": 16, "word": "prep", "lemma": "prep", "after": "", "pos": "NN", "characterOffsetEnd": 330, "segment_span": [11, 23], "characterOffsetBegin": 326, "originalText": "prep", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 331, "segment_span": [11, 23], "characterOffsetBegin": 330, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "U.S.", "lemma": "U.S.", "after": " ", "pos": "NNP", "characterOffsetEnd": 336, "segment_span": [11, 23], "characterOffsetBegin": 332, "originalText": "U.S.", "ArgType": null, "before": " "}, {"index": 19, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 339, "segment_span": [11, 23], "characterOffsetBegin": 337, "originalText": "by", "ArgType": null, "before": " "}, {"index": 20, "word": "nsubj", "lemma": "nsubj", "after": " ", "pos": "NN", "characterOffsetEnd": 345, "segment_span": [11, 23], "characterOffsetBegin": 340, "originalText": "nsubj", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 349, "segment_span": [11, 23], "characterOffsetBegin": 346, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 352, "segment_span": [11, 23], "characterOffsetBegin": 350, "originalText": "so", "ArgType": null, "before": " "}, {"index": 23, "word": "on", "lemma": "on", "after": "", "pos": "IN", "characterOffsetEnd": 355, "segment_span": [11, 23], "characterOffsetBegin": 353, "originalText": "on", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 356, "characterOffsetBegin": 355, "originalText": ".", "ArgType": null, "before": ""}], "text": "d , shows the GR tree for the previous relation : In is replaced by prep , U.S. by nsubj and so on ."}, {"tokens": [{"index": 1, "word": "Grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 368, "segment_span": [0, 20], "characterOffsetBegin": 357, "originalText": "Grammatical", "ArgType": null, "before": " "}, {"index": 2, "word": "Relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 377, "segment_span": [0, 20], "characterOffsetBegin": 369, "originalText": "Relation", "ArgType": null, "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 381, "segment_span": [0, 20], "characterOffsetBegin": 378, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "Words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 387, "segment_span": [0, 20], "characterOffsetBegin": 382, "originalText": "Words", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 389, "segment_span": [0, 20], "characterOffsetBegin": 388, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "GRW", "lemma": "grw", "after": "", "pos": "NN", "characterOffsetEnd": 392, "segment_span": [0, 20], "characterOffsetBegin": 389, "originalText": "GRW", "ArgType": null, "before": ""}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 393, "segment_span": [0, 20], "characterOffsetBegin": 392, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 398, "segment_span": [0, 20], "characterOffsetBegin": 394, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 399, "segment_span": [0, 20], "characterOffsetBegin": 398, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 405, "segment_span": [0, 20], "characterOffsetBegin": 400, "originalText": "words", "ArgType": null, "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 409, "segment_span": [0, 20], "characterOffsetBegin": 406, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 421, "segment_span": [0, 20], "characterOffsetBegin": 410, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 13, "word": "functions", "lemma": "function", "after": " ", "pos": "NNS", "characterOffsetEnd": 431, "segment_span": [0, 20], "characterOffsetBegin": 422, "originalText": "functions", "ArgType": null, "before": " "}, {"index": 14, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 435, "segment_span": [0, 20], "characterOffsetBegin": 432, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 15, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 440, "segment_span": [0, 20], "characterOffsetBegin": 436, "originalText": "both", "ArgType": "subj", "before": " "}, {"index": 16, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 445, "segment_span": [0, 20], "characterOffsetBegin": 441, "originalText": "used", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 448, "segment_span": [0, 20], "characterOffsetBegin": 446, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 452, "segment_span": [0, 20], "characterOffsetBegin": 449, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 457, "segment_span": [0, 20], "characterOffsetBegin": 453, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 458, "segment_span": [0, 20], "characterOffsetBegin": 457, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 464, "segment_span": [20, 32], "characterOffsetBegin": 459, "originalText": "where", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 468, "segment_span": [20, 32], "characterOffsetBegin": 465, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "latter", "lemma": "latter", "after": " ", "pos": "JJ", "characterOffsetEnd": 475, "segment_span": [20, 32], "characterOffsetBegin": 469, "originalText": "latter", "ArgType": null, "before": " "}, {"index": 24, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 479, "segment_span": [20, 32], "characterOffsetBegin": 476, "originalText": "are", "ArgType": null, "before": " "}, {"index": 25, "word": "inserted", "characterOffsetEnd": 488, "after": " ", "pos": "VBN", "is_root": true, "lemma": "insert", "segment_span": [20, 32], "tense": "N", "characterOffsetBegin": 480, "before": " ", "originalText": "inserted", "ArgType": null, "is_pass": true}, {"index": 26, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 491, "segment_span": [20, 32], "characterOffsetBegin": 489, "originalText": "as", "ArgType": null, "before": " "}, {"index": 27, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 493, "segment_span": [20, 32], "characterOffsetBegin": 492, "originalText": "a", "ArgType": null, "before": " "}, {"index": 28, "word": "father", "lemma": "father", "after": " ", "pos": "NN", "characterOffsetEnd": 500, "segment_span": [20, 32], "characterOffsetBegin": 494, "originalText": "father", "ArgType": null, "before": " "}, {"index": 29, "word": "node", "lemma": "node", "after": " ", "pos": "NN", "characterOffsetEnd": 505, "segment_span": [20, 32], "characterOffsetBegin": 501, "originalText": "node", "ArgType": null, "before": " "}, {"index": 30, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 508, "segment_span": [20, 32], "characterOffsetBegin": 506, "originalText": "of", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 512, "segment_span": [20, 32], "characterOffsetBegin": 509, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "former", "lemma": "former", "after": "", "pos": "JJ", "characterOffsetEnd": 519, "segment_span": [20, 32], "characterOffsetBegin": 513, "originalText": "former", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 520, "characterOffsetBegin": 519, "originalText": ".", "ArgType": null, "before": ""}], "text": "Grammatical Relation and Words ( GRW ) tree , words and grammatical functions are both used in the tree , where the latter are inserted as a father node of the former ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 524, "segment_span": [0, 5], "characterOffsetBegin": 521, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "example", "lemma": "example", "after": "", "pos": "NN", "characterOffsetEnd": 532, "segment_span": [0, 5], "characterOffsetBegin": 525, "originalText": "example", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 533, "segment_span": [0, 5], "characterOffsetBegin": 532, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "Figure", "lemma": "figure", "after": " ", "pos": "NN", "characterOffsetEnd": 540, "segment_span": [0, 5], "characterOffsetBegin": 534, "originalText": "Figure", "ArgType": null, "before": " "}, {"index": 5, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 542, "segment_span": [0, 5], "characterOffsetBegin": 541, "originalText": "2", "ArgType": null, "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 543, "characterOffsetBegin": 542, "originalText": ".", "ArgType": null, "before": ""}], "text": "For example , Figure 2 ."}, {"tokens": [{"index": 1, "word": "e", "lemma": "e", "after": "", "pos": "LS", "characterOffsetEnd": 544, "segment_span": [0, 9], "characterOffsetBegin": 543, "originalText": "e", "ArgType": "subj", "before": ""}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 545, "segment_span": [0, 9], "characterOffsetBegin": 544, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "shows", "characterOffsetEnd": 551, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "show", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 546, "originalText": "shows", "ArgType": "verb", "before": " "}, {"index": 4, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 556, "segment_span": [0, 9], "characterOffsetBegin": 552, "originalText": "such", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 561, "segment_span": [0, 9], "characterOffsetBegin": 557, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 565, "segment_span": [0, 9], "characterOffsetBegin": 562, "originalText": "for", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 569, "segment_span": [0, 9], "characterOffsetBegin": 566, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 578, "segment_span": [0, 9], "characterOffsetBegin": 570, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 9, "word": "relation", "lemma": "relation", "after": "", "pos": "NN", "characterOffsetEnd": 587, "segment_span": [0, 9], "characterOffsetBegin": 579, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 588, "characterOffsetBegin": 587, "originalText": ".", "ArgType": null, "before": ""}], "text": "e , shows such tree for the previous relation ."}], "title": "4.1 Constituent and Dependency Structures"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 4, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "Some", "ArgType": null, "before": ""}, {"index": 2, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 20], "characterOffsetBegin": 5, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 3, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 21, "segment_span": [0, 20], "characterOffsetBegin": 14, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 4, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 26, "segment_span": [0, 20], "characterOffsetBegin": 22, "originalText": "have", "ArgType": null, "before": " "}, {"index": 5, "word": "been", "lemma": "be", "after": " ", "pos": "VBN", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 27, "originalText": "been", "ArgType": null, "before": " "}, {"index": 6, "word": "used", "characterOffsetEnd": 36, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 32, "before": " ", "originalText": "used", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 7, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 39, "segment_span": [0, 20], "characterOffsetBegin": 37, "originalText": "on", "ArgType": null, "before": " "}, {"index": 8, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 20], "characterOffsetBegin": 40, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 9, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 61, "segment_span": [0, 20], "characterOffsetBegin": 51, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 63, "segment_span": [0, 20], "characterOffsetBegin": 62, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "Bunescu", "lemma": "bunescu", "after": " ", "pos": "NN", "characterOffsetEnd": 70, "segment_span": [0, 20], "characterOffsetBegin": 63, "originalText": "Bunescu", "ArgType": null, "before": ""}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 74, "segment_span": [0, 20], "characterOffsetBegin": 71, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "Mooney", "lemma": "mooney", "after": "", "pos": "NN", "characterOffsetEnd": 81, "segment_span": [0, 20], "characterOffsetBegin": 75, "originalText": "Mooney", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 82, "segment_span": [0, 20], "characterOffsetBegin": 81, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "2005b", "lemma": "2005b", "after": "", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [0, 20], "characterOffsetBegin": 83, "originalText": "2005b", "ArgType": null, "before": " "}, {"index": 16, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 89, "segment_span": [0, 20], "characterOffsetBegin": 88, "originalText": ";", "ArgType": null, "before": ""}, {"index": 17, "word": "Wang", "lemma": "Wang", "after": "", "pos": "NNP", "characterOffsetEnd": 94, "segment_span": [0, 20], "characterOffsetBegin": 90, "originalText": "Wang", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 95, "segment_span": [0, 20], "characterOffsetBegin": 94, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 100, "segment_span": [0, 20], "characterOffsetBegin": 96, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 20, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 101, "segment_span": [0, 20], "characterOffsetBegin": 100, "originalText": ")", "ArgType": null, "before": ""}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 102, "characterOffsetBegin": 101, "originalText": ".", "ArgType": null, "before": ""}], "text": "Some sequence kernels have been used on dependency structures ( Bunescu and Mooney , 2005b ; Wang , 2008 ) ."}, {"tokens": [{"index": 1, "word": "These", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 108, "segment_span": [0, 10], "characterOffsetBegin": 103, "originalText": "These", "ArgType": null, "before": " "}, {"index": 2, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 116, "segment_span": [0, 10], "characterOffsetBegin": 109, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 3, "word": "just", "lemma": "just", "after": " ", "pos": "RB", "characterOffsetEnd": 121, "segment_span": [0, 10], "characterOffsetBegin": 117, "originalText": "just", "ArgType": null, "before": " "}, {"index": 4, "word": "used", "characterOffsetEnd": 126, "after": " ", "pos": "VBN", "is_root": true, "lemma": "use", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 122, "originalText": "used", "ArgType": "verb", "before": " "}, {"index": 5, "word": "lexical", "lemma": "lexical", "after": " ", "pos": "JJ", "characterOffsetEnd": 134, "segment_span": [0, 10], "characterOffsetBegin": 127, "originalText": "lexical", "ArgType": null, "before": " "}, {"index": 6, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 140, "segment_span": [0, 10], "characterOffsetBegin": 135, "originalText": "words", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 145, "segment_span": [0, 10], "characterOffsetBegin": 141, "originalText": "with", "ArgType": null, "before": " "}, {"index": 8, "word": "some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 150, "segment_span": [0, 10], "characterOffsetBegin": 146, "originalText": "some", "ArgType": null, "before": " "}, {"index": 9, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 160, "segment_span": [0, 10], "characterOffsetBegin": 151, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 10, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [0, 10], "characterOffsetBegin": 161, "originalText": "information", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 173, "characterOffsetBegin": 172, "originalText": ".", "ArgType": null, "before": ""}], "text": "These kernels just used lexical words with some syntactic information ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 176, "segment_span": [0, 7], "characterOffsetBegin": 174, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "fully", "lemma": "fully", "after": " ", "pos": "RB", "characterOffsetEnd": 182, "segment_span": [0, 7], "characterOffsetBegin": 177, "originalText": "fully", "ArgType": null, "before": " "}, {"index": 3, "word": "exploit", "characterOffsetEnd": 190, "after": " ", "pos": "VB", "is_root": true, "lemma": "exploit", "segment_span": [0, 7], "tense": "B", "characterOffsetBegin": 183, "originalText": "exploit", "ArgType": null, "before": " "}, {"index": 4, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [0, 7], "characterOffsetBegin": 191, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 204, "segment_span": [0, 7], "characterOffsetBegin": 201, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 213, "segment_span": [0, 7], "characterOffsetBegin": 205, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 7, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 225, "segment_span": [0, 7], "characterOffsetBegin": 214, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 226, "segment_span": [7, 11], "characterOffsetBegin": 225, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 229, "segment_span": [7, 11], "characterOffsetBegin": 227, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 10, "word": "defined", "characterOffsetEnd": 237, "after": " ", "pos": "VBD", "is_root": true, "lemma": "define", "segment_span": [7, 11], "tense": "D", "characterOffsetBegin": 230, "originalText": "defined", "ArgType": "verb", "before": " "}, {"index": 11, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 241, "segment_span": [7, 11], "characterOffsetBegin": 238, "originalText": "and", "ArgType": null, "before": " "}, {"index": 12, "word": "studied", "characterOffsetEnd": 249, "after": " ", "pos": "VBD", "is_root": true, "lemma": "study", "segment_span": [11, 20], "tense": "D", "characterOffsetBegin": 242, "originalText": "studied", "ArgType": null, "before": " "}, {"index": 13, "word": "six", "lemma": "six", "after": " ", "pos": "CD", "characterOffsetEnd": 253, "segment_span": [11, 20], "characterOffsetBegin": 250, "originalText": "six", "ArgType": null, "before": " "}, {"index": 14, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 263, "segment_span": [11, 20], "characterOffsetBegin": 254, "originalText": "different", "ArgType": null, "before": " "}, {"index": 15, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 273, "segment_span": [11, 20], "characterOffsetBegin": 264, "originalText": "sequences", "ArgType": "dobj", "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 275, "segment_span": [11, 20], "characterOffsetBegin": 274, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 277, "segment_span": [11, 20], "characterOffsetBegin": 275, "originalText": "in", "ArgType": null, "before": ""}, {"index": 18, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 279, "segment_span": [11, 20], "characterOffsetBegin": 278, "originalText": "a", "ArgType": null, "before": " "}, {"index": 19, "word": "style", "lemma": "style", "after": " ", "pos": "NN", "characterOffsetEnd": 285, "segment_span": [11, 20], "characterOffsetBegin": 280, "originalText": "style", "ArgType": null, "before": " "}, {"index": 20, "word": "similar", "lemma": "similar", "after": " ", "pos": "JJ", "characterOffsetEnd": 293, "segment_span": [11, 20], "characterOffsetBegin": 286, "originalText": "similar", "ArgType": null, "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 296, "segment_span": [20, 42], "characterOffsetBegin": 294, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "what", "lemma": "what", "after": " ", "pos": "WP", "characterOffsetEnd": 301, "segment_span": [20, 42], "characterOffsetBegin": 297, "originalText": "what", "ArgType": "subj", "before": " "}, {"index": 23, "word": "proposed", "characterOffsetEnd": 310, "after": " ", "pos": "VBN", "is_root": true, "lemma": "propose", "segment_span": [20, 42], "tense": "N", "characterOffsetBegin": 302, "originalText": "proposed", "ArgType": null, "before": " "}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 313, "segment_span": [20, 42], "characterOffsetBegin": 311, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 315, "segment_span": [20, 42], "characterOffsetBegin": 314, "originalText": "(", "ArgType": null, "before": " "}, {"index": 26, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 324, "segment_span": [20, 42], "characterOffsetBegin": 315, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 325, "segment_span": [20, 42], "characterOffsetBegin": 324, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 330, "segment_span": [20, 42], "characterOffsetBegin": 326, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 331, "segment_span": [20, 42], "characterOffsetBegin": 330, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 332, "segment_span": [20, 42], "characterOffsetBegin": 331, "originalText": ")", "ArgType": null, "before": ""}, {"index": 31, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 333, "segment_span": [20, 42], "characterOffsetBegin": 332, "originalText": ",", "ArgType": null, "before": ""}, {"index": 32, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 339, "segment_span": [20, 42], "characterOffsetBegin": 334, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 33, "word": "include", "lemma": "include", "after": " ", "pos": "VBP", "characterOffsetEnd": 347, "segment_span": [20, 42], "characterOffsetBegin": 340, "originalText": "include", "ArgType": null, "before": " "}, {"index": 34, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 356, "segment_span": [20, 42], "characterOffsetBegin": 348, "originalText": "features", "ArgType": "dobj", "before": " "}, {"index": 35, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 361, "segment_span": [20, 42], "characterOffsetBegin": 357, "originalText": "from", "ArgType": null, "before": " "}, {"index": 36, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 373, "segment_span": [20, 42], "characterOffsetBegin": 362, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 37, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 377, "segment_span": [20, 42], "characterOffsetBegin": 374, "originalText": "and", "ArgType": null, "before": " "}, {"index": 38, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 388, "segment_span": [20, 42], "characterOffsetBegin": 378, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 39, "word": "parse", "lemma": "parse", "after": " ", "pos": "VBP", "characterOffsetEnd": 394, "segment_span": [20, 42], "characterOffsetBegin": 389, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 40, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 400, "segment_span": [20, 42], "characterOffsetBegin": 395, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 41, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 404, "segment_span": [20, 42], "characterOffsetBegin": 401, "originalText": "and", "ArgType": null, "before": " "}, {"index": 42, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 408, "segment_span": [20, 42], "characterOffsetBegin": 405, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 43, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 409, "characterOffsetBegin": 408, "originalText": ":", "ArgType": null, "before": ""}], "text": "To fully exploit syntactic and semantic information , we defined and studied six different sequences ( in a style similar to what proposed in ( Moschitti , 2008 ) ) , which include features from constituent and dependency parse trees and NEs :"}, {"tokens": [{"index": 1, "word": "1", "lemma": "1", "after": "", "pos": "LS", "characterOffsetEnd": 1, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "1", "ArgType": null, "before": ""}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2, "characterOffsetBegin": 1, "originalText": ".", "ArgType": null, "before": ""}], "text": "1 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 11, "segment_span": [0, 22], "characterOffsetBegin": 3, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 14, "segment_span": [0, 22], "characterOffsetBegin": 12, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "terminals", "lemma": "terminal", "after": " ", "pos": "NNS", "characterOffsetEnd": 24, "segment_span": [0, 22], "characterOffsetBegin": 15, "originalText": "terminals", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 26, "segment_span": [0, 22], "characterOffsetBegin": 25, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "lexical", "lemma": "lexical", "after": " ", "pos": "JJ", "characterOffsetEnd": 33, "segment_span": [0, 22], "characterOffsetBegin": 26, "originalText": "lexical", "ArgType": null, "before": ""}, {"index": 6, "word": "words", "lemma": "word", "after": "", "pos": "NNS", "characterOffsetEnd": 39, "segment_span": [0, 22], "characterOffsetBegin": 34, "originalText": "words", "ArgType": null, "before": " "}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 40, "segment_span": [0, 22], "characterOffsetBegin": 39, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 43, "segment_span": [0, 22], "characterOffsetBegin": 41, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 47, "segment_span": [0, 22], "characterOffsetBegin": 44, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 22], "characterOffsetBegin": 48, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 53, "segment_span": [0, 22], "characterOffsetBegin": 52, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "SK1", "lemma": "sk1", "after": "", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 22], "characterOffsetBegin": 53, "originalText": "SK1", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 57, "segment_span": [0, 22], "characterOffsetBegin": 56, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 58, "segment_span": [0, 22], "characterOffsetBegin": 57, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 63, "segment_span": [0, 22], "characterOffsetBegin": 59, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 16, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 64, "segment_span": [0, 22], "characterOffsetBegin": 63, "originalText": ":", "ArgType": null, "before": ""}, {"index": 17, "word": "T2-LOC", "lemma": "t2-loc", "after": " ", "pos": "NN", "characterOffsetEnd": 71, "segment_span": [0, 22], "characterOffsetBegin": 65, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 18, "word": "Washington", "lemma": "Washington", "after": "", "pos": "NNP", "characterOffsetEnd": 82, "segment_span": [0, 22], "characterOffsetBegin": 72, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 83, "segment_span": [0, 22], "characterOffsetBegin": 82, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "U.S.", "lemma": "U.S.", "after": " ", "pos": "NNP", "characterOffsetEnd": 88, "segment_span": [0, 22], "characterOffsetBegin": 84, "originalText": "U.S.", "ArgType": null, "before": " "}, {"index": 21, "word": "T1-PER", "lemma": "t1-per", "after": " ", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [0, 22], "characterOffsetBegin": 89, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 22, "word": "officials", "lemma": "official", "after": "", "pos": "NNS", "characterOffsetEnd": 105, "segment_span": [0, 22], "characterOffsetBegin": 96, "originalText": "officials", "ArgType": null, "before": " "}, {"index": 23, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 106, "characterOffsetBegin": 105, "originalText": ".", "ArgType": null, "before": ""}], "text": "Sequence of terminals ( lexical words ) in the PET ( SK1 ) , e.g. : T2-LOC Washington , U.S. T1-PER officials ."}, {"tokens": [{"index": 1, "word": "2", "lemma": "2", "after": "", "pos": "LS", "characterOffsetEnd": 108, "segment_span": [0, 1], "characterOffsetBegin": 107, "originalText": "2", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 109, "characterOffsetBegin": 108, "originalText": ".", "ArgType": null, "before": ""}], "text": "2 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 118, "segment_span": [0, 35], "characterOffsetBegin": 110, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 121, "segment_span": [0, 35], "characterOffsetBegin": 119, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "part-of-speech", "lemma": "part-of-speech", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 35], "characterOffsetBegin": 122, "originalText": "part-of-speech", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 138, "segment_span": [0, 35], "characterOffsetBegin": 137, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "POS", "lemma": "pos", "after": "", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [0, 35], "characterOffsetBegin": 138, "originalText": "POS", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 142, "segment_span": [0, 35], "characterOffsetBegin": 141, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "tags", "lemma": "tag", "after": " ", "pos": "NNS", "characterOffsetEnd": 147, "segment_span": [0, 35], "characterOffsetBegin": 143, "originalText": "tags", "ArgType": null, "before": " "}, {"index": 8, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 150, "segment_span": [0, 35], "characterOffsetBegin": 148, "originalText": "in", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 154, "segment_span": [0, 35], "characterOffsetBegin": 151, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 158, "segment_span": [0, 35], "characterOffsetBegin": 155, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 160, "segment_span": [0, 35], "characterOffsetBegin": 159, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "SK2", "lemma": "sk2", "after": "", "pos": "NN", "characterOffsetEnd": 163, "segment_span": [0, 35], "characterOffsetBegin": 160, "originalText": "SK2", "ArgType": null, "before": ""}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 164, "segment_span": [0, 35], "characterOffsetBegin": 163, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 165, "segment_span": [0, 35], "characterOffsetBegin": 164, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 170, "segment_span": [0, 35], "characterOffsetBegin": 166, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 174, "segment_span": [0, 35], "characterOffsetBegin": 171, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "SK1", "lemma": "sk1", "after": " ", "pos": "NN", "characterOffsetEnd": 178, "segment_span": [0, 35], "characterOffsetBegin": 175, "originalText": "SK1", "ArgType": null, "before": " "}, {"index": 18, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 181, "segment_span": [17, 26], "characterOffsetBegin": 179, "originalText": "in", "ArgType": null, "before": " "}, {"index": 19, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 187, "segment_span": [17, 26], "characterOffsetBegin": 182, "originalText": "which", "ArgType": null, "before": " "}, {"index": 20, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 193, "segment_span": [17, 26], "characterOffsetBegin": 188, "originalText": "words", "ArgType": null, "before": " "}, {"index": 21, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 197, "segment_span": [17, 26], "characterOffsetBegin": 194, "originalText": "are", "ArgType": null, "before": " "}, {"index": 22, "word": "replaced", "characterOffsetEnd": 206, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [17, 26], "tense": "N", "characterOffsetBegin": 198, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 23, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 209, "segment_span": [17, 26], "characterOffsetBegin": 207, "originalText": "by", "ArgType": null, "before": " "}, {"index": 24, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 215, "segment_span": [17, 26], "characterOffsetBegin": 210, "originalText": "their", "ArgType": null, "before": " "}, {"index": 25, "word": "POS", "lemma": "pos", "after": " ", "pos": "NN", "characterOffsetEnd": 219, "segment_span": [17, 26], "characterOffsetBegin": 216, "originalText": "POS", "ArgType": null, "before": " "}, {"index": 26, "word": "tags", "lemma": "tag", "after": "", "pos": "NNS", "characterOffsetEnd": 224, "segment_span": [17, 26], "characterOffsetBegin": 220, "originalText": "tags", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 225, "segment_span": [0, 35], "characterOffsetBegin": 224, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 230, "segment_span": [0, 35], "characterOffsetBegin": 226, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 29, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 231, "segment_span": [0, 35], "characterOffsetBegin": 230, "originalText": ":", "ArgType": null, "before": ""}, {"index": 30, "word": "T2-LOC", "lemma": "t2-loc", "after": " ", "pos": "NN", "characterOffsetEnd": 238, "segment_span": [0, 35], "characterOffsetBegin": 232, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 31, "word": "NN", "lemma": "NN", "after": " ", "pos": "NNP", "characterOffsetEnd": 241, "segment_span": [0, 35], "characterOffsetBegin": 239, "originalText": "NN", "ArgType": null, "before": " "}, {"index": 32, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 243, "segment_span": [0, 35], "characterOffsetBegin": 242, "originalText": ",", "ArgType": null, "before": " "}, {"index": 33, "word": "NNP", "lemma": "NNP", "after": " ", "pos": "NNP", "characterOffsetEnd": 247, "segment_span": [0, 35], "characterOffsetBegin": 244, "originalText": "NNP", "ArgType": null, "before": " "}, {"index": 34, "word": "T1-PER", "lemma": "t1-per", "after": " ", "pos": "NN", "characterOffsetEnd": 254, "segment_span": [0, 35], "characterOffsetBegin": 248, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 35, "word": "NNS", "lemma": "nns", "after": "", "pos": "NN", "characterOffsetEnd": 258, "segment_span": [0, 35], "characterOffsetBegin": 255, "originalText": "NNS", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 259, "characterOffsetBegin": 258, "originalText": ".", "ArgType": null, "before": ""}], "text": "Sequence of part-of-speech ( POS ) tags in the PET ( SK2 ) , i.e. the SK1 in which words are replaced by their POS tags , e.g. : T2-LOC NN , NNP T1-PER NNS ."}, {"tokens": [{"index": 1, "word": "3", "lemma": "3", "after": "", "pos": "LS", "characterOffsetEnd": 261, "segment_span": [0, 1], "characterOffsetBegin": 260, "originalText": "3", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 262, "characterOffsetBegin": 261, "originalText": ".", "ArgType": null, "before": ""}], "text": "3 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 271, "segment_span": [0, 6], "characterOffsetBegin": 263, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 274, "segment_span": [0, 6], "characterOffsetBegin": 272, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 286, "segment_span": [0, 6], "characterOffsetBegin": 275, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 4, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 296, "segment_span": [0, 6], "characterOffsetBegin": 287, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 299, "segment_span": [0, 6], "characterOffsetBegin": 297, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": "", "pos": "DT", "characterOffsetEnd": 303, "segment_span": [0, 6], "characterOffsetBegin": 300, "originalText": "the", "ArgType": null, "before": " "}], "text": "Sequence of grammatical relations in the"}, {"tokens": [{"index": 1, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 3, "segment_span": [0, 26], "characterOffsetBegin": 0, "originalText": "PET", "ArgType": null, "before": ""}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 5, "segment_span": [0, 26], "characterOffsetBegin": 4, "originalText": "(", "ArgType": null, "before": " "}, {"index": 3, "word": "SK3", "lemma": "sk3", "after": "", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 26], "characterOffsetBegin": 5, "originalText": "SK3", "ArgType": null, "before": ""}, {"index": 4, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 9, "segment_span": [0, 26], "characterOffsetBegin": 8, "originalText": ")", "ArgType": null, "before": ""}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 10, "segment_span": [0, 26], "characterOffsetBegin": 9, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 15, "segment_span": [0, 26], "characterOffsetBegin": 11, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 19, "segment_span": [0, 26], "characterOffsetBegin": 16, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "SK1", "lemma": "sk1", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 26], "characterOffsetBegin": 20, "originalText": "SK1", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 26, "segment_span": [8, 17], "characterOffsetBegin": 24, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 32, "segment_span": [8, 17], "characterOffsetBegin": 27, "originalText": "which", "ArgType": null, "before": " "}, {"index": 11, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 38, "segment_span": [8, 17], "characterOffsetBegin": 33, "originalText": "words", "ArgType": null, "before": " "}, {"index": 12, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 42, "segment_span": [8, 17], "characterOffsetBegin": 39, "originalText": "are", "ArgType": null, "before": " "}, {"index": 13, "word": "replaced", "characterOffsetEnd": 51, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [8, 17], "tense": "N", "characterOffsetBegin": 43, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 14, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [8, 17], "characterOffsetBegin": 52, "originalText": "by", "ArgType": null, "before": " "}, {"index": 15, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 60, "segment_span": [8, 17], "characterOffsetBegin": 55, "originalText": "their", "ArgType": null, "before": " "}, {"index": 16, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 72, "segment_span": [8, 17], "characterOffsetBegin": 61, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 17, "word": "functions", "lemma": "function", "after": "", "pos": "NNS", "characterOffsetEnd": 82, "segment_span": [8, 17], "characterOffsetBegin": 73, "originalText": "functions", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 83, "segment_span": [0, 26], "characterOffsetBegin": 82, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 88, "segment_span": [0, 26], "characterOffsetBegin": 84, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 20, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 89, "segment_span": [0, 26], "characterOffsetBegin": 88, "originalText": ":", "ArgType": null, "before": ""}, {"index": 21, "word": "T2-LOC", "lemma": "t2-loc", "after": " ", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [0, 26], "characterOffsetBegin": 90, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 22, "word": "pobj", "lemma": "pobj", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 26], "characterOffsetBegin": 97, "originalText": "pobj", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 103, "segment_span": [0, 26], "characterOffsetBegin": 102, "originalText": ",", "ArgType": null, "before": " "}, {"index": 24, "word": "nn", "lemma": "nn", "after": " ", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [0, 26], "characterOffsetBegin": 104, "originalText": "nn", "ArgType": null, "before": " "}, {"index": 25, "word": "T1-PER", "lemma": "t1-per", "after": " ", "pos": "NN", "characterOffsetEnd": 113, "segment_span": [0, 26], "characterOffsetBegin": 107, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 26, "word": "nsubj", "lemma": "nsubj", "after": "", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 26], "characterOffsetBegin": 114, "originalText": "nsubj", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 120, "characterOffsetBegin": 119, "originalText": ".", "ArgType": null, "before": ""}], "text": "PET ( SK3 ) , i.e. the SK1 in which words are replaced by their grammatical functions , e.g. : T2-LOC pobj , nn T1-PER nsubj ."}, {"tokens": [{"index": 1, "word": "4", "lemma": "4", "after": "", "pos": "LS", "characterOffsetEnd": 122, "segment_span": [0, 1], "characterOffsetBegin": 121, "originalText": "4", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 123, "characterOffsetBegin": 122, "originalText": ".", "ArgType": null, "before": ""}], "text": "4 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 132, "segment_span": [0, 20], "characterOffsetBegin": 124, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 135, "segment_span": [0, 20], "characterOffsetBegin": 133, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 141, "segment_span": [0, 20], "characterOffsetBegin": 136, "originalText": "words", "ArgType": null, "before": " "}, {"index": 4, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 144, "segment_span": [0, 20], "characterOffsetBegin": 142, "originalText": "in", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 148, "segment_span": [0, 20], "characterOffsetBegin": 145, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "DW", "lemma": "dw", "after": " ", "pos": "NN", "characterOffsetEnd": 151, "segment_span": [0, 20], "characterOffsetBegin": 149, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 153, "segment_span": [0, 20], "characterOffsetBegin": 152, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "SK4", "lemma": "sk4", "after": "", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [0, 20], "characterOffsetBegin": 153, "originalText": "SK4", "ArgType": null, "before": ""}, {"index": 9, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 157, "segment_span": [0, 20], "characterOffsetBegin": 156, "originalText": ")", "ArgType": null, "before": ""}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 158, "segment_span": [0, 20], "characterOffsetBegin": 157, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 163, "segment_span": [0, 20], "characterOffsetBegin": 159, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 164, "segment_span": [0, 20], "characterOffsetBegin": 163, "originalText": ":", "ArgType": null, "before": ""}, {"index": 13, "word": "Washington", "lemma": "Washington", "after": " ", "pos": "NNP", "characterOffsetEnd": 175, "segment_span": [0, 20], "characterOffsetBegin": 165, "originalText": "Washington", "ArgType": null, "before": " "}, {"index": 14, "word": "T2-LOC", "lemma": "T2-LOC", "after": " ", "pos": "NNP", "characterOffsetEnd": 182, "segment_span": [0, 20], "characterOffsetBegin": 176, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 15, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 185, "segment_span": [0, 20], "characterOffsetBegin": 183, "originalText": "In", "ArgType": null, "before": " "}, {"index": 16, "word": "working", "lemma": "work", "after": " ", "pos": "VBG", "characterOffsetEnd": 193, "segment_span": [0, 20], "characterOffsetBegin": 186, "originalText": "working", "ArgType": null, "before": " "}, {"index": 17, "word": "T1-PER", "lemma": "t1-per", "after": " ", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [0, 20], "characterOffsetBegin": 194, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 18, "word": "officials", "lemma": "official", "after": " ", "pos": "NNS", "characterOffsetEnd": 210, "segment_span": [0, 20], "characterOffsetBegin": 201, "originalText": "officials", "ArgType": null, "before": " "}, {"index": 19, "word": "GPE", "lemma": "GPE", "after": " ", "pos": "NNP", "characterOffsetEnd": 214, "segment_span": [0, 20], "characterOffsetBegin": 211, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 20, "word": "U.S.", "lemma": "U.S.", "after": "", "pos": "NNP", "characterOffsetEnd": 219, "segment_span": [0, 20], "characterOffsetBegin": 215, "originalText": "U.S.", "ArgType": "dobj", "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 220, "characterOffsetBegin": 219, "originalText": ".", "ArgType": null, "before": ""}], "text": "Sequence of words in the DW ( SK4 ) , e.g. : Washington T2-LOC In working T1-PER officials GPE U.S. ."}, {"tokens": [{"index": 1, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 222, "segment_span": [0, 1], "characterOffsetBegin": 221, "originalText": "5", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 223, "characterOffsetBegin": 222, "originalText": ".", "ArgType": null, "before": ""}], "text": "5 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 232, "segment_span": [0, 34], "characterOffsetBegin": 224, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [0, 34], "characterOffsetBegin": 233, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 247, "segment_span": [0, 34], "characterOffsetBegin": 236, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 4, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 257, "segment_span": [0, 34], "characterOffsetBegin": 248, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 260, "segment_span": [0, 34], "characterOffsetBegin": 258, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 264, "segment_span": [0, 34], "characterOffsetBegin": 261, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [0, 34], "characterOffsetBegin": 265, "originalText": "GR", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 269, "segment_span": [0, 34], "characterOffsetBegin": 268, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "SK5", "lemma": "sk5", "after": "", "pos": "NN", "characterOffsetEnd": 272, "segment_span": [0, 34], "characterOffsetBegin": 269, "originalText": "SK5", "ArgType": null, "before": ""}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 273, "segment_span": [0, 34], "characterOffsetBegin": 272, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 274, "segment_span": [0, 34], "characterOffsetBegin": 273, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 279, "segment_span": [0, 34], "characterOffsetBegin": 275, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 283, "segment_span": [0, 34], "characterOffsetBegin": 280, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "SK4", "lemma": "sk4", "after": " ", "pos": "NN", "characterOffsetEnd": 287, "segment_span": [0, 34], "characterOffsetBegin": 284, "originalText": "SK4", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 290, "segment_span": [14, 23], "characterOffsetBegin": 288, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 296, "segment_span": [14, 23], "characterOffsetBegin": 291, "originalText": "which", "ArgType": null, "before": " "}, {"index": 17, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 302, "segment_span": [14, 23], "characterOffsetBegin": 297, "originalText": "words", "ArgType": null, "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 306, "segment_span": [14, 23], "characterOffsetBegin": 303, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "replaced", "characterOffsetEnd": 315, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [14, 23], "tense": "N", "characterOffsetBegin": 307, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 20, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 318, "segment_span": [14, 23], "characterOffsetBegin": 316, "originalText": "by", "ArgType": null, "before": " "}, {"index": 21, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 324, "segment_span": [14, 23], "characterOffsetBegin": 319, "originalText": "their", "ArgType": null, "before": " "}, {"index": 22, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 336, "segment_span": [14, 23], "characterOffsetBegin": 325, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 23, "word": "functions", "lemma": "function", "after": "", "pos": "NNS", "characterOffsetEnd": 346, "segment_span": [14, 23], "characterOffsetBegin": 337, "originalText": "functions", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 347, "segment_span": [0, 34], "characterOffsetBegin": 346, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 352, "segment_span": [0, 34], "characterOffsetBegin": 348, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 26, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 353, "segment_span": [0, 34], "characterOffsetBegin": 352, "originalText": ":", "ArgType": null, "before": ""}, {"index": 27, "word": "pobj", "lemma": "pobj", "after": " ", "pos": "NN", "characterOffsetEnd": 358, "segment_span": [0, 34], "characterOffsetBegin": 354, "originalText": "pobj", "ArgType": null, "before": " "}, {"index": 28, "word": "T2-LOC", "lemma": "t2-loc", "after": " ", "pos": "NN", "characterOffsetEnd": 365, "segment_span": [0, 34], "characterOffsetBegin": 359, "originalText": "T2-LOC", "ArgType": null, "before": " "}, {"index": 29, "word": "prep", "lemma": "prep", "after": " ", "pos": "JJ", "characterOffsetEnd": 370, "segment_span": [0, 34], "characterOffsetBegin": 366, "originalText": "prep", "ArgType": null, "before": " "}, {"index": 30, "word": "ROOT", "lemma": "root", "after": " ", "pos": "NN", "characterOffsetEnd": 375, "segment_span": [0, 34], "characterOffsetBegin": 371, "originalText": "ROOT", "ArgType": null, "before": " "}, {"index": 31, "word": "T1-PER", "lemma": "t1-per", "after": " ", "pos": "NN", "characterOffsetEnd": 382, "segment_span": [0, 34], "characterOffsetBegin": 376, "originalText": "T1-PER", "ArgType": null, "before": " "}, {"index": 32, "word": "nsubj", "lemma": "nsubj", "after": " ", "pos": "NN", "characterOffsetEnd": 388, "segment_span": [0, 34], "characterOffsetBegin": 383, "originalText": "nsubj", "ArgType": null, "before": " "}, {"index": 33, "word": "GPE", "lemma": "GPE", "after": " ", "pos": "NNP", "characterOffsetEnd": 392, "segment_span": [0, 34], "characterOffsetBegin": 389, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 34, "word": "nn", "lemma": "nn", "after": "", "pos": "NN", "characterOffsetEnd": 395, "segment_span": [0, 34], "characterOffsetBegin": 393, "originalText": "nn", "ArgType": null, "before": " "}, {"index": 35, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 396, "characterOffsetBegin": 395, "originalText": ".", "ArgType": null, "before": ""}], "text": "Sequence of grammatical relations in the GR ( SK5 ) , i.e. the SK4 in which words are replaced by their grammatical functions , e.g. : pobj T2-LOC prep ROOT T1-PER nsubj GPE nn ."}, {"tokens": [{"index": 1, "word": "6", "lemma": "6", "after": "", "pos": "CD", "characterOffsetEnd": 398, "segment_span": [0, 1], "characterOffsetBegin": 397, "originalText": "6", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 399, "characterOffsetBegin": 398, "originalText": ".", "ArgType": null, "before": ""}], "text": "6 ."}, {"tokens": [{"index": 1, "word": "Sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 408, "segment_span": [0, 25], "characterOffsetBegin": 400, "originalText": "Sequence", "ArgType": null, "before": " "}, {"index": 2, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 411, "segment_span": [0, 25], "characterOffsetBegin": 409, "originalText": "of", "ArgType": null, "before": " "}, {"index": 3, "word": "POS", "lemma": "pos", "after": " ", "pos": "NN", "characterOffsetEnd": 415, "segment_span": [0, 25], "characterOffsetBegin": 412, "originalText": "POS", "ArgType": null, "before": " "}, {"index": 4, "word": "tags", "lemma": "tag", "after": " ", "pos": "NNS", "characterOffsetEnd": 420, "segment_span": [0, 25], "characterOffsetBegin": 416, "originalText": "tags", "ArgType": null, "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 423, "segment_span": [0, 25], "characterOffsetBegin": 421, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 427, "segment_span": [0, 25], "characterOffsetBegin": 424, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "DW", "lemma": "dw", "after": " ", "pos": "NN", "characterOffsetEnd": 430, "segment_span": [0, 25], "characterOffsetBegin": 428, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 8, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 432, "segment_span": [0, 25], "characterOffsetBegin": 431, "originalText": "(", "ArgType": null, "before": " "}, {"index": 9, "word": "SK6", "lemma": "sk6", "after": "", "pos": "NN", "characterOffsetEnd": 435, "segment_span": [0, 25], "characterOffsetBegin": 432, "originalText": "SK6", "ArgType": null, "before": ""}, {"index": 10, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 436, "segment_span": [0, 25], "characterOffsetBegin": 435, "originalText": ")", "ArgType": null, "before": ""}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 437, "segment_span": [0, 25], "characterOffsetBegin": 436, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 442, "segment_span": [0, 25], "characterOffsetBegin": 438, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 446, "segment_span": [0, 25], "characterOffsetBegin": 443, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "SK4", "lemma": "sk4", "after": " ", "pos": "NN", "characterOffsetEnd": 450, "segment_span": [0, 25], "characterOffsetBegin": 447, "originalText": "SK4", "ArgType": null, "before": " "}, {"index": 15, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 453, "segment_span": [14, 23], "characterOffsetBegin": 451, "originalText": "in", "ArgType": null, "before": " "}, {"index": 16, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 459, "segment_span": [14, 23], "characterOffsetBegin": 454, "originalText": "which", "ArgType": null, "before": " "}, {"index": 17, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 465, "segment_span": [14, 23], "characterOffsetBegin": 460, "originalText": "words", "ArgType": null, "before": " "}, {"index": 18, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 469, "segment_span": [14, 23], "characterOffsetBegin": 466, "originalText": "are", "ArgType": null, "before": " "}, {"index": 19, "word": "replaced", "characterOffsetEnd": 478, "after": " ", "pos": "VBN", "is_root": true, "lemma": "replace", "segment_span": [14, 23], "tense": "N", "characterOffsetBegin": 470, "before": " ", "originalText": "replaced", "ArgType": null, "is_pass": true}, {"index": 20, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 481, "segment_span": [14, 23], "characterOffsetBegin": 479, "originalText": "by", "ArgType": null, "before": " "}, {"index": 21, "word": "their", "lemma": "their", "after": " ", "pos": "PRP$", "characterOffsetEnd": 487, "segment_span": [14, 23], "characterOffsetBegin": 482, "originalText": "their", "ArgType": null, "before": " "}, {"index": 22, "word": "POS", "lemma": "pos", "after": " ", "pos": "NN", "characterOffsetEnd": 491, "segment_span": [14, 23], "characterOffsetBegin": 488, "originalText": "POS", "ArgType": null, "before": " "}, {"index": 23, "word": "tags", "lemma": "tag", "after": "", "pos": "NNS", "characterOffsetEnd": 496, "segment_span": [14, 23], "characterOffsetBegin": 492, "originalText": "tags", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 497, "segment_span": [0, 25], "characterOffsetBegin": 496, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "e.g.", "lemma": "e.g.", "after": "", "pos": "FW", "characterOffsetEnd": 502, "segment_span": [0, 25], "characterOffsetBegin": 498, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 26, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 503, "characterOffsetBegin": 502, "originalText": ":", "ArgType": null, "before": ""}], "text": "Sequence of POS tags in the DW ( SK6 ) , i.e. the SK4 in which words are replaced by their POS tags , e.g. :"}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 4], "characterOffsetBegin": 0, "originalText": "It", "ArgType": "subj", "before": ""}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 5, "segment_span": [0, 4], "characterOffsetBegin": 3, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "worth", "lemma": "worth", "after": " ", "pos": "JJ", "characterOffsetEnd": 11, "segment_span": [0, 4], "characterOffsetBegin": 6, "originalText": "worth", "ArgType": "verb", "before": " "}, {"index": 4, "word": "noting", "lemma": "note", "after": " ", "pos": "VBG", "characterOffsetEnd": 18, "segment_span": [0, 4], "characterOffsetBegin": 12, "originalText": "noting", "ArgType": null, "before": " "}, {"index": 5, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 23, "segment_span": [4, 21], "characterOffsetBegin": 19, "originalText": "that", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [4, 21], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 37, "segment_span": [4, 21], "characterOffsetBegin": 28, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 8, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 49, "segment_span": [4, 21], "characterOffsetBegin": 38, "originalText": "information", "ArgType": "subj", "before": " "}, {"index": 9, "word": "contained", "characterOffsetEnd": 59, "after": " ", "pos": "VBD", "is_root": true, "lemma": "contain", "segment_span": [4, 21], "tense": "D", "characterOffsetBegin": 50, "originalText": "contained", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 62, "segment_span": [4, 21], "characterOffsetBegin": 60, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 67, "segment_span": [4, 21], "characterOffsetBegin": 63, "originalText": "such", "ArgType": null, "before": " "}, {"index": 12, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 77, "segment_span": [4, 21], "characterOffsetBegin": 68, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 13, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 81, "segment_span": [4, 21], "characterOffsetBegin": 78, "originalText": "can", "ArgType": null, "before": " "}, {"index": 14, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 84, "segment_span": [4, 21], "characterOffsetBegin": 82, "originalText": "be", "ArgType": null, "before": " "}, {"index": 15, "word": "fully", "lemma": "fully", "after": " ", "pos": "RB", "characterOffsetEnd": 90, "segment_span": [4, 21], "characterOffsetBegin": 85, "originalText": "fully", "ArgType": null, "before": " "}, {"index": 16, "word": "exploited", "lemma": "exploit", "after": " ", "pos": "VBN", "characterOffsetEnd": 100, "segment_span": [4, 21], "characterOffsetBegin": 91, "originalText": "exploited", "ArgType": null, "before": " "}, {"index": 17, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [4, 21], "characterOffsetBegin": 101, "originalText": "by", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 107, "segment_span": [4, 21], "characterOffsetBegin": 104, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 112, "segment_span": [4, 21], "characterOffsetBegin": 108, "originalText": "word", "ArgType": null, "before": " "}, {"index": 20, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [4, 21], "characterOffsetBegin": 113, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 21, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [4, 21], "characterOffsetBegin": 122, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 129, "characterOffsetBegin": 128, "originalText": ".", "ArgType": null, "before": ""}], "text": "It is worth noting that the potential information contained in such sequences can be fully exploited by the word sequence kernel ."}], "title": "4.2 Sequential Structures"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "Given", "characterOffsetEnd": 5, "after": " ", "pos": "VBN", "is_root": true, "lemma": "give", "segment_span": [0, 1], "tense": "N", "characterOffsetBegin": 0, "originalText": "Given", "ArgType": null, "before": ""}, {"index": 2, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 10, "segment_span": [1, 18], "characterOffsetBegin": 6, "originalText": "that", "ArgType": null, "before": " "}, {"index": 3, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 20, "segment_span": [1, 18], "characterOffsetBegin": 11, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 4, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [1, 18], "characterOffsetBegin": 21, "originalText": "information", "ArgType": "subj", "before": " "}, {"index": 5, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 37, "segment_span": [1, 18], "characterOffsetBegin": 33, "originalText": "from", "ArgType": null, "before": " "}, {"index": 6, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 47, "segment_span": [1, 18], "characterOffsetBegin": 38, "originalText": "different", "ArgType": null, "before": " "}, {"index": 7, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [1, 18], "characterOffsetBegin": 48, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 8, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [1, 18], "characterOffsetBegin": 54, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 9, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 63, "segment_span": [1, 18], "characterOffsetBegin": 60, "originalText": "may", "ArgType": null, "before": " "}, {"index": 10, "word": "have", "characterOffsetEnd": 68, "after": " ", "pos": "VB", "is_root": true, "lemma": "have", "segment_span": [1, 18], "tense": "B", "characterOffsetBegin": 64, "originalText": "have", "has_aux": true, "ArgType": null, "before": " "}, {"index": 11, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [1, 18], "characterOffsetBegin": 69, "originalText": "different", "ArgType": null, "before": " "}, {"index": 12, "word": "impact", "lemma": "impact", "after": " ", "pos": "NN", "characterOffsetEnd": 85, "segment_span": [1, 18], "characterOffsetBegin": 79, "originalText": "impact", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 88, "segment_span": [1, 18], "characterOffsetBegin": 86, "originalText": "on", "ArgType": null, "before": " "}, {"index": 14, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [1, 18], "characterOffsetBegin": 89, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 15, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 108, "segment_span": [1, 18], "characterOffsetBegin": 98, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 110, "segment_span": [1, 18], "characterOffsetBegin": 109, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 112, "segment_span": [1, 18], "characterOffsetBegin": 110, "originalText": "RE", "ArgType": null, "before": ""}, {"index": 18, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 113, "segment_span": [1, 18], "characterOffsetBegin": 112, "originalText": ")", "ArgType": null, "before": ""}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 114, "segment_span": [18, 47], "characterOffsetBegin": 113, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 118, "segment_span": [18, 47], "characterOffsetBegin": 115, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "viable", "lemma": "viable", "after": " ", "pos": "JJ", "characterOffsetEnd": 125, "segment_span": [18, 47], "characterOffsetBegin": 119, "originalText": "viable", "ArgType": null, "before": " "}, {"index": 22, "word": "approach", "lemma": "approach", "after": " ", "pos": "NN", "characterOffsetEnd": 134, "segment_span": [18, 47], "characterOffsetBegin": 126, "originalText": "approach", "ArgType": "subj", "before": " "}, {"index": 23, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 137, "segment_span": [18, 47], "characterOffsetBegin": 135, "originalText": "to", "ArgType": null, "before": " "}, {"index": 24, "word": "study", "lemma": "study", "after": " ", "pos": "VB", "characterOffsetEnd": 143, "segment_span": [18, 47], "characterOffsetBegin": 138, "originalText": "study", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 147, "segment_span": [18, 47], "characterOffsetBegin": 144, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "role", "lemma": "role", "after": " ", "pos": "NN", "characterOffsetEnd": 152, "segment_span": [18, 47], "characterOffsetBegin": 148, "originalText": "role", "ArgType": "dobj", "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 155, "segment_span": [18, 47], "characterOffsetBegin": 153, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 166, "segment_span": [18, 47], "characterOffsetBegin": 156, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 29, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 170, "segment_span": [18, 47], "characterOffsetBegin": 167, "originalText": "and", "ArgType": null, "before": " "}, {"index": 30, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 182, "segment_span": [18, 47], "characterOffsetBegin": 171, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 31, "word": "parsing", "lemma": "parsing", "after": " ", "pos": "NN", "characterOffsetEnd": 190, "segment_span": [18, 47], "characterOffsetBegin": 183, "originalText": "parsing", "ArgType": null, "before": " "}, {"index": 32, "word": "is", "characterOffsetEnd": 193, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "be", "segment_span": [18, 47], "tense": "Z", "characterOffsetBegin": 191, "originalText": "is", "ArgType": "verb", "before": " "}, {"index": 33, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 196, "segment_span": [18, 47], "characterOffsetBegin": 194, "originalText": "to", "ArgType": null, "before": " "}, {"index": 34, "word": "experiment", "lemma": "experiment", "after": " ", "pos": "NN", "characterOffsetEnd": 207, "segment_span": [18, 47], "characterOffsetBegin": 197, "originalText": "experiment", "ArgType": null, "before": " "}, {"index": 35, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 212, "segment_span": [18, 47], "characterOffsetBegin": 208, "originalText": "with", "ArgType": null, "before": " "}, {"index": 36, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 222, "segment_span": [18, 47], "characterOffsetBegin": 213, "originalText": "different", "ArgType": null, "before": " "}, {"index": 37, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 232, "segment_span": [18, 47], "characterOffsetBegin": 223, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 38, "word": "models", "lemma": "model", "after": " ", "pos": "NNS", "characterOffsetEnd": 239, "segment_span": [18, 47], "characterOffsetBegin": 233, "originalText": "models", "ArgType": null, "before": " "}, {"index": 39, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 243, "segment_span": [18, 47], "characterOffsetBegin": 240, "originalText": "and", "ArgType": null, "before": " "}, {"index": 40, "word": "measuring", "lemma": "measure", "after": " ", "pos": "VBG", "characterOffsetEnd": 253, "segment_span": [18, 47], "characterOffsetBegin": 244, "originalText": "measuring", "ArgType": null, "before": " "}, {"index": 41, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 257, "segment_span": [18, 47], "characterOffsetBegin": 254, "originalText": "the", "ArgType": null, "before": " "}, {"index": 42, "word": "impact", "lemma": "impact", "after": " ", "pos": "NN", "characterOffsetEnd": 264, "segment_span": [18, 47], "characterOffsetBegin": 258, "originalText": "impact", "ArgType": "dobj", "before": " "}, {"index": 43, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 267, "segment_span": [18, 47], "characterOffsetBegin": 265, "originalText": "in", "ArgType": null, "before": " "}, {"index": 44, "word": "terms", "lemma": "term", "after": " ", "pos": "NNS", "characterOffsetEnd": 273, "segment_span": [18, 47], "characterOffsetBegin": 268, "originalText": "terms", "ArgType": null, "before": " "}, {"index": 45, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 276, "segment_span": [18, 47], "characterOffsetBegin": 274, "originalText": "of", "ArgType": null, "before": " "}, {"index": 46, "word": "RE", "lemma": "re", "after": " ", "pos": "JJ", "characterOffsetEnd": 279, "segment_span": [18, 47], "characterOffsetBegin": 277, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 47, "word": "accuracy", "lemma": "accuracy", "after": "", "pos": "NN", "characterOffsetEnd": 288, "segment_span": [18, 47], "characterOffsetBegin": 280, "originalText": "accuracy", "ArgType": null, "before": " "}, {"index": 48, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 289, "characterOffsetBegin": 288, "originalText": ".", "ArgType": null, "before": ""}], "text": "Given that syntactic information from different parse trees may have different impact on relation extraction ( RE ) , the viable approach to study the role of dependency and constituent parsing is to experiment with different syntactic models and measuring the impact in terms of RE accuracy ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 293, "segment_span": [0, 39], "characterOffsetBegin": 290, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 298, "segment_span": [0, 39], "characterOffsetBegin": 294, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "purpose", "lemma": "purpose", "after": " ", "pos": "NN", "characterOffsetEnd": 306, "segment_span": [0, 39], "characterOffsetBegin": 299, "originalText": "purpose", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 309, "segment_span": [0, 39], "characterOffsetBegin": 307, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "compared", "characterOffsetEnd": 318, "after": " ", "pos": "VBD", "is_root": true, "lemma": "compare", "segment_span": [0, 39], "tense": "D", "characterOffsetBegin": 310, "originalText": "compared", "ArgType": "verb", "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 322, "segment_span": [0, 39], "characterOffsetBegin": 319, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 332, "segment_span": [0, 39], "characterOffsetBegin": 323, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 8, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 339, "segment_span": [0, 39], "characterOffsetBegin": 333, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 349, "segment_span": [0, 39], "characterOffsetBegin": 340, "originalText": "described", "ArgType": null, "before": " "}, {"index": 10, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 352, "segment_span": [0, 39], "characterOffsetBegin": 350, "originalText": "in", "ArgType": null, "before": " "}, {"index": 11, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 354, "segment_span": [0, 39], "characterOffsetBegin": 353, "originalText": "(", "ArgType": null, "before": " "}, {"index": 12, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 359, "segment_span": [0, 39], "characterOffsetBegin": 354, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 13, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 362, "segment_span": [0, 39], "characterOffsetBegin": 360, "originalText": "et", "ArgType": null, "before": " "}, {"index": 14, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 366, "segment_span": [0, 39], "characterOffsetBegin": 363, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 367, "segment_span": [0, 39], "characterOffsetBegin": 366, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 372, "segment_span": [0, 39], "characterOffsetBegin": 368, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 373, "segment_span": [0, 39], "characterOffsetBegin": 372, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 378, "segment_span": [0, 39], "characterOffsetBegin": 374, "originalText": "with", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 382, "segment_span": [0, 39], "characterOffsetBegin": 379, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 390, "segment_span": [0, 39], "characterOffsetBegin": 383, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 21, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 395, "segment_span": [0, 39], "characterOffsetBegin": 391, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 22, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 403, "segment_span": [0, 39], "characterOffsetBegin": 396, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 23, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBD", "characterOffsetEnd": 411, "segment_span": [0, 39], "characterOffsetBegin": 404, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 24, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 414, "segment_span": [0, 39], "characterOffsetBegin": 412, "originalText": "to", "ArgType": null, "before": " "}, {"index": 25, "word": "DW", "lemma": "DW", "after": "", "pos": "NNP", "characterOffsetEnd": 417, "segment_span": [0, 39], "characterOffsetBegin": 415, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 26, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 418, "segment_span": [0, 39], "characterOffsetBegin": 417, "originalText": ",", "ArgType": null, "before": ""}, {"index": 27, "word": "GR", "lemma": "gr", "after": "", "pos": "NN", "characterOffsetEnd": 421, "segment_span": [0, 39], "characterOffsetBegin": 419, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 422, "segment_span": [0, 39], "characterOffsetBegin": 421, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 426, "segment_span": [0, 39], "characterOffsetBegin": 423, "originalText": "and", "ArgType": null, "before": " "}, {"index": 30, "word": "GRW", "lemma": "GRW", "after": " ", "pos": "NNP", "characterOffsetEnd": 430, "segment_span": [0, 39], "characterOffsetBegin": 427, "originalText": "GRW", "ArgType": null, "before": " "}, {"index": 31, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 434, "segment_span": [0, 39], "characterOffsetBegin": 431, "originalText": "and", "ArgType": null, "before": " "}, {"index": 32, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 443, "segment_span": [0, 39], "characterOffsetBegin": 435, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 33, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 451, "segment_span": [0, 39], "characterOffsetBegin": 444, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 34, "word": "based", "lemma": "base", "after": " ", "pos": "VBN", "characterOffsetEnd": 457, "segment_span": [0, 39], "characterOffsetBegin": 452, "originalText": "based", "ArgType": null, "before": " "}, {"index": 35, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 460, "segment_span": [0, 39], "characterOffsetBegin": 458, "originalText": "on", "ArgType": null, "before": " "}, {"index": 36, "word": "six", "lemma": "six", "after": " ", "pos": "CD", "characterOffsetEnd": 464, "segment_span": [0, 39], "characterOffsetBegin": 461, "originalText": "six", "ArgType": null, "before": " "}, {"index": 37, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 474, "segment_span": [0, 39], "characterOffsetBegin": 465, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 38, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 484, "segment_span": [0, 39], "characterOffsetBegin": 475, "originalText": "described", "ArgType": null, "before": " "}, {"index": 39, "word": "above", "lemma": "above", "after": "", "pos": "IN", "characterOffsetEnd": 490, "segment_span": [0, 39], "characterOffsetBegin": 485, "originalText": "above", "ArgType": null, "before": " "}, {"index": 40, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 491, "characterOffsetBegin": 490, "originalText": ".", "ArgType": null, "before": ""}], "text": "For this purpose we compared the composite kernel described in ( Zhang et al. , 2006 ) with the partial tree kernels applied to DW , GR , and GRW and sequence kernels based on six sequences described above ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 495, "segment_span": [0, 4], "characterOffsetBegin": 492, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 505, "segment_span": [0, 4], "characterOffsetBegin": 496, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 3, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 513, "segment_span": [0, 4], "characterOffsetBegin": 506, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 4, "word": "include", "characterOffsetEnd": 521, "after": " ", "pos": "VBP", "is_root": true, "lemma": "include", "segment_span": [0, 4], "tense": "P", "characterOffsetBegin": 514, "originalText": "include", "ArgType": "verb", "before": " "}, {"index": 5, "word": "polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 532, "segment_span": [4, 11], "characterOffsetBegin": 522, "originalText": "polynomial", "ArgType": null, "before": " "}, {"index": 6, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 539, "segment_span": [4, 11], "characterOffsetBegin": 533, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 7, "word": "applied", "characterOffsetEnd": 547, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [4, 11], "tense": "D", "characterOffsetBegin": 540, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 8, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 550, "segment_span": [4, 11], "characterOffsetBegin": 548, "originalText": "to", "ArgType": null, "before": " "}, {"index": 9, "word": "entity-related", "lemma": "entity-related", "after": " ", "pos": "JJ", "characterOffsetEnd": 565, "segment_span": [4, 11], "characterOffsetBegin": 551, "originalText": "entity-related", "ArgType": null, "before": " "}, {"index": 10, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 573, "segment_span": [4, 11], "characterOffsetBegin": 566, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 11, "word": "vector", "lemma": "vector", "after": "", "pos": "NN", "characterOffsetEnd": 580, "segment_span": [4, 11], "characterOffsetBegin": 574, "originalText": "vector", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 581, "characterOffsetBegin": 580, "originalText": ".", "ArgType": null, "before": ""}], "text": "The composite kernels include polynomial kernel applied to entity-related feature vector ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 585, "segment_span": [0, 13], "characterOffsetBegin": 582, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 590, "segment_span": [0, 13], "characterOffsetBegin": 586, "originalText": "word", "ArgType": null, "before": " "}, {"index": 3, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 599, "segment_span": [0, 13], "characterOffsetBegin": 591, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 4, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 606, "segment_span": [0, 13], "characterOffsetBegin": 600, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 5, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 608, "segment_span": [0, 13], "characterOffsetBegin": 607, "originalText": "(", "ArgType": null, "before": " "}, {"index": 6, "word": "WSK", "lemma": "wsk", "after": "", "pos": "NN", "characterOffsetEnd": 611, "segment_span": [0, 13], "characterOffsetBegin": 608, "originalText": "WSK", "ArgType": null, "before": ""}, {"index": 7, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 612, "segment_span": [0, 13], "characterOffsetBegin": 611, "originalText": ")", "ArgType": null, "before": ""}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 615, "segment_span": [0, 13], "characterOffsetBegin": 613, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "always", "lemma": "always", "after": " ", "pos": "RB", "characterOffsetEnd": 622, "segment_span": [0, 13], "characterOffsetBegin": 616, "originalText": "always", "ArgType": null, "before": " "}, {"index": 10, "word": "applied", "characterOffsetEnd": 630, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 623, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 11, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 633, "segment_span": [0, 13], "characterOffsetBegin": 631, "originalText": "to", "ArgType": null, "before": " "}, {"index": 12, "word": "sequential", "lemma": "sequential", "after": " ", "pos": "JJ", "characterOffsetEnd": 644, "segment_span": [0, 13], "characterOffsetBegin": 634, "originalText": "sequential", "ArgType": null, "before": " "}, {"index": 13, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 655, "segment_span": [0, 13], "characterOffsetBegin": 645, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 656, "characterOffsetBegin": 655, "originalText": ".", "ArgType": null, "before": ""}], "text": "The word sequence kernel ( WSK ) is always applied to sequential structures ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 660, "segment_span": [0, 9], "characterOffsetBegin": 657, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 665, "segment_span": [0, 9], "characterOffsetBegin": 661, "originalText": "used", "ArgType": null, "before": " "}, {"index": 3, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 673, "segment_span": [0, 9], "characterOffsetBegin": 666, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 4, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 677, "segment_span": [0, 9], "characterOffsetBegin": 674, "originalText": "are", "ArgType": null, "before": " "}, {"index": 5, "word": "described", "characterOffsetEnd": 687, "after": " ", "pos": "VBN", "is_root": true, "lemma": "describe", "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 678, "before": " ", "originalText": "described", "ArgType": null, "is_pass": true}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 690, "segment_span": [0, 9], "characterOffsetBegin": 688, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 695, "segment_span": [0, 9], "characterOffsetBegin": 691, "originalText": "more", "ArgType": null, "before": " "}, {"index": 8, "word": "detail", "lemma": "detail", "after": " ", "pos": "NN", "characterOffsetEnd": 702, "segment_span": [0, 9], "characterOffsetBegin": 696, "originalText": "detail", "ArgType": null, "before": " "}, {"index": 9, "word": "below", "lemma": "below", "after": "", "pos": "IN", "characterOffsetEnd": 708, "segment_span": [0, 9], "characterOffsetBegin": 703, "originalText": "below", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 709, "characterOffsetBegin": 708, "originalText": ".", "ArgType": null, "before": ""}], "text": "The used kernels are described in more detail below ."}], "title": "4.3 Combining Kernels"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 3, "segment_span": [0, 14], "characterOffsetBegin": 0, "originalText": "The", "ArgType": null, "before": ""}, {"index": 2, "word": "basic", "lemma": "basic", "after": " ", "pos": "JJ", "characterOffsetEnd": 9, "segment_span": [0, 14], "characterOffsetBegin": 4, "originalText": "basic", "ArgType": null, "before": " "}, {"index": 3, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 16, "segment_span": [0, 14], "characterOffsetBegin": 10, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 4, "word": "between", "lemma": "between", "after": " ", "pos": "IN", "characterOffsetEnd": 24, "segment_span": [0, 14], "characterOffsetBegin": 17, "originalText": "between", "ArgType": null, "before": " "}, {"index": 5, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 28, "segment_span": [0, 14], "characterOffsetBegin": 25, "originalText": "two", "ArgType": null, "before": " "}, {"index": 6, "word": "named", "lemma": "name", "after": " ", "pos": "VBN", "characterOffsetEnd": 34, "segment_span": [0, 14], "characterOffsetBegin": 29, "originalText": "named", "ArgType": null, "before": " "}, {"index": 7, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 43, "segment_span": [0, 14], "characterOffsetBegin": 35, "originalText": "entities", "ArgType": null, "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 46, "segment_span": [0, 14], "characterOffsetBegin": 44, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 50, "segment_span": [0, 14], "characterOffsetBegin": 47, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [0, 14], "characterOffsetBegin": 51, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 11, "word": "documents", "lemma": "document", "after": " ", "pos": "NNS", "characterOffsetEnd": 64, "segment_span": [0, 14], "characterOffsetBegin": 55, "originalText": "documents", "ArgType": null, "before": " "}, {"index": 12, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 67, "segment_span": [0, 14], "characterOffsetBegin": 65, "originalText": "is", "ArgType": null, "before": " "}, {"index": 13, "word": "defined", "characterOffsetEnd": 75, "after": " ", "pos": "VBN", "is_root": true, "lemma": "define", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 68, "before": " ", "originalText": "defined", "ArgType": null, "is_pass": true}, {"index": 14, "word": "as", "lemma": "as", "after": "", "pos": "IN", "characterOffsetEnd": 78, "segment_span": [0, 14], "characterOffsetBegin": 76, "originalText": "as", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 79, "characterOffsetBegin": 78, "originalText": ":", "ArgType": null, "before": ""}], "text": "The basic kernel between two named entities of the ACE documents is defined as :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "R1", "lemma": "r1", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 8], "characterOffsetBegin": 6, "originalText": "R1", "ArgType": "subj", "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 12, "segment_span": [0, 8], "characterOffsetBegin": 9, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "R2", "lemma": "r2", "after": " ", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 8], "characterOffsetBegin": 13, "originalText": "R2", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 19, "segment_span": [0, 8], "characterOffsetBegin": 16, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 23, "segment_span": [0, 8], "characterOffsetBegin": 20, "originalText": "two", "ArgType": null, "before": " "}, {"index": 7, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 24, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 8, "word": "instances", "lemma": "instance", "after": "", "pos": "NNS", "characterOffsetEnd": 42, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": "instances", "ArgType": null, "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 43, "segment_span": [8, 18], "characterOffsetBegin": 42, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "Ei", "lemma": "ei", "after": " ", "pos": "NN", "characterOffsetEnd": 46, "segment_span": [8, 18], "characterOffsetBegin": 44, "originalText": "Ei", "ArgType": "subj", "before": " "}, {"index": 11, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 49, "segment_span": [8, 18], "characterOffsetBegin": 47, "originalText": "is", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 53, "segment_span": [8, 18], "characterOffsetBegin": 50, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "ith", "lemma": "ith", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [8, 18], "characterOffsetBegin": 54, "originalText": "ith", "ArgType": null, "before": " "}, {"index": 14, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 64, "segment_span": [8, 18], "characterOffsetBegin": 58, "originalText": "entity", "ArgType": "verb", "before": " "}, {"index": 15, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 67, "segment_span": [8, 18], "characterOffsetBegin": 65, "originalText": "of", "ArgType": null, "before": " "}, {"index": 16, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 69, "segment_span": [8, 18], "characterOffsetBegin": 68, "originalText": "a", "ArgType": null, "before": " "}, {"index": 17, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 78, "segment_span": [8, 18], "characterOffsetBegin": 70, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 18, "word": "instance", "lemma": "instance", "after": "", "pos": "NN", "characterOffsetEnd": 87, "segment_span": [8, 18], "characterOffsetBegin": 79, "originalText": "instance", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 88, "characterOffsetBegin": 87, "originalText": ".", "ArgType": null, "before": ""}], "text": "where R1 and R2 are two relation instances , Ei is the ith entity of a relation instance ."}, {"tokens": [{"index": 1, "word": "KE", "lemma": "ke", "after": "", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 14], "characterOffsetBegin": 89, "originalText": "KE", "ArgType": "subj", "before": " "}, {"index": 2, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 92, "segment_span": [0, 14], "characterOffsetBegin": 91, "originalText": "(", "ArgType": null, "before": ""}, {"index": 3, "word": "\u00c2\u00b7", "lemma": "\u00c2\u00b7", "after": "", "pos": "NN", "characterOffsetEnd": 93, "segment_span": [0, 14], "characterOffsetBegin": 92, "originalText": "\u00c2\u00b7", "ArgType": null, "before": ""}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 94, "segment_span": [0, 14], "characterOffsetBegin": 93, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "\u00c2\u00b7", "lemma": "\u00c2\u00b7", "after": "", "pos": "NN", "characterOffsetEnd": 96, "segment_span": [0, 14], "characterOffsetBegin": 95, "originalText": "\u00c2\u00b7", "ArgType": null, "before": " "}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 97, "segment_span": [0, 14], "characterOffsetBegin": 96, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 100, "segment_span": [0, 14], "characterOffsetBegin": 98, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 102, "segment_span": [0, 14], "characterOffsetBegin": 101, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 109, "segment_span": [0, 14], "characterOffsetBegin": 103, "originalText": "kernel", "ArgType": "verb", "before": " "}, {"index": 10, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 114, "segment_span": [0, 14], "characterOffsetBegin": 110, "originalText": "over", "ArgType": null, "before": " "}, {"index": 11, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 121, "segment_span": [0, 14], "characterOffsetBegin": 115, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 12, "word": "features", "lemma": "feature", "after": "", "pos": "NNS", "characterOffsetEnd": 130, "segment_span": [0, 14], "characterOffsetBegin": 122, "originalText": "features", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 131, "segment_span": [0, 14], "characterOffsetBegin": 130, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "i.e.", "lemma": "i.e.", "after": "", "pos": "FW", "characterOffsetEnd": 136, "segment_span": [0, 14], "characterOffsetBegin": 132, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": "\u0000\u0000", "pos": ":", "characterOffsetEnd": 137, "characterOffsetBegin": 136, "originalText": ":", "ArgType": null, "before": ""}], "text": "KE ( \u00c2\u00b7 , \u00c2\u00b7 ) is a kernel over entity features , i.e. :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 13], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "x1", "lemma": "x1", "after": " ", "pos": "NN", "characterOffsetEnd": 8, "segment_span": [0, 13], "characterOffsetBegin": 6, "originalText": "x1", "ArgType": "subj", "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 12, "segment_span": [0, 13], "characterOffsetBegin": 9, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "92", "lemma": "92", "after": " ", "pos": "CD", "characterOffsetEnd": 15, "segment_span": [0, 13], "characterOffsetBegin": 13, "originalText": "92", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 19, "segment_span": [0, 13], "characterOffsetBegin": 16, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 23, "segment_span": [0, 13], "characterOffsetBegin": 20, "originalText": "two", "ArgType": null, "before": " "}, {"index": 7, "word": "feature", "lemma": "feature", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 13], "characterOffsetBegin": 24, "originalText": "feature", "ArgType": null, "before": " "}, {"index": 8, "word": "vectors", "lemma": "vector", "after": " ", "pos": "NNS", "characterOffsetEnd": 39, "segment_span": [0, 13], "characterOffsetBegin": 32, "originalText": "vectors", "ArgType": "verb", "before": " "}, {"index": 9, "word": "extracted", "lemma": "extract", "after": " ", "pos": "VBN", "characterOffsetEnd": 49, "segment_span": [0, 13], "characterOffsetBegin": 40, "originalText": "extracted", "ArgType": null, "before": " "}, {"index": 10, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 54, "segment_span": [0, 13], "characterOffsetBegin": 50, "originalText": "from", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 58, "segment_span": [0, 13], "characterOffsetBegin": 55, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 62, "segment_span": [0, 13], "characterOffsetBegin": 59, "originalText": "two", "ArgType": null, "before": " "}, {"index": 13, "word": "NEs", "lemma": "ne", "after": "", "pos": "NNS", "characterOffsetEnd": 66, "segment_span": [0, 13], "characterOffsetBegin": 63, "originalText": "NEs", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ".", "ArgType": null, "before": ""}], "text": "where x1 and 92 are two feature vectors extracted from the two NEs ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [0, 26], "characterOffsetBegin": 68, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [0, 26], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 26], "characterOffsetBegin": 76, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 4, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 84, "segment_span": [0, 26], "characterOffsetBegin": 80, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 85, "segment_span": [0, 26], "characterOffsetBegin": 84, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 89, "segment_span": [0, 26], "characterOffsetBegin": 86, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 98, "segment_span": [0, 26], "characterOffsetBegin": 90, "originalText": "features", "ArgType": "subj", "before": " "}, {"index": 8, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 103, "segment_span": [0, 26], "characterOffsetBegin": 99, "originalText": "used", "ArgType": null, "before": " "}, {"index": 9, "word": "include", "characterOffsetEnd": 111, "after": "", "pos": "VBP", "is_root": true, "lemma": "include", "segment_span": [0, 26], "tense": "P", "characterOffsetBegin": 104, "originalText": "include", "ArgType": "verb", "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 112, "segment_span": [0, 26], "characterOffsetBegin": 111, "originalText": ":", "ArgType": null, "before": ""}, {"index": 11, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 119, "segment_span": [0, 26], "characterOffsetBegin": 113, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 12, "word": "headword", "lemma": "headword", "after": "", "pos": "NN", "characterOffsetEnd": 128, "segment_span": [0, 26], "characterOffsetBegin": 120, "originalText": "headword", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 129, "segment_span": [0, 26], "characterOffsetBegin": 128, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 136, "segment_span": [0, 26], "characterOffsetBegin": 130, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 15, "word": "type", "lemma": "type", "after": "", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [0, 26], "characterOffsetBegin": 137, "originalText": "type", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 142, "segment_span": [0, 26], "characterOffsetBegin": 141, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [0, 26], "characterOffsetBegin": 143, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 18, "word": "subtype", "lemma": "subtype", "after": "", "pos": "NN", "characterOffsetEnd": 157, "segment_span": [0, 26], "characterOffsetBegin": 150, "originalText": "subtype", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 158, "segment_span": [0, 26], "characterOffsetBegin": 157, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "mention", "lemma": "mention", "after": " ", "pos": "VB", "characterOffsetEnd": 166, "segment_span": [0, 26], "characterOffsetBegin": 159, "originalText": "mention", "ArgType": null, "before": " "}, {"index": 21, "word": "type", "lemma": "type", "after": "", "pos": "NN", "characterOffsetEnd": 171, "segment_span": [0, 26], "characterOffsetBegin": 167, "originalText": "type", "ArgType": null, "before": " "}, {"index": 22, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 172, "segment_span": [0, 26], "characterOffsetBegin": 171, "originalText": ",", "ArgType": null, "before": ""}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 176, "segment_span": [0, 26], "characterOffsetBegin": 173, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "LDC2", "lemma": "ldc2", "after": " ", "pos": "NN", "characterOffsetEnd": 181, "segment_span": [0, 26], "characterOffsetBegin": 177, "originalText": "LDC2", "ArgType": null, "before": " "}, {"index": 25, "word": "mention", "lemma": "mention", "after": " ", "pos": "NN", "characterOffsetEnd": 189, "segment_span": [0, 26], "characterOffsetBegin": 182, "originalText": "mention", "ArgType": null, "before": " "}, {"index": 26, "word": "type", "lemma": "type", "after": "", "pos": "NN", "characterOffsetEnd": 194, "segment_span": [0, 26], "characterOffsetBegin": 190, "originalText": "type", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 195, "characterOffsetBegin": 194, "originalText": ".", "ArgType": null, "before": ""}], "text": "For the ACE 2004 , the features used include : entity headword , entity type , entity subtype , mention type , and LDC2 mention type ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 199, "segment_span": [0, 11], "characterOffsetBegin": 196, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "last", "lemma": "last", "after": " ", "pos": "JJ", "characterOffsetEnd": 204, "segment_span": [0, 11], "characterOffsetBegin": 200, "originalText": "last", "ArgType": null, "before": " "}, {"index": 3, "word": "four", "lemma": "four", "after": " ", "pos": "CD", "characterOffsetEnd": 209, "segment_span": [0, 11], "characterOffsetBegin": 205, "originalText": "four", "ArgType": null, "before": " "}, {"index": 4, "word": "attributes", "lemma": "attribute", "after": " ", "pos": "NNS", "characterOffsetEnd": 220, "segment_span": [0, 11], "characterOffsetBegin": 210, "originalText": "attributes", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 224, "segment_span": [0, 11], "characterOffsetBegin": 221, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "taken", "characterOffsetEnd": 230, "after": " ", "pos": "VBN", "is_root": true, "lemma": "take", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 225, "before": " ", "originalText": "taken", "ArgType": null, "is_pass": true}, {"index": 7, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 235, "segment_span": [0, 11], "characterOffsetBegin": 231, "originalText": "from", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 239, "segment_span": [0, 11], "characterOffsetBegin": 236, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 243, "segment_span": [0, 11], "characterOffsetBegin": 240, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 10, "word": "corpus", "lemma": "corpus", "after": " ", "pos": "NN", "characterOffsetEnd": 250, "segment_span": [0, 11], "characterOffsetBegin": 244, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 11, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 255, "segment_span": [0, 11], "characterOffsetBegin": 251, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 256, "characterOffsetBegin": 255, "originalText": ".", "ArgType": null, "before": ""}], "text": "The last four attributes are taken from the ACE corpus 2004 ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 259, "segment_span": [0, 13], "characterOffsetBegin": 257, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "ACE", "lemma": "ace", "after": "", "pos": "NN", "characterOffsetEnd": 263, "segment_span": [0, 13], "characterOffsetBegin": 260, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 264, "segment_span": [0, 13], "characterOffsetBegin": 263, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "each", "lemma": "each", "after": " ", "pos": "DT", "characterOffsetEnd": 269, "segment_span": [0, 13], "characterOffsetBegin": 265, "originalText": "each", "ArgType": null, "before": " "}, {"index": 5, "word": "mention", "lemma": "mention", "after": " ", "pos": "NN", "characterOffsetEnd": 277, "segment_span": [0, 13], "characterOffsetBegin": 270, "originalText": "mention", "ArgType": "subj", "before": " "}, {"index": 6, "word": "has", "characterOffsetEnd": 281, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "have", "segment_span": [0, 13], "tense": "Z", "characterOffsetBegin": 278, "originalText": "has", "ArgType": "verb", "before": " "}, {"index": 7, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 283, "segment_span": [0, 13], "characterOffsetBegin": 282, "originalText": "a", "ArgType": null, "before": " "}, {"index": 8, "word": "head", "lemma": "head", "after": " ", "pos": "NN", "characterOffsetEnd": 288, "segment_span": [0, 13], "characterOffsetBegin": 284, "originalText": "head", "ArgType": null, "before": " "}, {"index": 9, "word": "annotation", "lemma": "annotation", "after": " ", "pos": "NN", "characterOffsetEnd": 299, "segment_span": [0, 13], "characterOffsetBegin": 289, "originalText": "annotation", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 303, "segment_span": [0, 13], "characterOffsetBegin": 300, "originalText": "and", "ArgType": null, "before": " "}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 306, "segment_span": [0, 13], "characterOffsetBegin": 304, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "extent", "lemma": "extent", "after": " ", "pos": "NN", "characterOffsetEnd": 313, "segment_span": [0, 13], "characterOffsetBegin": 307, "originalText": "extent", "ArgType": null, "before": " "}, {"index": 13, "word": "annotation", "lemma": "annotation", "after": "", "pos": "NN", "characterOffsetEnd": 324, "segment_span": [0, 13], "characterOffsetBegin": 314, "originalText": "annotation", "ArgType": null, "before": " "}, {"index": 14, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 325, "characterOffsetBegin": 324, "originalText": ".", "ArgType": null, "before": ""}], "text": "In ACE , each mention has a head annotation and an extent annotation ."}, {"tokens": [{"index": 1, "word": "4.3.2", "lemma": "4.3.2", "after": " ", "pos": "CD", "characterOffsetEnd": 5, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "4.3.2", "ArgType": null, "before": ""}, {"index": 2, "word": "Kernel", "lemma": "Kernel", "after": " ", "pos": "NNP", "characterOffsetEnd": 12, "segment_span": [0, 3], "characterOffsetBegin": 6, "originalText": "Kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "Combinations", "lemma": "combination", "after": "", "pos": "NNS", "characterOffsetEnd": 25, "segment_span": [0, 3], "characterOffsetBegin": 13, "originalText": "Combinations", "ArgType": null, "before": " "}], "text": "4.3.2 Kernel Combinations"}, {"tokens": [{"index": 1, "word": "1", "lemma": "1", "after": "", "pos": "LS", "characterOffsetEnd": 1, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "1", "ArgType": null, "before": ""}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2, "characterOffsetBegin": 1, "originalText": ".", "ArgType": null, "before": ""}], "text": "1 ."}, {"tokens": [{"index": 1, "word": "Polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 6], "characterOffsetBegin": 3, "originalText": "Polynomial", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 6], "characterOffsetBegin": 14, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 25, "segment_span": [0, 6], "characterOffsetBegin": 21, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [0, 6], "characterOffsetBegin": 26, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 32, "segment_span": [0, 6], "characterOffsetBegin": 28, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 6, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 39, "segment_span": [0, 6], "characterOffsetBegin": 33, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 7, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 40, "characterOffsetBegin": 39, "originalText": ":", "ArgType": null, "before": ""}], "text": "Polynomial kernel plus a tree kernel :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 45], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "\u00ce\u00b1", "lemma": "\u00ce\u00b1", "after": " ", "pos": "NN", "characterOffsetEnd": 7, "segment_span": [0, 45], "characterOffsetBegin": 6, "originalText": "\u00ce\u00b1", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 10, "segment_span": [0, 45], "characterOffsetBegin": 8, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 12, "segment_span": [0, 45], "characterOffsetBegin": 11, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "coefficient", "lemma": "coefficient", "after": " ", "pos": "NN", "characterOffsetEnd": 24, "segment_span": [0, 45], "characterOffsetBegin": 13, "originalText": "coefficient", "ArgType": "subj", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 27, "segment_span": [0, 45], "characterOffsetBegin": 25, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "give", "lemma": "give", "after": " ", "pos": "VB", "characterOffsetEnd": 32, "segment_span": [0, 45], "characterOffsetBegin": 28, "originalText": "give", "ArgType": null, "before": " "}, {"index": 8, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 37, "segment_span": [0, 45], "characterOffsetBegin": 33, "originalText": "more", "ArgType": null, "before": " "}, {"index": 9, "word": "impact", "lemma": "impact", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 45], "characterOffsetBegin": 38, "originalText": "impact", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 47, "segment_span": [0, 45], "characterOffsetBegin": 45, "originalText": "to", "ArgType": null, "before": " "}, {"index": 11, "word": "KP", "lemma": "kp", "after": " ", "pos": "NN", "characterOffsetEnd": 50, "segment_span": [0, 45], "characterOffsetBegin": 48, "originalText": "KP", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 54, "segment_span": [0, 45], "characterOffsetBegin": 51, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "Kx", "lemma": "kx", "after": " ", "pos": "NN", "characterOffsetEnd": 57, "segment_span": [0, 45], "characterOffsetBegin": 55, "originalText": "Kx", "ArgType": null, "before": " "}, {"index": 14, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 60, "segment_span": [0, 45], "characterOffsetBegin": 58, "originalText": "is", "ArgType": null, "before": " "}, {"index": 15, "word": "either", "lemma": "either", "after": " ", "pos": "CC", "characterOffsetEnd": 67, "segment_span": [0, 45], "characterOffsetBegin": 61, "originalText": "either", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 71, "segment_span": [0, 45], "characterOffsetBegin": 68, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 79, "segment_span": [0, 45], "characterOffsetBegin": 72, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 18, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 84, "segment_span": [0, 45], "characterOffsetBegin": 80, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 19, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 45], "characterOffsetBegin": 85, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 20, "word": "applied", "characterOffsetEnd": 99, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [0, 45], "tense": "D", "characterOffsetBegin": 92, "originalText": "applied", "ArgType": "verb", "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 102, "segment_span": [0, 45], "characterOffsetBegin": 100, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 106, "segment_span": [0, 45], "characterOffsetBegin": 103, "originalText": "one", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 110, "segment_span": [22, 39], "characterOffsetBegin": 107, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "possible", "lemma": "possible", "after": " ", "pos": "JJ", "characterOffsetEnd": 119, "segment_span": [22, 39], "characterOffsetBegin": 111, "originalText": "possible", "ArgType": null, "before": " "}, {"index": 25, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [22, 39], "characterOffsetBegin": 120, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 26, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 141, "segment_span": [22, 39], "characterOffsetBegin": 131, "originalText": "structures", "ArgType": "subj", "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 142, "segment_span": [22, 39], "characterOffsetBegin": 141, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "DW", "lemma": "dw", "after": "", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [22, 39], "characterOffsetBegin": 143, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 29, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 146, "segment_span": [22, 39], "characterOffsetBegin": 145, "originalText": ",", "ArgType": null, "before": ""}, {"index": 30, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 149, "segment_span": [22, 39], "characterOffsetBegin": 147, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 31, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 152, "segment_span": [22, 39], "characterOffsetBegin": 150, "originalText": "or", "ArgType": null, "before": " "}, {"index": 32, "word": "GRW", "lemma": "grw", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [22, 39], "characterOffsetBegin": 153, "originalText": "GRW", "ArgType": null, "before": " "}, {"index": 33, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 159, "segment_span": [22, 39], "characterOffsetBegin": 157, "originalText": "or", "ArgType": null, "before": " "}, {"index": 34, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 163, "segment_span": [22, 39], "characterOffsetBegin": 160, "originalText": "the", "ArgType": null, "before": " "}, {"index": 35, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 167, "segment_span": [22, 39], "characterOffsetBegin": 164, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 36, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 174, "segment_span": [22, 39], "characterOffsetBegin": 168, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 37, "word": "applied", "characterOffsetEnd": 182, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [22, 39], "tense": "D", "characterOffsetBegin": 175, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 38, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 185, "segment_span": [22, 39], "characterOffsetBegin": 183, "originalText": "to", "ArgType": null, "before": " "}, {"index": 39, "word": "PET", "lemma": "PET", "after": "", "pos": "NNP", "characterOffsetEnd": 189, "segment_span": [22, 39], "characterOffsetBegin": 186, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 40, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 190, "segment_span": [0, 45], "characterOffsetBegin": 189, "originalText": ",", "ArgType": null, "before": ""}, {"index": 41, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 200, "segment_span": [0, 45], "characterOffsetBegin": 191, "originalText": "described", "ArgType": null, "before": " "}, {"index": 42, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 203, "segment_span": [0, 45], "characterOffsetBegin": 201, "originalText": "in", "ArgType": null, "before": " "}, {"index": 43, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 207, "segment_span": [0, 45], "characterOffsetBegin": 204, "originalText": "the", "ArgType": null, "before": " "}, {"index": 44, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 216, "segment_span": [0, 45], "characterOffsetBegin": 208, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 45, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 224, "segment_span": [0, 45], "characterOffsetBegin": 217, "originalText": "section", "ArgType": null, "before": " "}, {"index": 46, "word": ".", "lemma": ".", "after": "\u0000", "pos": ".", "characterOffsetEnd": 225, "characterOffsetBegin": 224, "originalText": ".", "ArgType": null, "before": ""}], "text": "where \u00ce\u00b1 is a coefficient to give more impact to KP and Kx is either the partial tree kernel applied to one the possible dependency structures , DW , GR or GRW or the SST kernel applied to PET , described in the previous section ."}, {"tokens": [{"index": 1, "word": "2", "lemma": "2", "after": "", "pos": "LS", "characterOffsetEnd": 1, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "2", "ArgType": null, "before": ""}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2, "characterOffsetBegin": 1, "originalText": ".", "ArgType": null, "before": ""}], "text": "2 ."}, {"tokens": [{"index": 1, "word": "Polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 8], "characterOffsetBegin": 3, "originalText": "Polynomial", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 8], "characterOffsetBegin": 14, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 25, "segment_span": [0, 8], "characterOffsetBegin": 21, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 4, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 37, "segment_span": [0, 8], "characterOffsetBegin": 26, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 5, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 42, "segment_span": [0, 8], "characterOffsetBegin": 38, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 6, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [0, 8], "characterOffsetBegin": 43, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 7, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 58, "segment_span": [0, 8], "characterOffsetBegin": 54, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 8, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 66, "segment_span": [0, 8], "characterOffsetBegin": 59, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 9, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 67, "characterOffsetBegin": 66, "originalText": ":", "ArgType": null, "before": ""}], "text": "Polynomial kernel plus constituent plus dependency tree kernels :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 24], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "KSST", "lemma": "KSST", "after": " ", "pos": "NNP", "characterOffsetEnd": 10, "segment_span": [0, 24], "characterOffsetBegin": 6, "originalText": "KSST", "ArgType": "subj", "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 13, "segment_span": [0, 24], "characterOffsetBegin": 11, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 17, "segment_span": [0, 24], "characterOffsetBegin": 14, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 21, "segment_span": [0, 24], "characterOffsetBegin": 18, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 6, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 28, "segment_span": [0, 24], "characterOffsetBegin": 22, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 32, "segment_span": [0, 24], "characterOffsetBegin": 29, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "KPT", "lemma": "kpt", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 24], "characterOffsetBegin": 33, "originalText": "KPT", "ArgType": null, "before": " "}, {"index": 9, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 39, "segment_span": [0, 24], "characterOffsetBegin": 37, "originalText": "is", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 43, "segment_span": [0, 24], "characterOffsetBegin": 40, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 24], "characterOffsetBegin": 44, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 12, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 56, "segment_span": [0, 24], "characterOffsetBegin": 52, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 13, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 24], "characterOffsetBegin": 57, "originalText": "kernel", "ArgType": "verb", "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 65, "segment_span": [0, 24], "characterOffsetBegin": 64, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBN", "characterOffsetEnd": 72, "segment_span": [0, 24], "characterOffsetBegin": 65, "originalText": "applied", "ArgType": null, "before": ""}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 75, "segment_span": [0, 24], "characterOffsetBegin": 73, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 79, "segment_span": [0, 24], "characterOffsetBegin": 76, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "related", "lemma": "related", "after": " ", "pos": "JJ", "characterOffsetEnd": 87, "segment_span": [0, 24], "characterOffsetBegin": 80, "originalText": "related", "ArgType": null, "before": " "}, {"index": 19, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 98, "segment_span": [0, 24], "characterOffsetBegin": 88, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 20, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 101, "segment_span": [0, 24], "characterOffsetBegin": 99, "originalText": "as", "ArgType": null, "before": " "}, {"index": 21, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 104, "segment_span": [0, 24], "characterOffsetBegin": 102, "originalText": "in", "ArgType": null, "before": " "}, {"index": 22, "word": "point", "lemma": "point", "after": " ", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 24], "characterOffsetBegin": 105, "originalText": "point", "ArgType": null, "before": " "}, {"index": 23, "word": "1", "lemma": "1", "after": "", "pos": "CD", "characterOffsetEnd": 112, "segment_span": [0, 24], "characterOffsetBegin": 111, "originalText": "1", "ArgType": null, "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 113, "segment_span": [0, 24], "characterOffsetBegin": 112, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 114, "characterOffsetBegin": 113, "originalText": ".", "ArgType": null, "before": ""}], "text": "where KSST is the SST kernel and KPT is the partial tree kernel ( applied to the related structures as in point 1 ) ."}, {"tokens": [{"index": 1, "word": "3", "lemma": "3", "after": "", "pos": "LS", "characterOffsetEnd": 1, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "3", "ArgType": null, "before": ""}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2, "characterOffsetBegin": 1, "originalText": ".", "ArgType": null, "before": ""}], "text": "3 ."}, {"tokens": [{"index": 1, "word": "Constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 14, "segment_span": [0, 11], "characterOffsetBegin": 3, "originalText": "Constituent", "ArgType": null, "before": " "}, {"index": 2, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 11], "characterOffsetBegin": 15, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 3, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 24, "segment_span": [0, 11], "characterOffsetBegin": 20, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 4, "word": "square", "lemma": "square", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 11], "characterOffsetBegin": 25, "originalText": "square", "ArgType": null, "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 11], "characterOffsetBegin": 32, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 45, "segment_span": [0, 11], "characterOffsetBegin": 35, "originalText": "polynomial", "ArgType": null, "before": " "}, {"index": 7, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 52, "segment_span": [0, 11], "characterOffsetBegin": 46, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 56, "segment_span": [0, 11], "characterOffsetBegin": 53, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 11], "characterOffsetBegin": 57, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 10, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 11], "characterOffsetBegin": 68, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 11, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 11], "characterOffsetBegin": 73, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 12, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 80, "characterOffsetBegin": 79, "originalText": ":", "ArgType": null, "before": ""}], "text": "Constituent tree plus square of polynomial kernel and dependency tree kernel :"}, {"tokens": [{"index": 1, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 5, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "where", "ArgType": null, "before": ""}, {"index": 2, "word": "KPT", "lemma": "KPT", "after": "", "pos": "NNP", "characterOffsetEnd": 9, "segment_span": [0, 20], "characterOffsetBegin": 6, "originalText": "KPT", "ArgType": "subj", "before": " "}, {"index": 3, "word": "\u00e2\u0088\u0092", "lemma": "\u00e2\u0088\u0092", "after": "", "pos": "CD", "characterOffsetEnd": 10, "segment_span": [0, 20], "characterOffsetBegin": 9, "originalText": "\u00e2\u0088\u0092", "ArgType": null, "before": ""}, {"index": 4, "word": "DW", "lemma": "dw", "after": " ", "pos": "NN", "characterOffsetEnd": 12, "segment_span": [0, 20], "characterOffsetBegin": 10, "originalText": "DW", "ArgType": null, "before": ""}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 16, "segment_span": [0, 20], "characterOffsetBegin": 13, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "KPT", "lemma": "kpt", "after": "", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 20], "characterOffsetBegin": 17, "originalText": "KPT", "ArgType": null, "before": " "}, {"index": 7, "word": "\u00e2\u0088\u0092", "lemma": "\u00e2\u0088\u0092", "after": "", "pos": "CD", "characterOffsetEnd": 21, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "\u00e2\u0088\u0092", "ArgType": null, "before": ""}, {"index": 8, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 21, "originalText": "GR", "ArgType": null, "before": ""}, {"index": 9, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 27, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "are", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 31, "segment_span": [0, 20], "characterOffsetBegin": 28, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 39, "segment_span": [0, 20], "characterOffsetBegin": 32, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 12, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 44, "segment_span": [0, 20], "characterOffsetBegin": 40, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 13, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 52, "segment_span": [0, 20], "characterOffsetBegin": 45, "originalText": "kernels", "ArgType": "verb", "before": " "}, {"index": 14, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBD", "characterOffsetEnd": 60, "segment_span": [0, 20], "characterOffsetBegin": 53, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 63, "segment_span": [0, 20], "characterOffsetBegin": 61, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 74, "segment_span": [0, 20], "characterOffsetBegin": 64, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 17, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 85, "segment_span": [0, 20], "characterOffsetBegin": 75, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 18, "word": "DW", "lemma": "dw", "after": " ", "pos": "NN", "characterOffsetEnd": 88, "segment_span": [0, 20], "characterOffsetBegin": 86, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 92, "segment_span": [0, 20], "characterOffsetBegin": 89, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "GR", "lemma": "gr", "after": "", "pos": "NN", "characterOffsetEnd": 95, "segment_span": [0, 20], "characterOffsetBegin": 93, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 96, "characterOffsetBegin": 95, "originalText": ".", "ArgType": null, "before": ""}], "text": "where KPT \u00e2\u0088\u0092 DW and KPT \u00e2\u0088\u0092 GR are the partial tree kernels applied to dependency structures DW and GR ."}, {"tokens": [{"index": 1, "word": "Some", "lemma": "some", "after": " ", "pos": "DT", "characterOffsetEnd": 101, "segment_span": [0, 12], "characterOffsetBegin": 97, "originalText": "Some", "ArgType": null, "before": " "}, {"index": 2, "word": "preliminary", "lemma": "preliminary", "after": " ", "pos": "JJ", "characterOffsetEnd": 113, "segment_span": [0, 12], "characterOffsetBegin": 102, "originalText": "preliminary", "ArgType": null, "before": " "}, {"index": 3, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 125, "segment_span": [0, 12], "characterOffsetBegin": 114, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 128, "segment_span": [0, 12], "characterOffsetBegin": 126, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 130, "segment_span": [0, 12], "characterOffsetBegin": 129, "originalText": "a", "ArgType": null, "before": " "}, {"index": 6, "word": "validation", "lemma": "validation", "after": " ", "pos": "NN", "characterOffsetEnd": 141, "segment_span": [0, 12], "characterOffsetBegin": 131, "originalText": "validation", "ArgType": null, "before": " "}, {"index": 7, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 145, "segment_span": [0, 12], "characterOffsetBegin": 142, "originalText": "set", "ArgType": null, "before": " "}, {"index": 8, "word": "showed", "characterOffsetEnd": 152, "after": " ", "pos": "VBD", "is_root": true, "lemma": "show", "segment_span": [0, 12], "tense": "D", "characterOffsetBegin": 146, "originalText": "showed", "ArgType": "verb", "before": " "}, {"index": 9, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 157, "segment_span": [0, 12], "characterOffsetBegin": 153, "originalText": "that", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 161, "segment_span": [0, 12], "characterOffsetBegin": 158, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "second", "lemma": "second", "after": "", "pos": "JJ", "characterOffsetEnd": 168, "segment_span": [0, 12], "characterOffsetBegin": 162, "originalText": "second", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 169, "segment_span": [0, 12], "characterOffsetBegin": 168, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 173, "segment_span": [12, 26], "characterOffsetBegin": 170, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "fourth", "lemma": "fourth", "after": " ", "pos": "JJ", "characterOffsetEnd": 180, "segment_span": [12, 26], "characterOffsetBegin": 174, "originalText": "fourth", "ArgType": "subj", "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 184, "segment_span": [12, 26], "characterOffsetBegin": 181, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 188, "segment_span": [12, 26], "characterOffsetBegin": 185, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "fifth", "lemma": "fifth", "after": " ", "pos": "JJ", "characterOffsetEnd": 194, "segment_span": [12, 26], "characterOffsetBegin": 189, "originalText": "fifth", "ArgType": null, "before": " "}, {"index": 18, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 207, "segment_span": [12, 26], "characterOffsetBegin": 195, "originalText": "combinations", "ArgType": null, "before": " "}, {"index": 19, "word": "yield", "characterOffsetEnd": 213, "after": " ", "pos": "VBP", "is_root": true, "lemma": "yield", "segment_span": [12, 26], "tense": "P", "characterOffsetBegin": 208, "originalText": "yield", "ArgType": null, "before": " "}, {"index": 20, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 217, "segment_span": [12, 26], "characterOffsetBegin": 214, "originalText": "the", "ArgType": null, "before": " "}, {"index": 21, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 222, "segment_span": [12, 26], "characterOffsetBegin": 218, "originalText": "best", "ArgType": null, "before": " "}, {"index": 22, "word": "performance", "lemma": "performance", "after": " ", "pos": "NN", "characterOffsetEnd": 234, "segment_span": [12, 26], "characterOffsetBegin": 223, "originalText": "performance", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 239, "segment_span": [12, 26], "characterOffsetBegin": 235, "originalText": "with", "ArgType": null, "before": " "}, {"index": 24, "word": "\u00ce\u00b1", "lemma": "\u00ce\u00b1", "after": " ", "pos": "NN", "characterOffsetEnd": 241, "segment_span": [12, 26], "characterOffsetBegin": 240, "originalText": "\u00ce\u00b1", "ArgType": null, "before": " "}, {"index": 25, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 243, "segment_span": [12, 26], "characterOffsetBegin": 242, "originalText": "=", "ArgType": null, "before": " "}, {"index": 26, "word": "0.4", "lemma": "0.4", "after": " ", "pos": "CD", "characterOffsetEnd": 247, "segment_span": [12, 26], "characterOffsetBegin": 244, "originalText": "0.4", "ArgType": "dobj", "before": " "}, {"index": 27, "word": "while", "lemma": "while", "after": " ", "pos": "IN", "characterOffsetEnd": 253, "segment_span": [26, 41], "characterOffsetBegin": 248, "originalText": "while", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 257, "segment_span": [26, 41], "characterOffsetBegin": 254, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 263, "segment_span": [26, 41], "characterOffsetBegin": 258, "originalText": "first", "ArgType": "subj", "before": " "}, {"index": 30, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 267, "segment_span": [26, 41], "characterOffsetBegin": 264, "originalText": "and", "ArgType": null, "before": " "}, {"index": 31, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 271, "segment_span": [26, 41], "characterOffsetBegin": 268, "originalText": "the", "ArgType": null, "before": " "}, {"index": 32, "word": "third", "lemma": "third", "after": " ", "pos": "JJ", "characterOffsetEnd": 277, "segment_span": [26, 41], "characterOffsetBegin": 272, "originalText": "third", "ArgType": null, "before": " "}, {"index": 33, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 290, "segment_span": [26, 41], "characterOffsetBegin": 278, "originalText": "combinations", "ArgType": null, "before": " "}, {"index": 34, "word": "yield", "characterOffsetEnd": 296, "after": " ", "pos": "VBP", "is_root": true, "lemma": "yield", "segment_span": [26, 41], "tense": "P", "characterOffsetBegin": 291, "originalText": "yield", "ArgType": null, "before": " "}, {"index": 35, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 300, "segment_span": [26, 41], "characterOffsetBegin": 297, "originalText": "the", "ArgType": null, "before": " "}, {"index": 36, "word": "best", "lemma": "best", "after": " ", "pos": "JJS", "characterOffsetEnd": 305, "segment_span": [26, 41], "characterOffsetBegin": 301, "originalText": "best", "ArgType": null, "before": " "}, {"index": 37, "word": "performance", "lemma": "performance", "after": " ", "pos": "NN", "characterOffsetEnd": 317, "segment_span": [26, 41], "characterOffsetBegin": 306, "originalText": "performance", "ArgType": "dobj", "before": " "}, {"index": 38, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 322, "segment_span": [26, 41], "characterOffsetBegin": 318, "originalText": "with", "ArgType": null, "before": " "}, {"index": 39, "word": "\u00ce\u00b1", "lemma": "\u00ce\u00b1", "after": " ", "pos": "NN", "characterOffsetEnd": 324, "segment_span": [26, 41], "characterOffsetBegin": 323, "originalText": "\u00ce\u00b1", "ArgType": null, "before": " "}, {"index": 40, "word": "=", "lemma": "=", "after": " ", "pos": "JJ", "characterOffsetEnd": 326, "segment_span": [26, 41], "characterOffsetBegin": 325, "originalText": "=", "ArgType": null, "before": " "}, {"index": 41, "word": "0.23", "lemma": "0.23", "after": "", "pos": "CD", "characterOffsetEnd": 331, "segment_span": [26, 41], "characterOffsetBegin": 327, "originalText": "0.23", "ArgType": "dobj", "before": " "}, {"index": 42, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 332, "characterOffsetBegin": 331, "originalText": ".", "ArgType": null, "before": ""}], "text": "Some preliminary experiments on a validation set showed that the second , the fourth and the fifth combinations yield the best performance with \u00ce\u00b1 = 0.4 while the first and the third combinations yield the best performance with \u00ce\u00b1 = 0.23 ."}, {"tokens": [{"index": 1, "word": "Regarding", "lemma": "regard", "after": " ", "pos": "VBG", "characterOffsetEnd": 342, "segment_span": [0, 8], "characterOffsetBegin": 333, "originalText": "Regarding", "ArgType": null, "before": " "}, {"index": 2, "word": "WSK", "lemma": "wsk", "after": "", "pos": "NN", "characterOffsetEnd": 346, "segment_span": [0, 8], "characterOffsetBegin": 343, "originalText": "WSK", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 347, "segment_span": [0, 8], "characterOffsetBegin": 346, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 351, "segment_span": [0, 8], "characterOffsetBegin": 348, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "following", "lemma": "follow", "after": " ", "pos": "VBG", "characterOffsetEnd": 361, "segment_span": [0, 8], "characterOffsetBegin": 352, "originalText": "following", "ArgType": null, "before": " "}, {"index": 6, "word": "combinations", "lemma": "combination", "after": " ", "pos": "NNS", "characterOffsetEnd": 374, "segment_span": [0, 8], "characterOffsetBegin": 362, "originalText": "combinations", "ArgType": null, "before": " "}, {"index": 7, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 378, "segment_span": [0, 8], "characterOffsetBegin": 375, "originalText": "are", "ArgType": null, "before": " "}, {"index": 8, "word": "applied", "characterOffsetEnd": 386, "after": "", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [0, 8], "tense": "N", "characterOffsetBegin": 379, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 9, "word": ":", "lemma": ":", "after": "\u0000\u0000\u0000\u0000\u0000\u0000", "pos": ":", "characterOffsetEnd": 387, "characterOffsetBegin": 386, "originalText": ":", "ArgType": null, "before": ""}], "text": "Regarding WSK , the following combinations are applied :"}, {"tokens": [{"index": 1, "word": "2Linguistic", "lemma": "2Linguistic", "after": " ", "pos": "NNP", "characterOffsetEnd": 11, "segment_span": [0, 8], "characterOffsetBegin": 0, "originalText": "2Linguistic", "ArgType": null, "before": ""}, {"index": 2, "word": "Data", "lemma": "Data", "after": " ", "pos": "NNP", "characterOffsetEnd": 16, "segment_span": [0, 8], "characterOffsetBegin": 12, "originalText": "Data", "ArgType": null, "before": " "}, {"index": 3, "word": "Consortium", "lemma": "Consortium", "after": " ", "pos": "NNP", "characterOffsetEnd": 27, "segment_span": [0, 8], "characterOffsetBegin": 17, "originalText": "Consortium", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 29, "segment_span": [0, 8], "characterOffsetBegin": 28, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "LDC", "lemma": "LDC", "after": "", "pos": "NNP", "characterOffsetEnd": 32, "segment_span": [0, 8], "characterOffsetBegin": 29, "originalText": "LDC", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 33, "segment_span": [0, 8], "characterOffsetBegin": 32, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 34, "segment_span": [0, 8], "characterOffsetBegin": 33, "originalText": ":", "ArgType": null, "before": ""}, {"index": 8, "word": "http://www.ldc.upenn.edu/Projects/ACE/", "lemma": "http://www.ldc.upenn.edu/projects/ace/", "after": "", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 8], "characterOffsetBegin": 35, "originalText": "http://www.ldc.upenn.edu/Projects/ACE/", "ArgType": null, "before": " "}], "text": "2Linguistic Data Consortium ( LDC ) : http://www.ldc.upenn.edu/Projects/ACE/"}, {"tokens": [{"index": 1, "word": "5", "lemma": "5", "after": "", "pos": "CD", "characterOffsetEnd": 1, "segment_span": [0, 1], "characterOffsetBegin": 0, "originalText": "5", "ArgType": null, "before": ""}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 2, "characterOffsetBegin": 1, "originalText": ".", "ArgType": null, "before": ""}], "text": "5 ."}, {"tokens": [{"index": 1, "word": "Polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 13, "segment_span": [0, 10], "characterOffsetBegin": 3, "originalText": "Polynomial", "ArgType": null, "before": " "}, {"index": 2, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 20, "segment_span": [0, 10], "characterOffsetBegin": 14, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 3, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 25, "segment_span": [0, 10], "characterOffsetBegin": 21, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 4, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 36, "segment_span": [0, 10], "characterOffsetBegin": 26, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 5, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 41, "segment_span": [0, 10], "characterOffsetBegin": 37, "originalText": "word", "ArgType": null, "before": " "}, {"index": 6, "word": "plus", "lemma": "plus", "after": " ", "pos": "CC", "characterOffsetEnd": 46, "segment_span": [0, 10], "characterOffsetBegin": 42, "originalText": "plus", "ArgType": null, "before": " "}, {"index": 7, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 58, "segment_span": [0, 10], "characterOffsetBegin": 47, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 8, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 67, "segment_span": [0, 10], "characterOffsetBegin": 59, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 9, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 72, "segment_span": [0, 10], "characterOffsetBegin": 68, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 10, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 80, "segment_span": [0, 10], "characterOffsetBegin": 73, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 11, "word": ":", "lemma": ":", "after": "", "pos": ":", "characterOffsetEnd": 81, "characterOffsetBegin": 80, "originalText": ":", "ArgType": null, "before": ""}], "text": "Polynomial kernel plus dependency word plus grammatical relation tree kernels :"}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "used", "characterOffsetEnd": 7, "after": " ", "pos": "VBD", "is_root": true, "lemma": "use", "segment_span": [0, 5], "tense": "D", "characterOffsetBegin": 3, "originalText": "used", "ArgType": "verb", "before": " "}, {"index": 3, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 9, "segment_span": [0, 5], "characterOffsetBegin": 8, "originalText": "a", "ArgType": null, "before": " "}, {"index": 4, "word": "polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 20, "segment_span": [0, 5], "characterOffsetBegin": 10, "originalText": "polynomial", "ArgType": null, "before": " "}, {"index": 5, "word": "expansion", "lemma": "expansion", "after": " ", "pos": "NN", "characterOffsetEnd": 30, "segment_span": [0, 5], "characterOffsetBegin": 21, "originalText": "expansion", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 33, "segment_span": [5, 28], "characterOffsetBegin": 31, "originalText": "to", "ArgType": null, "before": " "}, {"index": 7, "word": "explore", "characterOffsetEnd": 41, "after": " ", "pos": "VB", "is_root": true, "lemma": "explore", "segment_span": [5, 28], "tense": "B", "characterOffsetBegin": 34, "originalText": "explore", "ArgType": null, "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 45, "segment_span": [5, 28], "characterOffsetBegin": 42, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "bi-gram", "lemma": "bi-gram", "after": " ", "pos": "NN", "characterOffsetEnd": 53, "segment_span": [5, 28], "characterOffsetBegin": 46, "originalText": "bi-gram", "ArgType": null, "before": " "}, {"index": 10, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 62, "segment_span": [5, 28], "characterOffsetBegin": 54, "originalText": "features", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 65, "segment_span": [5, 28], "characterOffsetBegin": 63, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "i", "lemma": "i", "after": "", "pos": "LS", "characterOffsetEnd": 67, "segment_span": [5, 28], "characterOffsetBegin": 66, "originalText": "i", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 68, "segment_span": [5, 28], "characterOffsetBegin": 67, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 72, "segment_span": [5, 28], "characterOffsetBegin": 69, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 78, "segment_span": [5, 28], "characterOffsetBegin": 73, "originalText": "first", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 82, "segment_span": [5, 28], "characterOffsetBegin": 79, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 86, "segment_span": [5, 28], "characterOffsetBegin": 83, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [5, 28], "characterOffsetBegin": 87, "originalText": "second", "ArgType": null, "before": " "}, {"index": 19, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 100, "segment_span": [5, 28], "characterOffsetBegin": 94, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 20, "word": "participating", "lemma": "participate", "after": " ", "pos": "VBG", "characterOffsetEnd": 114, "segment_span": [5, 28], "characterOffsetBegin": 101, "originalText": "participating", "ArgType": null, "before": " "}, {"index": 21, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 117, "segment_span": [5, 28], "characterOffsetBegin": 115, "originalText": "in", "ArgType": null, "before": " "}, {"index": 22, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 121, "segment_span": [5, 28], "characterOffsetBegin": 118, "originalText": "the", "ArgType": null, "before": " "}, {"index": 23, "word": "relation", "lemma": "relation", "after": "", "pos": "NN", "characterOffsetEnd": 130, "segment_span": [5, 28], "characterOffsetBegin": 122, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 131, "segment_span": [5, 28], "characterOffsetBegin": 130, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "ii", "lemma": "ii", "after": "", "pos": "LS", "characterOffsetEnd": 134, "segment_span": [5, 28], "characterOffsetBegin": 132, "originalText": "ii", "ArgType": null, "before": " "}, {"index": 26, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 135, "segment_span": [5, 28], "characterOffsetBegin": 134, "originalText": ")", "ArgType": null, "before": ""}, {"index": 27, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 147, "segment_span": [5, 28], "characterOffsetBegin": 136, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 28, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 157, "segment_span": [5, 28], "characterOffsetBegin": 148, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 29, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 163, "segment_span": [28, 35], "characterOffsetBegin": 158, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 30, "word": "replace", "characterOffsetEnd": 171, "after": " ", "pos": "VBP", "is_root": true, "lemma": "replace", "segment_span": [28, 35], "tense": "P", "characterOffsetBegin": 164, "originalText": "replace", "ArgType": null, "before": " "}, {"index": 31, "word": "words", "lemma": "word", "after": " ", "pos": "NNS", "characterOffsetEnd": 177, "segment_span": [28, 35], "characterOffsetBegin": 172, "originalText": "words", "ArgType": "dobj", "before": " "}, {"index": 32, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 180, "segment_span": [28, 35], "characterOffsetBegin": 178, "originalText": "in", "ArgType": null, "before": " "}, {"index": 33, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 184, "segment_span": [28, 35], "characterOffsetBegin": 181, "originalText": "the", "ArgType": null, "before": " "}, {"index": 34, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 195, "segment_span": [28, 35], "characterOffsetBegin": 185, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 35, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 200, "segment_span": [28, 35], "characterOffsetBegin": 196, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 36, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 201, "characterOffsetBegin": 200, "originalText": ".", "ArgType": null, "before": ""}], "text": "We used a polynomial expansion to explore the bi-gram features of i ) the first and the second entity participating in the relation , ii ) grammatical relations which replace words in the dependency tree ."}, {"tokens": [{"index": 1, "word": "Since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 207, "segment_span": [0, 5], "characterOffsetBegin": 202, "originalText": "Since", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 211, "segment_span": [0, 5], "characterOffsetBegin": 208, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 218, "segment_span": [0, 5], "characterOffsetBegin": 212, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 4, "word": "function", "lemma": "function", "after": " ", "pos": "NN", "characterOffsetEnd": 227, "segment_span": [0, 5], "characterOffsetBegin": 219, "originalText": "function", "ArgType": "subj", "before": " "}, {"index": 5, "word": "set", "lemma": "set", "after": " ", "pos": "NN", "characterOffsetEnd": 231, "segment_span": [0, 5], "characterOffsetBegin": 228, "originalText": "set", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 234, "segment_span": [5, 23], "characterOffsetBegin": 232, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "closed", "characterOffsetEnd": 241, "after": " ", "pos": "VBN", "is_root": true, "lemma": "close", "segment_span": [5, 23], "tense": "N", "characterOffsetBegin": 235, "before": " ", "originalText": "closed", "ArgType": null, "is_pass": true}, {"index": 8, "word": "under", "lemma": "under", "after": " ", "pos": "IN", "characterOffsetEnd": 247, "segment_span": [5, 23], "characterOffsetBegin": 242, "originalText": "under", "ArgType": null, "before": " "}, {"index": 9, "word": "normalization", "lemma": "normalization", "after": "", "pos": "NN", "characterOffsetEnd": 261, "segment_span": [5, 23], "characterOffsetBegin": 248, "originalText": "normalization", "ArgType": null, "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 262, "segment_span": [5, 23], "characterOffsetBegin": 261, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "polynomial", "lemma": "polynomial", "after": " ", "pos": "JJ", "characterOffsetEnd": 273, "segment_span": [5, 23], "characterOffsetBegin": 263, "originalText": "polynomial", "ArgType": null, "before": " "}, {"index": 12, "word": "expansion", "lemma": "expansion", "after": " ", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [5, 23], "characterOffsetBegin": 274, "originalText": "expansion", "ArgType": null, "before": " "}, {"index": 13, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 287, "segment_span": [5, 23], "characterOffsetBegin": 284, "originalText": "and", "ArgType": null, "before": " "}, {"index": 14, "word": "linear", "lemma": "linear", "after": " ", "pos": "JJ", "characterOffsetEnd": 294, "segment_span": [5, 23], "characterOffsetBegin": 288, "originalText": "linear", "ArgType": null, "before": " "}, {"index": 15, "word": "combination", "lemma": "combination", "after": " ", "pos": "NN", "characterOffsetEnd": 306, "segment_span": [5, 23], "characterOffsetBegin": 295, "originalText": "combination", "ArgType": null, "before": " "}, {"index": 16, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 308, "segment_span": [5, 23], "characterOffsetBegin": 307, "originalText": "(", "ArgType": null, "before": " "}, {"index": 17, "word": "Schlkopf", "lemma": "schlkopf", "after": " ", "pos": "NN", "characterOffsetEnd": 316, "segment_span": [5, 23], "characterOffsetBegin": 308, "originalText": "Schlkopf", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 320, "segment_span": [5, 23], "characterOffsetBegin": 317, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "Smola", "lemma": "smola", "after": "", "pos": "NN", "characterOffsetEnd": 326, "segment_span": [5, 23], "characterOffsetBegin": 321, "originalText": "Smola", "ArgType": null, "before": " "}, {"index": 20, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 327, "segment_span": [5, 23], "characterOffsetBegin": 326, "originalText": ",", "ArgType": null, "before": ""}, {"index": 21, "word": "2001", "lemma": "2001", "after": "", "pos": "CD", "characterOffsetEnd": 332, "segment_span": [5, 23], "characterOffsetBegin": 328, "originalText": "2001", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 333, "segment_span": [5, 23], "characterOffsetBegin": 332, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 334, "segment_span": [5, 23], "characterOffsetBegin": 333, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "all", "lemma": "all", "after": " ", "pos": "PDT", "characterOffsetEnd": 338, "segment_span": [23, 32], "characterOffsetBegin": 335, "originalText": "all", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 342, "segment_span": [23, 32], "characterOffsetBegin": 339, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "illustrated", "lemma": "illustrated", "after": " ", "pos": "JJ", "characterOffsetEnd": 354, "segment_span": [23, 32], "characterOffsetBegin": 343, "originalText": "illustrated", "ArgType": null, "before": " "}, {"index": 27, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 364, "segment_span": [23, 32], "characterOffsetBegin": 355, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 28, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 372, "segment_span": [23, 32], "characterOffsetBegin": 365, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 29, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 376, "segment_span": [23, 32], "characterOffsetBegin": 373, "originalText": "are", "ArgType": null, "before": " "}, {"index": 30, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 381, "segment_span": [23, 32], "characterOffsetBegin": 377, "originalText": "also", "ArgType": null, "before": " "}, {"index": 31, "word": "proper", "lemma": "proper", "after": " ", "pos": "JJ", "characterOffsetEnd": 388, "segment_span": [23, 32], "characterOffsetBegin": 382, "originalText": "proper", "ArgType": null, "before": " "}, {"index": 32, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 396, "segment_span": [23, 32], "characterOffsetBegin": 389, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 397, "characterOffsetBegin": 396, "originalText": ".", "ArgType": null, "before": ""}], "text": "Since the kernel function set is closed under normalization , polynomial expansion and linear combination ( Schlkopf and Smola , 2001 ) , all the illustrated composite kernels are also proper kernels ."}], "title": "4.3.1 Polynomial Kernel"}], "title": "4 Kernels for Relation Extraction"}, {"num": 12, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 3, "segment_span": [0, 3], "characterOffsetBegin": 0, "originalText": "Our", "ArgType": null, "before": ""}, {"index": 2, "word": "experiments", "lemma": "experiment", "after": " ", "pos": "NNS", "characterOffsetEnd": 15, "segment_span": [0, 3], "characterOffsetBegin": 4, "originalText": "experiments", "ArgType": "subj", "before": " "}, {"index": 3, "word": "aim", "characterOffsetEnd": 19, "after": " ", "pos": "VBP", "is_root": true, "lemma": "aim", "segment_span": [0, 3], "tense": "P", "characterOffsetBegin": 16, "originalText": "aim", "ArgType": "verb", "before": " "}, {"index": 4, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 22, "segment_span": [3, 5], "characterOffsetBegin": 20, "originalText": "at", "ArgType": null, "before": " "}, {"index": 5, "word": "investigating", "characterOffsetEnd": 36, "after": " ", "pos": "VBG", "is_root": true, "lemma": "investigate", "segment_span": [3, 5], "tense": "G", "characterOffsetBegin": 23, "originalText": "investigating", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 40, "segment_span": [5, 23], "characterOffsetBegin": 37, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "effectiveness", "lemma": "effectiveness", "after": " ", "pos": "NN", "characterOffsetEnd": 54, "segment_span": [5, 23], "characterOffsetBegin": 41, "originalText": "effectiveness", "ArgType": "subj", "before": " "}, {"index": 8, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 57, "segment_span": [5, 23], "characterOffsetBegin": 55, "originalText": "of", "ArgType": null, "before": " "}, {"index": 9, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 69, "segment_span": [5, 23], "characterOffsetBegin": 58, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 10, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 77, "segment_span": [5, 23], "characterOffsetBegin": 70, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 11, "word": "adapted", "characterOffsetEnd": 85, "after": " ", "pos": "VBD", "is_root": true, "lemma": "adapt", "segment_span": [5, 23], "tense": "D", "characterOffsetBegin": 78, "originalText": "adapted", "ArgType": null, "before": " "}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 88, "segment_span": [5, 23], "characterOffsetBegin": 86, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 98, "segment_span": [5, 23], "characterOffsetBegin": 89, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 14, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 104, "segment_span": [5, 23], "characterOffsetBegin": 99, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 15, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 110, "segment_span": [5, 23], "characterOffsetBegin": 105, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 114, "segment_span": [5, 23], "characterOffsetBegin": 111, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "various", "lemma": "various", "after": " ", "pos": "JJ", "characterOffsetEnd": 122, "segment_span": [5, 23], "characterOffsetBegin": 115, "originalText": "various", "ArgType": null, "before": " "}, {"index": 18, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 131, "segment_span": [5, 23], "characterOffsetBegin": 123, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 19, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 139, "segment_span": [5, 23], "characterOffsetBegin": 132, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 20, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 143, "segment_span": [5, 23], "characterOffsetBegin": 140, "originalText": "for", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 147, "segment_span": [5, 23], "characterOffsetBegin": 144, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 150, "segment_span": [5, 23], "characterOffsetBegin": 148, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 23, "word": "task", "lemma": "task", "after": "", "pos": "NN", "characterOffsetEnd": 155, "segment_span": [5, 23], "characterOffsetBegin": 151, "originalText": "task", "ArgType": null, "before": " "}, {"index": 24, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 156, "characterOffsetBegin": 155, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our experiments aim at investigating the effectiveness of convolution kernels adapted to syntactic parse trees and various sequence kernels for the RE task ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 160, "segment_span": [0, 25], "characterOffsetBegin": 157, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 165, "segment_span": [0, 25], "characterOffsetBegin": 161, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "purpose", "lemma": "purpose", "after": "", "pos": "NN", "characterOffsetEnd": 173, "segment_span": [0, 25], "characterOffsetBegin": 166, "originalText": "purpose", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 174, "segment_span": [0, 25], "characterOffsetBegin": 173, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 177, "segment_span": [0, 25], "characterOffsetBegin": 175, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "use", "characterOffsetEnd": 181, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 25], "tense": "P", "characterOffsetBegin": 178, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 185, "segment_span": [0, 25], "characterOffsetBegin": 182, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "subset", "lemma": "subset", "after": " ", "pos": "NN", "characterOffsetEnd": 192, "segment_span": [0, 25], "characterOffsetBegin": 186, "originalText": "subset", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 196, "segment_span": [0, 25], "characterOffsetBegin": 193, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "partial", "lemma": "partial", "after": " ", "pos": "JJ", "characterOffsetEnd": 204, "segment_span": [0, 25], "characterOffsetBegin": 197, "originalText": "partial", "ArgType": null, "before": " "}, {"index": 11, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 209, "segment_span": [0, 25], "characterOffsetBegin": 205, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 12, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 216, "segment_span": [0, 25], "characterOffsetBegin": 210, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 13, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 221, "segment_span": [0, 25], "characterOffsetBegin": 217, "originalText": "over", "ArgType": null, "before": " "}, {"index": 14, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 231, "segment_span": [0, 25], "characterOffsetBegin": 222, "originalText": "different", "ArgType": null, "before": " "}, {"index": 15, "word": "kinds", "lemma": "kind", "after": " ", "pos": "NNS", "characterOffsetEnd": 237, "segment_span": [0, 25], "characterOffsetBegin": 232, "originalText": "kinds", "ArgType": null, "before": " "}, {"index": 16, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 240, "segment_span": [0, 25], "characterOffsetBegin": 238, "originalText": "of", "ArgType": null, "before": " "}, {"index": 17, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 246, "segment_span": [0, 25], "characterOffsetBegin": 241, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 247, "segment_span": [0, 25], "characterOffsetBegin": 246, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "namely", "lemma": "namely", "after": " ", "pos": "RB", "characterOffsetEnd": 254, "segment_span": [0, 25], "characterOffsetBegin": 248, "originalText": "namely", "ArgType": null, "before": " "}, {"index": 20, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 266, "segment_span": [0, 25], "characterOffsetBegin": 255, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 270, "segment_span": [0, 25], "characterOffsetBegin": 267, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 281, "segment_span": [0, 25], "characterOffsetBegin": 271, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 23, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 291, "segment_span": [0, 25], "characterOffsetBegin": 282, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 24, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 297, "segment_span": [0, 25], "characterOffsetBegin": 292, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 25, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 303, "segment_span": [0, 25], "characterOffsetBegin": 298, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 304, "characterOffsetBegin": 303, "originalText": ".", "ArgType": null, "before": ""}], "text": "For this purpose , we use the subset and partial tree kernel over different kinds of trees , namely constituent and dependency syntactic parse trees ."}, {"tokens": [{"index": 1, "word": "Diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 312, "segment_span": [0, 9], "characterOffsetBegin": 305, "originalText": "Diverse", "ArgType": null, "before": " "}, {"index": 2, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 322, "segment_span": [0, 9], "characterOffsetBegin": 313, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 326, "segment_span": [0, 9], "characterOffsetBegin": 323, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "applied", "characterOffsetEnd": 334, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [0, 9], "tense": "N", "characterOffsetBegin": 327, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 5, "word": "individually", "lemma": "individually", "after": " ", "pos": "RB", "characterOffsetEnd": 347, "segment_span": [0, 9], "characterOffsetBegin": 335, "originalText": "individually", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 351, "segment_span": [0, 9], "characterOffsetBegin": 348, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 354, "segment_span": [0, 9], "characterOffsetBegin": 352, "originalText": "in", "ArgType": null, "before": " "}, {"index": 8, "word": "combination", "lemma": "combination", "after": " ", "pos": "NN", "characterOffsetEnd": 366, "segment_span": [0, 9], "characterOffsetBegin": 355, "originalText": "combination", "ArgType": null, "before": " "}, {"index": 9, "word": "together", "lemma": "together", "after": "", "pos": "RB", "characterOffsetEnd": 375, "segment_span": [0, 9], "characterOffsetBegin": 367, "originalText": "together", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 376, "characterOffsetBegin": 375, "originalText": ".", "ArgType": null, "before": ""}], "text": "Diverse sequences are applied individually and in combination together ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 379, "segment_span": [0, 11], "characterOffsetBegin": 377, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "consider", "characterOffsetEnd": 388, "after": " ", "pos": "VBP", "is_root": true, "lemma": "consider", "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 380, "originalText": "consider", "ArgType": "verb", "before": " "}, {"index": 3, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 392, "segment_span": [0, 11], "characterOffsetBegin": 389, "originalText": "our", "ArgType": null, "before": " "}, {"index": 4, "word": "task", "lemma": "task", "after": " ", "pos": "NN", "characterOffsetEnd": 397, "segment_span": [0, 11], "characterOffsetBegin": 393, "originalText": "task", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 400, "segment_span": [0, 11], "characterOffsetBegin": 398, "originalText": "of", "ArgType": null, "before": " "}, {"index": 6, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 409, "segment_span": [0, 11], "characterOffsetBegin": 401, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 7, "word": "extraction", "lemma": "extraction", "after": " ", "pos": "NN", "characterOffsetEnd": 420, "segment_span": [0, 11], "characterOffsetBegin": 410, "originalText": "extraction", "ArgType": null, "before": " "}, {"index": 8, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 423, "segment_span": [0, 11], "characterOffsetBegin": 421, "originalText": "as", "ArgType": null, "before": " "}, {"index": 9, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 425, "segment_span": [0, 11], "characterOffsetBegin": 424, "originalText": "a", "ArgType": null, "before": " "}, {"index": 10, "word": "classification", "lemma": "classification", "after": " ", "pos": "NN", "characterOffsetEnd": 440, "segment_span": [0, 11], "characterOffsetBegin": 426, "originalText": "classification", "ArgType": null, "before": " "}, {"index": 11, "word": "problem", "lemma": "problem", "after": " ", "pos": "NN", "characterOffsetEnd": 448, "segment_span": [0, 11], "characterOffsetBegin": 441, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 12, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 454, "segment_span": [11, 16], "characterOffsetBegin": 449, "originalText": "where", "ArgType": null, "before": " "}, {"index": 13, "word": "categories", "lemma": "category", "after": " ", "pos": "NNS", "characterOffsetEnd": 465, "segment_span": [11, 16], "characterOffsetBegin": 455, "originalText": "categories", "ArgType": "subj", "before": " "}, {"index": 14, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 469, "segment_span": [11, 16], "characterOffsetBegin": 466, "originalText": "are", "ArgType": null, "before": " "}, {"index": 15, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 478, "segment_span": [11, 16], "characterOffsetBegin": 470, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 16, "word": "types", "lemma": "type", "after": "", "pos": "NNS", "characterOffsetEnd": 484, "segment_span": [11, 16], "characterOffsetBegin": 479, "originalText": "types", "ArgType": null, "before": " "}, {"index": 17, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 485, "characterOffsetBegin": 484, "originalText": ".", "ArgType": null, "before": ""}], "text": "We consider our task of relation extraction as a classification problem where categories are relation types ."}, {"tokens": [{"index": 1, "word": "All", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 489, "segment_span": [0, 16], "characterOffsetBegin": 486, "originalText": "All", "ArgType": null, "before": " "}, {"index": 2, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 495, "segment_span": [0, 16], "characterOffsetBegin": 490, "originalText": "pairs", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 498, "segment_span": [0, 16], "characterOffsetBegin": 496, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 505, "segment_span": [0, 16], "characterOffsetBegin": 499, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 5, "word": "mentions", "lemma": "mention", "after": " ", "pos": "VBZ", "characterOffsetEnd": 514, "segment_span": [0, 16], "characterOffsetBegin": 506, "originalText": "mentions", "ArgType": null, "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 517, "segment_span": [0, 16], "characterOffsetBegin": 515, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 521, "segment_span": [0, 16], "characterOffsetBegin": 518, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 526, "segment_span": [0, 16], "characterOffsetBegin": 522, "originalText": "same", "ArgType": null, "before": " "}, {"index": 9, "word": "sentence", "lemma": "sentence", "after": " ", "pos": "NN", "characterOffsetEnd": 535, "segment_span": [0, 16], "characterOffsetBegin": 527, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 10, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 539, "segment_span": [0, 16], "characterOffsetBegin": 536, "originalText": "are", "ArgType": null, "before": " "}, {"index": 11, "word": "taken", "characterOffsetEnd": 545, "after": " ", "pos": "VBN", "is_root": true, "lemma": "take", "segment_span": [0, 16], "tense": "N", "characterOffsetBegin": 540, "before": " ", "originalText": "taken", "ArgType": null, "is_pass": true}, {"index": 12, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 548, "segment_span": [0, 16], "characterOffsetBegin": 546, "originalText": "to", "ArgType": null, "before": " "}, {"index": 13, "word": "generate", "lemma": "generate", "after": " ", "pos": "VB", "characterOffsetEnd": 557, "segment_span": [0, 16], "characterOffsetBegin": 549, "originalText": "generate", "ArgType": null, "before": " "}, {"index": 14, "word": "potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 567, "segment_span": [0, 16], "characterOffsetBegin": 558, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 15, "word": "relations", "lemma": "relation", "after": "", "pos": "NNS", "characterOffsetEnd": 577, "segment_span": [0, 16], "characterOffsetBegin": 568, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 578, "segment_span": [0, 16], "characterOffsetBegin": 577, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 584, "segment_span": [16, 25], "characterOffsetBegin": 579, "originalText": "which", "ArgType": null, "before": " "}, {"index": 18, "word": "will", "lemma": "will", "after": " ", "pos": "MD", "characterOffsetEnd": 589, "segment_span": [16, 25], "characterOffsetBegin": 585, "originalText": "will", "ArgType": null, "before": " "}, {"index": 19, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 592, "segment_span": [16, 25], "characterOffsetBegin": 590, "originalText": "be", "ArgType": null, "before": " "}, {"index": 20, "word": "processed", "characterOffsetEnd": 602, "after": " ", "pos": "VBN", "is_root": true, "lemma": "process", "segment_span": [16, 25], "tense": "N", "characterOffsetBegin": 593, "before": " ", "originalText": "processed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 21, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 605, "segment_span": [16, 25], "characterOffsetBegin": 603, "originalText": "as", "ArgType": null, "before": " "}, {"index": 22, "word": "positive", "lemma": "positive", "after": " ", "pos": "JJ", "characterOffsetEnd": 614, "segment_span": [16, 25], "characterOffsetBegin": 606, "originalText": "positive", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 618, "segment_span": [16, 25], "characterOffsetBegin": 615, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "negative", "lemma": "negative", "after": " ", "pos": "JJ", "characterOffsetEnd": 627, "segment_span": [16, 25], "characterOffsetBegin": 619, "originalText": "negative", "ArgType": null, "before": " "}, {"index": 25, "word": "examples", "lemma": "example", "after": "", "pos": "NNS", "characterOffsetEnd": 636, "segment_span": [16, 25], "characterOffsetBegin": 628, "originalText": "examples", "ArgType": null, "before": " "}, {"index": 26, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 637, "characterOffsetBegin": 636, "originalText": ".", "ArgType": null, "before": ""}], "text": "All pairs of entity mentions in the same sentence are taken to generate potential relations , which will be processed as positive and negative examples ."}]}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 2, "segment_span": [0, 20], "characterOffsetBegin": 0, "originalText": "We", "ArgType": "subj", "before": ""}, {"index": 2, "word": "use", "characterOffsetEnd": 6, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 20], "tense": "P", "characterOffsetBegin": 3, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 10, "segment_span": [0, 20], "characterOffsetBegin": 7, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "newswire", "lemma": "newswire", "after": " ", "pos": "NN", "characterOffsetEnd": 19, "segment_span": [0, 20], "characterOffsetBegin": 11, "originalText": "newswire", "ArgType": "dobj", "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 23, "segment_span": [0, 20], "characterOffsetBegin": 20, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "broadcast", "lemma": "broadcast", "after": " ", "pos": "NN", "characterOffsetEnd": 33, "segment_span": [0, 20], "characterOffsetBegin": 24, "originalText": "broadcast", "ArgType": null, "before": " "}, {"index": 7, "word": "news", "lemma": "news", "after": " ", "pos": "NN", "characterOffsetEnd": 38, "segment_span": [0, 20], "characterOffsetBegin": 34, "originalText": "news", "ArgType": null, "before": " "}, {"index": 8, "word": "domain", "lemma": "domain", "after": " ", "pos": "NN", "characterOffsetEnd": 45, "segment_span": [0, 20], "characterOffsetBegin": 39, "originalText": "domain", "ArgType": null, "before": " "}, {"index": 9, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 48, "segment_span": [0, 20], "characterOffsetBegin": 46, "originalText": "in", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 52, "segment_span": [0, 20], "characterOffsetBegin": 49, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "English", "lemma": "English", "after": " ", "pos": "NNP", "characterOffsetEnd": 60, "segment_span": [0, 20], "characterOffsetBegin": 53, "originalText": "English", "ArgType": null, "before": " "}, {"index": 12, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 68, "segment_span": [0, 20], "characterOffsetBegin": 61, "originalText": "portion", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 71, "segment_span": [0, 20], "characterOffsetBegin": 69, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 75, "segment_span": [0, 20], "characterOffsetBegin": 72, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 79, "segment_span": [0, 20], "characterOffsetBegin": 76, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 16, "word": "2004", "lemma": "2004", "after": " ", "pos": "CD", "characterOffsetEnd": 84, "segment_span": [0, 20], "characterOffsetBegin": 80, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 17, "word": "corpus", "lemma": "corpus", "after": " ", "pos": "NN", "characterOffsetEnd": 91, "segment_span": [0, 20], "characterOffsetBegin": 85, "originalText": "corpus", "ArgType": null, "before": " "}, {"index": 18, "word": "provided", "lemma": "provide", "after": " ", "pos": "VBN", "characterOffsetEnd": 100, "segment_span": [0, 20], "characterOffsetBegin": 92, "originalText": "provided", "ArgType": null, "before": " "}, {"index": 19, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 103, "segment_span": [0, 20], "characterOffsetBegin": 101, "originalText": "by", "ArgType": null, "before": " "}, {"index": 20, "word": "LDC", "lemma": "LDC", "after": "", "pos": "NNP", "characterOffsetEnd": 107, "segment_span": [0, 20], "characterOffsetBegin": 104, "originalText": "LDC", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 108, "characterOffsetBegin": 107, "originalText": ".", "ArgType": null, "before": ""}], "text": "We use the newswire and broadcast news domain in the English portion of the ACE 2004 corpus provided by LDC ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 113, "segment_span": [0, 10], "characterOffsetBegin": 109, "originalText": "This", "ArgType": null, "before": " "}, {"index": 2, "word": "data", "lemma": "datum", "after": " ", "pos": "NNS", "characterOffsetEnd": 118, "segment_span": [0, 10], "characterOffsetBegin": 114, "originalText": "data", "ArgType": null, "before": " "}, {"index": 3, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 126, "segment_span": [0, 10], "characterOffsetBegin": 119, "originalText": "portion", "ArgType": "subj", "before": " "}, {"index": 4, "word": "includes", "characterOffsetEnd": 135, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "include", "segment_span": [0, 10], "tense": "Z", "characterOffsetBegin": 127, "originalText": "includes", "ArgType": "verb", "before": " "}, {"index": 5, "word": "348", "lemma": "348", "after": " ", "pos": "CD", "characterOffsetEnd": 139, "segment_span": [0, 10], "characterOffsetBegin": 136, "originalText": "348", "ArgType": null, "before": " "}, {"index": 6, "word": "documents", "lemma": "document", "after": " ", "pos": "NNS", "characterOffsetEnd": 149, "segment_span": [0, 10], "characterOffsetBegin": 140, "originalText": "documents", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 153, "segment_span": [0, 10], "characterOffsetBegin": 150, "originalText": "and", "ArgType": null, "before": " "}, {"index": 8, "word": "4400", "lemma": "4400", "after": " ", "pos": "CD", "characterOffsetEnd": 158, "segment_span": [0, 10], "characterOffsetBegin": 154, "originalText": "4400", "ArgType": null, "before": " "}, {"index": 9, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 167, "segment_span": [0, 10], "characterOffsetBegin": 159, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 10, "word": "instances", "lemma": "instance", "after": "", "pos": "NNS", "characterOffsetEnd": 177, "segment_span": [0, 10], "characterOffsetBegin": 168, "originalText": "instances", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 178, "characterOffsetBegin": 177, "originalText": ".", "ArgType": null, "before": ""}], "text": "This data portion includes 348 documents and 4400 relation instances ."}, {"tokens": [{"index": 1, "word": "It", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 181, "segment_span": [0, 9], "characterOffsetBegin": 179, "originalText": "It", "ArgType": "subj", "before": " "}, {"index": 2, "word": "defines", "characterOffsetEnd": 189, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "define", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 182, "originalText": "defines", "ArgType": "verb", "before": " "}, {"index": 3, "word": "seven", "lemma": "seven", "after": " ", "pos": "CD", "characterOffsetEnd": 195, "segment_span": [0, 9], "characterOffsetBegin": 190, "originalText": "seven", "ArgType": null, "before": " "}, {"index": 4, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 202, "segment_span": [0, 9], "characterOffsetBegin": 196, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 5, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 208, "segment_span": [0, 9], "characterOffsetBegin": 203, "originalText": "types", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 212, "segment_span": [0, 9], "characterOffsetBegin": 209, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "seven", "lemma": "seven", "after": " ", "pos": "CD", "characterOffsetEnd": 218, "segment_span": [0, 9], "characterOffsetBegin": 213, "originalText": "seven", "ArgType": null, "before": " "}, {"index": 8, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 227, "segment_span": [0, 9], "characterOffsetBegin": 219, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 9, "word": "types", "lemma": "type", "after": "", "pos": "NNS", "characterOffsetEnd": 233, "segment_span": [0, 9], "characterOffsetBegin": 228, "originalText": "types", "ArgType": null, "before": " "}, {"index": 10, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 234, "characterOffsetBegin": 233, "originalText": ".", "ArgType": null, "before": ""}], "text": "It defines seven entity types and seven relation types ."}, {"tokens": [{"index": 1, "word": "Every", "lemma": "every", "after": " ", "pos": "DT", "characterOffsetEnd": 240, "segment_span": [0, 26], "characterOffsetBegin": 235, "originalText": "Every", "ArgType": null, "before": " "}, {"index": 2, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 249, "segment_span": [0, 26], "characterOffsetBegin": 241, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 252, "segment_span": [0, 26], "characterOffsetBegin": 250, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "assigned", "characterOffsetEnd": 261, "after": " ", "pos": "VBN", "is_root": true, "lemma": "assign", "segment_span": [0, 26], "tense": "N", "characterOffsetBegin": 253, "before": " ", "originalText": "assigned", "ArgType": null, "is_pass": true}, {"index": 5, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 265, "segment_span": [0, 26], "characterOffsetBegin": 262, "originalText": "one", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 268, "segment_span": [0, 26], "characterOffsetBegin": 266, "originalText": "of", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 272, "segment_span": [0, 26], "characterOffsetBegin": 269, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "seven", "lemma": "seven", "after": " ", "pos": "CD", "characterOffsetEnd": 278, "segment_span": [0, 26], "characterOffsetBegin": 273, "originalText": "seven", "ArgType": null, "before": " "}, {"index": 9, "word": "types", "lemma": "type", "after": "", "pos": "NNS", "characterOffsetEnd": 284, "segment_span": [0, 26], "characterOffsetBegin": 279, "originalText": "types", "ArgType": null, "before": " "}, {"index": 10, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 285, "segment_span": [0, 26], "characterOffsetBegin": 284, "originalText": ":", "ArgType": null, "before": ""}, {"index": 11, "word": "Physical", "lemma": "physical", "after": "", "pos": "JJ", "characterOffsetEnd": 294, "segment_span": [0, 26], "characterOffsetBegin": 286, "originalText": "Physical", "ArgType": null, "before": " "}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 295, "segment_span": [0, 26], "characterOffsetBegin": 294, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "Person/Social", "lemma": "Person/Social", "after": "", "pos": "NNP", "characterOffsetEnd": 309, "segment_span": [0, 26], "characterOffsetBegin": 296, "originalText": "Person/Social", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 310, "segment_span": [0, 26], "characterOffsetBegin": 309, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "Employment/Membership/Subsidiary", "lemma": "Employment/Membership/Subsidiary", "after": "", "pos": "NNP", "characterOffsetEnd": 343, "segment_span": [0, 26], "characterOffsetBegin": 311, "originalText": "Employment/Membership/Subsidiary", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 344, "segment_span": [0, 26], "characterOffsetBegin": 343, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "Agent-Artifact", "lemma": "Agent-Artifact", "after": "", "pos": "NNP", "characterOffsetEnd": 359, "segment_span": [0, 26], "characterOffsetBegin": 345, "originalText": "Agent-Artifact", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 360, "segment_span": [0, 26], "characterOffsetBegin": 359, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "PER/ORG", "lemma": "PER/ORG", "after": " ", "pos": "NNP", "characterOffsetEnd": 368, "segment_span": [0, 26], "characterOffsetBegin": 361, "originalText": "PER/ORG", "ArgType": null, "before": " "}, {"index": 20, "word": "Affiliation", "lemma": "Affiliation", "after": "", "pos": "NNP", "characterOffsetEnd": 380, "segment_span": [0, 26], "characterOffsetBegin": 369, "originalText": "Affiliation", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 381, "segment_span": [0, 26], "characterOffsetBegin": 380, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "GPE", "lemma": "GPE", "after": " ", "pos": "NNP", "characterOffsetEnd": 385, "segment_span": [0, 26], "characterOffsetBegin": 382, "originalText": "GPE", "ArgType": null, "before": " "}, {"index": 23, "word": "Affiliation", "lemma": "Affiliation", "after": "", "pos": "NNP", "characterOffsetEnd": 397, "segment_span": [0, 26], "characterOffsetBegin": 386, "originalText": "Affiliation", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 398, "segment_span": [0, 26], "characterOffsetBegin": 397, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 402, "segment_span": [0, 26], "characterOffsetBegin": 399, "originalText": "and", "ArgType": null, "before": " "}, {"index": 26, "word": "Discourse", "lemma": "discourse", "after": "", "pos": "NN", "characterOffsetEnd": 412, "segment_span": [0, 26], "characterOffsetBegin": 403, "originalText": "Discourse", "ArgType": null, "before": " "}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 413, "characterOffsetBegin": 412, "originalText": ".", "ArgType": null, "before": ""}], "text": "Every relation is assigned one of the seven types : Physical , Person/Social , Employment/Membership/Subsidiary , Agent-Artifact , PER/ORG Affiliation , GPE Affiliation , and Discourse ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 417, "segment_span": [0, 15], "characterOffsetBegin": 414, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "sake", "lemma": "sake", "after": " ", "pos": "NN", "characterOffsetEnd": 422, "segment_span": [0, 15], "characterOffsetBegin": 418, "originalText": "sake", "ArgType": null, "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 425, "segment_span": [0, 15], "characterOffsetBegin": 423, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "space", "lemma": "space", "after": "", "pos": "NN", "characterOffsetEnd": 431, "segment_span": [0, 15], "characterOffsetBegin": 426, "originalText": "space", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 432, "segment_span": [0, 15], "characterOffsetBegin": 431, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 435, "segment_span": [0, 15], "characterOffsetBegin": 433, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "do", "lemma": "do", "after": " ", "pos": "VBP", "characterOffsetEnd": 438, "segment_span": [0, 15], "characterOffsetBegin": 436, "originalText": "do", "ArgType": null, "before": " "}, {"index": 8, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 442, "segment_span": [0, 15], "characterOffsetBegin": 439, "originalText": "not", "ArgType": null, "before": " "}, {"index": 9, "word": "explain", "characterOffsetEnd": 450, "after": " ", "pos": "VB", "is_root": true, "lemma": "explain", "segment_span": [0, 15], "tense": "B", "characterOffsetBegin": 443, "originalText": "explain", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 10, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 456, "segment_span": [0, 15], "characterOffsetBegin": 451, "originalText": "these", "ArgType": null, "before": " "}, {"index": 11, "word": "relationships", "lemma": "relationship", "after": " ", "pos": "NNS", "characterOffsetEnd": 470, "segment_span": [0, 15], "characterOffsetBegin": 457, "originalText": "relationships", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "here", "lemma": "here", "after": "", "pos": "RB", "characterOffsetEnd": 475, "segment_span": [0, 15], "characterOffsetBegin": 471, "originalText": "here", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 476, "segment_span": [0, 15], "characterOffsetBegin": 475, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "nevertheless", "lemma": "nevertheless", "after": "", "pos": "RB", "characterOffsetEnd": 489, "segment_span": [0, 15], "characterOffsetBegin": 477, "originalText": "nevertheless", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 490, "segment_span": [0, 15], "characterOffsetBegin": 489, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "they", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 495, "segment_span": [15, 24], "characterOffsetBegin": 491, "originalText": "they", "ArgType": null, "before": " "}, {"index": 17, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 499, "segment_span": [15, 24], "characterOffsetBegin": 496, "originalText": "are", "ArgType": null, "before": " "}, {"index": 18, "word": "explicitly", "lemma": "explicitly", "after": " ", "pos": "RB", "characterOffsetEnd": 510, "segment_span": [15, 24], "characterOffsetBegin": 500, "originalText": "explicitly", "ArgType": null, "before": " "}, {"index": 19, "word": "described", "characterOffsetEnd": 520, "after": " ", "pos": "VBN", "is_root": true, "lemma": "describe", "segment_span": [15, 24], "tense": "N", "characterOffsetBegin": 511, "before": " ", "originalText": "described", "ArgType": null, "is_pass": true}, {"index": 20, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 523, "segment_span": [15, 24], "characterOffsetBegin": 521, "originalText": "in", "ArgType": null, "before": " "}, {"index": 21, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 527, "segment_span": [15, 24], "characterOffsetBegin": 524, "originalText": "the", "ArgType": null, "before": " "}, {"index": 22, "word": "ACE", "lemma": "ace", "after": " ", "pos": "NN", "characterOffsetEnd": 531, "segment_span": [15, 24], "characterOffsetBegin": 528, "originalText": "ACE", "ArgType": null, "before": " "}, {"index": 23, "word": "document", "lemma": "document", "after": " ", "pos": "NN", "characterOffsetEnd": 540, "segment_span": [15, 24], "characterOffsetBegin": 532, "originalText": "document", "ArgType": null, "before": " "}, {"index": 24, "word": "guidelines", "lemma": "guideline", "after": "", "pos": "NNS", "characterOffsetEnd": 551, "segment_span": [15, 24], "characterOffsetBegin": 541, "originalText": "guidelines", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 552, "characterOffsetBegin": 551, "originalText": ".", "ArgType": null, "before": ""}], "text": "For sake of space , we do not explain these relationships here , nevertheless , they are explicitly described in the ACE document guidelines ."}, {"tokens": [{"index": 1, "word": "There", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 558, "segment_span": [0, 17], "characterOffsetBegin": 553, "originalText": "There", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "characterOffsetEnd": 562, "after": " ", "pos": "VBP", "is_root": true, "lemma": "be", "segment_span": [0, 17], "tense": "P", "characterOffsetBegin": 559, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 3, "word": "4400", "lemma": "4400", "after": " ", "pos": "CD", "characterOffsetEnd": 567, "segment_span": [0, 17], "characterOffsetBegin": 563, "originalText": "4400", "ArgType": null, "before": " "}, {"index": 4, "word": "positive", "lemma": "positive", "after": " ", "pos": "JJ", "characterOffsetEnd": 576, "segment_span": [0, 17], "characterOffsetBegin": 568, "originalText": "positive", "ArgType": null, "before": " "}, {"index": 5, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 580, "segment_span": [0, 17], "characterOffsetBegin": 577, "originalText": "and", "ArgType": null, "before": " "}, {"index": 6, "word": "38,696", "lemma": "38,696", "after": " ", "pos": "CD", "characterOffsetEnd": 587, "segment_span": [0, 17], "characterOffsetBegin": 581, "originalText": "38,696", "ArgType": null, "before": " "}, {"index": 7, "word": "negative", "lemma": "negative", "after": " ", "pos": "JJ", "characterOffsetEnd": 596, "segment_span": [0, 17], "characterOffsetBegin": 588, "originalText": "negative", "ArgType": null, "before": " "}, {"index": 8, "word": "examples", "lemma": "example", "after": " ", "pos": "NNS", "characterOffsetEnd": 605, "segment_span": [0, 17], "characterOffsetBegin": 597, "originalText": "examples", "ArgType": "subj", "before": " "}, {"index": 9, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 610, "segment_span": [0, 17], "characterOffsetBegin": 606, "originalText": "when", "ArgType": null, "before": " "}, {"index": 10, "word": "generating", "lemma": "generate", "after": " ", "pos": "VBG", "characterOffsetEnd": 621, "segment_span": [0, 17], "characterOffsetBegin": 611, "originalText": "generating", "ArgType": null, "before": " "}, {"index": 11, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 627, "segment_span": [0, 17], "characterOffsetBegin": 622, "originalText": "pairs", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 630, "segment_span": [0, 17], "characterOffsetBegin": 628, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 637, "segment_span": [0, 17], "characterOffsetBegin": 631, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 14, "word": "mentions", "lemma": "mention", "after": " ", "pos": "VBZ", "characterOffsetEnd": 646, "segment_span": [0, 17], "characterOffsetBegin": 638, "originalText": "mentions", "ArgType": null, "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 649, "segment_span": [0, 17], "characterOffsetBegin": 647, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": "potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 659, "segment_span": [0, 17], "characterOffsetBegin": 650, "originalText": "potential", "ArgType": null, "before": " "}, {"index": 17, "word": "relations", "lemma": "relation", "after": "", "pos": "NNS", "characterOffsetEnd": 669, "segment_span": [0, 17], "characterOffsetBegin": 660, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 670, "characterOffsetBegin": 669, "originalText": ".", "ArgType": null, "before": ""}], "text": "There are 4400 positive and 38,696 negative examples when generating pairs of entity mentions as potential relations ."}, {"tokens": [{"index": 1, "word": "Documents", "lemma": "document", "after": " ", "pos": "NNS", "characterOffsetEnd": 680, "segment_span": [0, 13], "characterOffsetBegin": 671, "originalText": "Documents", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 684, "segment_span": [0, 13], "characterOffsetBegin": 681, "originalText": "are", "ArgType": null, "before": " "}, {"index": 3, "word": "parsed", "characterOffsetEnd": 691, "after": " ", "pos": "VBN", "is_root": true, "lemma": "parse", "segment_span": [0, 13], "tense": "N", "characterOffsetBegin": 685, "before": " ", "originalText": "parsed", "ArgType": null, "is_pass": true}, {"index": 4, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 697, "segment_span": [0, 13], "characterOffsetBegin": 692, "originalText": "using", "ArgType": null, "before": " "}, {"index": 5, "word": "Stanford", "lemma": "Stanford", "after": " ", "pos": "NNP", "characterOffsetEnd": 706, "segment_span": [0, 13], "characterOffsetBegin": 698, "originalText": "Stanford", "ArgType": null, "before": " "}, {"index": 6, "word": "Parser", "lemma": "Parser", "after": " ", "pos": "NNP", "characterOffsetEnd": 713, "segment_span": [0, 13], "characterOffsetBegin": 707, "originalText": "Parser", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 715, "segment_span": [0, 13], "characterOffsetBegin": 714, "originalText": "(", "ArgType": null, "before": " "}, {"index": 8, "word": "Klein", "lemma": "Klein", "after": " ", "pos": "NNP", "characterOffsetEnd": 720, "segment_span": [0, 13], "characterOffsetBegin": 715, "originalText": "Klein", "ArgType": null, "before": ""}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 724, "segment_span": [0, 13], "characterOffsetBegin": 721, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "Manning", "lemma": "Manning", "after": "", "pos": "NNP", "characterOffsetEnd": 732, "segment_span": [0, 13], "characterOffsetBegin": 725, "originalText": "Manning", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 733, "segment_span": [0, 13], "characterOffsetBegin": 732, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "2003", "lemma": "2003", "after": "", "pos": "CD", "characterOffsetEnd": 738, "segment_span": [0, 13], "characterOffsetBegin": 734, "originalText": "2003", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 739, "segment_span": [0, 13], "characterOffsetBegin": 738, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 742, "segment_span": [13, 17], "characterOffsetBegin": 740, "originalText": "to", "ArgType": null, "before": " "}, {"index": 15, "word": "produce", "characterOffsetEnd": 750, "after": " ", "pos": "VB", "is_root": true, "lemma": "produce", "segment_span": [13, 17], "tense": "B", "characterOffsetBegin": 743, "originalText": "produce", "ArgType": null, "before": " "}, {"index": 16, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 756, "segment_span": [13, 17], "characterOffsetBegin": 751, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 17, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 762, "segment_span": [13, 17], "characterOffsetBegin": 757, "originalText": "trees", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 763, "characterOffsetBegin": 762, "originalText": ".", "ArgType": null, "before": ""}], "text": "Documents are parsed using Stanford Parser ( Klein and Manning , 2003 ) to produce parse trees ."}, {"tokens": [{"index": 1, "word": "Potential", "lemma": "potential", "after": " ", "pos": "JJ", "characterOffsetEnd": 773, "segment_span": [0, 4], "characterOffsetBegin": 764, "originalText": "Potential", "ArgType": null, "before": " "}, {"index": 2, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 783, "segment_span": [0, 4], "characterOffsetBegin": 774, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 787, "segment_span": [0, 4], "characterOffsetBegin": 784, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "generated", "characterOffsetEnd": 797, "after": " ", "pos": "VBN", "is_root": true, "lemma": "generate", "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 788, "before": " ", "originalText": "generated", "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 800, "segment_span": [4, 15], "characterOffsetBegin": 798, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "iterating", "characterOffsetEnd": 810, "after": " ", "pos": "VBG", "is_root": true, "lemma": "iterate", "segment_span": [4, 15], "tense": "G", "characterOffsetBegin": 801, "originalText": "iterating", "ArgType": null, "before": " "}, {"index": 7, "word": "all", "lemma": "all", "after": " ", "pos": "DT", "characterOffsetEnd": 814, "segment_span": [4, 15], "characterOffsetBegin": 811, "originalText": "all", "ArgType": null, "before": " "}, {"index": 8, "word": "pairs", "lemma": "pair", "after": " ", "pos": "NNS", "characterOffsetEnd": 820, "segment_span": [4, 15], "characterOffsetBegin": 815, "originalText": "pairs", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 823, "segment_span": [4, 15], "characterOffsetBegin": 821, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 830, "segment_span": [4, 15], "characterOffsetBegin": 824, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 11, "word": "mentions", "lemma": "mention", "after": " ", "pos": "VBZ", "characterOffsetEnd": 839, "segment_span": [4, 15], "characterOffsetBegin": 831, "originalText": "mentions", "ArgType": null, "before": " "}, {"index": 12, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 842, "segment_span": [4, 15], "characterOffsetBegin": 840, "originalText": "in", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 846, "segment_span": [4, 15], "characterOffsetBegin": 843, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "same", "lemma": "same", "after": " ", "pos": "JJ", "characterOffsetEnd": 851, "segment_span": [4, 15], "characterOffsetBegin": 847, "originalText": "same", "ArgType": null, "before": " "}, {"index": 15, "word": "sentence", "lemma": "sentence", "after": "", "pos": "NN", "characterOffsetEnd": 860, "segment_span": [4, 15], "characterOffsetBegin": 852, "originalText": "sentence", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 861, "characterOffsetBegin": 860, "originalText": ".", "ArgType": null, "before": ""}], "text": "Potential relations are generated by iterating all pairs of entity mentions in the same sentence ."}, {"tokens": [{"index": 1, "word": "Entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 868, "segment_span": [0, 12], "characterOffsetBegin": 862, "originalText": "Entity", "ArgType": null, "before": " "}, {"index": 2, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 880, "segment_span": [0, 12], "characterOffsetBegin": 869, "originalText": "information", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 881, "segment_span": [0, 12], "characterOffsetBegin": 880, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "namely", "lemma": "namely", "after": " ", "pos": "RB", "characterOffsetEnd": 888, "segment_span": [0, 12], "characterOffsetBegin": 882, "originalText": "namely", "ArgType": null, "before": " "}, {"index": 5, "word": "entity", "lemma": "entity", "after": " ", "pos": "NN", "characterOffsetEnd": 895, "segment_span": [0, 12], "characterOffsetBegin": 889, "originalText": "entity", "ArgType": null, "before": " "}, {"index": 6, "word": "type", "lemma": "type", "after": "", "pos": "NN", "characterOffsetEnd": 900, "segment_span": [0, 12], "characterOffsetBegin": 896, "originalText": "type", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 901, "segment_span": [0, 12], "characterOffsetBegin": 900, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 904, "segment_span": [0, 12], "characterOffsetBegin": 902, "originalText": "is", "ArgType": null, "before": " "}, {"index": 9, "word": "integrated", "characterOffsetEnd": 915, "after": " ", "pos": "VBN", "is_root": true, "lemma": "integrate", "segment_span": [0, 12], "tense": "N", "characterOffsetBegin": 905, "before": " ", "originalText": "integrated", "ArgType": null, "is_pass": true}, {"index": 10, "word": "into", "lemma": "into", "after": " ", "pos": "IN", "characterOffsetEnd": 920, "segment_span": [0, 12], "characterOffsetBegin": 916, "originalText": "into", "ArgType": null, "before": " "}, {"index": 11, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 926, "segment_span": [0, 12], "characterOffsetBegin": 921, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 12, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 932, "segment_span": [0, 12], "characterOffsetBegin": 927, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 933, "characterOffsetBegin": 932, "originalText": ".", "ArgType": null, "before": ""}], "text": "Entity information , namely entity type , is integrated into parse trees ."}, {"tokens": [{"index": 1, "word": "To", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 936, "segment_span": [0, 3], "characterOffsetBegin": 934, "originalText": "To", "ArgType": null, "before": " "}, {"index": 2, "word": "train", "characterOffsetEnd": 942, "after": " ", "pos": "VB", "is_root": true, "lemma": "train", "segment_span": [0, 3], "tense": "B", "characterOffsetBegin": 937, "originalText": "train", "ArgType": null, "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 946, "segment_span": [0, 3], "characterOffsetBegin": 943, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "test", "characterOffsetEnd": 951, "after": " ", "pos": "VB", "is_root": true, "lemma": "test", "segment_span": [3, 8], "tense": "B", "characterOffsetBegin": 947, "originalText": "test", "ArgType": null, "before": " "}, {"index": 5, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 955, "segment_span": [3, 8], "characterOffsetBegin": 952, "originalText": "our", "ArgType": null, "before": " "}, {"index": 6, "word": "binary", "lemma": "binary", "after": " ", "pos": "JJ", "characterOffsetEnd": 962, "segment_span": [3, 8], "characterOffsetBegin": 956, "originalText": "binary", "ArgType": null, "before": " "}, {"index": 7, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 971, "segment_span": [3, 8], "characterOffsetBegin": 963, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 8, "word": "classifier", "lemma": "classifier", "after": "", "pos": "NN", "characterOffsetEnd": 982, "segment_span": [3, 8], "characterOffsetBegin": 972, "originalText": "classifier", "ArgType": "dobj", "before": " "}, {"index": 9, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 983, "segment_span": [8, 12], "characterOffsetBegin": 982, "originalText": ",", "ArgType": null, "before": ""}, {"index": 10, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 986, "segment_span": [8, 12], "characterOffsetBegin": 984, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 11, "word": "used", "characterOffsetEnd": 991, "after": " ", "pos": "VBD", "is_root": true, "lemma": "use", "segment_span": [8, 12], "tense": "D", "characterOffsetBegin": 987, "originalText": "used", "ArgType": "verb", "before": " "}, {"index": 12, "word": "SVMs", "lemma": "svm", "after": "", "pos": "NNS", "characterOffsetEnd": 996, "segment_span": [8, 12], "characterOffsetBegin": 992, "originalText": "SVMs", "ArgType": "dobj", "before": " "}, {"index": 13, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 997, "characterOffsetBegin": 996, "originalText": ".", "ArgType": null, "before": ""}], "text": "To train and test our binary relation classifier , we used SVMs ."}, {"tokens": [{"index": 1, "word": "Here", "lemma": "here", "after": "", "pos": "RB", "characterOffsetEnd": 1002, "segment_span": [0, 11], "characterOffsetBegin": 998, "originalText": "Here", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1003, "segment_span": [0, 11], "characterOffsetBegin": 1002, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 1012, "segment_span": [0, 11], "characterOffsetBegin": 1004, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 4, "word": "detection", "lemma": "detection", "after": " ", "pos": "NN", "characterOffsetEnd": 1022, "segment_span": [0, 11], "characterOffsetBegin": 1013, "originalText": "detection", "ArgType": null, "before": " "}, {"index": 5, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1025, "segment_span": [0, 11], "characterOffsetBegin": 1023, "originalText": "is", "ArgType": null, "before": " "}, {"index": 6, "word": "formulated", "characterOffsetEnd": 1036, "after": " ", "pos": "VBN", "is_root": true, "lemma": "formulate", "segment_span": [0, 11], "tense": "N", "characterOffsetBegin": 1026, "before": " ", "originalText": "formulated", "ArgType": null, "is_pass": true}, {"index": 7, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1039, "segment_span": [0, 11], "characterOffsetBegin": 1037, "originalText": "as", "ArgType": null, "before": " "}, {"index": 8, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1041, "segment_span": [0, 11], "characterOffsetBegin": 1040, "originalText": "a", "ArgType": null, "before": " "}, {"index": 9, "word": "multiclass", "lemma": "multiclass", "after": " ", "pos": "JJ", "characterOffsetEnd": 1052, "segment_span": [0, 11], "characterOffsetBegin": 1042, "originalText": "multiclass", "ArgType": null, "before": " "}, {"index": 10, "word": "classification", "lemma": "classification", "after": " ", "pos": "NN", "characterOffsetEnd": 1067, "segment_span": [0, 11], "characterOffsetBegin": 1053, "originalText": "classification", "ArgType": null, "before": " "}, {"index": 11, "word": "problem", "lemma": "problem", "after": "", "pos": "NN", "characterOffsetEnd": 1075, "segment_span": [0, 11], "characterOffsetBegin": 1068, "originalText": "problem", "ArgType": null, "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1076, "characterOffsetBegin": 1075, "originalText": ".", "ArgType": null, "before": ""}], "text": "Here , relation detection is formulated as a multiclass classification problem ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1080, "segment_span": [0, 7], "characterOffsetBegin": 1077, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "one", "lemma": "one", "after": " ", "pos": "CD", "characterOffsetEnd": 1084, "segment_span": [0, 7], "characterOffsetBegin": 1081, "originalText": "one", "ArgType": null, "before": " "}, {"index": 3, "word": "vs.", "lemma": "vs.", "after": " ", "pos": "CC", "characterOffsetEnd": 1088, "segment_span": [0, 7], "characterOffsetBegin": 1085, "originalText": "vs.", "ArgType": null, "before": " "}, {"index": 4, "word": "rest", "lemma": "rest", "after": " ", "pos": "NN", "characterOffsetEnd": 1093, "segment_span": [0, 7], "characterOffsetBegin": 1089, "originalText": "rest", "ArgType": null, "before": " "}, {"index": 5, "word": "strategy", "lemma": "strategy", "after": " ", "pos": "NN", "characterOffsetEnd": 1102, "segment_span": [0, 7], "characterOffsetBegin": 1094, "originalText": "strategy", "ArgType": null, "before": " "}, {"index": 6, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1105, "segment_span": [0, 7], "characterOffsetBegin": 1103, "originalText": "is", "ArgType": null, "before": " "}, {"index": 7, "word": "employed", "characterOffsetEnd": 1114, "after": " ", "pos": "VBN", "is_root": true, "lemma": "employ", "segment_span": [0, 7], "tense": "N", "characterOffsetBegin": 1106, "before": " ", "originalText": "employed", "ArgType": null, "is_pass": true}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1117, "segment_span": [7, 18], "characterOffsetBegin": 1115, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "selecting", "characterOffsetEnd": 1127, "after": " ", "pos": "VBG", "is_root": true, "lemma": "select", "segment_span": [7, 18], "tense": "G", "characterOffsetBegin": 1118, "originalText": "selecting", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1131, "segment_span": [7, 18], "characterOffsetBegin": 1128, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "instance", "lemma": "instance", "after": " ", "pos": "NN", "characterOffsetEnd": 1140, "segment_span": [7, 18], "characterOffsetBegin": 1132, "originalText": "instance", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1145, "segment_span": [7, 18], "characterOffsetBegin": 1141, "originalText": "with", "ArgType": null, "before": " "}, {"index": 13, "word": "largest", "lemma": "largest", "after": " ", "pos": "JJS", "characterOffsetEnd": 1153, "segment_span": [7, 18], "characterOffsetBegin": 1146, "originalText": "largest", "ArgType": null, "before": " "}, {"index": 14, "word": "margin", "lemma": "margin", "after": " ", "pos": "NN", "characterOffsetEnd": 1160, "segment_span": [7, 18], "characterOffsetBegin": 1154, "originalText": "margin", "ArgType": null, "before": " "}, {"index": 15, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 1163, "segment_span": [7, 18], "characterOffsetBegin": 1161, "originalText": "as", "ArgType": null, "before": " "}, {"index": 16, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1167, "segment_span": [7, 18], "characterOffsetBegin": 1164, "originalText": "the", "ArgType": null, "before": " "}, {"index": 17, "word": "final", "lemma": "final", "after": " ", "pos": "JJ", "characterOffsetEnd": 1173, "segment_span": [7, 18], "characterOffsetBegin": 1168, "originalText": "final", "ArgType": null, "before": " "}, {"index": 18, "word": "answer", "lemma": "answer", "after": "", "pos": "NN", "characterOffsetEnd": 1180, "segment_span": [7, 18], "characterOffsetBegin": 1174, "originalText": "answer", "ArgType": null, "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1181, "characterOffsetBegin": 1180, "originalText": ".", "ArgType": null, "before": ""}], "text": "The one vs. rest strategy is employed by selecting the instance with largest margin as the final answer ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 1185, "segment_span": [0, 22], "characterOffsetBegin": 1182, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "experimentation", "lemma": "experimentation", "after": "", "pos": "NN", "characterOffsetEnd": 1201, "segment_span": [0, 22], "characterOffsetBegin": 1186, "originalText": "experimentation", "ArgType": null, "before": " "}, {"index": 3, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1202, "segment_span": [0, 22], "characterOffsetBegin": 1201, "originalText": ",", "ArgType": null, "before": ""}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1205, "segment_span": [0, 22], "characterOffsetBegin": 1203, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "use", "characterOffsetEnd": 1209, "after": " ", "pos": "VBP", "is_root": true, "lemma": "use", "segment_span": [0, 22], "tense": "P", "characterOffsetBegin": 1206, "originalText": "use", "ArgType": "verb", "before": " "}, {"index": 6, "word": "5-fold", "lemma": "5-fold", "after": " ", "pos": "RB", "characterOffsetEnd": 1216, "segment_span": [0, 22], "characterOffsetBegin": 1210, "originalText": "5-fold", "ArgType": null, "before": " "}, {"index": 7, "word": "cross-validation", "lemma": "cross-validation", "after": " ", "pos": "JJ", "characterOffsetEnd": 1233, "segment_span": [0, 22], "characterOffsetBegin": 1217, "originalText": "cross-validation", "ArgType": "dobj", "before": " "}, {"index": 8, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1238, "segment_span": [0, 22], "characterOffsetBegin": 1234, "originalText": "with", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1242, "segment_span": [0, 22], "characterOffsetBegin": 1239, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "Tree", "lemma": "Tree", "after": " ", "pos": "NNP", "characterOffsetEnd": 1247, "segment_span": [0, 22], "characterOffsetBegin": 1243, "originalText": "Tree", "ArgType": null, "before": " "}, {"index": 11, "word": "Kernel", "lemma": "Kernel", "after": " ", "pos": "NNP", "characterOffsetEnd": 1254, "segment_span": [0, 22], "characterOffsetBegin": 1248, "originalText": "Kernel", "ArgType": null, "before": " "}, {"index": 12, "word": "Tools", "lemma": "Tools", "after": " ", "pos": "NNP", "characterOffsetEnd": 1260, "segment_span": [0, 22], "characterOffsetBegin": 1255, "originalText": "Tools", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1262, "segment_span": [0, 22], "characterOffsetBegin": 1261, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 1271, "segment_span": [0, 22], "characterOffsetBegin": 1262, "originalText": "Moschitti", "ArgType": null, "before": ""}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1272, "segment_span": [0, 22], "characterOffsetBegin": 1271, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 1277, "segment_span": [0, 22], "characterOffsetBegin": 1273, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1278, "segment_span": [0, 22], "characterOffsetBegin": 1277, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1280, "segment_span": [0, 22], "characterOffsetBegin": 1279, "originalText": "(", "ArgType": null, "before": " "}, {"index": 19, "word": "available", "lemma": "available", "after": " ", "pos": "JJ", "characterOffsetEnd": 1289, "segment_span": [0, 22], "characterOffsetBegin": 1280, "originalText": "available", "ArgType": null, "before": ""}, {"index": 20, "word": "at", "lemma": "at", "after": " ", "pos": "IN", "characterOffsetEnd": 1292, "segment_span": [0, 22], "characterOffsetBegin": 1290, "originalText": "at", "ArgType": null, "before": " "}, {"index": 21, "word": "http://disi.unitn.it/\u00cb\u009cmoschitt/Tree-Kernel.htm", "lemma": "http://disi.unitn.it/\u00cb\u009cmoschitt/tree-kernel.htm", "after": "", "pos": "NN", "characterOffsetEnd": 1339, "segment_span": [0, 22], "characterOffsetBegin": 1293, "originalText": "http://disi.unitn.it/\u00cb\u009cmoschitt/Tree-Kernel.htm", "ArgType": null, "before": " "}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1340, "segment_span": [0, 22], "characterOffsetBegin": 1339, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": ".", "lemma": ".", "after": "\u0000", "pos": ".", "characterOffsetEnd": 1341, "characterOffsetBegin": 1340, "originalText": ".", "ArgType": null, "before": ""}], "text": "For experimentation , we use 5-fold cross-validation with the Tree Kernel Tools ( Moschitti , 2004 ) ( available at http://disi.unitn.it/\u00cb\u009cmoschitt/Tree-Kernel.htm ) ."}], "title": "5.1 Experimental setup"}, {"num": 0, "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 31], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 31], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 15, "segment_span": [0, 31], "characterOffsetBegin": 8, "originalText": "section", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 16, "segment_span": [0, 31], "characterOffsetBegin": 15, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 19, "segment_span": [0, 31], "characterOffsetBegin": 17, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "report", "characterOffsetEnd": 26, "after": " ", "pos": "VBP", "is_root": true, "lemma": "report", "segment_span": [0, 31], "tense": "P", "characterOffsetBegin": 20, "originalText": "report", "ArgType": "verb", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 30, "segment_span": [0, 31], "characterOffsetBegin": 27, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 38, "segment_span": [0, 31], "characterOffsetBegin": 31, "originalText": "results", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 41, "segment_span": [0, 31], "characterOffsetBegin": 39, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 51, "segment_span": [0, 31], "characterOffsetBegin": 42, "originalText": "different", "ArgType": null, "before": " "}, {"index": 11, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 59, "segment_span": [0, 31], "characterOffsetBegin": 52, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 12, "word": "setup", "lemma": "setup", "after": " ", "pos": "NN", "characterOffsetEnd": 65, "segment_span": [0, 31], "characterOffsetBegin": 60, "originalText": "setup", "ArgType": null, "before": " "}, {"index": 13, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 70, "segment_span": [0, 31], "characterOffsetBegin": 66, "originalText": "over", "ArgType": null, "before": " "}, {"index": 14, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 82, "segment_span": [0, 31], "characterOffsetBegin": 71, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 84, "segment_span": [0, 31], "characterOffsetBegin": 83, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "CT", "lemma": "ct", "after": "", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 31], "characterOffsetBegin": 84, "originalText": "CT", "ArgType": null, "before": ""}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 87, "segment_span": [0, 31], "characterOffsetBegin": 86, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 91, "segment_span": [0, 31], "characterOffsetBegin": 88, "originalText": "and", "ArgType": null, "before": " "}, {"index": 19, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 102, "segment_span": [0, 31], "characterOffsetBegin": 92, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 20, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 104, "segment_span": [0, 31], "characterOffsetBegin": 103, "originalText": "(", "ArgType": null, "before": " "}, {"index": 21, "word": "DP", "lemma": "dp", "after": "", "pos": "NN", "characterOffsetEnd": 106, "segment_span": [0, 31], "characterOffsetBegin": 104, "originalText": "DP", "ArgType": null, "before": ""}, {"index": 22, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 107, "segment_span": [0, 31], "characterOffsetBegin": 106, "originalText": ")", "ArgType": null, "before": ""}, {"index": 23, "word": "parse", "lemma": "parse", "after": " ", "pos": "VBP", "characterOffsetEnd": 113, "segment_span": [0, 31], "characterOffsetBegin": 108, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 24, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 119, "segment_span": [0, 31], "characterOffsetBegin": 114, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 25, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 123, "segment_span": [0, 31], "characterOffsetBegin": 120, "originalText": "and", "ArgType": null, "before": " "}, {"index": 26, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 133, "segment_span": [0, 31], "characterOffsetBegin": 124, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 27, "word": "taken", "lemma": "take", "after": " ", "pos": "VBN", "characterOffsetEnd": 139, "segment_span": [0, 31], "characterOffsetBegin": 134, "originalText": "taken", "ArgType": null, "before": " "}, {"index": 28, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 144, "segment_span": [0, 31], "characterOffsetBegin": 140, "originalText": "from", "ArgType": null, "before": " "}, {"index": 29, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 150, "segment_span": [0, 31], "characterOffsetBegin": 145, "originalText": "these", "ArgType": null, "before": " "}, {"index": 30, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 156, "segment_span": [0, 31], "characterOffsetBegin": 151, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 31, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 162, "segment_span": [0, 31], "characterOffsetBegin": 157, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 163, "characterOffsetBegin": 162, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this section , we report the results of different kernels setup over constituent ( CT ) and dependency ( DP ) parse trees and sequences taken from these parse trees ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 167, "segment_span": [0, 36], "characterOffsetBegin": 164, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 172, "segment_span": [0, 36], "characterOffsetBegin": 168, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 3, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 179, "segment_span": [0, 36], "characterOffsetBegin": 173, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 4, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 181, "segment_span": [0, 36], "characterOffsetBegin": 180, "originalText": "(", "ArgType": null, "before": " "}, {"index": 5, "word": "TK", "lemma": "tk", "after": "", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [0, 36], "characterOffsetBegin": 181, "originalText": "TK", "ArgType": null, "before": ""}, {"index": 6, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 184, "segment_span": [0, 36], "characterOffsetBegin": 183, "originalText": ")", "ArgType": null, "before": ""}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 185, "segment_span": [0, 36], "characterOffsetBegin": 184, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 195, "segment_span": [0, 36], "characterOffsetBegin": 186, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 9, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 202, "segment_span": [0, 36], "characterOffsetBegin": 196, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 204, "segment_span": [0, 36], "characterOffsetBegin": 203, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "CK1", "lemma": "ck1", "after": "", "pos": "NN", "characterOffsetEnd": 207, "segment_span": [0, 36], "characterOffsetBegin": 204, "originalText": "CK1", "ArgType": null, "before": ""}, {"index": 12, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 208, "segment_span": [0, 36], "characterOffsetBegin": 207, "originalText": ",", "ArgType": null, "before": ""}, {"index": 13, "word": "CK2", "lemma": "ck2", "after": "", "pos": "NN", "characterOffsetEnd": 212, "segment_span": [0, 36], "characterOffsetBegin": 209, "originalText": "CK2", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 213, "segment_span": [0, 36], "characterOffsetBegin": 212, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "CK3", "lemma": "ck3", "after": "", "pos": "NN", "characterOffsetEnd": 217, "segment_span": [0, 36], "characterOffsetBegin": 214, "originalText": "CK3", "ArgType": null, "before": " "}, {"index": 16, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 218, "segment_span": [0, 36], "characterOffsetBegin": 217, "originalText": ",", "ArgType": null, "before": ""}, {"index": 17, "word": "CK4", "lemma": "ck4", "after": "", "pos": "NN", "characterOffsetEnd": 222, "segment_span": [0, 36], "characterOffsetBegin": 219, "originalText": "CK4", "ArgType": null, "before": " "}, {"index": 18, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 223, "segment_span": [0, 36], "characterOffsetBegin": 222, "originalText": ",", "ArgType": null, "before": ""}, {"index": 19, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 227, "segment_span": [0, 36], "characterOffsetBegin": 224, "originalText": "and", "ArgType": null, "before": " "}, {"index": 20, "word": "CK5", "lemma": "ck5", "after": " ", "pos": "NN", "characterOffsetEnd": 231, "segment_span": [0, 36], "characterOffsetBegin": 228, "originalText": "CK5", "ArgType": null, "before": " "}, {"index": 21, "word": "corresponding", "lemma": "correspond", "after": " ", "pos": "VBG", "characterOffsetEnd": 245, "segment_span": [0, 36], "characterOffsetBegin": 232, "originalText": "corresponding", "ArgType": null, "before": " "}, {"index": 22, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 248, "segment_span": [0, 36], "characterOffsetBegin": 246, "originalText": "to", "ArgType": null, "before": " "}, {"index": 23, "word": "five", "lemma": "five", "after": " ", "pos": "CD", "characterOffsetEnd": 253, "segment_span": [0, 36], "characterOffsetBegin": 249, "originalText": "five", "ArgType": null, "before": " "}, {"index": 24, "word": "combination", "lemma": "combination", "after": " ", "pos": "NN", "characterOffsetEnd": 265, "segment_span": [0, 36], "characterOffsetBegin": 254, "originalText": "combination", "ArgType": null, "before": " "}, {"index": 25, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 271, "segment_span": [0, 36], "characterOffsetBegin": 266, "originalText": "types", "ArgType": null, "before": " "}, {"index": 26, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 274, "segment_span": [0, 36], "characterOffsetBegin": 272, "originalText": "in", "ArgType": null, "before": " "}, {"index": 27, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 282, "segment_span": [0, 36], "characterOffsetBegin": 275, "originalText": "Section", "ArgType": null, "before": " "}, {"index": 28, "word": "4.3.2", "lemma": "4.3.2", "after": "", "pos": "CD", "characterOffsetEnd": 288, "segment_span": [0, 36], "characterOffsetBegin": 283, "originalText": "4.3.2", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 289, "segment_span": [0, 36], "characterOffsetBegin": 288, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": "were", "lemma": "be", "after": " ", "pos": "VBD", "characterOffsetEnd": 294, "segment_span": [0, 36], "characterOffsetBegin": 290, "originalText": "were", "ArgType": null, "before": " "}, {"index": 31, "word": "employed", "characterOffsetEnd": 303, "after": " ", "pos": "VBN", "is_root": true, "lemma": "employ", "segment_span": [0, 36], "tense": "N", "characterOffsetBegin": 295, "before": " ", "originalText": "employed", "ArgType": null, "is_pass": true}, {"index": 32, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 308, "segment_span": [0, 36], "characterOffsetBegin": 304, "originalText": "over", "ArgType": null, "before": " "}, {"index": 33, "word": "these", "lemma": "these", "after": " ", "pos": "DT", "characterOffsetEnd": 314, "segment_span": [0, 36], "characterOffsetBegin": 309, "originalText": "these", "ArgType": null, "before": " "}, {"index": 34, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 318, "segment_span": [0, 36], "characterOffsetBegin": 315, "originalText": "two", "ArgType": null, "before": " "}, {"index": 35, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 328, "segment_span": [0, 36], "characterOffsetBegin": 319, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 36, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 334, "segment_span": [0, 36], "characterOffsetBegin": 329, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 37, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 335, "characterOffsetBegin": 334, "originalText": ".", "ArgType": null, "before": ""}], "text": "The tree kernel ( TK ) , composite kernel ( CK1 , CK2 , CK3 , CK4 , and CK5 corresponding to five combination types in Section 4.3.2 ) were employed over these two syntactic trees ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 339, "segment_span": [0, 43], "characterOffsetBegin": 336, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 343, "segment_span": [0, 43], "characterOffsetBegin": 340, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 348, "segment_span": [0, 43], "characterOffsetBegin": 344, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 4, "word": "kernel", "lemma": "kernel", "after": "", "pos": "NN", "characterOffsetEnd": 355, "segment_span": [0, 43], "characterOffsetBegin": 349, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 356, "segment_span": [0, 43], "characterOffsetBegin": 355, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 359, "segment_span": [0, 43], "characterOffsetBegin": 357, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 7, "word": "apply", "characterOffsetEnd": 365, "after": " ", "pos": "VBP", "is_root": true, "lemma": "apply", "segment_span": [0, 43], "tense": "P", "characterOffsetBegin": 360, "originalText": "apply", "ArgType": "verb", "before": " "}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 369, "segment_span": [0, 43], "characterOffsetBegin": 366, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 373, "segment_span": [0, 43], "characterOffsetBegin": 370, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 10, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 380, "segment_span": [0, 43], "characterOffsetBegin": 374, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 11, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 384, "segment_span": [0, 43], "characterOffsetBegin": 381, "originalText": "for", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 388, "segment_span": [0, 43], "characterOffsetBegin": 385, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "path-enclosed", "lemma": "path-enclosed", "after": " ", "pos": "JJ", "characterOffsetEnd": 402, "segment_span": [0, 43], "characterOffsetBegin": 389, "originalText": "path-enclosed", "ArgType": null, "before": " "}, {"index": 14, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 407, "segment_span": [0, 43], "characterOffsetBegin": 403, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 15, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 409, "segment_span": [0, 43], "characterOffsetBegin": 408, "originalText": "(", "ArgType": null, "before": " "}, {"index": 16, "word": "PET", "lemma": "pet", "after": "", "pos": "NN", "characterOffsetEnd": 412, "segment_span": [0, 43], "characterOffsetBegin": 409, "originalText": "PET", "ArgType": null, "before": ""}, {"index": 17, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 413, "segment_span": [0, 43], "characterOffsetBegin": 412, "originalText": ")", "ArgType": null, "before": ""}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 416, "segment_span": [0, 43], "characterOffsetBegin": 414, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 420, "segment_span": [0, 43], "characterOffsetBegin": 417, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 432, "segment_span": [0, 43], "characterOffsetBegin": 421, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 21, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 437, "segment_span": [0, 43], "characterOffsetBegin": 433, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 22, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 441, "segment_span": [0, 43], "characterOffsetBegin": 438, "originalText": "and", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 445, "segment_span": [0, 43], "characterOffsetBegin": 442, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "PT", "lemma": "pt", "after": " ", "pos": "NN", "characterOffsetEnd": 448, "segment_span": [0, 43], "characterOffsetBegin": 446, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 25, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 455, "segment_span": [0, 43], "characterOffsetBegin": 449, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 26, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 459, "segment_span": [0, 43], "characterOffsetBegin": 456, "originalText": "for", "ArgType": null, "before": " "}, {"index": 27, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 465, "segment_span": [0, 43], "characterOffsetBegin": 460, "originalText": "three", "ArgType": null, "before": " "}, {"index": 28, "word": "kinds", "lemma": "kind", "after": " ", "pos": "NNS", "characterOffsetEnd": 471, "segment_span": [0, 43], "characterOffsetBegin": 466, "originalText": "kinds", "ArgType": null, "before": " "}, {"index": 29, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 474, "segment_span": [0, 43], "characterOffsetBegin": 472, "originalText": "of", "ArgType": null, "before": " "}, {"index": 30, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 485, "segment_span": [0, 43], "characterOffsetBegin": 475, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 31, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 490, "segment_span": [0, 43], "characterOffsetBegin": 486, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 32, "word": "DW", "lemma": "dw", "after": "", "pos": "NN", "characterOffsetEnd": 493, "segment_span": [0, 43], "characterOffsetBegin": 491, "originalText": "DW", "ArgType": null, "before": " "}, {"index": 33, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 494, "segment_span": [0, 43], "characterOffsetBegin": 493, "originalText": ",", "ArgType": null, "before": ""}, {"index": 34, "word": "GR", "lemma": "gr", "after": "", "pos": "NN", "characterOffsetEnd": 497, "segment_span": [0, 43], "characterOffsetBegin": 495, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 35, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 498, "segment_span": [0, 43], "characterOffsetBegin": 497, "originalText": ",", "ArgType": null, "before": ""}, {"index": 36, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 502, "segment_span": [0, 43], "characterOffsetBegin": 499, "originalText": "and", "ArgType": null, "before": " "}, {"index": 37, "word": "GRW", "lemma": "GRW", "after": "", "pos": "NNP", "characterOffsetEnd": 506, "segment_span": [0, 43], "characterOffsetBegin": 503, "originalText": "GRW", "ArgType": null, "before": " "}, {"index": 38, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 507, "segment_span": [0, 43], "characterOffsetBegin": 506, "originalText": ",", "ArgType": null, "before": ""}, {"index": 39, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 517, "segment_span": [0, 43], "characterOffsetBegin": 508, "originalText": "described", "ArgType": null, "before": " "}, {"index": 40, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 520, "segment_span": [0, 43], "characterOffsetBegin": 518, "originalText": "in", "ArgType": null, "before": " "}, {"index": 41, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 524, "segment_span": [0, 43], "characterOffsetBegin": 521, "originalText": "the", "ArgType": null, "before": " "}, {"index": 42, "word": "previous", "lemma": "previous", "after": " ", "pos": "JJ", "characterOffsetEnd": 533, "segment_span": [0, 43], "characterOffsetBegin": 525, "originalText": "previous", "ArgType": null, "before": " "}, {"index": 43, "word": "section", "lemma": "section", "after": "", "pos": "NN", "characterOffsetEnd": 541, "segment_span": [0, 43], "characterOffsetBegin": 534, "originalText": "section", "ArgType": null, "before": " "}, {"index": 44, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 542, "characterOffsetBegin": 541, "originalText": ".", "ArgType": null, "before": ""}], "text": "For the tree kernel , we apply the SST kernel for the path-enclosed tree ( PET ) of the constituent tree and the PT kernel for three kinds of dependency tree DW , GR , and GRW , described in the previous section ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 546, "segment_span": [0, 14], "characterOffsetBegin": 543, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 550, "segment_span": [0, 14], "characterOffsetBegin": 547, "originalText": "two", "ArgType": null, "before": " "}, {"index": 3, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 560, "segment_span": [0, 14], "characterOffsetBegin": 551, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 4, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 568, "segment_span": [0, 14], "characterOffsetBegin": 561, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 5, "word": "CK2", "lemma": "ck2", "after": " ", "pos": "NN", "characterOffsetEnd": 572, "segment_span": [0, 14], "characterOffsetBegin": 569, "originalText": "CK2", "ArgType": null, "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 576, "segment_span": [0, 14], "characterOffsetBegin": 573, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "CK3", "lemma": "ck3", "after": " ", "pos": "NN", "characterOffsetEnd": 580, "segment_span": [0, 14], "characterOffsetBegin": 577, "originalText": "CK3", "ArgType": null, "before": " "}, {"index": 8, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 584, "segment_span": [0, 14], "characterOffsetBegin": 581, "originalText": "are", "ArgType": null, "before": " "}, {"index": 9, "word": "applied", "characterOffsetEnd": 592, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [0, 14], "tense": "N", "characterOffsetBegin": 585, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 10, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 597, "segment_span": [0, 14], "characterOffsetBegin": 593, "originalText": "over", "ArgType": null, "before": " "}, {"index": 11, "word": "both", "lemma": "both", "after": " ", "pos": "CC", "characterOffsetEnd": 602, "segment_span": [0, 14], "characterOffsetBegin": 598, "originalText": "both", "ArgType": null, "before": " "}, {"index": 12, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 606, "segment_span": [0, 14], "characterOffsetBegin": 603, "originalText": "two", "ArgType": null, "before": " "}, {"index": 13, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 612, "segment_span": [0, 14], "characterOffsetBegin": 607, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 14, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 618, "segment_span": [0, 14], "characterOffsetBegin": 613, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 15, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 619, "characterOffsetBegin": 618, "originalText": ".", "ArgType": null, "before": ""}], "text": "The two composite kernels CK2 and CK3 are applied over both two parse trees ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 623, "segment_span": [0, 27], "characterOffsetBegin": 620, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "word", "lemma": "word", "after": " ", "pos": "NN", "characterOffsetEnd": 628, "segment_span": [0, 27], "characterOffsetBegin": 624, "originalText": "word", "ArgType": null, "before": " "}, {"index": 3, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 637, "segment_span": [0, 27], "characterOffsetBegin": 629, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 4, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 645, "segment_span": [0, 27], "characterOffsetBegin": 638, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 5, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 649, "segment_span": [0, 27], "characterOffsetBegin": 646, "originalText": "are", "ArgType": null, "before": " "}, {"index": 6, "word": "applied", "characterOffsetEnd": 657, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [0, 27], "tense": "N", "characterOffsetBegin": 650, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 7, "word": "over", "lemma": "over", "after": " ", "pos": "IN", "characterOffsetEnd": 662, "segment_span": [0, 27], "characterOffsetBegin": 658, "originalText": "over", "ArgType": null, "before": " "}, {"index": 8, "word": "six", "lemma": "six", "after": " ", "pos": "CD", "characterOffsetEnd": 666, "segment_span": [0, 27], "characterOffsetBegin": 663, "originalText": "six", "ArgType": null, "before": " "}, {"index": 9, "word": "sequences", "lemma": "sequence", "after": " ", "pos": "NNS", "characterOffsetEnd": 676, "segment_span": [0, 27], "characterOffsetBegin": 667, "originalText": "sequences", "ArgType": null, "before": " "}, {"index": 10, "word": "5K1", "lemma": "5k1", "after": "", "pos": "NN", "characterOffsetEnd": 680, "segment_span": [0, 27], "characterOffsetBegin": 677, "originalText": "5K1", "ArgType": null, "before": " "}, {"index": 11, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 681, "segment_span": [0, 27], "characterOffsetBegin": 680, "originalText": ",", "ArgType": null, "before": ""}, {"index": 12, "word": "5K2", "lemma": "5k2", "after": "", "pos": "NN", "characterOffsetEnd": 685, "segment_span": [0, 27], "characterOffsetBegin": 682, "originalText": "5K2", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 686, "segment_span": [0, 27], "characterOffsetBegin": 685, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "5K3", "lemma": "5k3", "after": "", "pos": "NN", "characterOffsetEnd": 690, "segment_span": [0, 27], "characterOffsetBegin": 687, "originalText": "5K3", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 691, "segment_span": [0, 27], "characterOffsetBegin": 690, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "5K4", "lemma": "5k4", "after": "", "pos": "NN", "characterOffsetEnd": 695, "segment_span": [0, 27], "characterOffsetBegin": 692, "originalText": "5K4", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 696, "segment_span": [0, 27], "characterOffsetBegin": 695, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "5K5", "lemma": "5k5", "after": "", "pos": "NN", "characterOffsetEnd": 700, "segment_span": [0, 27], "characterOffsetBegin": 697, "originalText": "5K5", "ArgType": null, "before": " "}, {"index": 19, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 701, "segment_span": [0, 27], "characterOffsetBegin": 700, "originalText": ",", "ArgType": null, "before": ""}, {"index": 20, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 705, "segment_span": [0, 27], "characterOffsetBegin": 702, "originalText": "and", "ArgType": null, "before": " "}, {"index": 21, "word": "5K6", "lemma": "5k6", "after": " ", "pos": "NN", "characterOffsetEnd": 709, "segment_span": [0, 27], "characterOffsetBegin": 706, "originalText": "5K6", "ArgType": null, "before": " "}, {"index": 22, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 711, "segment_span": [0, 27], "characterOffsetBegin": 710, "originalText": "(", "ArgType": null, "before": " "}, {"index": 23, "word": "described", "lemma": "describe", "after": " ", "pos": "VBN", "characterOffsetEnd": 720, "segment_span": [0, 27], "characterOffsetBegin": 711, "originalText": "described", "ArgType": null, "before": ""}, {"index": 24, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 723, "segment_span": [0, 27], "characterOffsetBegin": 721, "originalText": "in", "ArgType": null, "before": " "}, {"index": 25, "word": "Section", "lemma": "section", "after": " ", "pos": "NN", "characterOffsetEnd": 731, "segment_span": [0, 27], "characterOffsetBegin": 724, "originalText": "Section", "ArgType": null, "before": " "}, {"index": 26, "word": "4.3", "lemma": "4.3", "after": "", "pos": "CD", "characterOffsetEnd": 735, "segment_span": [0, 27], "characterOffsetBegin": 732, "originalText": "4.3", "ArgType": null, "before": " "}, {"index": 27, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 736, "segment_span": [0, 27], "characterOffsetBegin": 735, "originalText": ")", "ArgType": null, "before": ""}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 737, "characterOffsetBegin": 736, "originalText": ".", "ArgType": null, "before": ""}], "text": "The word sequence kernels are applied over six sequences 5K1 , 5K2 , 5K3 , 5K4 , 5K5 , and 5K6 ( described in Section 4.3 ) ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 741, "segment_span": [0, 10], "characterOffsetBegin": 738, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 749, "segment_span": [0, 10], "characterOffsetBegin": 742, "originalText": "results", "ArgType": null, "before": " "}, {"index": 3, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 753, "segment_span": [0, 10], "characterOffsetBegin": 750, "originalText": "are", "ArgType": null, "before": " "}, {"index": 4, "word": "shown", "characterOffsetEnd": 759, "after": " ", "pos": "VBN", "is_root": true, "lemma": "show", "segment_span": [0, 10], "tense": "N", "characterOffsetBegin": 754, "before": " ", "originalText": "shown", "ArgType": null, "is_pass": true}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 762, "segment_span": [0, 10], "characterOffsetBegin": 760, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 768, "segment_span": [0, 10], "characterOffsetBegin": 763, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 7, "word": "1", "lemma": "1", "after": " ", "pos": "CD", "characterOffsetEnd": 770, "segment_span": [0, 10], "characterOffsetBegin": 769, "originalText": "1", "ArgType": null, "before": " "}, {"index": 8, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 774, "segment_span": [0, 10], "characterOffsetBegin": 771, "originalText": "and", "ArgType": null, "before": " "}, {"index": 9, "word": "Table", "lemma": "Table", "after": " ", "pos": "NNP", "characterOffsetEnd": 780, "segment_span": [0, 10], "characterOffsetBegin": 775, "originalText": "Table", "ArgType": null, "before": " "}, {"index": 10, "word": "2", "lemma": "2", "after": "", "pos": "CD", "characterOffsetEnd": 782, "segment_span": [0, 10], "characterOffsetBegin": 781, "originalText": "2", "ArgType": null, "before": " "}, {"index": 11, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 783, "characterOffsetBegin": 782, "originalText": ".", "ArgType": null, "before": ""}], "text": "The results are shown in Table 1 and Table 2 ."}, {"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 786, "segment_span": [0, 9], "characterOffsetBegin": 784, "originalText": "In", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 790, "segment_span": [0, 9], "characterOffsetBegin": 787, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 796, "segment_span": [0, 9], "characterOffsetBegin": 791, "originalText": "first", "ArgType": null, "before": " "}, {"index": 4, "word": "table", "lemma": "table", "after": "", "pos": "NN", "characterOffsetEnd": 802, "segment_span": [0, 9], "characterOffsetBegin": 797, "originalText": "table", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 803, "segment_span": [0, 9], "characterOffsetBegin": 802, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 807, "segment_span": [0, 9], "characterOffsetBegin": 804, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "first", "lemma": "first", "after": " ", "pos": "JJ", "characterOffsetEnd": 813, "segment_span": [0, 9], "characterOffsetBegin": 808, "originalText": "first", "ArgType": null, "before": " "}, {"index": 8, "word": "column", "lemma": "column", "after": " ", "pos": "NN", "characterOffsetEnd": 820, "segment_span": [0, 9], "characterOffsetBegin": 814, "originalText": "column", "ArgType": "subj", "before": " "}, {"index": 9, "word": "indicates", "characterOffsetEnd": 830, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "indicate", "segment_span": [0, 9], "tense": "Z", "characterOffsetBegin": 821, "originalText": "indicates", "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 834, "segment_span": [9, 27], "characterOffsetBegin": 831, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "structure", "lemma": "structure", "after": " ", "pos": "NN", "characterOffsetEnd": 844, "segment_span": [9, 27], "characterOffsetBegin": 835, "originalText": "structure", "ArgType": "subj", "before": " "}, {"index": 12, "word": "used", "lemma": "use", "after": " ", "pos": "VBN", "characterOffsetEnd": 849, "segment_span": [9, 27], "characterOffsetBegin": 845, "originalText": "used", "ArgType": null, "before": " "}, {"index": 13, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 852, "segment_span": [9, 27], "characterOffsetBegin": 850, "originalText": "in", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 856, "segment_span": [9, 27], "characterOffsetBegin": 853, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "combination", "lemma": "combination", "after": " ", "pos": "NN", "characterOffsetEnd": 868, "segment_span": [9, 27], "characterOffsetBegin": 857, "originalText": "combination", "ArgType": null, "before": " "}, {"index": 16, "word": "shown", "lemma": "show", "after": " ", "pos": "VBN", "characterOffsetEnd": 874, "segment_span": [9, 27], "characterOffsetBegin": 869, "originalText": "shown", "ArgType": null, "before": " "}, {"index": 17, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 877, "segment_span": [9, 27], "characterOffsetBegin": 875, "originalText": "in", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 881, "segment_span": [9, 27], "characterOffsetBegin": 878, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 888, "segment_span": [9, 27], "characterOffsetBegin": 882, "originalText": "second", "ArgType": null, "before": " "}, {"index": 20, "word": "column", "lemma": "column", "after": "", "pos": "NN", "characterOffsetEnd": 895, "segment_span": [9, 27], "characterOffsetBegin": 889, "originalText": "column", "ArgType": null, "before": " "}, {"index": 21, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 896, "segment_span": [9, 27], "characterOffsetBegin": 895, "originalText": ",", "ArgType": null, "before": ""}, {"index": 22, "word": "e.g.", "lemma": "e.g.", "after": " ", "pos": "FW", "characterOffsetEnd": 901, "segment_span": [9, 27], "characterOffsetBegin": 897, "originalText": "e.g.", "ArgType": null, "before": " "}, {"index": 23, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 905, "segment_span": [9, 27], "characterOffsetBegin": 902, "originalText": "PET", "ArgType": "subj", "before": " "}, {"index": 24, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 916, "segment_span": [9, 27], "characterOffsetBegin": 906, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 25, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 921, "segment_span": [9, 27], "characterOffsetBegin": 917, "originalText": "with", "ArgType": null, "before": " "}, {"index": 26, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 925, "segment_span": [9, 27], "characterOffsetBegin": 922, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 27, "word": "means", "characterOffsetEnd": 931, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "mean", "segment_span": [9, 27], "tense": "Z", "characterOffsetBegin": 926, "originalText": "means", "ArgType": null, "before": " "}, {"index": 28, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 936, "segment_span": [27, 44], "characterOffsetBegin": 932, "originalText": "that", "ArgType": null, "before": " "}, {"index": 29, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 940, "segment_span": [27, 44], "characterOffsetBegin": 937, "originalText": "the", "ArgType": null, "before": " "}, {"index": 30, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 944, "segment_span": [27, 44], "characterOffsetBegin": 941, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 31, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 951, "segment_span": [27, 44], "characterOffsetBegin": 945, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 32, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 954, "segment_span": [27, 44], "characterOffsetBegin": 952, "originalText": "is", "ArgType": null, "before": " "}, {"index": 33, "word": "applied", "characterOffsetEnd": 962, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [27, 44], "tense": "N", "characterOffsetBegin": 955, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 34, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 965, "segment_span": [27, 44], "characterOffsetBegin": 963, "originalText": "on", "ArgType": null, "before": " "}, {"index": 35, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 969, "segment_span": [27, 44], "characterOffsetBegin": 966, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 36, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 971, "segment_span": [27, 44], "characterOffsetBegin": 970, "originalText": "(", "ArgType": null, "before": " "}, {"index": 37, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 972, "segment_span": [27, 44], "characterOffsetBegin": 971, "originalText": "a", "ArgType": null, "before": ""}, {"index": 38, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 980, "segment_span": [27, 44], "characterOffsetBegin": 973, "originalText": "portion", "ArgType": null, "before": " "}, {"index": 39, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 983, "segment_span": [27, 44], "characterOffsetBegin": 981, "originalText": "of", "ArgType": null, "before": " "}, {"index": 40, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 987, "segment_span": [27, 44], "characterOffsetBegin": 984, "originalText": "the", "ArgType": null, "before": " "}, {"index": 41, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 999, "segment_span": [27, 44], "characterOffsetBegin": 988, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 42, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 1004, "segment_span": [27, 44], "characterOffsetBegin": 1000, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 43, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1005, "segment_span": [27, 44], "characterOffsetBegin": 1004, "originalText": ")", "ArgType": null, "before": ""}, {"index": 44, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1009, "segment_span": [27, 44], "characterOffsetBegin": 1006, "originalText": "and", "ArgType": null, "before": " "}, {"index": 45, "word": "combined", "characterOffsetEnd": 1018, "after": " ", "pos": "VBN", "is_root": true, "lemma": "combine", "segment_span": [44, 49], "tense": "N", "characterOffsetBegin": 1010, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 46, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1023, "segment_span": [44, 49], "characterOffsetBegin": 1019, "originalText": "with", "ArgType": null, "before": " "}, {"index": 47, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1027, "segment_span": [44, 49], "characterOffsetBegin": 1024, "originalText": "the", "ArgType": null, "before": " "}, {"index": 48, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 1031, "segment_span": [44, 49], "characterOffsetBegin": 1028, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 49, "word": "schema", "lemma": "schema", "after": " ", "pos": "NN", "characterOffsetEnd": 1038, "segment_span": [44, 49], "characterOffsetBegin": 1032, "originalText": "schema", "ArgType": null, "before": " "}, {"index": 50, "word": "whereas", "lemma": "whereas", "after": " ", "pos": "IN", "characterOffsetEnd": 1046, "segment_span": [49, 57], "characterOffsetBegin": 1039, "originalText": "whereas", "ArgType": null, "before": " "}, {"index": 51, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 1050, "segment_span": [49, 57], "characterOffsetBegin": 1047, "originalText": "PET", "ArgType": "subj", "before": " "}, {"index": 52, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1054, "segment_span": [49, 57], "characterOffsetBegin": 1051, "originalText": "and", "ArgType": null, "before": " "}, {"index": 53, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 1057, "segment_span": [49, 57], "characterOffsetBegin": 1055, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 54, "word": "associated", "lemma": "associate", "after": " ", "pos": "VBN", "characterOffsetEnd": 1068, "segment_span": [49, 57], "characterOffsetBegin": 1058, "originalText": "associated", "ArgType": null, "before": " "}, {"index": 55, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1073, "segment_span": [49, 57], "characterOffsetBegin": 1069, "originalText": "with", "ArgType": null, "before": " "}, {"index": 56, "word": "CK5", "lemma": "ck5", "after": " ", "pos": "NN", "characterOffsetEnd": 1077, "segment_span": [49, 57], "characterOffsetBegin": 1074, "originalText": "CK5", "ArgType": null, "before": " "}, {"index": 57, "word": "means", "characterOffsetEnd": 1083, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "mean", "segment_span": [49, 57], "tense": "Z", "characterOffsetBegin": 1078, "originalText": "means", "ArgType": null, "before": " "}, {"index": 58, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 1088, "segment_span": [57, 67], "characterOffsetBegin": 1084, "originalText": "that", "ArgType": null, "before": " "}, {"index": 59, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 1092, "segment_span": [57, 67], "characterOffsetBegin": 1089, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 60, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1099, "segment_span": [57, 67], "characterOffsetBegin": 1093, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 61, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1102, "segment_span": [57, 67], "characterOffsetBegin": 1100, "originalText": "is", "ArgType": null, "before": " "}, {"index": 62, "word": "applied", "characterOffsetEnd": 1110, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [57, 67], "tense": "N", "characterOffsetBegin": 1103, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 63, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1113, "segment_span": [57, 67], "characterOffsetBegin": 1111, "originalText": "to", "ArgType": null, "before": " "}, {"index": 64, "word": "PET", "lemma": "pet", "after": " ", "pos": "NN", "characterOffsetEnd": 1117, "segment_span": [57, 67], "characterOffsetBegin": 1114, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 65, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1121, "segment_span": [57, 67], "characterOffsetBegin": 1118, "originalText": "and", "ArgType": null, "before": " "}, {"index": 66, "word": "PT", "lemma": "pt", "after": " ", "pos": "NN", "characterOffsetEnd": 1124, "segment_span": [57, 67], "characterOffsetBegin": 1122, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 67, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1131, "segment_span": [57, 67], "characterOffsetBegin": 1125, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 68, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1134, "segment_span": [67, 73], "characterOffsetBegin": 1132, "originalText": "is", "ArgType": null, "before": " "}, {"index": 69, "word": "applied", "characterOffsetEnd": 1142, "after": " ", "pos": "VBN", "is_root": true, "lemma": "apply", "segment_span": [67, 73], "tense": "N", "characterOffsetBegin": 1135, "before": " ", "originalText": "applied", "ArgType": null, "is_pass": true}, {"index": 70, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1145, "segment_span": [67, 73], "characterOffsetBegin": 1143, "originalText": "to", "ArgType": null, "before": " "}, {"index": 71, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 1148, "segment_span": [67, 73], "characterOffsetBegin": 1146, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 72, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1151, "segment_span": [67, 73], "characterOffsetBegin": 1149, "originalText": "in", "ArgType": null, "before": " "}, {"index": 73, "word": "CK5", "lemma": "ck5", "after": "", "pos": "NN", "characterOffsetEnd": 1155, "segment_span": [67, 73], "characterOffsetBegin": 1152, "originalText": "CK5", "ArgType": null, "before": " "}, {"index": 74, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1156, "characterOffsetBegin": 1155, "originalText": ".", "ArgType": null, "before": ""}], "text": "In the first table , the first column indicates the structure used in the combination shown in the second column , e.g. PET associated with CK1 means that the SST kernel is applied on PET ( a portion of the constituent tree ) and combined with the CK1 schema whereas PET and GR associated with CK5 means that SST kernel is applied to PET and PT kernel is applied to GR in CK5 ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1160, "segment_span": [0, 11], "characterOffsetBegin": 1157, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "remaining", "lemma": "remain", "after": " ", "pos": "VBG", "characterOffsetEnd": 1170, "segment_span": [0, 11], "characterOffsetBegin": 1161, "originalText": "remaining", "ArgType": null, "before": " "}, {"index": 3, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 1176, "segment_span": [0, 11], "characterOffsetBegin": 1171, "originalText": "three", "ArgType": null, "before": " "}, {"index": 4, "word": "columns", "lemma": "column", "after": " ", "pos": "NNS", "characterOffsetEnd": 1184, "segment_span": [0, 11], "characterOffsetBegin": 1177, "originalText": "columns", "ArgType": "subj", "before": " "}, {"index": 5, "word": "report", "characterOffsetEnd": 1191, "after": " ", "pos": "VBP", "is_root": true, "lemma": "report", "segment_span": [0, 11], "tense": "P", "characterOffsetBegin": 1185, "originalText": "report", "ArgType": "verb", "before": " "}, {"index": 6, "word": "Precision", "lemma": "Precision", "after": "", "pos": "NNP", "characterOffsetEnd": 1201, "segment_span": [0, 11], "characterOffsetBegin": 1192, "originalText": "Precision", "ArgType": "dobj", "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1202, "segment_span": [0, 11], "characterOffsetBegin": 1201, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "Recall", "lemma": "recall", "after": " ", "pos": "VB", "characterOffsetEnd": 1209, "segment_span": [0, 11], "characterOffsetBegin": 1203, "originalText": "Recall", "ArgType": null, "before": " "}, {"index": 9, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1213, "segment_span": [0, 11], "characterOffsetBegin": 1210, "originalText": "and", "ArgType": null, "before": " "}, {"index": 10, "word": "F1", "lemma": "f1", "after": " ", "pos": "NN", "characterOffsetEnd": 1216, "segment_span": [0, 11], "characterOffsetBegin": 1214, "originalText": "F1", "ArgType": null, "before": " "}, {"index": 11, "word": "measure", "lemma": "measure", "after": "", "pos": "NN", "characterOffsetEnd": 1224, "segment_span": [0, 11], "characterOffsetBegin": 1217, "originalText": "measure", "ArgType": "dobj", "before": " "}, {"index": 12, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1225, "characterOffsetBegin": 1224, "originalText": ".", "ArgType": null, "before": ""}], "text": "The remaining three columns report Precision , Recall and F1 measure ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1229, "segment_span": [0, 9], "characterOffsetBegin": 1226, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "interpretation", "lemma": "interpretation", "after": " ", "pos": "NN", "characterOffsetEnd": 1244, "segment_span": [0, 9], "characterOffsetBegin": 1230, "originalText": "interpretation", "ArgType": "subj", "before": " "}, {"index": 3, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1247, "segment_span": [0, 9], "characterOffsetBegin": 1245, "originalText": "of", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1251, "segment_span": [0, 9], "characterOffsetBegin": 1248, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 1258, "segment_span": [0, 9], "characterOffsetBegin": 1252, "originalText": "second", "ArgType": null, "before": " "}, {"index": 6, "word": "table", "lemma": "table", "after": " ", "pos": "NN", "characterOffsetEnd": 1264, "segment_span": [0, 9], "characterOffsetBegin": 1259, "originalText": "table", "ArgType": null, "before": " "}, {"index": 7, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1267, "segment_span": [0, 9], "characterOffsetBegin": 1265, "originalText": "is", "ArgType": null, "before": " "}, {"index": 8, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1272, "segment_span": [0, 9], "characterOffsetBegin": 1268, "originalText": "more", "ArgType": null, "before": " "}, {"index": 9, "word": "immediate", "lemma": "immediate", "after": " ", "pos": "JJ", "characterOffsetEnd": 1282, "segment_span": [0, 9], "characterOffsetBegin": 1273, "originalText": "immediate", "ArgType": "verb", "before": " "}, {"index": 10, "word": "since", "lemma": "since", "after": " ", "pos": "IN", "characterOffsetEnd": 1288, "segment_span": [9, 23], "characterOffsetBegin": 1283, "originalText": "since", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1292, "segment_span": [9, 23], "characterOffsetBegin": 1289, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "only", "lemma": "only", "after": " ", "pos": "JJ", "characterOffsetEnd": 1297, "segment_span": [9, 23], "characterOffsetBegin": 1293, "originalText": "only", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1302, "segment_span": [9, 23], "characterOffsetBegin": 1298, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1309, "segment_span": [9, 23], "characterOffsetBegin": 1303, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 15, "word": "involved", "lemma": "involve", "after": " ", "pos": "VBN", "characterOffsetEnd": 1318, "segment_span": [9, 23], "characterOffsetBegin": 1310, "originalText": "involved", "ArgType": null, "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1321, "segment_span": [9, 23], "characterOffsetBegin": 1319, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1325, "segment_span": [9, 23], "characterOffsetBegin": 1322, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 1329, "segment_span": [9, 23], "characterOffsetBegin": 1326, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 19, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1336, "segment_span": [9, 23], "characterOffsetBegin": 1330, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 20, "word": "applied", "lemma": "apply", "after": " ", "pos": "VBD", "characterOffsetEnd": 1344, "segment_span": [9, 23], "characterOffsetBegin": 1337, "originalText": "applied", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1347, "segment_span": [9, 23], "characterOffsetBegin": 1345, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "PET", "lemma": "PET", "after": " ", "pos": "NNP", "characterOffsetEnd": 1351, "segment_span": [9, 23], "characterOffsetBegin": 1348, "originalText": "PET", "ArgType": null, "before": " "}, {"index": 23, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1355, "segment_span": [9, 23], "characterOffsetBegin": 1352, "originalText": "and", "ArgType": null, "before": " "}, {"index": 24, "word": "combined", "characterOffsetEnd": 1364, "after": " ", "pos": "VBN", "is_root": true, "lemma": "combine", "segment_span": [23, 28], "tense": "N", "characterOffsetBegin": 1356, "originalText": "combined", "ArgType": null, "before": " "}, {"index": 25, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1367, "segment_span": [23, 28], "characterOffsetBegin": 1365, "originalText": "by", "ArgType": null, "before": " "}, {"index": 26, "word": "means", "lemma": "means", "after": " ", "pos": "NNS", "characterOffsetEnd": 1373, "segment_span": [23, 28], "characterOffsetBegin": 1368, "originalText": "means", "ArgType": null, "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1376, "segment_span": [23, 28], "characterOffsetBegin": 1374, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "CK1", "lemma": "ck1", "after": "", "pos": "NN", "characterOffsetEnd": 1380, "segment_span": [23, 28], "characterOffsetBegin": 1377, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 29, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1381, "characterOffsetBegin": 1380, "originalText": ".", "ArgType": null, "before": ""}], "text": "The interpretation of the second table is more immediate since the only tree kernel involved is the SST kernel applied to PET and combined by means of CK1 ."}, {"tokens": [{"index": 1, "word": "We", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1384, "segment_span": [0, 29], "characterOffsetBegin": 1382, "originalText": "We", "ArgType": "subj", "before": " "}, {"index": 2, "word": "note", "characterOffsetEnd": 1389, "after": " ", "pos": "VBP", "is_root": true, "lemma": "note", "segment_span": [0, 29], "tense": "P", "characterOffsetBegin": 1385, "originalText": "note", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": "", "pos": "IN", "characterOffsetEnd": 1394, "segment_span": [0, 29], "characterOffsetBegin": 1390, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 1395, "segment_span": [0, 29], "characterOffsetBegin": 1394, "originalText": ":", "ArgType": null, "before": ""}, {"index": 5, "word": "first", "lemma": "first", "after": "", "pos": "RB", "characterOffsetEnd": 1401, "segment_span": [0, 29], "characterOffsetBegin": 1396, "originalText": "first", "ArgType": null, "before": " "}, {"index": 6, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1402, "segment_span": [0, 29], "characterOffsetBegin": 1401, "originalText": ",", "ArgType": null, "before": ""}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1406, "segment_span": [0, 29], "characterOffsetBegin": 1403, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1417, "segment_span": [0, 29], "characterOffsetBegin": 1407, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 9, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 1425, "segment_span": [0, 29], "characterOffsetBegin": 1418, "originalText": "kernels", "ArgType": "subj", "before": " "}, {"index": 10, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1426, "segment_span": [0, 29], "characterOffsetBegin": 1425, "originalText": ",", "ArgType": null, "before": ""}, {"index": 11, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 1431, "segment_span": [0, 29], "characterOffsetBegin": 1427, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1435, "segment_span": [0, 29], "characterOffsetBegin": 1432, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "results", "lemma": "result", "after": " ", "pos": "NNS", "characterOffsetEnd": 1443, "segment_span": [0, 29], "characterOffsetBegin": 1436, "originalText": "results", "ArgType": null, "before": " "}, {"index": 14, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1446, "segment_span": [0, 29], "characterOffsetBegin": 1444, "originalText": "on", "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1450, "segment_span": [0, 29], "characterOffsetBegin": 1447, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "rows", "lemma": "row", "after": " ", "pos": "NNS", "characterOffsetEnd": 1455, "segment_span": [0, 29], "characterOffsetBegin": 1451, "originalText": "rows", "ArgType": null, "before": " "}, {"index": 17, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1460, "segment_span": [0, 29], "characterOffsetBegin": 1456, "originalText": "from", "ArgType": null, "before": " "}, {"index": 18, "word": "3", "lemma": "3", "after": " ", "pos": "CD", "characterOffsetEnd": 1462, "segment_span": [0, 29], "characterOffsetBegin": 1461, "originalText": "3", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1465, "segment_span": [0, 29], "characterOffsetBegin": 1463, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "6", "lemma": "6", "after": " ", "pos": "CD", "characterOffsetEnd": 1467, "segment_span": [0, 29], "characterOffsetBegin": 1466, "originalText": "6", "ArgType": null, "before": " "}, {"index": 21, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1471, "segment_span": [0, 29], "characterOffsetBegin": 1468, "originalText": "are", "ArgType": null, "before": " "}, {"index": 22, "word": "below", "lemma": "below", "after": " ", "pos": "IN", "characterOffsetEnd": 1477, "segment_span": [0, 29], "characterOffsetBegin": 1472, "originalText": "below", "ArgType": null, "before": " "}, {"index": 23, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1481, "segment_span": [0, 29], "characterOffsetBegin": 1478, "originalText": "the", "ArgType": null, "before": " "}, {"index": 24, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 1491, "segment_span": [0, 29], "characterOffsetBegin": 1482, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 25, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1498, "segment_span": [0, 29], "characterOffsetBegin": 1492, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 26, "word": "CK1", "lemma": "ck1", "after": "", "pos": "NN", "characterOffsetEnd": 1502, "segment_span": [0, 29], "characterOffsetBegin": 1499, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1503, "segment_span": [0, 29], "characterOffsetBegin": 1502, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 1508, "segment_span": [0, 29], "characterOffsetBegin": 1504, "originalText": "i.e.", "ArgType": null, "before": " "}, {"index": 29, "word": "68.9", "lemma": "68.9", "after": "", "pos": "CD", "characterOffsetEnd": 1513, "segment_span": [0, 29], "characterOffsetBegin": 1509, "originalText": "68.9", "ArgType": null, "before": " "}, {"index": 30, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1514, "characterOffsetBegin": 1513, "originalText": ".", "ArgType": null, "before": ""}], "text": "We note that : first , the dependency kernels , i.e. the results on the rows from 3 to 6 are below the composite kernel CK1 , i.e. 68.9 ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 1519, "segment_span": [0, 17], "characterOffsetBegin": 1515, "originalText": "This", "ArgType": "subj", "before": " "}, {"index": 2, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1522, "segment_span": [0, 17], "characterOffsetBegin": 1520, "originalText": "is", "ArgType": null, "before": " "}, {"index": 3, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1526, "segment_span": [0, 17], "characterOffsetBegin": 1523, "originalText": "the", "ArgType": null, "before": " "}, {"index": 4, "word": "state-of-the-art", "lemma": "state-of-the-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 1543, "segment_span": [0, 17], "characterOffsetBegin": 1527, "originalText": "state-of-the-art", "ArgType": "verb", "before": " "}, {"index": 5, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 1546, "segment_span": [0, 17], "characterOffsetBegin": 1544, "originalText": "in", "ArgType": null, "before": " "}, {"index": 6, "word": "RE", "lemma": "RE", "after": "", "pos": "NNP", "characterOffsetEnd": 1549, "segment_span": [0, 17], "characterOffsetBegin": 1547, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1550, "segment_span": [0, 17], "characterOffsetBegin": 1549, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "designed", "lemma": "design", "after": " ", "pos": "VBN", "characterOffsetEnd": 1559, "segment_span": [0, 17], "characterOffsetBegin": 1551, "originalText": "designed", "ArgType": null, "before": " "}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1562, "segment_span": [0, 17], "characterOffsetBegin": 1560, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1564, "segment_span": [0, 17], "characterOffsetBegin": 1563, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "Zhang", "lemma": "Zhang", "after": " ", "pos": "NNP", "characterOffsetEnd": 1569, "segment_span": [0, 17], "characterOffsetBegin": 1564, "originalText": "Zhang", "ArgType": null, "before": ""}, {"index": 12, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1572, "segment_span": [0, 17], "characterOffsetBegin": 1570, "originalText": "et", "ArgType": null, "before": " "}, {"index": 13, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1576, "segment_span": [0, 17], "characterOffsetBegin": 1573, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 14, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1577, "segment_span": [0, 17], "characterOffsetBegin": 1576, "originalText": ",", "ArgType": null, "before": ""}, {"index": 15, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 1582, "segment_span": [0, 17], "characterOffsetBegin": 1578, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1583, "segment_span": [0, 17], "characterOffsetBegin": 1582, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1584, "segment_span": [0, 17], "characterOffsetBegin": 1583, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "where", "lemma": "where", "after": " ", "pos": "WRB", "characterOffsetEnd": 1590, "segment_span": [17, 21], "characterOffsetBegin": 1585, "originalText": "where", "ArgType": null, "before": " "}, {"index": 19, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 1594, "segment_span": [17, 21], "characterOffsetBegin": 1591, "originalText": "our", "ArgType": null, "before": " "}, {"index": 20, "word": "implementation", "lemma": "implementation", "after": " ", "pos": "NN", "characterOffsetEnd": 1609, "segment_span": [17, 21], "characterOffsetBegin": 1595, "originalText": "implementation", "ArgType": "subj", "before": " "}, {"index": 21, "word": "provides", "characterOffsetEnd": 1618, "after": "", "pos": "VBZ", "is_root": true, "lemma": "provide", "segment_span": [17, 21], "tense": "Z", "characterOffsetBegin": 1610, "originalText": "provides", "ArgType": null, "before": " "}], "text": "This is the state-of-the-art in RE , designed by ( Zhang et al. , 2006 ) , where our implementation provides"}, {"tokens": [{"index": 1, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "a", "ArgType": null, "before": ""}, {"index": 2, "word": "slightly", "lemma": "slightly", "after": " ", "pos": "RB", "characterOffsetEnd": 10, "segment_span": [0, 21], "characterOffsetBegin": 2, "originalText": "slightly", "ArgType": null, "before": " "}, {"index": 3, "word": "smaller", "lemma": "smaller", "after": " ", "pos": "JJR", "characterOffsetEnd": 18, "segment_span": [0, 21], "characterOffsetBegin": 11, "originalText": "smaller", "ArgType": null, "before": " "}, {"index": 4, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 25, "segment_span": [0, 21], "characterOffsetBegin": 19, "originalText": "result", "ArgType": null, "before": " "}, {"index": 5, "word": "than", "lemma": "than", "after": " ", "pos": "IN", "characterOffsetEnd": 30, "segment_span": [0, 21], "characterOffsetBegin": 26, "originalText": "than", "ArgType": null, "before": " "}, {"index": 6, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 34, "segment_span": [0, 21], "characterOffsetBegin": 31, "originalText": "the", "ArgType": null, "before": " "}, {"index": 7, "word": "original", "lemma": "original", "after": " ", "pos": "JJ", "characterOffsetEnd": 43, "segment_span": [0, 21], "characterOffsetBegin": 35, "originalText": "original", "ArgType": null, "before": " "}, {"index": 8, "word": "version", "lemma": "version", "after": " ", "pos": "NN", "characterOffsetEnd": 51, "segment_span": [0, 21], "characterOffsetBegin": 44, "originalText": "version", "ArgType": null, "before": " "}, {"index": 9, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 53, "segment_span": [0, 21], "characterOffsetBegin": 52, "originalText": "(", "ArgType": null, "before": " "}, {"index": 10, "word": "i.e.", "lemma": "i.e.", "after": " ", "pos": "FW", "characterOffsetEnd": 57, "segment_span": [0, 21], "characterOffsetBegin": 53, "originalText": "i.e.", "ArgType": null, "before": ""}, {"index": 11, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 60, "segment_span": [0, 21], "characterOffsetBegin": 58, "originalText": "an", "ArgType": null, "before": " "}, {"index": 12, "word": "F1", "lemma": "f1", "after": " ", "pos": "NN", "characterOffsetEnd": 63, "segment_span": [0, 21], "characterOffsetBegin": 61, "originalText": "F1", "ArgType": null, "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 66, "segment_span": [0, 21], "characterOffsetBegin": 64, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "about", "lemma": "about", "after": " ", "pos": "IN", "characterOffsetEnd": 72, "segment_span": [0, 21], "characterOffsetBegin": 67, "originalText": "about", "ArgType": null, "before": " "}, {"index": 15, "word": "72", "lemma": "72", "after": " ", "pos": "CD", "characterOffsetEnd": 75, "segment_span": [0, 21], "characterOffsetBegin": 73, "originalText": "72", "ArgType": null, "before": " "}, {"index": 16, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 81, "segment_span": [0, 21], "characterOffsetBegin": 76, "originalText": "using", "ArgType": null, "before": " "}, {"index": 17, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 83, "segment_span": [0, 21], "characterOffsetBegin": 82, "originalText": "a", "ArgType": null, "before": " "}, {"index": 18, "word": "different", "lemma": "different", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [0, 21], "characterOffsetBegin": 84, "originalText": "different", "ArgType": null, "before": " "}, {"index": 19, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "NN", "characterOffsetEnd": 103, "segment_span": [0, 21], "characterOffsetBegin": 94, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 20, "word": "parser", "lemma": "parser", "after": "", "pos": "NN", "characterOffsetEnd": 110, "segment_span": [0, 21], "characterOffsetBegin": 104, "originalText": "parser", "ArgType": "dobj", "before": " "}, {"index": 21, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 111, "segment_span": [0, 21], "characterOffsetBegin": 110, "originalText": ")", "ArgType": null, "before": ""}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 112, "characterOffsetBegin": 111, "originalText": ".", "ArgType": null, "before": ""}], "text": "a slightly smaller result than the original version ( i.e. an F1 of about 72 using a different syntactic parser ) ."}, {"tokens": [{"index": 1, "word": "Second", "lemma": "second", "after": "", "pos": "RB", "characterOffsetEnd": 119, "segment_span": [0, 4], "characterOffsetBegin": 113, "originalText": "Second", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 120, "segment_span": [0, 4], "characterOffsetBegin": 119, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 124, "segment_span": [0, 4], "characterOffsetBegin": 121, "originalText": "CK1", "ArgType": "subj", "before": " "}, {"index": 4, "word": "improves", "characterOffsetEnd": 133, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "improve", "segment_span": [0, 4], "tense": "Z", "characterOffsetBegin": 125, "originalText": "improves", "ArgType": "verb", "before": " "}, {"index": 5, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 136, "segment_span": [4, 26], "characterOffsetBegin": 134, "originalText": "to", "ArgType": null, "before": " "}, {"index": 6, "word": "70.5", "lemma": "70.5", "after": "", "pos": "CD", "characterOffsetEnd": 141, "segment_span": [4, 26], "characterOffsetBegin": 137, "originalText": "70.5", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 142, "segment_span": [4, 26], "characterOffsetBegin": 141, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "when", "lemma": "when", "after": " ", "pos": "WRB", "characterOffsetEnd": 147, "segment_span": [4, 26], "characterOffsetBegin": 143, "originalText": "when", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 151, "segment_span": [4, 26], "characterOffsetBegin": 148, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "contribution", "lemma": "contribution", "after": " ", "pos": "NN", "characterOffsetEnd": 164, "segment_span": [4, 26], "characterOffsetBegin": 152, "originalText": "contribution", "ArgType": "subj", "before": " "}, {"index": 11, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 167, "segment_span": [4, 26], "characterOffsetBegin": 165, "originalText": "of", "ArgType": null, "before": " "}, {"index": 12, "word": "PT", "lemma": "pt", "after": " ", "pos": "NN", "characterOffsetEnd": 170, "segment_span": [4, 26], "characterOffsetBegin": 168, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 13, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 177, "segment_span": [4, 26], "characterOffsetBegin": 171, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 14, "word": "applied", "characterOffsetEnd": 185, "after": " ", "pos": "VBD", "is_root": true, "lemma": "apply", "segment_span": [4, 26], "tense": "D", "characterOffsetBegin": 178, "originalText": "applied", "ArgType": null, "before": " "}, {"index": 15, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 188, "segment_span": [4, 26], "characterOffsetBegin": 186, "originalText": "to", "ArgType": null, "before": " "}, {"index": 16, "word": "GR", "lemma": "gr", "after": " ", "pos": "NN", "characterOffsetEnd": 191, "segment_span": [4, 26], "characterOffsetBegin": 189, "originalText": "GR", "ArgType": null, "before": " "}, {"index": 17, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 193, "segment_span": [4, 26], "characterOffsetBegin": 192, "originalText": "(", "ArgType": null, "before": " "}, {"index": 18, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 203, "segment_span": [4, 26], "characterOffsetBegin": 193, "originalText": "dependency", "ArgType": null, "before": ""}, {"index": 19, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 208, "segment_span": [4, 26], "characterOffsetBegin": 204, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 20, "word": "built", "lemma": "build", "after": " ", "pos": "VBN", "characterOffsetEnd": 214, "segment_span": [4, 26], "characterOffsetBegin": 209, "originalText": "built", "ArgType": null, "before": " "}, {"index": 21, "word": "using", "lemma": "use", "after": " ", "pos": "VBG", "characterOffsetEnd": 220, "segment_span": [4, 26], "characterOffsetBegin": 215, "originalText": "using", "ArgType": null, "before": " "}, {"index": 22, "word": "grammatical", "lemma": "grammatical", "after": " ", "pos": "JJ", "characterOffsetEnd": 232, "segment_span": [4, 26], "characterOffsetBegin": 221, "originalText": "grammatical", "ArgType": null, "before": " "}, {"index": 23, "word": "relations", "lemma": "relation", "after": "", "pos": "NNS", "characterOffsetEnd": 242, "segment_span": [4, 26], "characterOffsetBegin": 233, "originalText": "relations", "ArgType": "dobj", "before": " "}, {"index": 24, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 243, "segment_span": [4, 26], "characterOffsetBegin": 242, "originalText": ")", "ArgType": null, "before": ""}, {"index": 25, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 246, "segment_span": [4, 26], "characterOffsetBegin": 244, "originalText": "is", "ArgType": null, "before": " "}, {"index": 26, "word": "added", "characterOffsetEnd": 252, "after": "", "pos": "VBN", "is_root": true, "lemma": "add", "segment_span": [4, 26], "tense": "N", "characterOffsetBegin": 247, "before": " ", "originalText": "added", "ArgType": null, "is_pass": true}, {"index": 27, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 253, "characterOffsetBegin": 252, "originalText": ".", "ArgType": null, "before": ""}], "text": "Second , CK1 improves to 70.5 , when the contribution of PT kernel applied to GR ( dependency tree built using grammatical relations ) is added ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 258, "segment_span": [0, 2], "characterOffsetBegin": 254, "originalText": "This", "ArgType": "subj", "before": " "}, {"index": 2, "word": "suggests", "characterOffsetEnd": 267, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "suggest", "segment_span": [0, 2], "tense": "Z", "characterOffsetBegin": 259, "originalText": "suggests", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 272, "segment_span": [2, 21], "characterOffsetBegin": 268, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 283, "segment_span": [2, 21], "characterOffsetBegin": 273, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 5, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 294, "segment_span": [2, 21], "characterOffsetBegin": 284, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 298, "segment_span": [2, 21], "characterOffsetBegin": 295, "originalText": "are", "ArgType": null, "before": " "}, {"index": 7, "word": "effectively", "lemma": "effectively", "after": " ", "pos": "RB", "characterOffsetEnd": 310, "segment_span": [2, 21], "characterOffsetBegin": 299, "originalText": "effectively", "ArgType": null, "before": " "}, {"index": 8, "word": "exploited", "characterOffsetEnd": 320, "after": " ", "pos": "VBN", "is_root": true, "lemma": "exploit", "segment_span": [2, 21], "tense": "N", "characterOffsetBegin": 311, "before": " ", "originalText": "exploited", "ArgType": null, "is_pass": true}, {"index": 9, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 323, "segment_span": [2, 21], "characterOffsetBegin": 321, "originalText": "by", "ArgType": null, "before": " "}, {"index": 10, "word": "PT", "lemma": "pt", "after": " ", "pos": "NN", "characterOffsetEnd": 326, "segment_span": [2, 21], "characterOffsetBegin": 324, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 11, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 333, "segment_span": [2, 21], "characterOffsetBegin": 327, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 12, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 337, "segment_span": [2, 21], "characterOffsetBegin": 334, "originalText": "and", "ArgType": null, "before": " "}, {"index": 13, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 342, "segment_span": [2, 21], "characterOffsetBegin": 338, "originalText": "that", "ArgType": null, "before": " "}, {"index": 14, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 347, "segment_span": [2, 21], "characterOffsetBegin": 343, "originalText": "such", "ArgType": null, "before": " "}, {"index": 15, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 359, "segment_span": [2, 21], "characterOffsetBegin": 348, "originalText": "information", "ArgType": "subj", "before": " "}, {"index": 16, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 362, "segment_span": [2, 21], "characterOffsetBegin": 360, "originalText": "is", "ArgType": null, "before": " "}, {"index": 17, "word": "somewhat", "lemma": "somewhat", "after": " ", "pos": "RB", "characterOffsetEnd": 371, "segment_span": [2, 21], "characterOffsetBegin": 363, "originalText": "somewhat", "ArgType": null, "before": " "}, {"index": 18, "word": "complementary", "lemma": "complementary", "after": " ", "pos": "JJ", "characterOffsetEnd": 385, "segment_span": [2, 21], "characterOffsetBegin": 372, "originalText": "complementary", "ArgType": null, "before": " "}, {"index": 19, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 388, "segment_span": [2, 21], "characterOffsetBegin": 386, "originalText": "to", "ArgType": null, "before": " "}, {"index": 20, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "JJ", "characterOffsetEnd": 400, "segment_span": [2, 21], "characterOffsetBegin": 389, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 21, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 406, "segment_span": [2, 21], "characterOffsetBegin": 401, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 407, "characterOffsetBegin": 406, "originalText": ".", "ArgType": null, "before": ""}], "text": "This suggests that dependency structures are effectively exploited by PT kernel and that such information is somewhat complementary to constituent trees ."}, {"tokens": [{"index": 1, "word": "Third", "lemma": "Third", "after": "", "pos": "NNP", "characterOffsetEnd": 413, "segment_span": [0, 30], "characterOffsetBegin": 408, "originalText": "Third", "ArgType": "subj", "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 414, "segment_span": [0, 30], "characterOffsetBegin": 413, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 417, "segment_span": [0, 30], "characterOffsetBegin": 415, "originalText": "in", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 421, "segment_span": [0, 30], "characterOffsetBegin": 418, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "second", "lemma": "second", "after": " ", "pos": "JJ", "characterOffsetEnd": 428, "segment_span": [0, 30], "characterOffsetBegin": 422, "originalText": "second", "ArgType": null, "before": " "}, {"index": 6, "word": "table", "lemma": "table", "after": "", "pos": "NN", "characterOffsetEnd": 434, "segment_span": [0, 30], "characterOffsetBegin": 429, "originalText": "table", "ArgType": null, "before": " "}, {"index": 7, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 435, "segment_span": [0, 30], "characterOffsetBegin": 434, "originalText": ",", "ArgType": null, "before": ""}, {"index": 8, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 439, "segment_span": [0, 30], "characterOffsetBegin": 436, "originalText": "the", "ArgType": null, "before": " "}, {"index": 9, "word": "model", "lemma": "model", "after": " ", "pos": "NN", "characterOffsetEnd": 445, "segment_span": [0, 30], "characterOffsetBegin": 440, "originalText": "model", "ArgType": null, "before": " "}, {"index": 10, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 449, "segment_span": [0, 30], "characterOffsetBegin": 446, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 11, "word": "+", "lemma": "+", "after": " ", "pos": "CC", "characterOffsetEnd": 451, "segment_span": [0, 30], "characterOffsetBegin": 450, "originalText": "+", "ArgType": null, "before": " "}, {"index": 12, "word": "SSK", "lemma": "ssk", "after": "", "pos": "NN", "characterOffsetEnd": 455, "segment_span": [0, 30], "characterOffsetBegin": 452, "originalText": "SSK", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 456, "segment_span": [0, 30], "characterOffsetBegin": 455, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 462, "segment_span": [13, 23], "characterOffsetBegin": 457, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 15, "word": "adds", "characterOffsetEnd": 467, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "add", "segment_span": [13, 23], "tense": "Z", "characterOffsetBegin": 463, "originalText": "adds", "ArgType": null, "before": " "}, {"index": 16, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 470, "segment_span": [13, 23], "characterOffsetBegin": 468, "originalText": "to", "ArgType": null, "before": " "}, {"index": 17, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 474, "segment_span": [13, 23], "characterOffsetBegin": 471, "originalText": "CK1", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 478, "segment_span": [13, 23], "characterOffsetBegin": 475, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "contribution", "lemma": "contribution", "after": " ", "pos": "NN", "characterOffsetEnd": 491, "segment_span": [13, 23], "characterOffsetBegin": 479, "originalText": "contribution", "ArgType": null, "before": " "}, {"index": 20, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 494, "segment_span": [13, 23], "characterOffsetBegin": 492, "originalText": "of", "ArgType": null, "before": " "}, {"index": 21, "word": "diverse", "lemma": "diverse", "after": " ", "pos": "JJ", "characterOffsetEnd": 502, "segment_span": [13, 23], "characterOffsetBegin": 495, "originalText": "diverse", "ArgType": null, "before": " "}, {"index": 22, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 511, "segment_span": [13, 23], "characterOffsetBegin": 503, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 23, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 519, "segment_span": [13, 23], "characterOffsetBegin": 512, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 24, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 520, "segment_span": [0, 30], "characterOffsetBegin": 519, "originalText": ",", "ArgType": null, "before": ""}, {"index": 25, "word": "outperforms", "characterOffsetEnd": 532, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "outperform", "segment_span": [0, 30], "tense": "Z", "characterOffsetBegin": 521, "originalText": "outperforms", "ArgType": "verb", "before": " "}, {"index": 26, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 536, "segment_span": [0, 30], "characterOffsetBegin": 533, "originalText": "the", "ArgType": null, "before": " "}, {"index": 27, "word": "state-ofthe-art", "lemma": "state-ofthe-art", "after": " ", "pos": "JJ", "characterOffsetEnd": 552, "segment_span": [0, 30], "characterOffsetBegin": 537, "originalText": "state-ofthe-art", "ArgType": "dobj", "before": " "}, {"index": 28, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 555, "segment_span": [0, 30], "characterOffsetBegin": 553, "originalText": "by", "ArgType": null, "before": " "}, {"index": 29, "word": "2.6", "lemma": "2.6", "after": "", "pos": "CD", "characterOffsetEnd": 559, "segment_span": [0, 30], "characterOffsetBegin": 556, "originalText": "2.6", "ArgType": null, "before": " "}, {"index": 30, "word": "%", "lemma": "%", "after": "", "pos": "NN", "characterOffsetEnd": 560, "segment_span": [0, 30], "characterOffsetBegin": 559, "originalText": "%", "ArgType": null, "before": ""}, {"index": 31, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 561, "characterOffsetBegin": 560, "originalText": ".", "ArgType": null, "before": ""}], "text": "Third , in the second table , the model CK1 + SSK , which adds to CK1 the contribution of diverse sequence kernels , outperforms the state-ofthe-art by 2.6 % ."}, {"tokens": [{"index": 1, "word": "This", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 566, "segment_span": [0, 2], "characterOffsetBegin": 562, "originalText": "This", "ArgType": "subj", "before": " "}, {"index": 2, "word": "suggests", "characterOffsetEnd": 575, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "suggest", "segment_span": [0, 2], "tense": "Z", "characterOffsetBegin": 567, "originalText": "suggests", "ArgType": "verb", "before": " "}, {"index": 3, "word": "that", "lemma": "that", "after": " ", "pos": "IN", "characterOffsetEnd": 580, "segment_span": [2, 17], "characterOffsetBegin": 576, "originalText": "that", "ArgType": null, "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 584, "segment_span": [2, 17], "characterOffsetBegin": 581, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "sequential", "lemma": "sequential", "after": " ", "pos": "JJ", "characterOffsetEnd": 595, "segment_span": [2, 17], "characterOffsetBegin": 585, "originalText": "sequential", "ArgType": null, "before": " "}, {"index": 6, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 607, "segment_span": [2, 17], "characterOffsetBegin": 596, "originalText": "information", "ArgType": "subj", "before": " "}, {"index": 7, "word": "encoded", "lemma": "encode", "after": " ", "pos": "VBN", "characterOffsetEnd": 615, "segment_span": [2, 17], "characterOffsetBegin": 608, "originalText": "encoded", "ArgType": null, "before": " "}, {"index": 8, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 618, "segment_span": [2, 17], "characterOffsetBegin": 616, "originalText": "by", "ArgType": null, "before": " "}, {"index": 9, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 626, "segment_span": [2, 17], "characterOffsetBegin": 619, "originalText": "several", "ArgType": null, "before": " "}, {"index": 10, "word": "sequence", "lemma": "sequence", "after": " ", "pos": "NN", "characterOffsetEnd": 635, "segment_span": [2, 17], "characterOffsetBegin": 627, "originalText": "sequence", "ArgType": null, "before": " "}, {"index": 11, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 643, "segment_span": [2, 17], "characterOffsetBegin": 636, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 12, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 647, "segment_span": [2, 17], "characterOffsetBegin": 644, "originalText": "can", "ArgType": null, "before": " "}, {"index": 13, "word": "better", "lemma": "better", "after": " ", "pos": "RB", "characterOffsetEnd": 654, "segment_span": [2, 17], "characterOffsetBegin": 648, "originalText": "better", "ArgType": null, "before": " "}, {"index": 14, "word": "represents", "characterOffsetEnd": 665, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "represent", "segment_span": [2, 17], "tense": "Z", "characterOffsetBegin": 655, "originalText": "represents", "has_aux": true, "ArgType": null, "before": " "}, {"index": 15, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 669, "segment_span": [2, 17], "characterOffsetBegin": 666, "originalText": "the", "ArgType": null, "before": " "}, {"index": 16, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 680, "segment_span": [2, 17], "characterOffsetBegin": 670, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 17, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 692, "segment_span": [2, 17], "characterOffsetBegin": 681, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 693, "characterOffsetBegin": 692, "originalText": ".", "ArgType": null, "before": ""}], "text": "This suggests that the sequential information encoded by several sequence kernels can better represents the dependency information ."}, {"tokens": [{"index": 1, "word": "Finally", "lemma": "finally", "after": "", "pos": "RB", "characterOffsetEnd": 701, "segment_span": [0, 25], "characterOffsetBegin": 694, "originalText": "Finally", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 702, "segment_span": [0, 25], "characterOffsetBegin": 701, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 705, "segment_span": [0, 25], "characterOffsetBegin": 703, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 4, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 710, "segment_span": [0, 25], "characterOffsetBegin": 706, "originalText": "also", "ArgType": null, "before": " "}, {"index": 5, "word": "report", "characterOffsetEnd": 717, "after": " ", "pos": "VBP", "is_root": true, "lemma": "report", "segment_span": [0, 25], "tense": "P", "characterOffsetBegin": 711, "originalText": "report", "ArgType": "verb", "before": " "}, {"index": 6, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 720, "segment_span": [0, 25], "characterOffsetBegin": 718, "originalText": "in", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 724, "segment_span": [0, 25], "characterOffsetBegin": 721, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "last", "lemma": "last", "after": " ", "pos": "JJ", "characterOffsetEnd": 729, "segment_span": [0, 25], "characterOffsetBegin": 725, "originalText": "last", "ArgType": null, "before": " "}, {"index": 9, "word": "row", "lemma": "row", "after": " ", "pos": "NN", "characterOffsetEnd": 733, "segment_span": [0, 25], "characterOffsetBegin": 730, "originalText": "row", "ArgType": null, "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 735, "segment_span": [0, 25], "characterOffsetBegin": 734, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 737, "segment_span": [0, 25], "characterOffsetBegin": 735, "originalText": "in", "ArgType": null, "before": ""}, {"index": 12, "word": "italic", "lemma": "italic", "after": "", "pos": "JJ", "characterOffsetEnd": 744, "segment_span": [0, 25], "characterOffsetBegin": 738, "originalText": "italic", "ArgType": null, "before": " "}, {"index": 13, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 745, "segment_span": [0, 25], "characterOffsetBegin": 744, "originalText": ")", "ArgType": null, "before": ""}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 749, "segment_span": [0, 25], "characterOffsetBegin": 746, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "superior", "lemma": "superior", "after": " ", "pos": "JJ", "characterOffsetEnd": 758, "segment_span": [0, 25], "characterOffsetBegin": 750, "originalText": "superior", "ArgType": null, "before": " "}, {"index": 16, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 761, "segment_span": [0, 25], "characterOffsetBegin": 759, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 17, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 768, "segment_span": [0, 25], "characterOffsetBegin": 762, "originalText": "result", "ArgType": null, "before": " "}, {"index": 18, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 771, "segment_span": [0, 25], "characterOffsetBegin": 769, "originalText": "by", "ArgType": null, "before": " "}, {"index": 19, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 773, "segment_span": [0, 25], "characterOffsetBegin": 772, "originalText": "(", "ArgType": null, "before": " "}, {"index": 20, "word": "Zhou", "lemma": "Zhou", "after": " ", "pos": "NNP", "characterOffsetEnd": 777, "segment_span": [0, 25], "characterOffsetBegin": 773, "originalText": "Zhou", "ArgType": null, "before": ""}, {"index": 21, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 780, "segment_span": [0, 25], "characterOffsetBegin": 778, "originalText": "et", "ArgType": null, "before": " "}, {"index": 22, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 784, "segment_span": [0, 25], "characterOffsetBegin": 781, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 23, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 785, "segment_span": [0, 25], "characterOffsetBegin": 784, "originalText": ",", "ArgType": null, "before": ""}, {"index": 24, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 790, "segment_span": [0, 25], "characterOffsetBegin": 786, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 25, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 791, "segment_span": [0, 25], "characterOffsetBegin": 790, "originalText": ")", "ArgType": null, "before": ""}, {"index": 26, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 792, "characterOffsetBegin": 791, "originalText": ".", "ArgType": null, "before": ""}], "text": "Finally , we also report in the last row ( in italic ) the superior RE result by ( Zhou et al. , 2007 ) ."}, {"tokens": [{"index": 1, "word": "However", "lemma": "however", "after": "", "pos": "RB", "characterOffsetEnd": 800, "segment_span": [0, 16], "characterOffsetBegin": 793, "originalText": "However", "ArgType": null, "before": " "}, {"index": 2, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 801, "segment_span": [0, 16], "characterOffsetBegin": 800, "originalText": ",", "ArgType": null, "before": ""}, {"index": 3, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 804, "segment_span": [2, 6], "characterOffsetBegin": 802, "originalText": "to", "ArgType": null, "before": " "}, {"index": 4, "word": "achieve", "characterOffsetEnd": 812, "after": " ", "pos": "VB", "is_root": true, "lemma": "achieve", "segment_span": [2, 6], "tense": "B", "characterOffsetBegin": 805, "originalText": "achieve", "ArgType": null, "before": " "}, {"index": 5, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 817, "segment_span": [2, 6], "characterOffsetBegin": 813, "originalText": "this", "ArgType": null, "before": " "}, {"index": 6, "word": "outcome", "lemma": "outcome", "after": " ", "pos": "NN", "characterOffsetEnd": 825, "segment_span": [2, 6], "characterOffsetBegin": 818, "originalText": "outcome", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 829, "segment_span": [0, 16], "characterOffsetBegin": 826, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "authors", "lemma": "author", "after": " ", "pos": "NNS", "characterOffsetEnd": 837, "segment_span": [0, 16], "characterOffsetBegin": 830, "originalText": "authors", "ArgType": "subj", "before": " "}, {"index": 9, "word": "used", "characterOffsetEnd": 842, "after": " ", "pos": "VBD", "is_root": true, "lemma": "use", "segment_span": [0, 16], "tense": "D", "characterOffsetBegin": 838, "originalText": "used", "ArgType": "verb", "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 846, "segment_span": [0, 16], "characterOffsetBegin": 843, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 856, "segment_span": [0, 16], "characterOffsetBegin": 847, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 12, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 863, "segment_span": [0, 16], "characterOffsetBegin": 857, "originalText": "kernel", "ArgType": null, "before": " "}, {"index": 13, "word": "CK1", "lemma": "ck1", "after": " ", "pos": "NN", "characterOffsetEnd": 867, "segment_span": [0, 16], "characterOffsetBegin": 864, "originalText": "CK1", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 872, "segment_span": [0, 16], "characterOffsetBegin": 868, "originalText": "with", "ArgType": null, "before": " "}, {"index": 15, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 880, "segment_span": [0, 16], "characterOffsetBegin": 873, "originalText": "several", "ArgType": null, "before": " "}, {"index": 16, "word": "heuristics", "lemma": "heuristic", "after": " ", "pos": "NNS", "characterOffsetEnd": 891, "segment_span": [0, 16], "characterOffsetBegin": 881, "originalText": "heuristics", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 894, "segment_span": [16, 24], "characterOffsetBegin": 892, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "define", "characterOffsetEnd": 901, "after": " ", "pos": "VB", "is_root": true, "lemma": "define", "segment_span": [16, 24], "tense": "B", "characterOffsetBegin": 895, "originalText": "define", "ArgType": null, "before": " "}, {"index": 19, "word": "an", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 904, "segment_span": [16, 24], "characterOffsetBegin": 902, "originalText": "an", "ArgType": null, "before": " "}, {"index": 20, "word": "effective", "lemma": "effective", "after": " ", "pos": "JJ", "characterOffsetEnd": 914, "segment_span": [16, 24], "characterOffsetBegin": 905, "originalText": "effective", "ArgType": null, "before": " "}, {"index": 21, "word": "portion", "lemma": "portion", "after": " ", "pos": "NN", "characterOffsetEnd": 922, "segment_span": [16, 24], "characterOffsetBegin": 915, "originalText": "portion", "ArgType": "dobj", "before": " "}, {"index": 22, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 925, "segment_span": [16, 24], "characterOffsetBegin": 923, "originalText": "of", "ArgType": null, "before": " "}, {"index": 23, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 937, "segment_span": [16, 24], "characterOffsetBegin": 926, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 24, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 943, "segment_span": [16, 24], "characterOffsetBegin": 938, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 25, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 944, "characterOffsetBegin": 943, "originalText": ".", "ArgType": null, "before": ""}], "text": "However , to achieve this outcome the authors used the composite kernel CK1 with several heuristics to define an effective portion of constituent trees ."}, {"tokens": [{"index": 1, "word": "Such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 949, "segment_span": [0, 6], "characterOffsetBegin": 945, "originalText": "Such", "ArgType": null, "before": " "}, {"index": 2, "word": "heuristics", "lemma": "heuristic", "after": " ", "pos": "NNS", "characterOffsetEnd": 960, "segment_span": [0, 6], "characterOffsetBegin": 950, "originalText": "heuristics", "ArgType": "subj", "before": " "}, {"index": 3, "word": "expand", "characterOffsetEnd": 967, "after": " ", "pos": "VBP", "is_root": true, "lemma": "expand", "segment_span": [0, 6], "tense": "P", "characterOffsetBegin": 961, "originalText": "expand", "ArgType": "verb", "before": " "}, {"index": 4, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 971, "segment_span": [0, 6], "characterOffsetBegin": 968, "originalText": "the", "ArgType": null, "before": " "}, {"index": 5, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 976, "segment_span": [0, 6], "characterOffsetBegin": 972, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 6, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 980, "segment_span": [0, 6], "characterOffsetBegin": 977, "originalText": "and", "ArgType": null, "before": " "}, {"index": 7, "word": "remove", "characterOffsetEnd": 987, "after": " ", "pos": "VB", "is_root": true, "lemma": "remove", "segment_span": [6, 15], "tense": "B", "characterOffsetBegin": 981, "originalText": "remove", "ArgType": null, "before": " "}, {"index": 8, "word": "unnecessary", "lemma": "unnecessary", "after": " ", "pos": "JJ", "characterOffsetEnd": 999, "segment_span": [6, 15], "characterOffsetBegin": 988, "originalText": "unnecessary", "ArgType": null, "before": " "}, {"index": 9, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 1011, "segment_span": [6, 15], "characterOffsetBegin": 1000, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "allowing", "lemma": "allow", "after": " ", "pos": "VBG", "characterOffsetEnd": 1020, "segment_span": [6, 15], "characterOffsetBegin": 1012, "originalText": "allowing", "ArgType": null, "before": " "}, {"index": 11, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1022, "segment_span": [6, 15], "characterOffsetBegin": 1021, "originalText": "a", "ArgType": null, "before": " "}, {"index": 12, "word": "higher", "lemma": "higher", "after": " ", "pos": "JJR", "characterOffsetEnd": 1029, "segment_span": [6, 15], "characterOffsetBegin": 1023, "originalText": "higher", "ArgType": null, "before": " "}, {"index": 13, "word": "improvement", "lemma": "improvement", "after": " ", "pos": "NN", "characterOffsetEnd": 1041, "segment_span": [6, 15], "characterOffsetBegin": 1030, "originalText": "improvement", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1044, "segment_span": [6, 15], "characterOffsetBegin": 1042, "originalText": "on", "ArgType": null, "before": " "}, {"index": 15, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 1047, "segment_span": [6, 15], "characterOffsetBegin": 1045, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 16, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1048, "characterOffsetBegin": 1047, "originalText": ".", "ArgType": null, "before": ""}], "text": "Such heuristics expand the tree and remove unnecessary information allowing a higher improvement on RE ."}, {"tokens": [{"index": 1, "word": "They", "lemma": "they", "after": " ", "pos": "PRP", "characterOffsetEnd": 1053, "segment_span": [0, 15], "characterOffsetBegin": 1049, "originalText": "They", "ArgType": null, "before": " "}, {"index": 2, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 1057, "segment_span": [0, 15], "characterOffsetBegin": 1054, "originalText": "are", "ArgType": null, "before": " "}, {"index": 3, "word": "tuned", "characterOffsetEnd": 1063, "after": " ", "pos": "VBN", "is_root": true, "lemma": "tune", "segment_span": [0, 15], "tense": "N", "characterOffsetBegin": 1058, "before": " ", "originalText": "tuned", "ArgType": null, "is_pass": true}, {"index": 4, "word": "on", "lemma": "on", "after": " ", "pos": "IN", "characterOffsetEnd": 1066, "segment_span": [0, 15], "characterOffsetBegin": 1064, "originalText": "on", "ArgType": null, "before": " "}, {"index": 5, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1070, "segment_span": [0, 15], "characterOffsetBegin": 1067, "originalText": "the", "ArgType": null, "before": " "}, {"index": 6, "word": "target", "lemma": "target", "after": " ", "pos": "NN", "characterOffsetEnd": 1077, "segment_span": [0, 15], "characterOffsetBegin": 1071, "originalText": "target", "ArgType": null, "before": " "}, {"index": 7, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 1080, "segment_span": [0, 15], "characterOffsetBegin": 1078, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 8, "word": "task", "lemma": "task", "after": " ", "pos": "NN", "characterOffsetEnd": 1085, "segment_span": [0, 15], "characterOffsetBegin": 1081, "originalText": "task", "ArgType": null, "before": " "}, {"index": 9, "word": "so", "lemma": "so", "after": " ", "pos": "RB", "characterOffsetEnd": 1088, "segment_span": [0, 15], "characterOffsetBegin": 1086, "originalText": "so", "ArgType": null, "before": " "}, {"index": 10, "word": "although", "lemma": "although", "after": " ", "pos": "IN", "characterOffsetEnd": 1097, "segment_span": [9, 14], "characterOffsetBegin": 1089, "originalText": "although", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1101, "segment_span": [9, 14], "characterOffsetBegin": 1098, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "result", "lemma": "result", "after": " ", "pos": "NN", "characterOffsetEnd": 1108, "segment_span": [9, 14], "characterOffsetBegin": 1102, "originalText": "result", "ArgType": "subj", "before": " "}, {"index": 13, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 1111, "segment_span": [9, 14], "characterOffsetBegin": 1109, "originalText": "is", "ArgType": null, "before": " "}, {"index": 14, "word": "impressive", "lemma": "impressive", "after": "", "pos": "JJ", "characterOffsetEnd": 1122, "segment_span": [9, 14], "characterOffsetBegin": 1112, "originalText": "impressive", "ArgType": null, "before": " "}, {"index": 15, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1123, "segment_span": [0, 15], "characterOffsetBegin": 1122, "originalText": ",", "ArgType": null, "before": ""}, {"index": 16, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1126, "segment_span": [15, 32], "characterOffsetBegin": 1124, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 17, "word": "can", "lemma": "can", "after": "", "pos": "MD", "characterOffsetEnd": 1130, "segment_span": [15, 32], "characterOffsetBegin": 1127, "originalText": "can", "ArgType": null, "before": " "}, {"index": 18, "word": "not", "lemma": "not", "after": " ", "pos": "RB", "characterOffsetEnd": 1133, "segment_span": [15, 32], "characterOffsetBegin": 1130, "originalText": "not", "ArgType": null, "before": ""}, {"index": 19, "word": "use", "characterOffsetEnd": 1137, "after": " ", "pos": "VB", "is_root": true, "lemma": "use", "segment_span": [15, 32], "tense": "B", "characterOffsetBegin": 1134, "originalText": "use", "has_aux": true, "ArgType": null, "before": " "}, {"index": 20, "word": "it", "lemma": "it", "after": " ", "pos": "PRP", "characterOffsetEnd": 1140, "segment_span": [15, 32], "characterOffsetBegin": 1138, "originalText": "it", "ArgType": "dobj", "before": " "}, {"index": 21, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 1143, "segment_span": [15, 32], "characterOffsetBegin": 1141, "originalText": "to", "ArgType": null, "before": " "}, {"index": 22, "word": "compare", "lemma": "compare", "after": " ", "pos": "VB", "characterOffsetEnd": 1151, "segment_span": [15, 32], "characterOffsetBegin": 1144, "originalText": "compare", "ArgType": null, "before": " "}, {"index": 23, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1156, "segment_span": [15, 32], "characterOffsetBegin": 1152, "originalText": "with", "ArgType": null, "before": " "}, {"index": 24, "word": "pure", "lemma": "pure", "after": " ", "pos": "JJ", "characterOffsetEnd": 1161, "segment_span": [15, 32], "characterOffsetBegin": 1157, "originalText": "pure", "ArgType": null, "before": " "}, {"index": 25, "word": "automatic", "lemma": "automatic", "after": " ", "pos": "JJ", "characterOffsetEnd": 1171, "segment_span": [15, 32], "characterOffsetBegin": 1162, "originalText": "automatic", "ArgType": null, "before": " "}, {"index": 26, "word": "learning", "lemma": "learning", "after": " ", "pos": "NN", "characterOffsetEnd": 1180, "segment_span": [15, 32], "characterOffsetBegin": 1172, "originalText": "learning", "ArgType": null, "before": " "}, {"index": 27, "word": "approaches", "lemma": "approach", "after": "", "pos": "NNS", "characterOffsetEnd": 1191, "segment_span": [15, 32], "characterOffsetBegin": 1181, "originalText": "approaches", "ArgType": null, "before": " "}, {"index": 28, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1192, "segment_span": [15, 32], "characterOffsetBegin": 1191, "originalText": ",", "ArgType": null, "before": ""}, {"index": 29, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 1197, "segment_span": [15, 32], "characterOffsetBegin": 1193, "originalText": "such", "ArgType": null, "before": " "}, {"index": 30, "word": "us", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1200, "segment_span": [15, 32], "characterOffsetBegin": 1198, "originalText": "us", "ArgType": "subj", "before": " "}, {"index": 31, "word": "our", "lemma": "our", "after": " ", "pos": "PRP$", "characterOffsetEnd": 1204, "segment_span": [15, 32], "characterOffsetBegin": 1201, "originalText": "our", "ArgType": null, "before": " "}, {"index": 32, "word": "models", "lemma": "model", "after": "", "pos": "NNS", "characterOffsetEnd": 1211, "segment_span": [15, 32], "characterOffsetBegin": 1205, "originalText": "models", "ArgType": null, "before": " "}, {"index": 33, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1212, "characterOffsetBegin": 1211, "originalText": ".", "ArgType": null, "before": ""}], "text": "They are tuned on the target RE task so although the result is impressive , we can not use it to compare with pure automatic learning approaches , such us our models ."}], "title": "5.2 Results"}], "title": "5 Experiments"}, {"num": 15, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "In", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 2, "segment_span": [0, 21], "characterOffsetBegin": 0, "originalText": "In", "ArgType": null, "before": ""}, {"index": 2, "word": "this", "lemma": "this", "after": " ", "pos": "DT", "characterOffsetEnd": 7, "segment_span": [0, 21], "characterOffsetBegin": 3, "originalText": "this", "ArgType": null, "before": " "}, {"index": 3, "word": "paper", "lemma": "paper", "after": "", "pos": "NN", "characterOffsetEnd": 13, "segment_span": [0, 21], "characterOffsetBegin": 8, "originalText": "paper", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 14, "segment_span": [0, 21], "characterOffsetBegin": 13, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 17, "segment_span": [0, 21], "characterOffsetBegin": 15, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "study", "characterOffsetEnd": 23, "after": " ", "pos": "VBP", "is_root": true, "lemma": "study", "segment_span": [0, 21], "tense": "P", "characterOffsetBegin": 18, "originalText": "study", "ArgType": "verb", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 27, "segment_span": [0, 21], "characterOffsetBegin": 24, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "use", "lemma": "use", "after": " ", "pos": "NN", "characterOffsetEnd": 31, "segment_span": [0, 21], "characterOffsetBegin": 28, "originalText": "use", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 34, "segment_span": [0, 21], "characterOffsetBegin": 32, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "several", "lemma": "several", "after": " ", "pos": "JJ", "characterOffsetEnd": 42, "segment_span": [0, 21], "characterOffsetBegin": 35, "originalText": "several", "ArgType": null, "before": " "}, {"index": 11, "word": "types", "lemma": "type", "after": " ", "pos": "NNS", "characterOffsetEnd": 48, "segment_span": [0, 21], "characterOffsetBegin": 43, "originalText": "types", "ArgType": null, "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 51, "segment_span": [0, 21], "characterOffsetBegin": 49, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 61, "segment_span": [0, 21], "characterOffsetBegin": 52, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 14, "word": "information", "lemma": "information", "after": "", "pos": "NN", "characterOffsetEnd": 73, "segment_span": [0, 21], "characterOffsetBegin": 62, "originalText": "information", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 74, "segment_span": [0, 21], "characterOffsetBegin": 73, "originalText": ":", "ArgType": null, "before": ""}, {"index": 16, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 86, "segment_span": [0, 21], "characterOffsetBegin": 75, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 17, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 90, "segment_span": [0, 21], "characterOffsetBegin": 87, "originalText": "and", "ArgType": null, "before": " "}, {"index": 18, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 101, "segment_span": [0, 21], "characterOffsetBegin": 91, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 19, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 111, "segment_span": [0, 21], "characterOffsetBegin": 102, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 20, "word": "parse", "lemma": "parse", "after": " ", "pos": "NN", "characterOffsetEnd": 117, "segment_span": [0, 21], "characterOffsetBegin": 112, "originalText": "parse", "ArgType": null, "before": " "}, {"index": 21, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 123, "segment_span": [0, 21], "characterOffsetBegin": 118, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 22, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 124, "characterOffsetBegin": 123, "originalText": ".", "ArgType": null, "before": ""}], "text": "In this paper , we study the use of several types of syntactic information : constituent and dependency syntactic parse trees ."}, {"tokens": [{"index": 1, "word": "A", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 126, "segment_span": [0, 4], "characterOffsetBegin": 125, "originalText": "A", "ArgType": null, "before": " "}, {"index": 2, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 135, "segment_span": [0, 4], "characterOffsetBegin": 127, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 3, "word": "is", "lemma": "be", "after": " ", "pos": "VBZ", "characterOffsetEnd": 138, "segment_span": [0, 4], "characterOffsetBegin": 136, "originalText": "is", "ArgType": null, "before": " "}, {"index": 4, "word": "represented", "characterOffsetEnd": 150, "after": " ", "pos": "VBN", "is_root": true, "lemma": "represent", "segment_span": [0, 4], "tense": "N", "characterOffsetBegin": 139, "before": " ", "originalText": "represented", "ArgType": null, "is_pass": true}, {"index": 5, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 153, "segment_span": [4, 27], "characterOffsetBegin": 151, "originalText": "by", "ArgType": null, "before": " "}, {"index": 6, "word": "taking", "characterOffsetEnd": 160, "after": " ", "pos": "VBG", "is_root": true, "lemma": "take", "segment_span": [4, 27], "tense": "G", "characterOffsetBegin": 154, "originalText": "taking", "ArgType": null, "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 164, "segment_span": [4, 27], "characterOffsetBegin": 161, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "path-enclosed", "lemma": "path-enclosed", "after": " ", "pos": "JJ", "characterOffsetEnd": 178, "segment_span": [4, 27], "characterOffsetBegin": 165, "originalText": "path-enclosed", "ArgType": null, "before": " "}, {"index": 9, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 183, "segment_span": [4, 27], "characterOffsetBegin": 179, "originalText": "tree", "ArgType": "dobj", "before": " "}, {"index": 10, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 185, "segment_span": [4, 27], "characterOffsetBegin": 184, "originalText": "(", "ArgType": null, "before": " "}, {"index": 11, "word": "PET", "lemma": "pet", "after": "", "pos": "NN", "characterOffsetEnd": 188, "segment_span": [4, 27], "characterOffsetBegin": 185, "originalText": "PET", "ArgType": null, "before": ""}, {"index": 12, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 189, "segment_span": [4, 27], "characterOffsetBegin": 188, "originalText": ")", "ArgType": null, "before": ""}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 192, "segment_span": [4, 27], "characterOffsetBegin": 190, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 196, "segment_span": [4, 27], "characterOffsetBegin": 193, "originalText": "the", "ArgType": null, "before": " "}, {"index": 15, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 208, "segment_span": [4, 27], "characterOffsetBegin": 197, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 16, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 213, "segment_span": [4, 27], "characterOffsetBegin": 209, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 17, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 216, "segment_span": [4, 27], "characterOffsetBegin": 214, "originalText": "or", "ArgType": null, "before": " "}, {"index": 18, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 219, "segment_span": [4, 27], "characterOffsetBegin": 217, "originalText": "of", "ArgType": null, "before": " "}, {"index": 19, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 223, "segment_span": [4, 27], "characterOffsetBegin": 220, "originalText": "the", "ArgType": null, "before": " "}, {"index": 20, "word": "path", "lemma": "path", "after": " ", "pos": "NN", "characterOffsetEnd": 228, "segment_span": [4, 27], "characterOffsetBegin": 224, "originalText": "path", "ArgType": null, "before": " "}, {"index": 21, "word": "linking", "lemma": "link", "after": " ", "pos": "VBG", "characterOffsetEnd": 236, "segment_span": [4, 27], "characterOffsetBegin": 229, "originalText": "linking", "ArgType": null, "before": " "}, {"index": 22, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 240, "segment_span": [4, 27], "characterOffsetBegin": 237, "originalText": "two", "ArgType": null, "before": " "}, {"index": 23, "word": "entities", "lemma": "entity", "after": " ", "pos": "NNS", "characterOffsetEnd": 249, "segment_span": [4, 27], "characterOffsetBegin": 241, "originalText": "entities", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 252, "segment_span": [4, 27], "characterOffsetBegin": 250, "originalText": "of", "ArgType": null, "before": " "}, {"index": 25, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 256, "segment_span": [4, 27], "characterOffsetBegin": 253, "originalText": "the", "ArgType": null, "before": " "}, {"index": 26, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 267, "segment_span": [4, 27], "characterOffsetBegin": 257, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 27, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 272, "segment_span": [4, 27], "characterOffsetBegin": 268, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 28, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 273, "characterOffsetBegin": 272, "originalText": ".", "ArgType": null, "before": ""}], "text": "A relation is represented by taking the path-enclosed tree ( PET ) of the constituent tree or of the path linking two entities of the dependency tree ."}, {"tokens": [{"index": 1, "word": "For", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 277, "segment_span": [0, 20], "characterOffsetBegin": 274, "originalText": "For", "ArgType": null, "before": " "}, {"index": 2, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 281, "segment_span": [0, 20], "characterOffsetBegin": 278, "originalText": "the", "ArgType": null, "before": " "}, {"index": 3, "word": "design", "lemma": "design", "after": " ", "pos": "NN", "characterOffsetEnd": 288, "segment_span": [0, 20], "characterOffsetBegin": 282, "originalText": "design", "ArgType": null, "before": " "}, {"index": 4, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 291, "segment_span": [0, 20], "characterOffsetBegin": 289, "originalText": "of", "ArgType": null, "before": " "}, {"index": 5, "word": "automatic", "lemma": "automatic", "after": " ", "pos": "JJ", "characterOffsetEnd": 301, "segment_span": [0, 20], "characterOffsetBegin": 292, "originalText": "automatic", "ArgType": null, "before": " "}, {"index": 6, "word": "relation", "lemma": "relation", "after": " ", "pos": "NN", "characterOffsetEnd": 310, "segment_span": [0, 20], "characterOffsetBegin": 302, "originalText": "relation", "ArgType": null, "before": " "}, {"index": 7, "word": "classifiers", "lemma": "classifier", "after": "", "pos": "NNS", "characterOffsetEnd": 322, "segment_span": [0, 20], "characterOffsetBegin": 311, "originalText": "classifiers", "ArgType": null, "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 323, "segment_span": [0, 20], "characterOffsetBegin": 322, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 326, "segment_span": [0, 20], "characterOffsetBegin": 324, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 10, "word": "have", "lemma": "have", "after": " ", "pos": "VBP", "characterOffsetEnd": 331, "segment_span": [0, 20], "characterOffsetBegin": 327, "originalText": "have", "ArgType": null, "before": " "}, {"index": 11, "word": "investigated", "characterOffsetEnd": 344, "after": " ", "pos": "VBN", "is_root": true, "lemma": "investigate", "segment_span": [0, 20], "tense": "N", "characterOffsetBegin": 332, "originalText": "investigated", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 12, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 348, "segment_span": [0, 20], "characterOffsetBegin": 345, "originalText": "the", "ArgType": null, "before": " "}, {"index": 13, "word": "impact", "lemma": "impact", "after": " ", "pos": "NN", "characterOffsetEnd": 355, "segment_span": [0, 20], "characterOffsetBegin": 349, "originalText": "impact", "ArgType": "dobj", "before": " "}, {"index": 14, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 358, "segment_span": [0, 20], "characterOffsetBegin": 356, "originalText": "of", "ArgType": null, "before": " "}, {"index": 15, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 369, "segment_span": [0, 20], "characterOffsetBegin": 359, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 16, "word": "structures", "lemma": "structure", "after": " ", "pos": "NNS", "characterOffsetEnd": 380, "segment_span": [0, 20], "characterOffsetBegin": 370, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 17, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 383, "segment_span": [0, 20], "characterOffsetBegin": 381, "originalText": "to", "ArgType": null, "before": " "}, {"index": 18, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 387, "segment_span": [0, 20], "characterOffsetBegin": 384, "originalText": "the", "ArgType": null, "before": " "}, {"index": 19, "word": "RE", "lemma": "re", "after": " ", "pos": "NN", "characterOffsetEnd": 390, "segment_span": [0, 20], "characterOffsetBegin": 388, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 20, "word": "task", "lemma": "task", "after": "", "pos": "NN", "characterOffsetEnd": 395, "segment_span": [0, 20], "characterOffsetBegin": 391, "originalText": "task", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 396, "characterOffsetBegin": 395, "originalText": ".", "ArgType": null, "before": ""}], "text": "For the design of automatic relation classifiers , we have investigated the impact of dependency structures to the RE task ."}, {"tokens": [{"index": 1, "word": "Our", "lemma": "we", "after": " ", "pos": "PRP$", "characterOffsetEnd": 400, "segment_span": [0, 21], "characterOffsetBegin": 397, "originalText": "Our", "ArgType": null, "before": " "}, {"index": 2, "word": "novel", "lemma": "novel", "after": " ", "pos": "JJ", "characterOffsetEnd": 406, "segment_span": [0, 21], "characterOffsetBegin": 401, "originalText": "novel", "ArgType": null, "before": " "}, {"index": 3, "word": "composite", "lemma": "composite", "after": " ", "pos": "JJ", "characterOffsetEnd": 416, "segment_span": [0, 21], "characterOffsetBegin": 407, "originalText": "composite", "ArgType": null, "before": " "}, {"index": 4, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 424, "segment_span": [0, 21], "characterOffsetBegin": 417, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 5, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 425, "segment_span": [0, 21], "characterOffsetBegin": 424, "originalText": ",", "ArgType": null, "before": ""}, {"index": 6, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 431, "segment_span": [5, 12], "characterOffsetBegin": 426, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 7, "word": "account", "characterOffsetEnd": 439, "after": " ", "pos": "VBP", "is_root": true, "lemma": "account", "segment_span": [5, 12], "tense": "P", "characterOffsetBegin": 432, "originalText": "account", "ArgType": null, "before": " "}, {"index": 8, "word": "for", "lemma": "for", "after": " ", "pos": "IN", "characterOffsetEnd": 443, "segment_span": [5, 12], "characterOffsetBegin": 440, "originalText": "for", "ArgType": null, "before": " "}, {"index": 9, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 447, "segment_span": [5, 12], "characterOffsetBegin": 444, "originalText": "the", "ArgType": null, "before": " "}, {"index": 10, "word": "two", "lemma": "two", "after": " ", "pos": "CD", "characterOffsetEnd": 451, "segment_span": [5, 12], "characterOffsetBegin": 448, "originalText": "two", "ArgType": null, "before": " "}, {"index": 11, "word": "syntactic", "lemma": "syntactic", "after": " ", "pos": "JJ", "characterOffsetEnd": 461, "segment_span": [5, 12], "characterOffsetBegin": 452, "originalText": "syntactic", "ArgType": null, "before": " "}, {"index": 12, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 472, "segment_span": [5, 12], "characterOffsetBegin": 462, "originalText": "structures", "ArgType": null, "before": " "}, {"index": 13, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 473, "segment_span": [0, 21], "characterOffsetBegin": 472, "originalText": ",", "ArgType": null, "before": ""}, {"index": 14, "word": "are", "lemma": "be", "after": " ", "pos": "VBP", "characterOffsetEnd": 477, "segment_span": [0, 21], "characterOffsetBegin": 474, "originalText": "are", "ArgType": null, "before": " "}, {"index": 15, "word": "experimented", "characterOffsetEnd": 490, "after": " ", "pos": "VBN", "is_root": true, "lemma": "experiment", "segment_span": [0, 21], "tense": "N", "characterOffsetBegin": 478, "before": " ", "originalText": "experimented", "ArgType": null, "is_pass": true}, {"index": 16, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 495, "segment_span": [0, 21], "characterOffsetBegin": 491, "originalText": "with", "ArgType": null, "before": " "}, {"index": 17, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 499, "segment_span": [0, 21], "characterOffsetBegin": 496, "originalText": "the", "ArgType": null, "before": " "}, {"index": 18, "word": "appropriate", "lemma": "appropriate", "after": " ", "pos": "JJ", "characterOffsetEnd": 511, "segment_span": [0, 21], "characterOffsetBegin": 500, "originalText": "appropriate", "ArgType": null, "before": " "}, {"index": 19, "word": "convolution", "lemma": "convolution", "after": " ", "pos": "NN", "characterOffsetEnd": 523, "segment_span": [0, 21], "characterOffsetBegin": 512, "originalText": "convolution", "ArgType": null, "before": " "}, {"index": 20, "word": "kernels", "lemma": "kernel", "after": " ", "pos": "NNS", "characterOffsetEnd": 531, "segment_span": [0, 21], "characterOffsetBegin": 524, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 21, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 535, "segment_span": [0, 21], "characterOffsetBegin": 532, "originalText": "and", "ArgType": null, "before": " "}, {"index": 22, "word": "show", "characterOffsetEnd": 540, "after": " ", "pos": "VB", "is_root": true, "lemma": "show", "segment_span": [21, 31], "tense": "B", "characterOffsetBegin": 536, "originalText": "show", "ArgType": null, "before": " "}, {"index": 23, "word": "significant", "lemma": "significant", "after": " ", "pos": "JJ", "characterOffsetEnd": 552, "segment_span": [21, 31], "characterOffsetBegin": 541, "originalText": "significant", "ArgType": null, "before": " "}, {"index": 24, "word": "improvement", "lemma": "improvement", "after": " ", "pos": "NN", "characterOffsetEnd": 564, "segment_span": [21, 31], "characterOffsetBegin": 553, "originalText": "improvement", "ArgType": "dobj", "before": " "}, {"index": 25, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 569, "segment_span": [21, 31], "characterOffsetBegin": 565, "originalText": "with", "ArgType": null, "before": " "}, {"index": 26, "word": "respect", "lemma": "respect", "after": " ", "pos": "NN", "characterOffsetEnd": 577, "segment_span": [21, 31], "characterOffsetBegin": 570, "originalText": "respect", "ArgType": null, "before": " "}, {"index": 27, "word": "to", "lemma": "to", "after": " ", "pos": "TO", "characterOffsetEnd": 580, "segment_span": [21, 31], "characterOffsetBegin": 578, "originalText": "to", "ArgType": null, "before": " "}, {"index": 28, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 584, "segment_span": [21, 31], "characterOffsetBegin": 581, "originalText": "the", "ArgType": null, "before": " "}, {"index": 29, "word": "state-ofthe-art", "lemma": "state-ofthe-art", "after": " ", "pos": "NN", "characterOffsetEnd": 600, "segment_span": [21, 31], "characterOffsetBegin": 585, "originalText": "state-ofthe-art", "ArgType": null, "before": " "}, {"index": 30, "word": "in", "lemma": "in", "after": " ", "pos": "IN", "characterOffsetEnd": 603, "segment_span": [21, 31], "characterOffsetBegin": 601, "originalText": "in", "ArgType": null, "before": " "}, {"index": 31, "word": "RE", "lemma": "re", "after": "", "pos": "NN", "characterOffsetEnd": 606, "segment_span": [21, 31], "characterOffsetBegin": 604, "originalText": "RE", "ArgType": null, "before": " "}, {"index": 32, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 607, "characterOffsetBegin": 606, "originalText": ".", "ArgType": null, "before": ""}], "text": "Our novel composite kernels , which account for the two syntactic structures , are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE ."}, {"tokens": [{"index": 1, "word": "Regarding", "lemma": "regard", "after": " ", "pos": "VBG", "characterOffsetEnd": 617, "segment_span": [0, 19], "characterOffsetBegin": 608, "originalText": "Regarding", "ArgType": null, "before": " "}, {"index": 2, "word": "future", "lemma": "future", "after": " ", "pos": "JJ", "characterOffsetEnd": 624, "segment_span": [0, 19], "characterOffsetBegin": 618, "originalText": "future", "ArgType": null, "before": " "}, {"index": 3, "word": "work", "lemma": "work", "after": "", "pos": "NN", "characterOffsetEnd": 629, "segment_span": [0, 19], "characterOffsetBegin": 625, "originalText": "work", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 630, "segment_span": [0, 19], "characterOffsetBegin": 629, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "there", "lemma": "there", "after": " ", "pos": "EX", "characterOffsetEnd": 636, "segment_span": [0, 19], "characterOffsetBegin": 631, "originalText": "there", "ArgType": null, "before": " "}, {"index": 6, "word": "are", "characterOffsetEnd": 640, "after": " ", "pos": "VBP", "is_root": true, "lemma": "be", "segment_span": [0, 19], "tense": "P", "characterOffsetBegin": 637, "originalText": "are", "ArgType": "verb", "before": " "}, {"index": 7, "word": "many", "lemma": "many", "after": " ", "pos": "JJ", "characterOffsetEnd": 645, "segment_span": [0, 19], "characterOffsetBegin": 641, "originalText": "many", "ArgType": null, "before": " "}, {"index": 8, "word": "research", "lemma": "research", "after": " ", "pos": "NN", "characterOffsetEnd": 654, "segment_span": [0, 19], "characterOffsetBegin": 646, "originalText": "research", "ArgType": null, "before": " "}, {"index": 9, "word": "line", "lemma": "line", "after": " ", "pos": "NN", "characterOffsetEnd": 659, "segment_span": [0, 19], "characterOffsetBegin": 655, "originalText": "line", "ArgType": "subj", "before": " "}, {"index": 10, "word": "that", "lemma": "that", "after": " ", "pos": "WDT", "characterOffsetEnd": 664, "segment_span": [9, 13], "characterOffsetBegin": 660, "originalText": "that", "ArgType": null, "before": " "}, {"index": 11, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 668, "segment_span": [9, 13], "characterOffsetBegin": 665, "originalText": "may", "ArgType": null, "before": " "}, {"index": 12, "word": "be", "lemma": "be", "after": " ", "pos": "VB", "characterOffsetEnd": 671, "segment_span": [9, 13], "characterOffsetBegin": 669, "originalText": "be", "ArgType": null, "before": " "}, {"index": 13, "word": "followed", "characterOffsetEnd": 680, "after": "", "pos": "VBN", "is_root": true, "lemma": "follow", "segment_span": [9, 13], "tense": "N", "characterOffsetBegin": 672, "before": " ", "originalText": "followed", "has_aux": true, "ArgType": null, "is_pass": true}, {"index": 14, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 681, "segment_span": [0, 19], "characterOffsetBegin": 680, "originalText": ":", "ArgType": null, "before": ""}, {"index": 15, "word": "i", "lemma": "i", "after": "", "pos": "LS", "characterOffsetEnd": 683, "segment_span": [0, 19], "characterOffsetBegin": 682, "originalText": "i", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 684, "segment_span": [0, 19], "characterOffsetBegin": 683, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": "Capturing", "lemma": "capture", "after": " ", "pos": "VBG", "characterOffsetEnd": 694, "segment_span": [0, 19], "characterOffsetBegin": 685, "originalText": "Capturing", "ArgType": null, "before": " "}, {"index": 18, "word": "more", "lemma": "more", "after": " ", "pos": "JJR", "characterOffsetEnd": 699, "segment_span": [0, 19], "characterOffsetBegin": 695, "originalText": "more", "ArgType": null, "before": " "}, {"index": 19, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 708, "segment_span": [0, 19], "characterOffsetBegin": 700, "originalText": "features", "ArgType": "dobj", "before": " "}, {"index": 20, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 711, "segment_span": [19, 97], "characterOffsetBegin": 709, "originalText": "by", "ArgType": null, "before": " "}, {"index": 21, "word": "employing", "characterOffsetEnd": 721, "after": " ", "pos": "VBG", "is_root": true, "lemma": "employ", "segment_span": [19, 97], "tense": "G", "characterOffsetBegin": 712, "originalText": "employing", "ArgType": null, "before": " "}, {"index": 22, "word": "external", "lemma": "external", "after": " ", "pos": "JJ", "characterOffsetEnd": 730, "segment_span": [19, 97], "characterOffsetBegin": 722, "originalText": "external", "ArgType": null, "before": " "}, {"index": 23, "word": "knowledge", "lemma": "knowledge", "after": " ", "pos": "NN", "characterOffsetEnd": 740, "segment_span": [19, 97], "characterOffsetBegin": 731, "originalText": "knowledge", "ArgType": "dobj", "before": " "}, {"index": 24, "word": "such", "lemma": "such", "after": " ", "pos": "JJ", "characterOffsetEnd": 745, "segment_span": [19, 97], "characterOffsetBegin": 741, "originalText": "such", "ArgType": null, "before": " "}, {"index": 25, "word": "as", "lemma": "as", "after": " ", "pos": "IN", "characterOffsetEnd": 748, "segment_span": [19, 97], "characterOffsetBegin": 746, "originalText": "as", "ArgType": null, "before": " "}, {"index": 26, "word": "ontological", "lemma": "ontological", "after": "", "pos": "JJ", "characterOffsetEnd": 760, "segment_span": [19, 97], "characterOffsetBegin": 749, "originalText": "ontological", "ArgType": null, "before": " "}, {"index": 27, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 761, "segment_span": [19, 97], "characterOffsetBegin": 760, "originalText": ",", "ArgType": null, "before": ""}, {"index": 28, "word": "lexical", "lemma": "lexical", "after": " ", "pos": "JJ", "characterOffsetEnd": 769, "segment_span": [19, 97], "characterOffsetBegin": 762, "originalText": "lexical", "ArgType": null, "before": " "}, {"index": 29, "word": "resource", "lemma": "resource", "after": " ", "pos": "NN", "characterOffsetEnd": 778, "segment_span": [19, 97], "characterOffsetBegin": 770, "originalText": "resource", "ArgType": null, "before": " "}, {"index": 30, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 781, "segment_span": [19, 97], "characterOffsetBegin": 779, "originalText": "or", "ArgType": null, "before": " "}, {"index": 31, "word": "WordNet-based", "lemma": "wordnet-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 795, "segment_span": [19, 97], "characterOffsetBegin": 782, "originalText": "WordNet-based", "ArgType": null, "before": " "}, {"index": 32, "word": "features", "lemma": "feature", "after": " ", "pos": "NNS", "characterOffsetEnd": 804, "segment_span": [19, 97], "characterOffsetBegin": 796, "originalText": "features", "ArgType": null, "before": " "}, {"index": 33, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 806, "segment_span": [19, 97], "characterOffsetBegin": 805, "originalText": "(", "ArgType": null, "before": " "}, {"index": 34, "word": "Basili", "lemma": "Basili", "after": " ", "pos": "NNP", "characterOffsetEnd": 812, "segment_span": [19, 97], "characterOffsetBegin": 806, "originalText": "Basili", "ArgType": null, "before": ""}, {"index": 35, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 815, "segment_span": [19, 97], "characterOffsetBegin": 813, "originalText": "et", "ArgType": null, "before": " "}, {"index": 36, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 819, "segment_span": [19, 97], "characterOffsetBegin": 816, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 37, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 820, "segment_span": [19, 97], "characterOffsetBegin": 819, "originalText": ",", "ArgType": null, "before": ""}, {"index": 38, "word": "2005a", "lemma": "2005a", "after": "", "pos": "NN", "characterOffsetEnd": 826, "segment_span": [19, 97], "characterOffsetBegin": 821, "originalText": "2005a", "ArgType": null, "before": " "}, {"index": 39, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 827, "segment_span": [19, 97], "characterOffsetBegin": 826, "originalText": ";", "ArgType": null, "before": ""}, {"index": 40, "word": "Basili", "lemma": "Basili", "after": " ", "pos": "NNP", "characterOffsetEnd": 834, "segment_span": [19, 97], "characterOffsetBegin": 828, "originalText": "Basili", "ArgType": null, "before": " "}, {"index": 41, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 837, "segment_span": [19, 97], "characterOffsetBegin": 835, "originalText": "et", "ArgType": null, "before": " "}, {"index": 42, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 841, "segment_span": [19, 97], "characterOffsetBegin": 838, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 43, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 842, "segment_span": [19, 97], "characterOffsetBegin": 841, "originalText": ",", "ArgType": null, "before": ""}, {"index": 44, "word": "2005b", "lemma": "2005b", "after": "", "pos": "NN", "characterOffsetEnd": 848, "segment_span": [19, 97], "characterOffsetBegin": 843, "originalText": "2005b", "ArgType": null, "before": " "}, {"index": 45, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 849, "segment_span": [19, 97], "characterOffsetBegin": 848, "originalText": ";", "ArgType": null, "before": ""}, {"index": 46, "word": "Bloehdorn", "lemma": "Bloehdorn", "after": " ", "pos": "NNP", "characterOffsetEnd": 859, "segment_span": [19, 97], "characterOffsetBegin": 850, "originalText": "Bloehdorn", "ArgType": null, "before": " "}, {"index": 47, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 862, "segment_span": [19, 97], "characterOffsetBegin": 860, "originalText": "et", "ArgType": null, "before": " "}, {"index": 48, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 866, "segment_span": [19, 97], "characterOffsetBegin": 863, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 49, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 867, "segment_span": [19, 97], "characterOffsetBegin": 866, "originalText": ",", "ArgType": null, "before": ""}, {"index": 50, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 872, "segment_span": [19, 97], "characterOffsetBegin": 868, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 51, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 873, "segment_span": [19, 97], "characterOffsetBegin": 872, "originalText": ";", "ArgType": null, "before": ""}, {"index": 52, "word": "Bloehdorn", "lemma": "Bloehdorn", "after": " ", "pos": "NNP", "characterOffsetEnd": 883, "segment_span": [19, 97], "characterOffsetBegin": 874, "originalText": "Bloehdorn", "ArgType": null, "before": " "}, {"index": 53, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 887, "segment_span": [19, 97], "characterOffsetBegin": 884, "originalText": "and", "ArgType": null, "before": " "}, {"index": 54, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 897, "segment_span": [19, 97], "characterOffsetBegin": 888, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 55, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 898, "segment_span": [19, 97], "characterOffsetBegin": 897, "originalText": ",", "ArgType": null, "before": ""}, {"index": 56, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 903, "segment_span": [19, 97], "characterOffsetBegin": 899, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 57, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 904, "segment_span": [19, 97], "characterOffsetBegin": 903, "originalText": ")", "ArgType": null, "before": ""}, {"index": 58, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 907, "segment_span": [19, 97], "characterOffsetBegin": 905, "originalText": "or", "ArgType": null, "before": " "}, {"index": 59, "word": "shallow", "lemma": "shallow", "after": " ", "pos": "JJ", "characterOffsetEnd": 915, "segment_span": [19, 97], "characterOffsetBegin": 908, "originalText": "shallow", "ArgType": null, "before": " "}, {"index": 60, "word": "semantic", "lemma": "semantic", "after": " ", "pos": "JJ", "characterOffsetEnd": 924, "segment_span": [19, 97], "characterOffsetBegin": 916, "originalText": "semantic", "ArgType": null, "before": " "}, {"index": 61, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 930, "segment_span": [19, 97], "characterOffsetBegin": 925, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 62, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 931, "segment_span": [19, 97], "characterOffsetBegin": 930, "originalText": ",", "ArgType": null, "before": ""}, {"index": 63, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 933, "segment_span": [19, 97], "characterOffsetBegin": 932, "originalText": "(", "ArgType": null, "before": " "}, {"index": 64, "word": "Giuglea", "lemma": "Giuglea", "after": " ", "pos": "NNP", "characterOffsetEnd": 940, "segment_span": [19, 97], "characterOffsetBegin": 933, "originalText": "Giuglea", "ArgType": null, "before": ""}, {"index": 65, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 944, "segment_span": [19, 97], "characterOffsetBegin": 941, "originalText": "and", "ArgType": null, "before": " "}, {"index": 66, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 954, "segment_span": [19, 97], "characterOffsetBegin": 945, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 67, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 955, "segment_span": [19, 97], "characterOffsetBegin": 954, "originalText": ",", "ArgType": null, "before": ""}, {"index": 68, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 960, "segment_span": [19, 97], "characterOffsetBegin": 956, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 69, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 961, "segment_span": [19, 97], "characterOffsetBegin": 960, "originalText": ";", "ArgType": null, "before": ""}, {"index": 70, "word": "Giuglea", "lemma": "Giuglea", "after": " ", "pos": "NNP", "characterOffsetEnd": 969, "segment_span": [19, 97], "characterOffsetBegin": 962, "originalText": "Giuglea", "ArgType": null, "before": " "}, {"index": 71, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 973, "segment_span": [19, 97], "characterOffsetBegin": 970, "originalText": "and", "ArgType": null, "before": " "}, {"index": 72, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 983, "segment_span": [19, 97], "characterOffsetBegin": 974, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 73, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 984, "segment_span": [19, 97], "characterOffsetBegin": 983, "originalText": ",", "ArgType": null, "before": ""}, {"index": 74, "word": "2006", "lemma": "2006", "after": "", "pos": "CD", "characterOffsetEnd": 989, "segment_span": [19, 97], "characterOffsetBegin": 985, "originalText": "2006", "ArgType": null, "before": " "}, {"index": 75, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 990, "segment_span": [19, 97], "characterOffsetBegin": 989, "originalText": ";", "ArgType": null, "before": ""}, {"index": 76, "word": "Moschitti", "lemma": "Moschitti", "after": " ", "pos": "NNP", "characterOffsetEnd": 1000, "segment_span": [19, 97], "characterOffsetBegin": 991, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 77, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1004, "segment_span": [19, 97], "characterOffsetBegin": 1001, "originalText": "and", "ArgType": null, "before": " "}, {"index": 78, "word": "Bejan", "lemma": "Bejan", "after": "", "pos": "NNP", "characterOffsetEnd": 1010, "segment_span": [19, 97], "characterOffsetBegin": 1005, "originalText": "Bejan", "ArgType": null, "before": " "}, {"index": 79, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1011, "segment_span": [19, 97], "characterOffsetBegin": 1010, "originalText": ",", "ArgType": null, "before": ""}, {"index": 80, "word": "2004", "lemma": "2004", "after": "", "pos": "CD", "characterOffsetEnd": 1016, "segment_span": [19, 97], "characterOffsetBegin": 1012, "originalText": "2004", "ArgType": null, "before": " "}, {"index": 81, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1017, "segment_span": [19, 97], "characterOffsetBegin": 1016, "originalText": ";", "ArgType": null, "before": ""}, {"index": 82, "word": "Moschitti", "lemma": "Moschitti", "after": " ", "pos": "NNP", "characterOffsetEnd": 1027, "segment_span": [19, 97], "characterOffsetBegin": 1018, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 83, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1030, "segment_span": [19, 97], "characterOffsetBegin": 1028, "originalText": "et", "ArgType": null, "before": " "}, {"index": 84, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1034, "segment_span": [19, 97], "characterOffsetBegin": 1031, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 85, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1035, "segment_span": [19, 97], "characterOffsetBegin": 1034, "originalText": ",", "ArgType": null, "before": ""}, {"index": 86, "word": "2007", "lemma": "2007", "after": "", "pos": "CD", "characterOffsetEnd": 1040, "segment_span": [19, 97], "characterOffsetBegin": 1036, "originalText": "2007", "ArgType": null, "before": " "}, {"index": 87, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1041, "segment_span": [19, 97], "characterOffsetBegin": 1040, "originalText": ";", "ArgType": null, "before": ""}, {"index": 88, "word": "Moschitti", "lemma": "Moschitti", "after": "", "pos": "NNP", "characterOffsetEnd": 1051, "segment_span": [19, 97], "characterOffsetBegin": 1042, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 89, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1052, "segment_span": [19, 97], "characterOffsetBegin": 1051, "originalText": ",", "ArgType": null, "before": ""}, {"index": 90, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 1057, "segment_span": [19, 97], "characterOffsetBegin": 1053, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 91, "word": ";", "lemma": ";", "after": " ", "pos": ":", "characterOffsetEnd": 1058, "segment_span": [19, 97], "characterOffsetBegin": 1057, "originalText": ";", "ArgType": null, "before": ""}, {"index": 92, "word": "Moschitti", "lemma": "Moschitti", "after": " ", "pos": "NNP", "characterOffsetEnd": 1068, "segment_span": [19, 97], "characterOffsetBegin": 1059, "originalText": "Moschitti", "ArgType": null, "before": " "}, {"index": 93, "word": "et", "lemma": "et", "after": " ", "pos": "FW", "characterOffsetEnd": 1071, "segment_span": [19, 97], "characterOffsetBegin": 1069, "originalText": "et", "ArgType": null, "before": " "}, {"index": 94, "word": "al.", "lemma": "al.", "after": "", "pos": "FW", "characterOffsetEnd": 1075, "segment_span": [19, 97], "characterOffsetBegin": 1072, "originalText": "al.", "ArgType": null, "before": " "}, {"index": 95, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1076, "segment_span": [19, 97], "characterOffsetBegin": 1075, "originalText": ",", "ArgType": null, "before": ""}, {"index": 96, "word": "2008", "lemma": "2008", "after": "", "pos": "CD", "characterOffsetEnd": 1081, "segment_span": [19, 97], "characterOffsetBegin": 1077, "originalText": "2008", "ArgType": null, "before": " "}, {"index": 97, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1082, "segment_span": [19, 97], "characterOffsetBegin": 1081, "originalText": ")", "ArgType": null, "before": ""}, {"index": 98, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1083, "characterOffsetBegin": 1082, "originalText": ".", "ArgType": null, "before": ""}], "text": "Regarding future work , there are many research line that may be followed : i ) Capturing more features by employing external knowledge such as ontological , lexical resource or WordNet-based features ( Basili et al. , 2005a ; Basili et al. , 2005b ; Bloehdorn et al. , 2006 ; Bloehdorn and Moschitti , 2007 ) or shallow semantic trees , ( Giuglea and Moschitti , 2004 ; Giuglea and Moschitti , 2006 ; Moschitti and Bejan , 2004 ; Moschitti et al. , 2007 ; Moschitti , 2008 ; Moschitti et al. , 2008 ) ."}, {"tokens": [{"index": 1, "word": "ii", "lemma": "ii", "after": "", "pos": "LS", "characterOffsetEnd": 1086, "segment_span": [0, 8], "characterOffsetBegin": 1084, "originalText": "ii", "ArgType": null, "before": " "}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1087, "segment_span": [0, 8], "characterOffsetBegin": 1086, "originalText": ")", "ArgType": null, "before": ""}, {"index": 3, "word": "Design", "lemma": "design", "after": " ", "pos": "NN", "characterOffsetEnd": 1094, "segment_span": [0, 8], "characterOffsetBegin": 1088, "originalText": "Design", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1096, "segment_span": [0, 8], "characterOffsetBegin": 1095, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 1100, "segment_span": [0, 8], "characterOffsetBegin": 1097, "originalText": "new", "ArgType": null, "before": " "}, {"index": 6, "word": "tree-based", "lemma": "tree-based", "after": " ", "pos": "JJ", "characterOffsetEnd": 1111, "segment_span": [0, 8], "characterOffsetBegin": 1101, "originalText": "tree-based", "ArgType": null, "before": " "}, {"index": 7, "word": "structures", "lemma": "structure", "after": "", "pos": "NNS", "characterOffsetEnd": 1122, "segment_span": [0, 8], "characterOffsetBegin": 1112, "originalText": "structures", "ArgType": "dobj", "before": " "}, {"index": 8, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1123, "segment_span": [0, 8], "characterOffsetBegin": 1122, "originalText": ",", "ArgType": null, "before": ""}, {"index": 9, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1129, "segment_span": [8, 18], "characterOffsetBegin": 1124, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 10, "word": "combines", "characterOffsetEnd": 1138, "after": " ", "pos": "VBZ", "is_root": true, "lemma": "combine", "segment_span": [8, 18], "tense": "Z", "characterOffsetBegin": 1130, "originalText": "combines", "ArgType": null, "before": " "}, {"index": 11, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1142, "segment_span": [8, 18], "characterOffsetBegin": 1139, "originalText": "the", "ArgType": null, "before": " "}, {"index": 12, "word": "information", "lemma": "information", "after": " ", "pos": "NN", "characterOffsetEnd": 1154, "segment_span": [8, 18], "characterOffsetBegin": 1143, "originalText": "information", "ArgType": "dobj", "before": " "}, {"index": 13, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1157, "segment_span": [8, 18], "characterOffsetBegin": 1155, "originalText": "of", "ArgType": null, "before": " "}, {"index": 14, "word": "both", "lemma": "both", "after": " ", "pos": "DT", "characterOffsetEnd": 1162, "segment_span": [8, 18], "characterOffsetBegin": 1158, "originalText": "both", "ArgType": null, "before": " "}, {"index": 15, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 1174, "segment_span": [8, 18], "characterOffsetBegin": 1163, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 16, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1178, "segment_span": [8, 18], "characterOffsetBegin": 1175, "originalText": "and", "ArgType": null, "before": " "}, {"index": 17, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1189, "segment_span": [8, 18], "characterOffsetBegin": 1179, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 18, "word": "parses", "lemma": "parse", "after": "", "pos": "VBZ", "characterOffsetEnd": 1196, "segment_span": [8, 18], "characterOffsetBegin": 1190, "originalText": "parses", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1197, "characterOffsetBegin": 1196, "originalText": ".", "ArgType": null, "before": ""}], "text": "ii ) Design a new tree-based structures , which combines the information of both constituent and dependency parses ."}, {"tokens": [{"index": 1, "word": "From", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1202, "segment_span": [0, 19], "characterOffsetBegin": 1198, "originalText": "From", "ArgType": null, "before": " "}, {"index": 2, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1213, "segment_span": [0, 19], "characterOffsetBegin": 1203, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 3, "word": "trees", "lemma": "tree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1219, "segment_span": [0, 19], "characterOffsetBegin": 1214, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 4, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1222, "segment_span": [0, 19], "characterOffsetBegin": 1220, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 5, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1226, "segment_span": [0, 19], "characterOffsetBegin": 1223, "originalText": "can", "ArgType": null, "before": " "}, {"index": 6, "word": "extract", "characterOffsetEnd": 1234, "after": " ", "pos": "VB", "is_root": true, "lemma": "extract", "segment_span": [0, 19], "tense": "B", "characterOffsetBegin": 1227, "originalText": "extract", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1239, "segment_span": [0, 19], "characterOffsetBegin": 1235, "originalText": "more", "ArgType": null, "before": " "}, {"index": 8, "word": "precise", "lemma": "precise", "after": " ", "pos": "JJ", "characterOffsetEnd": 1247, "segment_span": [0, 19], "characterOffsetBegin": 1240, "originalText": "precise", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "but", "lemma": "but", "after": " ", "pos": "CC", "characterOffsetEnd": 1251, "segment_span": [0, 19], "characterOffsetBegin": 1248, "originalText": "but", "ArgType": null, "before": " "}, {"index": 10, "word": "also", "lemma": "also", "after": " ", "pos": "RB", "characterOffsetEnd": 1256, "segment_span": [0, 19], "characterOffsetBegin": 1252, "originalText": "also", "ArgType": null, "before": " "}, {"index": 11, "word": "more", "lemma": "more", "after": " ", "pos": "RBR", "characterOffsetEnd": 1261, "segment_span": [0, 19], "characterOffsetBegin": 1257, "originalText": "more", "ArgType": null, "before": " "}, {"index": 12, "word": "sparse", "lemma": "sparse", "after": " ", "pos": "JJ", "characterOffsetEnd": 1268, "segment_span": [0, 19], "characterOffsetBegin": 1262, "originalText": "sparse", "ArgType": null, "before": " "}, {"index": 13, "word": "relationships", "lemma": "relationship", "after": " ", "pos": "NNS", "characterOffsetEnd": 1282, "segment_span": [0, 19], "characterOffsetBegin": 1269, "originalText": "relationships", "ArgType": null, "before": " "}, {"index": 14, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1284, "segment_span": [0, 19], "characterOffsetBegin": 1283, "originalText": "(", "ArgType": null, "before": " "}, {"index": 15, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1289, "segment_span": [0, 19], "characterOffsetBegin": 1284, "originalText": "which", "ArgType": "subj", "before": ""}, {"index": 16, "word": "may", "lemma": "may", "after": " ", "pos": "MD", "characterOffsetEnd": 1293, "segment_span": [0, 19], "characterOffsetBegin": 1290, "originalText": "may", "ArgType": null, "before": " "}, {"index": 17, "word": "cause", "lemma": "cause", "after": " ", "pos": "VB", "characterOffsetEnd": 1299, "segment_span": [0, 19], "characterOffsetBegin": 1294, "originalText": "cause", "ArgType": null, "before": " "}, {"index": 18, "word": "overfit", "lemma": "overfit", "after": "", "pos": "NN", "characterOffsetEnd": 1307, "segment_span": [0, 19], "characterOffsetBegin": 1300, "originalText": "overfit", "ArgType": "dobj", "before": " "}, {"index": 19, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1308, "segment_span": [0, 19], "characterOffsetBegin": 1307, "originalText": ")", "ArgType": null, "before": ""}, {"index": 20, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1309, "characterOffsetBegin": 1308, "originalText": ".", "ArgType": null, "before": ""}], "text": "From dependency trees we can extract more precise but also more sparse relationships ( which may cause overfit ) ."}, {"tokens": [{"index": 1, "word": "From", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 1314, "segment_span": [0, 17], "characterOffsetBegin": 1310, "originalText": "From", "ArgType": null, "before": " "}, {"index": 2, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 1326, "segment_span": [0, 17], "characterOffsetBegin": 1315, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 3, "word": "trees", "lemma": "tree", "after": "", "pos": "NNS", "characterOffsetEnd": 1332, "segment_span": [0, 17], "characterOffsetBegin": 1327, "originalText": "trees", "ArgType": null, "before": " "}, {"index": 4, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1333, "segment_span": [0, 17], "characterOffsetBegin": 1332, "originalText": ",", "ArgType": null, "before": ""}, {"index": 5, "word": "we", "lemma": "we", "after": " ", "pos": "PRP", "characterOffsetEnd": 1336, "segment_span": [0, 17], "characterOffsetBegin": 1334, "originalText": "we", "ArgType": "subj", "before": " "}, {"index": 6, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1340, "segment_span": [0, 17], "characterOffsetBegin": 1337, "originalText": "can", "ArgType": null, "before": " "}, {"index": 7, "word": "extract", "characterOffsetEnd": 1348, "after": " ", "pos": "VB", "is_root": true, "lemma": "extract", "segment_span": [0, 17], "tense": "B", "characterOffsetBegin": 1341, "originalText": "extract", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 8, "word": "subtrees", "lemma": "subtree", "after": " ", "pos": "NNS", "characterOffsetEnd": 1357, "segment_span": [0, 17], "characterOffsetBegin": 1349, "originalText": "subtrees", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "constituted", "lemma": "constitute", "after": " ", "pos": "VBN", "characterOffsetEnd": 1369, "segment_span": [0, 17], "characterOffsetBegin": 1358, "originalText": "constituted", "ArgType": null, "before": " "}, {"index": 10, "word": "by", "lemma": "by", "after": " ", "pos": "IN", "characterOffsetEnd": 1372, "segment_span": [0, 17], "characterOffsetBegin": 1370, "originalText": "by", "ArgType": null, "before": " "}, {"index": 11, "word": "non-terminal", "lemma": "non-terminal", "after": " ", "pos": "JJ", "characterOffsetEnd": 1385, "segment_span": [0, 17], "characterOffsetBegin": 1373, "originalText": "non-terminal", "ArgType": null, "before": " "}, {"index": 12, "word": "symbols", "lemma": "symbol", "after": " ", "pos": "NNS", "characterOffsetEnd": 1393, "segment_span": [0, 17], "characterOffsetBegin": 1386, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 13, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1395, "segment_span": [0, 17], "characterOffsetBegin": 1394, "originalText": "(", "ArgType": null, "before": " "}, {"index": 14, "word": "grammar", "lemma": "grammar", "after": " ", "pos": "NN", "characterOffsetEnd": 1402, "segment_span": [0, 17], "characterOffsetBegin": 1395, "originalText": "grammar", "ArgType": null, "before": ""}, {"index": 15, "word": "symbols", "lemma": "symbol", "after": "", "pos": "NNS", "characterOffsetEnd": 1410, "segment_span": [0, 17], "characterOffsetBegin": 1403, "originalText": "symbols", "ArgType": null, "before": " "}, {"index": 16, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1411, "segment_span": [0, 17], "characterOffsetBegin": 1410, "originalText": ")", "ArgType": null, "before": ""}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1412, "segment_span": [0, 17], "characterOffsetBegin": 1411, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1418, "segment_span": [17, 29], "characterOffsetBegin": 1413, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 19, "word": "provide", "characterOffsetEnd": 1426, "after": " ", "pos": "VBP", "is_root": true, "lemma": "provide", "segment_span": [17, 29], "tense": "P", "characterOffsetBegin": 1419, "originalText": "provide", "ArgType": null, "before": " "}, {"index": 20, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1428, "segment_span": [17, 29], "characterOffsetBegin": 1427, "originalText": "a", "ArgType": null, "before": " "}, {"index": 21, "word": "better", "lemma": "better", "after": " ", "pos": "JJR", "characterOffsetEnd": 1435, "segment_span": [17, 29], "characterOffsetBegin": 1429, "originalText": "better", "ArgType": null, "before": " "}, {"index": 22, "word": "generalization", "lemma": "generalization", "after": " ", "pos": "NN", "characterOffsetEnd": 1450, "segment_span": [17, 29], "characterOffsetBegin": 1436, "originalText": "generalization", "ArgType": "dobj", "before": " "}, {"index": 23, "word": "(", "lemma": "-lrb-", "after": "", "pos": "-LRB-", "characterOffsetEnd": 1452, "segment_span": [17, 29], "characterOffsetBegin": 1451, "originalText": "(", "ArgType": null, "before": " "}, {"index": 24, "word": "with", "lemma": "with", "after": " ", "pos": "IN", "characterOffsetEnd": 1456, "segment_span": [17, 29], "characterOffsetBegin": 1452, "originalText": "with", "ArgType": null, "before": ""}, {"index": 25, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1458, "segment_span": [17, 29], "characterOffsetBegin": 1457, "originalText": "a", "ArgType": null, "before": " "}, {"index": 26, "word": "risk", "lemma": "risk", "after": " ", "pos": "NN", "characterOffsetEnd": 1463, "segment_span": [17, 29], "characterOffsetBegin": 1459, "originalText": "risk", "ArgType": null, "before": " "}, {"index": 27, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1466, "segment_span": [17, 29], "characterOffsetBegin": 1464, "originalText": "of", "ArgType": null, "before": " "}, {"index": 28, "word": "underfitting", "lemma": "underfitting", "after": "", "pos": "NN", "characterOffsetEnd": 1479, "segment_span": [17, 29], "characterOffsetBegin": 1467, "originalText": "underfitting", "ArgType": null, "before": " "}, {"index": 29, "word": ")", "lemma": "-rrb-", "after": "", "pos": "-RRB-", "characterOffsetEnd": 1480, "segment_span": [17, 29], "characterOffsetBegin": 1479, "originalText": ")", "ArgType": null, "before": ""}, {"index": 30, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1481, "characterOffsetBegin": 1480, "originalText": ".", "ArgType": null, "before": ""}], "text": "From constituent trees , we can extract subtrees constituted by non-terminal symbols ( grammar symbols ) , which provide a better generalization ( with a risk of underfitting ) ."}, {"tokens": [{"index": 1, "word": "iii", "lemma": "iii", "after": "", "pos": "LS", "characterOffsetEnd": 1485, "segment_span": [0, 6], "characterOffsetBegin": 1482, "originalText": "iii", "ArgType": null, "before": " "}, {"index": 2, "word": ")", "lemma": "-rrb-", "after": " ", "pos": "-RRB-", "characterOffsetEnd": 1486, "segment_span": [0, 6], "characterOffsetBegin": 1485, "originalText": ")", "ArgType": null, "before": ""}, {"index": 3, "word": "Design", "lemma": "design", "after": " ", "pos": "NN", "characterOffsetEnd": 1493, "segment_span": [0, 6], "characterOffsetBegin": 1487, "originalText": "Design", "ArgType": null, "before": " "}, {"index": 4, "word": "a", "lemma": "a", "after": " ", "pos": "DT", "characterOffsetEnd": 1495, "segment_span": [0, 6], "characterOffsetBegin": 1494, "originalText": "a", "ArgType": null, "before": " "}, {"index": 5, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 1499, "segment_span": [0, 6], "characterOffsetBegin": 1496, "originalText": "new", "ArgType": null, "before": " "}, {"index": 6, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1506, "segment_span": [0, 6], "characterOffsetBegin": 1500, "originalText": "kernel", "ArgType": "dobj", "before": " "}, {"index": 7, "word": "which", "lemma": "which", "after": " ", "pos": "WDT", "characterOffsetEnd": 1512, "segment_span": [6, 17], "characterOffsetBegin": 1507, "originalText": "which", "ArgType": "subj", "before": " "}, {"index": 8, "word": "can", "lemma": "can", "after": " ", "pos": "MD", "characterOffsetEnd": 1516, "segment_span": [6, 17], "characterOffsetBegin": 1513, "originalText": "can", "ArgType": null, "before": " "}, {"index": 9, "word": "integrate", "characterOffsetEnd": 1526, "after": " ", "pos": "VB", "is_root": true, "lemma": "integrate", "segment_span": [6, 17], "tense": "B", "characterOffsetBegin": 1517, "originalText": "integrate", "has_aux": true, "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1530, "segment_span": [6, 17], "characterOffsetBegin": 1527, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "advantages", "lemma": "advantage", "after": " ", "pos": "NNS", "characterOffsetEnd": 1541, "segment_span": [6, 17], "characterOffsetBegin": 1531, "originalText": "advantages", "ArgType": "dobj", "before": " "}, {"index": 12, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1544, "segment_span": [6, 17], "characterOffsetBegin": 1542, "originalText": "of", "ArgType": null, "before": " "}, {"index": 13, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1548, "segment_span": [6, 17], "characterOffsetBegin": 1545, "originalText": "the", "ArgType": null, "before": " "}, {"index": 14, "word": "constituent", "lemma": "constituent", "after": " ", "pos": "NN", "characterOffsetEnd": 1560, "segment_span": [6, 17], "characterOffsetBegin": 1549, "originalText": "constituent", "ArgType": null, "before": " "}, {"index": 15, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 1564, "segment_span": [6, 17], "characterOffsetBegin": 1561, "originalText": "and", "ArgType": null, "before": " "}, {"index": 16, "word": "dependency", "lemma": "dependency", "after": " ", "pos": "NN", "characterOffsetEnd": 1575, "segment_span": [6, 17], "characterOffsetBegin": 1565, "originalText": "dependency", "ArgType": null, "before": " "}, {"index": 17, "word": "tree", "lemma": "tree", "after": "", "pos": "NN", "characterOffsetEnd": 1580, "segment_span": [6, 17], "characterOffsetBegin": 1576, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 18, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 1581, "characterOffsetBegin": 1580, "originalText": ".", "ArgType": null, "before": ""}], "text": "iii ) Design a new kernel which can integrate the advantages of the constituent and dependency tree ."}, {"tokens": [{"index": 1, "word": "The", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1585, "segment_span": [0, 20], "characterOffsetBegin": 1582, "originalText": "The", "ArgType": null, "before": " "}, {"index": 2, "word": "new", "lemma": "new", "after": " ", "pos": "JJ", "characterOffsetEnd": 1589, "segment_span": [0, 20], "characterOffsetBegin": 1586, "originalText": "new", "ArgType": null, "before": " "}, {"index": 3, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1594, "segment_span": [0, 20], "characterOffsetBegin": 1590, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 4, "word": "kernel", "lemma": "kernel", "after": " ", "pos": "NN", "characterOffsetEnd": 1601, "segment_span": [0, 20], "characterOffsetBegin": 1595, "originalText": "kernel", "ArgType": "subj", "before": " "}, {"index": 5, "word": "should", "lemma": "should", "after": " ", "pos": "MD", "characterOffsetEnd": 1608, "segment_span": [0, 20], "characterOffsetBegin": 1602, "originalText": "should", "ArgType": null, "before": " "}, {"index": 6, "word": "inherit", "characterOffsetEnd": 1616, "after": " ", "pos": "VB", "is_root": true, "lemma": "inherit", "segment_span": [0, 20], "tense": "B", "characterOffsetBegin": 1609, "originalText": "inherit", "has_aux": true, "ArgType": "verb", "before": " "}, {"index": 7, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1620, "segment_span": [0, 20], "characterOffsetBegin": 1617, "originalText": "the", "ArgType": null, "before": " "}, {"index": 8, "word": "benefits", "lemma": "benefit", "after": " ", "pos": "NNS", "characterOffsetEnd": 1629, "segment_span": [0, 20], "characterOffsetBegin": 1621, "originalText": "benefits", "ArgType": "dobj", "before": " "}, {"index": 9, "word": "of", "lemma": "of", "after": " ", "pos": "IN", "characterOffsetEnd": 1632, "segment_span": [0, 20], "characterOffsetBegin": 1630, "originalText": "of", "ArgType": null, "before": " "}, {"index": 10, "word": "the", "lemma": "the", "after": " ", "pos": "DT", "characterOffsetEnd": 1636, "segment_span": [0, 20], "characterOffsetBegin": 1633, "originalText": "the", "ArgType": null, "before": " "}, {"index": 11, "word": "three", "lemma": "three", "after": " ", "pos": "CD", "characterOffsetEnd": 1642, "segment_span": [0, 20], "characterOffsetBegin": 1637, "originalText": "three", "ArgType": null, "before": " "}, {"index": 12, "word": "available", "lemma": "available", "after": " ", "pos": "JJ", "characterOffsetEnd": 1652, "segment_span": [0, 20], "characterOffsetBegin": 1643, "originalText": "available", "ArgType": null, "before": " "}, {"index": 13, "word": "tree", "lemma": "tree", "after": " ", "pos": "NN", "characterOffsetEnd": 1657, "segment_span": [0, 20], "characterOffsetBegin": 1653, "originalText": "tree", "ArgType": null, "before": " "}, {"index": 14, "word": "kernels", "lemma": "kernel", "after": "", "pos": "NNS", "characterOffsetEnd": 1665, "segment_span": [0, 20], "characterOffsetBegin": 1658, "originalText": "kernels", "ArgType": null, "before": " "}, {"index": 15, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 1666, "segment_span": [0, 20], "characterOffsetBegin": 1665, "originalText": ":", "ArgType": null, "before": ""}, {"index": 16, "word": "ST", "lemma": "st", "after": "", "pos": "JJ", "characterOffsetEnd": 1669, "segment_span": [0, 20], "characterOffsetBegin": 1667, "originalText": "ST", "ArgType": null, "before": " "}, {"index": 17, "word": ",", "lemma": ",", "after": " ", "pos": ",", "characterOffsetEnd": 1670, "segment_span": [0, 20], "characterOffsetBegin": 1669, "originalText": ",", "ArgType": null, "before": ""}, {"index": 18, "word": "SST", "lemma": "SST", "after": " ", "pos": "NNP", "characterOffsetEnd": 1674, "segment_span": [0, 20], "characterOffsetBegin": 1671, "originalText": "SST", "ArgType": null, "before": " "}, {"index": 19, "word": "or", "lemma": "or", "after": " ", "pos": "CC", "characterOffsetEnd": 1677, "segment_span": [0, 20], "characterOffsetBegin": 1675, "originalText": "or", "ArgType": null, "before": " "}, {"index": 20, "word": "PT", "lemma": "pt", "after": "", "pos": "NN", "characterOffsetEnd": 1680, "segment_span": [0, 20], "characterOffsetBegin": 1678, "originalText": "PT", "ArgType": null, "before": " "}, {"index": 21, "word": ".", "lemma": ".", "after": "", "pos": ".", "characterOffsetEnd": 1681, "characterOffsetBegin": 1680, "originalText": ".", "ArgType": null, "before": ""}], "text": "The new tree kernel should inherit the benefits of the three available tree kernels : ST , SST or PT ."}]}], "title": "6 Conclusion and Future Work"}, {"num": 16, "subsections": [{"a holistic lexiconbased approach to opinion mining": "", "sentences": [{"tokens": [{"index": 1, "word": "Eugene", "lemma": "Eugene", "after": " ", "pos": "NNP", "characterOffsetEnd": 6, "segment_span": [0, 5], "characterOffsetBegin": 0, "originalText": "Eugene", "ArgType": null, "before": ""}, {"index": 2, "word": "Agichtein", "lemma": "Agichtein", "after": " ", "pos": "NNP", "characterOffsetEnd": 16, "segment_span": [0, 5], "characterOffsetBegin": 7, "originalText": "Agichtein", "ArgType": null, "before": " "}, {"index": 3, "word": "and", "lemma": "and", "after": " ", "pos": "CC", "characterOffsetEnd": 20, "segment_span": [0, 5], "characterOffsetBegin": 17, "originalText": "and", "ArgType": null, "before": " "}, {"index": 4, "word": "Luis", "lemma": "Luis", "after": " ", "pos": "NNP", "characterOffsetEnd": 25, "segment_span": [0, 5], "characterOffsetBegin": 21, "originalText": "Luis", "ArgType": null, "before": " "}, {"index": 5, "word": "Gravano", "lemma": "Gravano", "after": "", "pos": "NNP", "characterOffsetEnd": 33, "segment_span": [0, 5], "characterOffsetBegin": 26, "originalText": "Gravano", "ArgType": null, "before": " "}, {"index": 6, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 34, "characterOffsetBegin": 33, "originalText": ".", "ArgType": null, "before": ""}], "text": "Eugene Agichtein and Luis Gravano ."}, {"tokens": [{"index": 1, "word": "2000", "lemma": "2000", "after": "", "pos": "CD", "characterOffsetEnd": 39, "segment_span": [0, 1], "characterOffsetBegin": 35, "originalText": "2000", "ArgType": null, "before": " "}, {"index": 2, "word": ".", "lemma": ".", "after": " ", "pos": ".", "characterOffsetEnd": 40, "characterOffsetBegin": 39, "originalText": ".", "ArgType": null, "before": ""}], "text": "2000 ."}, {"tokens": [{"index": 1, "word": "Snowball", "lemma": "Snowball", "after": "", "pos": "NNP", "characterOffsetEnd": 49, "segment_span": [0, 8], "characterOffsetBegin": 41, "originalText": "Snowball", "ArgType": null, "before": " "}, {"index": 2, "word": ":", "lemma": ":", "after": " ", "pos": ":", "characterOffsetEnd": 50, "segment_span": [0, 8], "characterOffsetBegin": 49, "originalText": ":", "ArgType": null, "before": ""}, {"index": 3, "word": "Extracting", "lemma": "extract", "after": " ", "pos": "VBG", "characterOffsetEnd": 61, "segment_span": [0, 8], "characterOffsetBegin": 51, "originalText": "Extracting", "ArgType": null, "before": " "}, {"index": 4, "word": "relations", "lemma": "relation", "after": " ", "pos": "NNS", "characterOffsetEnd": 71, "segment_span": [0, 8], "characterOffsetBegin": 62, "originalText": "relations", "ArgType": null, "before": " "}, {"index": 5, "word": "from", "lemma": "from", "after": " ", "pos": "IN", "characterOffsetEnd": 76, "segment_span": [0, 8], "characterOffsetBegin": 72, "originalText": "from", "ArgType": null, "before": " "}, {"index": 6, "word": "large", "lemma": "large", "after": " ", "pos": "JJ", "characterOffsetEnd": 82, "segment_span": [0, 8], "characterOffsetBegin": 77, "originalText": "large", "ArgType": null, "before": " "}, {"index": 7, "word": "plain-text", "lemma": "plain-text", "after": " ", "pos": "JJ", "characterOffsetEnd": 93, "segment_span": [0, 8], "characterOffsetBegin": 83, "originalText": "plain-text", "ArgType": null, "before": " "}, {"index": 8, "word": "col", "lemma": "col", "after": "", "pos": "NN", "characterOffsetEnd": 97, "segment_span": [0, 8], "characterOffsetBegin": 94, "originalText": "col", "ArgType": null, "before": " "}, {"index": 9, "word": "-", "lemma": "-", "after": "", "pos": ":", "characterOffsetEnd": 98, "characterOffsetBegin": 97, "originalText": "-", "ArgType": null, "before": ""}], "text": "Snowball : Extracting relations from large plain-text col -"}]}], "title": "References"}], "paper_id": "D09-1143", "citation_contexts": [{"info": {"authors": ["Roberto Basili", "Marco Cammisa", "Alessandro Moschitti"], "year": "2005", "title": "effective use of wordnet semantics via kernelbased learning"}, "citing_string": "Basili et al. , 2005", "sentence": 4, "section": 7, "citation_id": "D09-1143_0", "raw_string": "Roberto Basili, Marco Cammisa, and Alessandro Moschitti. 2005a. Effective use of WordNet semantics via kernel-based learning. In Proceedings of the Ninth Conference on Computational Natural Language Learning (CoNLL-2005), pages 1\u20138, Ann Arbor, Michigan, June. Association for Computational Linguistics.", "subsection": 0, "cite_context": "nt tree or of the path linking two entities of the dependency tree. For the design of automatic relation classifiers, we have investigated the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provid", "is_self_cite": true, "cited_paper_id": "W05-0601", "citation_function": "Future"}, {"info": {"authors": ["Roberto Basili", "Marco Cammisa", "Alessandro Moschitti"], "year": "2005", "title": "a semantic kernel to classify texts with very few training examples in"}, "citing_string": "Basili et al. , 2005", "sentence": 4, "section": 7, "citation_id": "D09-1143_1", "raw_string": "Roberto Basili, Marco Cammisa, and Alessandro Moschitti. 2005b. A semantic kernel to classify texts with very few training examples. In In Proceedings of the Workshop on Learning in Web Search, at the.", "subsection": 0, "cite_context": "nt tree or of the path linking two entities of the dependency tree. For the design of automatic relation classifiers, we have investigated the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provid", "is_self_cite": true, "cited_paper_id": "External_30415", "citation_function": "Future"}, {"info": {"authors": ["Stephan Bloehdorn", "Alessandro Moschitti"], "year": "2007", "title": "structure and semantics for expressive text kernels"}, "citing_string": "Bloehdorn and Moschitti , 2007", "sentence": 4, "section": 7, "citation_id": "D09-1143_2", "raw_string": "Stephan Bloehdorn and Alessandro Moschitti. 2007. Structure and semantics for expressive text kernels. In CIKM \u201907: Proceedings of the sixteenth ACM conference on Conference on information and knowledge management, pages 861\u2013864, New York, NY, USA. ACM.", "subsection": 0, "cite_context": "For the design of automatic relation classifiers, we have investigated the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kern", "is_self_cite": true, "cited_paper_id": "External_6012"}, {"info": {"authors": ["Stephan Bloehdorn", "Roberto Basili", "Marco Cammisa", "Alessandro Moschitti"], "year": "2006", "title": "semantic kernels for text classification based on topological measures of feature similarity"}, "citing_string": "Bloehdorn et al. , 2006", "sentence": 4, "section": 7, "citation_id": "D09-1143_3", "raw_string": "Stephan Bloehdorn, Roberto Basili, Marco Cammisa, and Alessandro Moschitti. 2006. Semantic kernels for text classification based on topological measures of feature similarity. In Proceedings of the 6th IEEE International Conference on Data Mining (ICDM 06), Hong Kong, 18-22 December 2006, DEC.", "subsection": 0, "cite_context": "of the dependency tree. For the design of automatic relation classifiers, we have investigated the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of under", "is_self_cite": true, "cited_paper_id": "External_6011"}, {"info": {"authors": ["Sergey Brin"], "year": "1998", "title": "extracting patterns and relations from world wide web"}, "citing_string": "Brin , 1998", "sentence": 0, "section": 3, "citation_id": "D09-1143_4", "raw_string": "Sergey Brin. 1998. Extracting patterns and relations from world wide web. In Proceeding of WebDB Workshop at 6th International Conference on Extending Database Technology, pages 172\u2013183.", "subsection": 0, "cite_context": "dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated t", "is_self_cite": false, "cited_paper_id": "External_3422"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 4, "section": 2, "citation_id": "D09-1143_5", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 0, "cite_context": "ng relevant semantic relations between pairs of entities in texts. Figure 1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an explicit feature representation", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 13, "section": 2, "citation_id": "D09-1143_6", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 0, "cite_context": "s the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 1", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 1, "section": 3, "citation_id": "D09-1143_7", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 0, "cite_context": "ree learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the inco", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 13, "section": 3, "citation_id": "D09-1143_8", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 0, "cite_context": "tion types and the number of words (if any) separating the two entities. Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees. Kernels on parse trees were pioneered by (Collins and Duffy, 2001). This kernel function counts the number of common subtrees, weighted appropriately, as the measure of similarity between two parse trees. (Culotta and Sorensen, 2004) extended this work to calculate kernels between augmented dependency trees. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A ", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 23, "section": 5, "citation_id": "D09-1143_9", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 1, "cite_context": "representation, two extra nodes T1-PER, denoting the type PERSON, and T2-LOC, denoting the type LOCATION, are added to the parse tree, above the two target NEs, respectively. In this example, the above PET is designed to capture the relation Located-in between the entities \u201dofficials\u201d and \u201dWashington\u201d from the ACE corpus. Note that, a third NE, U.S., is characterized by the node GPE (GeoPolitical Entity), where the absence of the prefix T1 or T2 before the NE type (i.e. GPE), denotes that the NE does not take part in the target relation. In previous work, some dependency trees have been used (Bunescu and Mooney, 2005a; Wang, 2008) but the employed kernel just exploited the syntactic information concentrated in the path between e1 and e2. In contrast, we defined and studied three different dependency structures whose potential can be fully exploited by our convolution partial tree kernel: - Dependency Words (DW) tree is similar to PET adapted for dependency tree constituted by simple words. We select the minimal subtree which includes e1 and e2, and we insert an extra node as father of the NEs, labeled with the NE category. For example, given 1381 Figure 2: The constituent and dependency parse trees integr", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "a shortest path dependency kernel for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 0, "section": 5, "citation_id": "D09-1143_10", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005a. A shortest path dependency kernel for relation extraction. In Proceedings of EMNLP, pages 724\u2013731.", "subsection": 2, "cite_context": ", soldier and U.S.. - Grammatical Relation (GR) tree, i.e. the DW tree in which words are replaced by their grammatical functions, e.g. prep, pobj and nsubj. For example, Figure 2.d, shows the GR tree for the previous relation: In is replaced by prep, U.S. by nsubj and so on. - Grammatical Relation and Words (GRW) tree, words and grammatical functions are both used in the tree, where the latter are inserted as a father node of the former. For example, Figure 2.e, shows such tree for the previous relation. 4.2 Sequential Structures Some sequence kernels have been used on dependency structures (Bunescu and Mooney, 2005b; Wang, 2008). These kernels just used lexical words with some syntactic information. To fully exploit syntactic and semantic information, we defined and studied six different sequences (in a style similar to what proposed in (Moschitti, 2008)), which include features from constituent and dependency parse trees and NEs: 1. Sequence of terminals (lexical words) in the PET (SK1), e.g.: T2-LOC Washington, U.S. T1-PER officials. 2. Sequence of part-of-speech (POS) tags in the PET (SK2), i.e. the SK1 in which words are replaced by their POS tags, e.g.: T2-LOC NN , NNP T1-PER NNS. 3. Sequence of gr", "is_self_cite": false, "cited_paper_id": "H05-1091"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 4, "section": 2, "citation_id": "D09-1143_11", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 0, "cite_context": "ng relevant semantic relations between pairs of entities in texts. Figure 1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an explicit feature representation", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 13, "section": 2, "citation_id": "D09-1143_12", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 0, "cite_context": "s the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 1", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 1, "section": 3, "citation_id": "D09-1143_13", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 0, "cite_context": "ree learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the inco", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 13, "section": 3, "citation_id": "D09-1143_14", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 0, "cite_context": "tion types and the number of words (if any) separating the two entities. Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees. Kernels on parse trees were pioneered by (Collins and Duffy, 2001). This kernel function counts the number of common subtrees, weighted appropriately, as the measure of similarity between two parse trees. (Culotta and Sorensen, 2004) extended this work to calculate kernels between augmented dependency trees. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A ", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 23, "section": 5, "citation_id": "D09-1143_15", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 1, "cite_context": "representation, two extra nodes T1-PER, denoting the type PERSON, and T2-LOC, denoting the type LOCATION, are added to the parse tree, above the two target NEs, respectively. In this example, the above PET is designed to capture the relation Located-in between the entities \u201dofficials\u201d and \u201dWashington\u201d from the ACE corpus. Note that, a third NE, U.S., is characterized by the node GPE (GeoPolitical Entity), where the absence of the prefix T1 or T2 before the NE type (i.e. GPE), denotes that the NE does not take part in the target relation. In previous work, some dependency trees have been used (Bunescu and Mooney, 2005a; Wang, 2008) but the employed kernel just exploited the syntactic information concentrated in the path between e1 and e2. In contrast, we defined and studied three different dependency structures whose potential can be fully exploited by our convolution partial tree kernel: - Dependency Words (DW) tree is similar to PET adapted for dependency tree constituted by simple words. We select the minimal subtree which includes e1 and e2, and we insert an extra node as father of the NEs, labeled with the NE category. For example, given 1381 Figure 2: The constituent and dependency parse trees integr", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Razvan C Bunescu", "Raymond J Mooney"], "year": "2005", "title": "subsequence kernels for relation extraction"}, "citing_string": "Bunescu and Mooney , 2005", "sentence": 0, "section": 5, "citation_id": "D09-1143_16", "raw_string": "Razvan C. Bunescu and Raymond J. Mooney. 2005b. Subsequence kernels for relation extraction. In Proceedings of EMNLP.", "subsection": 2, "cite_context": ", soldier and U.S.. - Grammatical Relation (GR) tree, i.e. the DW tree in which words are replaced by their grammatical functions, e.g. prep, pobj and nsubj. For example, Figure 2.d, shows the GR tree for the previous relation: In is replaced by prep, U.S. by nsubj and so on. - Grammatical Relation and Words (GRW) tree, words and grammatical functions are both used in the tree, where the latter are inserted as a father node of the former. For example, Figure 2.e, shows such tree for the previous relation. 4.2 Sequential Structures Some sequence kernels have been used on dependency structures (Bunescu and Mooney, 2005b; Wang, 2008). These kernels just used lexical words with some syntactic information. To fully exploit syntactic and semantic information, we defined and studied six different sequences (in a style similar to what proposed in (Moschitti, 2008)), which include features from constituent and dependency parse trees and NEs: 1. Sequence of terminals (lexical words) in the PET (SK1), e.g.: T2-LOC Washington, U.S. T1-PER officials. 2. Sequence of part-of-speech (POS) tags in the PET (SK2), i.e. the SK1 in which words are replaced by their POS tags, e.g.: T2-LOC NN , NNP T1-PER NNS. 3. Sequence of gr", "is_self_cite": false, "cited_paper_id": "External_2270"}, {"info": {"authors": ["Nicola Cancedda", "Eric Gaussier", "Cyril Goutte", "Jean Michel Renders"], "year": "2003", "title": "word sequence kernels"}, "citing_string": "Cancedda et al. , 2003", "sentence": 22, "section": 2, "citation_id": "D09-1143_17", "raw_string": "Nicola Cancedda, Eric Gaussier, Cyril Goutte, and Jean Michel Renders. 2003. Word sequence kernels. Journal of Machine Learning Research, pages 1059\u20131082.", "subsection": 0, "cite_context": "luded in such global study since some of their forms have not been applied to RE. In this paper, we study and evaluate diverse convolution and sequence kernels for the RE problem by providing several kernel combinations on constituent and dependency trees and sequential structures. To fully exploit the potential of dependency trees, in addition to the SST kernel, we applied the partial tree (PT) kernel proposed in (Moschitti, 2006), which is a general convolution tree kernel adaptable for dependency structures. We also investigate various sequence kernels (e.g. the word sequence kernel (WSK) (Cancedda et al., 2003)) by incorporating dependency structures into word sequences. These are also enriched by including information from constituent parse trees. We conduct experiments on the standard ACE 2004 newswire and broadcast news domain. The results show that although some kernels are less effective than others, they exhibit properties that are complementary to each other. In particular, we found that relation extraction can benefit from increasing the feature space by combining kernels (with a simple summation) exploiting the two different parsing paradigms. Our experiments on RE show that the current com", "is_self_cite": false, "cited_paper_id": "External_5622"}, {"info": {"authors": ["Michael Collins", "Nigel Duffy"], "year": "2001", "title": "convolution kernels for natural language"}, "citing_string": "Collins and Duffy , 2001", "sentence": 12, "section": 2, "citation_id": "D09-1143_18", "raw_string": "Michael Collins and Nigel Duffy. 2001. Convolution kernels for natural language. In Proceedings of Neural Information Processing Systems (NIPS\u20192001).", "subsection": 0, "cite_context": " be done by computing a kernel function between a pair of linguistic objects, where such function is a kind of similarity measure satisfying certain properties. An example is the sequence kernel (Lodhi et al., 2002), where the objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural ", "is_self_cite": false, "cited_paper_id": "External_2516"}, {"info": {"authors": ["Michael Collins", "Nigel Duffy"], "year": "2001", "title": "convolution kernels for natural language"}, "citing_string": "Collins and Duffy , 2001", "sentence": 8, "section": 3, "citation_id": "D09-1143_19", "raw_string": "Michael Collins and Nigel Duffy. 2001. Convolution kernels for natural language. In Proceedings of Neural Information Processing Systems (NIPS\u20192001).", "subsection": 0, "cite_context": "tion and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the incorporation of various features such as word, part-of-speech, and semantic information from WordNet. (Kambhatla, 2004) employed maximum entropy models with diverse features including words, entity and mention types and the number of words (if any) separating the two entities. Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees. Kernels on parse trees were pioneered by (Collins and Duffy, 2001). This kernel function counts the number of common subtrees, weighted appropriately, as the measure of similarity between two parse trees. (Culotta and Sorensen, 2004) extended this work to calculate kernels between augmented dependency trees. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches ", "is_self_cite": false, "cited_paper_id": "External_2516"}, {"info": {"authors": ["Michael Collins", "Nigel Duffy"], "year": "2001", "title": "convolution kernels for natural language"}, "citing_string": "Collins and Duffy , 2001", "sentence": 9, "section": 4, "citation_id": "D09-1143_20", "raw_string": "Michael Collins and Nigel Duffy. 2001. Convolution kernels for natural language. In Proceedings of Neural Information Processing Systems (NIPS\u20192001).", "subsection": 2, "cite_context": " and the product K(oi, o) = (\u03c6(oi) \u00b7 \u03c6(o)) is the kernel function associated with the mapping \u03c6. Kernel engineering can be carried out by combining basic kernels with additive or multiplicative operators or by designing specific data objects (vectors, sequences and tree structures) for the target tasks. Regarding NLP applications, kernel methods have attracted much interest due to their ability of implicitly exploring huge amounts of structural features automatically extracted from the original object representation. The kernels for structured natural language data, such as parse tree kernel (Collins and Duffy, 2001) and string kernel (Lodhi et al., 2002) are examples of the wellknown convolution kernels used in many NLP applications. Tree kernels represent trees in terms of their substructures (called tree fragments). Such fragments form a feature space which, in turn, is mapped into a vector space. Tree kernels measure the similarity between pair of trees by counting the number of fragments in common. There are three important characterizations of fragment type (Moschitti, 2006): the SubTrees (ST), the SubSet Trees (SST) and the Partial Trees (PT). For sake of space, we do not report the mathematical de", "is_self_cite": false, "cited_paper_id": "External_2516"}, {"info": {"authors": ["Aron Culotta", "Jeffrey Sorensen"], "year": "2004", "title": "dependency tree kernels for relation extraction"}, "citing_string": "Culotta and Sorensen , 2004", "sentence": 4, "section": 2, "citation_id": "D09-1143_21", "raw_string": "Aron Culotta and Jeffrey Sorensen. 2004. Dependency tree kernels for relation extraction. In Proceedings of the 42nd Annual Meeting on ACL, Barcelona, Spain.", "subsection": 0, "cite_context": " in ACE as the task of finding relevant semantic relations between pairs of entities in texts. Figure 1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an expli", "is_self_cite": false, "cited_paper_id": "P04-1054"}, {"info": {"authors": ["Aron Culotta", "Jeffrey Sorensen"], "year": "2004", "title": "dependency tree kernels for relation extraction"}, "citing_string": "Culotta and Sorensen , 2004", "sentence": 13, "section": 2, "citation_id": "D09-1143_22", "raw_string": "Aron Culotta and Jeffrey Sorensen. 2004. Dependency tree kernels for relation extraction. In Proceedings of the 42nd Annual Meeting on ACL, Barcelona, Spain.", "subsection": 0, "cite_context": "odhi et al., 2002), where the objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Pr", "is_self_cite": false, "cited_paper_id": "P04-1054"}, {"info": {"authors": ["Aron Culotta", "Jeffrey Sorensen"], "year": "2004", "title": "dependency tree kernels for relation extraction"}, "citing_string": "Culotta and Sorensen , 2004", "sentence": 31, "section": 2, "citation_id": "D09-1143_23", "raw_string": "Aron Culotta and Jeffrey Sorensen. 2004. Dependency tree kernels for relation extraction. In Proceedings of the 42nd Annual Meeting on ACL, Barcelona, Spain.", "subsection": 0, "cite_context": "ons, i.e. dependency plus constituent trees, improve the state-of-the-art in RE. More interestingly, also the combinations of various sequence kernels gain significant better performance than the current state-of-the-art (Zhang et al., 2005). Overall, these results are interesting for the computational linguistics research since they show that the above two parsing paradigms provide different and important information for a semantic task such as RE. Regarding sequence-based kernels, the WSK gains better performance than previous sequence and dependency models for RE. 1The function defined on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi superv", "is_self_cite": false, "cited_paper_id": "P04-1054"}, {"info": {"authors": ["Aron Culotta", "Jeffrey Sorensen"], "year": "2004", "title": "dependency tree kernels for relation extraction"}, "citing_string": "Culotta and Sorensen , 2004", "sentence": 10, "section": 3, "citation_id": "D09-1143_24", "raw_string": "Aron Culotta and Jeffrey Sorensen. 2004. Dependency tree kernels for relation extraction. In Proceedings of the 42nd Annual Meeting on ACL, Barcelona, Spain.", "subsection": 0, "cite_context": "ith the incorporation of various features such as word, part-of-speech, and semantic information from WordNet. (Kambhatla, 2004) employed maximum entropy models with diverse features including words, entity and mention types and the number of words (if any) separating the two entities. Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees. Kernels on parse trees were pioneered by (Collins and Duffy, 2001). This kernel function counts the number of common subtrees, weighted appropriately, as the measure of similarity between two parse trees. (Culotta and Sorensen, 2004) extended this work to calculate kernels between augmented dependency trees. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zele", "is_self_cite": false, "cited_paper_id": "P04-1054"}, {"info": {"authors": ["Ana-Maria Giuglea", "Alessandro Moschitti"], "year": "2004", "title": "knowledge discovery using framenet verbnet and propbank"}, "citing_string": "Giuglea and Moschitti , 2004", "sentence": 4, "section": 7, "citation_id": "D09-1143_25", "raw_string": "Ana-Maria Giuglea and Alessandro Moschitti. 2004. Knowledge discovery using framenet, verbnet and propbank. In A. Meyers, editor, Workshop on Ontology and Knowledge Discovering at ECML 2004, Pisa, Italy.", "subsection": 0, "cite_context": "nvestigated the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent", "is_self_cite": true, "cited_paper_id": "External_6014"}, {"info": {"authors": ["Ana-Maria Giuglea", "Alessandro Moschitti"], "year": "2006", "title": "semantic role labeling via framenet verbnet and propbank"}, "citing_string": "Giuglea and Moschitti , 2006", "sentence": 4, "section": 7, "citation_id": "D09-1143_26", "raw_string": "Ana-Maria Giuglea and Alessandro Moschitti. 2006. Semantic Role Labeling via Framenet, Verbnet and Propbank. In Proceedings of ACL 2006, Sydney, Australia.", "subsection": 0, "cite_context": "endency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new", "is_self_cite": true, "cited_paper_id": "P06-1117", "citation_function": "Future"}, {"info": {"authors": ["Takaaki Hasegawa", "Satoshi Sekine", "Ralph Grishman"], "year": "2004", "title": "discovering relations among named entities from large corpora"}, "citing_string": "Hasegawa et al. , 2004", "sentence": 0, "section": 3, "citation_id": "D09-1143_27", "raw_string": "Takaaki Hasegawa, Satoshi Sekine, and Ralph Grishman. 2004. Discovering relations among named entities from large corpora. In Proceedings of the 42nd Annual Meeting on ACL, Barcelona, Spain.", "subsection": 0, "cite_context": "vious work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be use", "is_self_cite": false, "cited_paper_id": "P04-1053"}, {"info": {"authors": ["Nanda Kambhatla"], "year": "2004", "title": "combining lexical syntactic and semantic features with maximum entropy models for extracting relations"}, "citing_string": "Kambhatla , 2004", "sentence": 0, "section": 3, "citation_id": "D09-1143_28", "raw_string": "Nanda Kambhatla. 2004. Combining lexical, syntactic and semantic features with maximum entropy models for extracting relations. In Proceedings of the ACL 2004 on Interactive poster and demonstration sessions, Barcelona, Spain.", "subsection": 0, "cite_context": "function defined on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing tec", "is_self_cite": false, "cited_paper_id": "External_3419"}, {"info": {"authors": ["Dan Klein", "Christopher D Manning"], "year": "2003", "title": "accurate unlexicalized parsing"}, "citing_string": "Klein and Manning , 2003", "sentence": 6, "section": 6, "citation_id": "D09-1143_29", "raw_string": "Dan Klein and Christopher D. Manning. 2003. Accurate unlexicalized parsing. In Proceedings of the 41st Meeting of the ACL, pages 423\u2013430.", "subsection": 1, "cite_context": "a portion includes 348 documents and 4400 relation instances. It defines seven entity types and seven relation types. Every relation is assigned one of the seven types: Physical, Person/Social, Employment/Membership/- Subsidiary, Agent-Artifact, PER/ORG Affiliation, GPE Affiliation, and Discourse. For sake of space, we do not explain these relationships here, nevertheless, they are explicitly described in the ACE document guidelines. There are 4400 positive and 38,696 negative examples when generating pairs of entity mentions as potential relations. Documents are parsed using Stanford Parser (Klein and Manning, 2003) to produce parse trees. Potential relations are generated by iterating all pairs of entity mentions in the same sentence. Entity information, namely entity type, is integrated into parse trees. To train and test our binary relation classifier, we used SVMs. Here, relation detection is formulated as a multiclass classification problem. The one vs. rest strategy is employed by selecting the instance with largest margin as the final answer. For experimentation, we use 5-fold cross-validation with the Tree Kernel Tools (Moschitti, 2004) (available at http://disi.unitn.it/\u02dcmoschitt/Tree-Kernel.htm", "is_self_cite": false, "cited_paper_id": "External_69697"}, {"info": {"authors": ["Huma Lodhi", "Craig Saunders", "John Shawe-Taylor", "Nello Cristianini"], "year": "2002", "title": "text classification using string kernels"}, "citing_string": "Lodhi et al. , 2002", "sentence": 9, "section": 2, "citation_id": "D09-1143_30", "raw_string": "Huma Lodhi, Craig Saunders, John Shawe-Taylor, Nello Cristianini, , and Chris Watkins. 2002. Text classification using string kernels. Journal of Machine Learning Research, pages 419\u2013444.", "subsection": 0, "cite_context": "ivememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an explicit feature representation. This can be done by computing a kernel function between a pair of linguistic objects, where such function is a kind of similarity measure satisfying certain properties. An example is the sequence kernel (Lodhi et al., 2002), where the objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorens", "is_self_cite": false, "cited_paper_id": "External_96578"}, {"info": {"authors": ["Huma Lodhi", "Craig Saunders", "John Shawe-Taylor", "Nello Cristianini"], "year": "2002", "title": "text classification using string kernels"}, "citing_string": "Lodhi et al. , 2002", "sentence": 9, "section": 4, "citation_id": "D09-1143_31", "raw_string": "Huma Lodhi, Craig Saunders, John Shawe-Taylor, Nello Cristianini, , and Chris Watkins. 2002. Text classification using string kernels. Journal of Machine Learning Research, pages 419\u2013444.", "subsection": 2, "cite_context": "s the kernel function associated with the mapping \u03c6. Kernel engineering can be carried out by combining basic kernels with additive or multiplicative operators or by designing specific data objects (vectors, sequences and tree structures) for the target tasks. Regarding NLP applications, kernel methods have attracted much interest due to their ability of implicitly exploring huge amounts of structural features automatically extracted from the original object representation. The kernels for structured natural language data, such as parse tree kernel (Collins and Duffy, 2001) and string kernel (Lodhi et al., 2002) are examples of the wellknown convolution kernels used in many NLP applications. Tree kernels represent trees in terms of their substructures (called tree fragments). Such fragments form a feature space which, in turn, is mapped into a vector space. Tree kernels measure the similarity between pair of trees by counting the number of fragments in common. There are three important characterizations of fragment type (Moschitti, 2006): the SubTrees (ST), the SubSet Trees (SST) and the Partial Trees (PT). For sake of space, we do not report the mathematical description of them, which is available i", "is_self_cite": false, "cited_paper_id": "External_96578"}, {"info": {"authors": ["Scott Miller", "Heidi Fox", "Lance Ramshaw"], "year": "2000", "title": "a novel use of statistical parsing to extract information from text"}, "citing_string": "Miller et al. , 2000", "sentence": 0, "section": 3, "citation_id": "D09-1143_32", "raw_string": "Scott Miller, Heidi Fox, Lance Ramshaw, , and Ralph Weischedel. 2000. A novel use of statistical parsing to extract information from text. In Proceedings of the 1st conference on North American chapter of the ACL, pages 226\u2013233, Seattle, USA.", "subsection": 0, "cite_context": " performance than previous sequence and dependency models for RE. 1The function defined on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning m", "is_self_cite": false, "cited_paper_id": "External_74234"}, {"info": {"authors": ["Alessandro Moschitti", "Cosmin Bejan"], "year": "2004", "title": "a semantic kernel for predicate argument classification"}, "citing_string": "Moschitti and Bejan , 2004", "sentence": 4, "section": 7, "citation_id": "D09-1143_33", "raw_string": "Alessandro Moschitti and Cosmin Bejan. 2004. A semantic kernel for predicate argument classification. In CoNLL-2004, Boston, MA, USA.", "subsection": 0, "cite_context": "task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new tree kernel should inherit", "is_self_cite": true, "cited_paper_id": "W04-2403", "citation_function": "Future"}, {"info": {"authors": ["Alessandro Moschitti", "Silvia Quarteroni", "Roberto Basili", "Suresh Manandhar"], "year": "2007", "title": "exploiting syntactic and shallow semantic kernels for questionanswer classification"}, "citing_string": "Moschitti et al. , 2007", "sentence": 4, "section": 7, "citation_id": "D09-1143_34", "raw_string": "Alessandro Moschitti, Silvia Quarteroni, Roberto Basili, and Suresh Manandhar. 2007. Exploiting syntactic and shallow semantic kernels for question/answer classification. In Proceedings of ACL\u201907, Prague, Czech Republic.", "subsection": 0, "cite_context": "ernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new tree kernel should inherit the benefits of the thr", "is_self_cite": true, "cited_paper_id": "P07-1098"}, {"info": {"authors": ["Alessandro Moschitti", "Daniele Pighin", "Roberto Basili"], "year": "2008", "title": "tree kernels for semantic role labeling"}, "citing_string": "Moschitti et al. , 2008", "sentence": 4, "section": 7, "citation_id": "D09-1143_35", "raw_string": "Alessandro Moschitti, Daniele Pighin, and Roberto Basili. 2008. Tree kernels for semantic role labeling. Computational Linguistics, 34(2):193\u2013224.", "subsection": 0, "cite_context": "ic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new tree kernel should inherit the benefits of the three available tree kernels: ST, SST or PT. ", "is_self_cite": true, "cited_paper_id": "J08-2003", "citation_function": "Future"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2004", "title": "a study on convolution kernels for shallow semantic parsing"}, "citing_string": "Moschitti , 2004", "sentence": 16, "section": 5, "citation_id": "D09-1143_36", "raw_string": "Alessandro Moschitti. 2004. A study on convolution kernels for shallow semantic parsing. In Proceedings of the 42nd Meeting of the ACL, Barcelona, Spain.", "subsection": 1, "cite_context": "alculation since the size of a complete parse tree may be very large (up to 300 nodes in the Penn Treebank (Marcus et al., 1993)); second, there is ambiguity on the target pairs of NEs, i.e. different NEs associated with different relations are described by the same parse tree. Therefore, it is necessary to identify the portion of the parse tree that best represent the useful syntactic information. Let e1 and e2 be two entity mentions in the same sentence such that they are in a relationship R. For the constituent parse tree, we used the pathenclosed tree (PET), which was firstly proposed in (Moschitti, 2004) for Semantic Role Labeling and then adapted by (Zhang et al., 2005) for relation extraction. It is the smallest common subtree including the two entities of a relation. The dashed frame in Figure 2.a surrounds PET associated with the two mentions, officials and Washington. Moreover, to improve the representation, two extra nodes T1-PER, denoting the type PERSON, and T2-LOC, denoting the type LOCATION, are added to the parse tree, above the two target NEs, respectively. In this example, the above PET is designed to capture the relation Located-in between the entities \u201dofficials\u201d and \u201dWashingto", "is_self_cite": true, "cited_paper_id": "External_4275"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2004", "title": "a study on convolution kernels for shallow semantic parsing"}, "citing_string": "Moschitti , 2004", "sentence": 12, "section": 6, "citation_id": "D09-1143_37", "raw_string": "Alessandro Moschitti. 2004. A study on convolution kernels for shallow semantic parsing. In Proceedings of the 42nd Meeting of the ACL, Barcelona, Spain.", "subsection": 1, "cite_context": "lations. Documents are parsed using Stanford Parser (Klein and Manning, 2003) to produce parse trees. Potential relations are generated by iterating all pairs of entity mentions in the same sentence. Entity information, namely entity type, is integrated into parse trees. To train and test our binary relation classifier, we used SVMs. Here, relation detection is formulated as a multiclass classification problem. The one vs. rest strategy is employed by selecting the instance with largest margin as the final answer. For experimentation, we use 5-fold cross-validation with the Tree Kernel Tools (Moschitti, 2004) (available at http://disi.unitn.it/\u02dcmoschitt/Tree-Kernel.htm). 5.2 Results In this section, we report the results of different kernels setup over constituent (CT) and dependency (DP) parse trees and sequences taken from these parse trees. The tree kernel (TK), composite kernel (CK1, CK2, CK3, CK4, and CK5 corresponding to five combination types in Section 4.3.2) were employed over these two syntactic trees. For the tree kernel, we apply the SST kernel for the path-enclosed tree (PET) of the constituent tree and the PT kernel for three kinds of dependency tree DW, GR, and GRW, described in the", "is_self_cite": true, "cited_paper_id": "External_4275"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2004", "title": "a study on convolution kernels for shallow semantic parsing"}, "citing_string": "Moschitti , 2004", "sentence": 4, "section": 7, "citation_id": "D09-1143_38", "raw_string": "Alessandro Moschitti. 2004. A study on convolution kernels for shallow semantic parsing. In Proceedings of the 42nd Meeting of the ACL, Barcelona, Spain.", "subsection": 0, "cite_context": "the impact of dependency structures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent", "is_self_cite": true, "cited_paper_id": "External_4275"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2006", "title": "efficient convolution kernels for dependency and constituent syntactic trees"}, "citing_string": "Moschitti , 2006", "sentence": 21, "section": 2, "citation_id": "D09-1143_39", "raw_string": "Alessandro Moschitti. 2006. Efficient convolution kernels for dependency and constituent syntactic trees. In Proceedings of the 17th European Conference on Machine Learning, Berlin, Germany.", "subsection": 0, "cite_context": "orthwhile also considering that, to the best of our knowledge, these models have not been previously used for relation extraction1 task. Additionally, sequence kernels should be included in such global study since some of their forms have not been applied to RE. In this paper, we study and evaluate diverse convolution and sequence kernels for the RE problem by providing several kernel combinations on constituent and dependency trees and sequential structures. To fully exploit the potential of dependency trees, in addition to the SST kernel, we applied the partial tree (PT) kernel proposed in (Moschitti, 2006), which is a general convolution tree kernel adaptable for dependency structures. We also investigate various sequence kernels (e.g. the word sequence kernel (WSK) (Cancedda et al., 2003)) by incorporating dependency structures into word sequences. These are also enriched by including information from constituent parse trees. We conduct experiments on the standard ACE 2004 newswire and broadcast news domain. The results show that although some kernels are less effective than others, they exhibit properties that are complementary to each other. In particular, we found that relation extraction c", "is_self_cite": true, "cited_paper_id": "External_10344"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2006", "title": "efficient convolution kernels for dependency and constituent syntactic trees"}, "citing_string": "Moschitti , 2006", "sentence": 13, "section": 4, "citation_id": "D09-1143_40", "raw_string": "Alessandro Moschitti. 2006. Efficient convolution kernels for dependency and constituent syntactic trees. In Proceedings of the 17th European Conference on Machine Learning, Berlin, Germany.", "subsection": 2, "cite_context": " from the original object representation. The kernels for structured natural language data, such as parse tree kernel (Collins and Duffy, 2001) and string kernel (Lodhi et al., 2002) are examples of the wellknown convolution kernels used in many NLP applications. Tree kernels represent trees in terms of their substructures (called tree fragments). Such fragments form a feature space which, in turn, is mapped into a vector space. Tree kernels measure the similarity between pair of trees by counting the number of fragments in common. There are three important characterizations of fragment type (Moschitti, 2006): the SubTrees (ST), the SubSet Trees (SST) and the Partial Trees (PT). For sake of space, we do not report the mathematical description of them, which is available in (Vishwanathan and Smola, 2002), (Collins and Duffy, 1380 2001) and (Moschitti, 2006), respectively. In contrast, we report some descriptions in terms of feature space that may be useful to understand the new engineered kernels. In principle, a SubTree (ST) is defined by taking any node along with its descendants. A SubSet Tree (SST) is a more general structure which does not necessarily include all the descendants. It must be ge", "is_self_cite": true, "cited_paper_id": "External_10344"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2006", "title": "efficient convolution kernels for dependency and constituent syntactic trees"}, "citing_string": "Moschitti , 2006", "sentence": 4, "section": 7, "citation_id": "D09-1143_41", "raw_string": "Alessandro Moschitti. 2006. Efficient convolution kernels for dependency and constituent syntactic trees. In Proceedings of the 17th European Conference on Machine Learning, Berlin, Germany.", "subsection": 0, "cite_context": "ctures to the RE task. Our novel composite kernels, which account for the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new", "is_self_cite": true, "cited_paper_id": "External_10344"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2008", "title": "kernel methods syntax and semantics for relational text categorization"}, "citing_string": "Moschitti , 2008", "sentence": 2, "section": 5, "citation_id": "D09-1143_42", "raw_string": "Alessandro Moschitti. 2008. Kernel methods, syntax and semantics for relational text categorization. In CIKM \u201908: Proceeding of the 17th ACM conference on Information and knowledge management, pages 253\u2013262, New York, NY, USA. ACM.", "subsection": 2, "cite_context": "U.S. by nsubj and so on. - Grammatical Relation and Words (GRW) tree, words and grammatical functions are both used in the tree, where the latter are inserted as a father node of the former. For example, Figure 2.e, shows such tree for the previous relation. 4.2 Sequential Structures Some sequence kernels have been used on dependency structures (Bunescu and Mooney, 2005b; Wang, 2008). These kernels just used lexical words with some syntactic information. To fully exploit syntactic and semantic information, we defined and studied six different sequences (in a style similar to what proposed in (Moschitti, 2008)), which include features from constituent and dependency parse trees and NEs: 1. Sequence of terminals (lexical words) in the PET (SK1), e.g.: T2-LOC Washington, U.S. T1-PER officials. 2. Sequence of part-of-speech (POS) tags in the PET (SK2), i.e. the SK1 in which words are replaced by their POS tags, e.g.: T2-LOC NN , NNP T1-PER NNS. 3. Sequence of grammatical relations in the 1382 PET (SK3), i.e. the SK1 in which words are replaced by their grammatical functions, e.g.: T2-LOC pobj , nn T1-PER nsubj. 4. Sequence of words in the DW (SK4), e.g.: Washington T2-LOC In working T1-PER officials G", "is_self_cite": true, "cited_paper_id": "External_1874"}, {"info": {"authors": ["Alessandro Moschitti"], "year": "2008", "title": "kernel methods syntax and semantics for relational text categorization"}, "citing_string": "Moschitti , 2008", "sentence": 4, "section": 7, "citation_id": "D09-1143_43", "raw_string": "Alessandro Moschitti. 2008. Kernel methods, syntax and semantics for relational text categorization. In CIKM \u201908: Proceeding of the 17th ACM conference on Information and knowledge management, pages 253\u2013262, New York, NY, USA. ACM.", "subsection": 0, "cite_context": "r the two syntactic structures, are experimented with the appropriate convolution kernels and show significant improvement with respect to the state-ofthe-art in RE. Regarding future work, there are many research line that may be followed: i) Capturing more features by employing external knowledge such as ontological, lexical resource or WordNet-based features (Basili et al., 2005a; Basili et al., 2005b; Bloehdorn et al., 2006; Bloehdorn and Moschitti, 2007) or shallow semantic trees, (Giuglea and Moschitti, 2004; Giuglea and Moschitti, 2006; Moschitti and Bejan, 2004; Moschitti et al., 2007; Moschitti, 2008; Moschitti et al., 2008). ii) Design a new tree-based structures, which combines the information of both constituent and dependency parses. From dependency trees we can extract more precise but also more sparse relationships (which may cause overfit). From constituent trees, we can extract subtrees constituted by non-terminal symbols (grammar symbols), which provide a better generalization (with a risk of underfitting). iii) Design a new kernel which can integrate the advantages of the constituent and dependency tree. The new tree kernel should inherit the benefits of the three available tree", "is_self_cite": true, "cited_paper_id": "External_1874"}, {"info": {"authors": ["Ryan Michael Rifkin", "Tomaso Poggio"], "year": "2002", "title": "everything old is new again afresh look at historical approaches in machine learning"}, "citing_string": "Rifkin and Poggio , 2002", "sentence": 2, "section": 4, "citation_id": "D09-1143_44", "raw_string": "Ryan Michael Rifkin and Tomaso Poggio. 2002. Everything old is new again: afresh look at historical approaches in machine learning. PhD thesis, Massachusetts Institute of Technology.", "subsection": 1, "cite_context": "ich can be applied to the RE task. 3.1 Support Vector Machines (SVMs) Support Vector Machines refer to a supervised machine learning technique based on the latest results of the statistical learning theory (Vapnik, 1998). Given a vector space and a set of training points, i.e. positive and negative examples, SVMs find a separating hyperplane H(~x) = \u03c9~ x x~ + b = 0 where \u03c9 E Rn and b E R are learned by applying the Structural Risk Minimization principle (Vapnik, 1995). SVMs is a binary classifier, but it can be easily extended to multi-class classifier, e.g. by means of the one-vs-all method (Rifkin and Poggio, 2002). One strong point of SVMs is the possibility to apply kernel methods (robert Mller et al., 2001) to implicitly map data in a new space where the examples are more easily separable as described in the next section. 3.2 Kernel Methods Kernel methods (Schlkopf and Smola, 2001) are an attractive alternative to feature-based methods since the applied learning algorithm only needs to compute a product between a pair of objects (by means of kernel functions), avoiding the explicit feature representation. A kernel function is a scalar product in a possibly unknown feature space. More precisely, The o", "is_self_cite": false, "cited_paper_id": "External_74233"}, {"info": {"authors": ["Klaus robert Mller", "Sebastian Mika", "Gunnar Rtsch", "Koji Tsuda"], "year": "2001", "title": "an introduction to kernelbased learning algorithms"}, "citing_string": "Mller et al. , 2001", "sentence": 3, "section": 4, "citation_id": "D09-1143_45", "raw_string": "Klaus robert Mller, Sebastian Mika, Gunnar Rtsch, Koji Tsuda, , and Bernhard Schlkopf. 2001. An introduction to kernel-based learning algorithms. IEEE Transactions on Neural Networks, 12(2):181\u2013 201.", "subsection": 1, "cite_context": " a supervised machine learning technique based on the latest results of the statistical learning theory (Vapnik, 1998). Given a vector space and a set of training points, i.e. positive and negative examples, SVMs find a separating hyperplane H(~x) = \u03c9~ x x~ + b = 0 where \u03c9 E Rn and b E R are learned by applying the Structural Risk Minimization principle (Vapnik, 1995). SVMs is a binary classifier, but it can be easily extended to multi-class classifier, e.g. by means of the one-vs-all method (Rifkin and Poggio, 2002). One strong point of SVMs is the possibility to apply kernel methods (robert Mller et al., 2001) to implicitly map data in a new space where the examples are more easily separable as described in the next section. 3.2 Kernel Methods Kernel methods (Schlkopf and Smola, 2001) are an attractive alternative to feature-based methods since the applied learning algorithm only needs to compute a product between a pair of objects (by means of kernel functions), avoiding the explicit feature representation. A kernel function is a scalar product in a possibly unknown feature space. More precisely, The object o is mapped in x~ with a feature function \u03c6 : O \u2014* Rn, where O is the set of the objects. T", "is_self_cite": false, "cited_paper_id": "External_66459"}, {"info": {"authors": ["Bernhard Schlkopf", "Alexander J Smola"], "year": "2001", "title": "learning with kernels support vector machines regularization optimization and beyond"}, "citing_string": "Schlkopf and Smola , 2001", "sentence": 0, "section": 4, "citation_id": "D09-1143_46", "raw_string": "Bernhard Schlkopf and Alexander J. Smola. 2001. Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond. MIT Press, Cambridge, MA, USA.", "subsection": 2, "cite_context": ".e. positive and negative examples, SVMs find a separating hyperplane H(~x) = \u03c9~ x x~ + b = 0 where \u03c9 E Rn and b E R are learned by applying the Structural Risk Minimization principle (Vapnik, 1995). SVMs is a binary classifier, but it can be easily extended to multi-class classifier, e.g. by means of the one-vs-all method (Rifkin and Poggio, 2002). One strong point of SVMs is the possibility to apply kernel methods (robert Mller et al., 2001) to implicitly map data in a new space where the examples are more easily separable as described in the next section. 3.2 Kernel Methods Kernel methods (Schlkopf and Smola, 2001) are an attractive alternative to feature-based methods since the applied learning algorithm only needs to compute a product between a pair of objects (by means of kernel functions), avoiding the explicit feature representation. A kernel function is a scalar product in a possibly unknown feature space. More precisely, The object o is mapped in x~ with a feature function \u03c6 : O \u2014* Rn, where O is the set of the objects. The kernel trick allows us to rewrite the decision hyperplane as: ( E yi\u03b1i )~xi \u00b7 x~+ b = H(~x) = i=1..l E yi\u03b1i E~xi \u00b7 x~ + b = yi\u03b1i\u03c6(oi) \u00b7 \u03c6(o) + b, i=1..l i=1..l where yi is equ", "is_self_cite": false, "cited_paper_id": "External_12069"}, {"info": {"authors": ["Bernhard Schlkopf", "Alexander J Smola"], "year": "2001", "title": "learning with kernels support vector machines regularization optimization and beyond"}, "citing_string": "Schlkopf and Smola , 2001", "sentence": 23, "section": 5, "citation_id": "D09-1143_47", "raw_string": "Bernhard Schlkopf and Alexander J. Smola. 2001. Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond. MIT Press, Cambridge, MA, USA.", "subsection": 4, "cite_context": "ency word plus grammatical relation tree kernels: CK5 = \u03b1\u00b7KP+(1\u2212\u03b1)\u00b7(KPT\u2212DW+KPT\u2212GR) 1383 1. 5K3 + 5K4 2. 5K3 + 5K6 3. 55K = Ez=1,..,6 5Kz 4. KSST + 55K 5. C5K = \u03b1 \u00b7 KP + (1 \u2212 \u03b1) \u00b7 (KSST + 55K) Preliminary experiments showed that the last combination yields the best performance with \u03b1 = 0.23. We used a polynomial expansion to explore the bi-gram features of i) the first and the second entity participating in the relation, ii) grammatical relations which replace words in the dependency tree. Since the kernel function set is closed under normalization, polynomial expansion and linear combination (Schlkopf and Smola, 2001), all the illustrated composite kernels are also proper kernels. 5 Experiments Our experiments aim at investigating the effectiveness of convolution kernels adapted to syntactic parse trees and various sequence kernels for the RE task. For this purpose, we use the subset and partial tree kernel over different kinds of trees, namely constituent and dependency syntactic parse trees. Diverse sequences are applied individually and in combination together. We consider our task of relation extraction as a classification problem where categories are relation types. All pairs of entity mentions in the", "is_self_cite": false, "cited_paper_id": "External_12069"}, {"info": {"authors": ["Vladimir N Vapnik"], "year": "1995", "title": "the nature of statistical learning theory"}, "citing_string": "Vapnik , 1995", "sentence": 1, "section": 4, "citation_id": "D09-1143_48", "raw_string": "Vladimir N. Vapnik. 1995. The Nature of Statistical Learning Theory. Springer\u2013Verlag, New York.", "subsection": 1, "cite_context": " Methods In this section we give a brief introduction to support vector machines, kernel methods, diverse tree and sequence kernel spaces, which can be applied to the RE task. 3.1 Support Vector Machines (SVMs) Support Vector Machines refer to a supervised machine learning technique based on the latest results of the statistical learning theory (Vapnik, 1998). Given a vector space and a set of training points, i.e. positive and negative examples, SVMs find a separating hyperplane H(~x) = \u03c9~ x x~ + b = 0 where \u03c9 E Rn and b E R are learned by applying the Structural Risk Minimization principle (Vapnik, 1995). SVMs is a binary classifier, but it can be easily extended to multi-class classifier, e.g. by means of the one-vs-all method (Rifkin and Poggio, 2002). One strong point of SVMs is the possibility to apply kernel methods (robert Mller et al., 2001) to implicitly map data in a new space where the examples are more easily separable as described in the next section. 3.2 Kernel Methods Kernel methods (Schlkopf and Smola, 2001) are an attractive alternative to feature-based methods since the applied learning algorithm only needs to compute a product between a pair of objects (by means of kernel fu", "is_self_cite": false, "cited_paper_id": "External_252"}, {"info": {"authors": ["Vladimir N Vapnik"], "year": "1998", "title": "statistical learning theory"}, "citing_string": "Vapnik , 1998", "sentence": 0, "section": 4, "citation_id": "D09-1143_49", "raw_string": "Vladimir N. Vapnik. 1998. Statistical Learning Theory. John Wiley and Sons, New York.", "subsection": 1, "cite_context": "ns in dependency structure. We believe that an efficient and appropriate kernel can be used to solve the RE problem, exploiting the advantages of dependency structures, convolution tree kernels and sequence kernels. 3 Support Vector Machines and Kernel Methods In this section we give a brief introduction to support vector machines, kernel methods, diverse tree and sequence kernel spaces, which can be applied to the RE task. 3.1 Support Vector Machines (SVMs) Support Vector Machines refer to a supervised machine learning technique based on the latest results of the statistical learning theory (Vapnik, 1998). Given a vector space and a set of training points, i.e. positive and negative examples, SVMs find a separating hyperplane H(~x) = \u03c9~ x x~ + b = 0 where \u03c9 E Rn and b E R are learned by applying the Structural Risk Minimization principle (Vapnik, 1995). SVMs is a binary classifier, but it can be easily extended to multi-class classifier, e.g. by means of the one-vs-all method (Rifkin and Poggio, 2002). One strong point of SVMs is the possibility to apply kernel methods (robert Mller et al., 2001) to implicitly map data in a new space where the examples are more easily separable as described in", "is_self_cite": false, "cited_paper_id": "External_2268"}, {"info": {"authors": ["S V N Vishwanathan", "Alexander J Smola"], "year": "2002", "title": "fast kernels on strings and trees"}, "citing_string": "Vishwanathan and Smola , 2002", "sentence": 14, "section": 4, "citation_id": "D09-1143_50", "raw_string": "S.V.N. Vishwanathan and Alexander J. Smola. 2002. Fast kernels on strings and trees. In Proceedings of Neural Information Processing Systems.", "subsection": 2, "cite_context": "e examples of the wellknown convolution kernels used in many NLP applications. Tree kernels represent trees in terms of their substructures (called tree fragments). Such fragments form a feature space which, in turn, is mapped into a vector space. Tree kernels measure the similarity between pair of trees by counting the number of fragments in common. There are three important characterizations of fragment type (Moschitti, 2006): the SubTrees (ST), the SubSet Trees (SST) and the Partial Trees (PT). For sake of space, we do not report the mathematical description of them, which is available in (Vishwanathan and Smola, 2002), (Collins and Duffy, 1380 2001) and (Moschitti, 2006), respectively. In contrast, we report some descriptions in terms of feature space that may be useful to understand the new engineered kernels. In principle, a SubTree (ST) is defined by taking any node along with its descendants. A SubSet Tree (SST) is a more general structure which does not necessarily include all the descendants. It must be generated by applying the same grammatical rule set, which generated the original tree. A Partial Tree (PT) is a more general form of substructures obtained by relaxing constraints over the SST. 4 Ker", "is_self_cite": false, "cited_paper_id": "External_37044"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 4, "section": 2, "citation_id": "D09-1143_51", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 0, "cite_context": "1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an explicit feature representation. This can be done by computing a kernel function between a p", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 13, "section": 2, "citation_id": "D09-1143_52", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 0, "cite_context": "equences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 1378\u20131387, Sing", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 1, "section": 3, "citation_id": "D09-1143_53", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 0, "cite_context": " namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the incorporation of various features suc", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 14, "section": 3, "citation_id": "D09-1143_54", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 0, "cite_context": " 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A recent approach successfully employs a convolution tree kernel (of type SST) over constituent syntactic parse tree (Zhang et al., 2006; Zhou et al., 2007), but it does not capture grammatical relations in dependency structure. We believe that an efficient and appropriate kernel can be used to solve the RE problem, exploiting the advantages of dependency structures, convolution tree kernels and sequence kernels. 3 Support Vector Machines and Kernel Methods In this section we give a brief i", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 23, "section": 5, "citation_id": "D09-1143_55", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 1, "cite_context": "odes T1-PER, denoting the type PERSON, and T2-LOC, denoting the type LOCATION, are added to the parse tree, above the two target NEs, respectively. In this example, the above PET is designed to capture the relation Located-in between the entities \u201dofficials\u201d and \u201dWashington\u201d from the ACE corpus. Note that, a third NE, U.S., is characterized by the node GPE (GeoPolitical Entity), where the absence of the prefix T1 or T2 before the NE type (i.e. GPE), denotes that the NE does not take part in the target relation. In previous work, some dependency trees have been used (Bunescu and Mooney, 2005a; Wang, 2008) but the employed kernel just exploited the syntactic information concentrated in the path between e1 and e2. In contrast, we defined and studied three different dependency structures whose potential can be fully exploited by our convolution partial tree kernel: - Dependency Words (DW) tree is similar to PET adapted for dependency tree constituted by simple words. We select the minimal subtree which includes e1 and e2, and we insert an extra node as father of the NEs, labeled with the NE category. For example, given 1381 Figure 2: The constituent and dependency parse trees integrated with enti", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Mengqiu Wang"], "year": "2008", "title": "a reexamination of dependency path kernels for relation extraction"}, "citing_string": "Wang , 2008", "sentence": 0, "section": 5, "citation_id": "D09-1143_56", "raw_string": "Mengqiu Wang. 2008. A re-examination of dependency path kernels for relation extraction. In Proceedings of the 3rd International Joint Conference on Natural Language Processing-IJCNLP.", "subsection": 2, "cite_context": "atical Relation (GR) tree, i.e. the DW tree in which words are replaced by their grammatical functions, e.g. prep, pobj and nsubj. For example, Figure 2.d, shows the GR tree for the previous relation: In is replaced by prep, U.S. by nsubj and so on. - Grammatical Relation and Words (GRW) tree, words and grammatical functions are both used in the tree, where the latter are inserted as a father node of the former. For example, Figure 2.e, shows such tree for the previous relation. 4.2 Sequential Structures Some sequence kernels have been used on dependency structures (Bunescu and Mooney, 2005b; Wang, 2008). These kernels just used lexical words with some syntactic information. To fully exploit syntactic and semantic information, we defined and studied six different sequences (in a style similar to what proposed in (Moschitti, 2008)), which include features from constituent and dependency parse trees and NEs: 1. Sequence of terminals (lexical words) in the PET (SK1), e.g.: T2-LOC Washington, U.S. T1-PER officials. 2. Sequence of part-of-speech (POS) tags in the PET (SK2), i.e. the SK1 in which words are replaced by their POS tags, e.g.: T2-LOC NN , NNP T1-PER NNS. 3. Sequence of grammatical rela", "is_self_cite": false, "cited_paper_id": "I08-2119"}, {"info": {"authors": ["Dmitry Zelenko", "Chinatsu Aone", "Anthony Richardella"], "year": "2002", "title": "kernel methods for relation extraction"}, "citing_string": "Zelenko et al. , 2002", "sentence": 4, "section": 2, "citation_id": "D09-1143_57", "raw_string": "Dmitry Zelenko, Chinatsu Aone, and Anthony Richardella. 2002. Kernel methods for relation extraction. In Proceedings of EMNLP-ACL, pages 181\u2013201.", "subsection": 0, "cite_context": "action (RE) is defined in ACE as the task of finding relevant semantic relations between pairs of entities in texts. Figure 1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bol", "is_self_cite": false, "cited_paper_id": "W02-1010"}, {"info": {"authors": ["Dmitry Zelenko", "Chinatsu Aone", "Anthony Richardella"], "year": "2002", "title": "kernel methods for relation extraction"}, "citing_string": "Zelenko et al. , 2002", "sentence": 13, "section": 2, "citation_id": "D09-1143_58", "raw_string": "Dmitry Zelenko, Chinatsu Aone, and Anthony Richardella. 2002. Kernel methods for relation extraction. In Proceedings of EMNLP-ACL, pages 181\u2013201.", "subsection": 0, "cite_context": "the sequence kernel (Lodhi et al., 2002), where the objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfacto", "is_self_cite": false, "cited_paper_id": "W02-1010"}, {"info": {"authors": ["Dmitry Zelenko", "Chinatsu Aone", "Anthony Richardella"], "year": "2002", "title": "kernel methods for relation extraction"}, "citing_string": "Zelenko et al. , 2002", "sentence": 0, "section": 3, "citation_id": "D09-1143_59", "raw_string": "Dmitry Zelenko, Chinatsu Aone, and Anthony Richardella. 2002. Kernel methods for relation extraction. In Proceedings of EMNLP-ACL, pages 181\u2013201.", "subsection": 0, "cite_context": "vious sequence and dependency models for RE. 1The function defined on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Mill", "is_self_cite": false, "cited_paper_id": "W02-1010"}, {"info": {"authors": ["Dmitry Zelenko", "Chinatsu Aone", "Anthony Richardella"], "year": "2002", "title": "kernel methods for relation extraction"}, "citing_string": "Zelenko et al. , 2002", "sentence": 4, "section": 2, "citation_id": "D09-1143_60", "raw_string": "Dmitry Zelenko, Chinatsu Aone, and Anthony Richardella. 2002. Kernel methods for relation extraction. In Proceedings of EMNLP-ACL, pages 181\u2013201.", "subsection": 0, "cite_context": "dNet. (Kambhatla, 2004) employed maximum entropy models with diverse features including words, entity and mention types and the number of words (if any) separating the two entities. Recent work on Relation Extraction has mostly employed kernel-based approaches over syntactic parse trees. Kernels on parse trees were pioneered by (Collins and Duffy, 2001). This kernel function counts the number of common subtrees, weighted appropriately, as the measure of similarity between two parse trees. (Culotta and Sorensen, 2004) extended this work to calculate kernels between augmented dependency trees. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, ", "is_self_cite": false, "cited_paper_id": "W02-1010"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 4, "section": 2, "citation_id": "D09-1143_61", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 0, "cite_context": "es in texts. Figure 1 shows part of a document from ACE 2004 corpus, a collection of news articles. In the text, the relation between president and NBC\u2019s entertainment division describes the relationship between the first entity (person) and the second (organization) where the person holds a managerial position. Several approaches have been proposed for automatically learning semantic relations from texts. Among others, there has been increased interest in the application of kernel methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Bunescu and Mooney, 2005b; Zhang et al., 2005; Wang, 2008). Their main property is the ability of exploiting a huge amount of This work has been partially funded by the LiveMemories project (http://www.livememories.org/) and Expert System (http://www.expertsystem.net/) research grant. Jeff Zucker, the longtime executive producer of NBC\u2019s \u201dToday\u201d program, will be named Friday as the new president of NBC\u2019s entertainment division, replacing Garth Ancier, NBC executives said. Figure 1: A document from ACE 2004 with all entity mentions in bold. features without an explicit feature representation. This can be done by computing a kernel functio", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 13, "section": 2, "citation_id": "D09-1143_62", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 0, "cite_context": "e objects are strings of characters and the kernel function computes the number of common subsequences of characters in the two strings. Such substrings are then weighted according to a decaying factor penalizing longer ones. In the same line, Tree Kernels count the number of subtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 28, "section": 2, "citation_id": "D09-1143_63", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 0, "cite_context": " that relation extraction can benefit from increasing the feature space by combining kernels (with a simple summation) exploiting the two different parsing paradigms. Our experiments on RE show that the current composite kernel, which is constituent-based is more effective than those based on dependency trees and individual sequence kernel but at the same time their combinations, i.e. dependency plus constituent trees, improve the state-of-the-art in RE. More interestingly, also the combinations of various sequence kernels gain significant better performance than the current state-of-the-art (Zhang et al., 2005). Overall, these results are interesting for the computational linguistics research since they show that the above two parsing paradigms provide different and important information for a semantic task such as RE. Regarding sequence-based kernels, the WSK gains better performance than previous sequence and dependency models for RE. 1The function defined on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kern", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 1, "section": 3, "citation_id": "D09-1143_64", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 0, "cite_context": "mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the incorporation of various ", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 14, "section": 3, "citation_id": "D09-1143_65", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 0, "cite_context": "es. (Zelenko et al., 2002) proposed extracting 1379 relations by computing kernel functions between parse trees. (Bunescu and Mooney, 2005a) proposed a shortest path dependency kernel by stipulating that the information to model a relationship between two entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A recent approach successfully employs a convolution tree kernel (of type SST) over constituent syntactic parse tree (Zhang et al., 2006; Zhou et al., 2007), but it does not capture grammatical relations in dependency structure. We believe that an efficient and appropriate kernel can be used to solve the RE problem, exploiting the advantages of dependency structures, convolution tree kernels and sequence kernels. 3 Support Vector Machines and Kernel Methods In this section we g", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jian Su", "Danmei Wang", "Guodong Zhou", "Chew Lim Tan"], "year": "2005", "title": "discovering relations between named entities from a large raw corpus using tree similaritybased clustering"}, "citing_string": "Zhang et al. , 2005", "sentence": 16, "section": 5, "citation_id": "D09-1143_66", "raw_string": "Min Zhang, Jian Su, Danmei Wang, Guodong Zhou, and Chew Lim Tan. 2005. Discovering relations between named entities from a large raw corpus using tree similarity-based clustering. In Proceedings of IJCNLP\u20192005, Lecture Notes in Computer Science (LNCS 3651), pages 378\u2013389, Jeju Island, South Korea.", "subsection": 1, "cite_context": "rge (up to 300 nodes in the Penn Treebank (Marcus et al., 1993)); second, there is ambiguity on the target pairs of NEs, i.e. different NEs associated with different relations are described by the same parse tree. Therefore, it is necessary to identify the portion of the parse tree that best represent the useful syntactic information. Let e1 and e2 be two entity mentions in the same sentence such that they are in a relationship R. For the constituent parse tree, we used the pathenclosed tree (PET), which was firstly proposed in (Moschitti, 2004) for Semantic Role Labeling and then adapted by (Zhang et al., 2005) for relation extraction. It is the smallest common subtree including the two entities of a relation. The dashed frame in Figure 2.a surrounds PET associated with the two mentions, officials and Washington. Moreover, to improve the representation, two extra nodes T1-PER, denoting the type PERSON, and T2-LOC, denoting the type LOCATION, are added to the parse tree, above the two target NEs, respectively. In this example, the above PET is designed to capture the relation Located-in between the entities \u201dofficials\u201d and \u201dWashington\u201d from the ACE corpus. Note that, a third NE, U.S., is characterize", "is_self_cite": false, "cited_paper_id": "I05-1034"}, {"info": {"authors": ["Min Zhang", "Jie Zhang", "Jian Su"], "year": "2006", "title": "a composite kernel to extract relations between entities with both flat and structured features"}, "citing_string": "Zhang et al. , 2006", "sentence": 16, "section": 3, "citation_id": "D09-1143_67", "raw_string": "Min Zhang, Jie Zhang, Jian Su, , and Guodong Zhou. 2006. A composite kernel to extract relations between entities with both flat and structured features. In Proceedings of COLING-ACL 2006, pages 825\u2013 832.", "subsection": 0, "cite_context": "es over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 1378\u20131387, Singapore, 6-7 August 2009. c\ufffd2009 ACL and AFNLP spective since dependency structures offer some unique advantages, which should be exploited by an appropriate kernel. Therefore, studying convolution tree kernels for dependency trees is worthwhile also considering that, to the best of our knowledge, these models have not been previously used for relation extraction1 task. Additionally, sequence kernels should be included in such global st", "is_self_cite": false, "cited_paper_id": "External_32497"}, {"info": {"authors": ["Min Zhang", "Jie Zhang", "Jian Su"], "year": "2006", "title": "a composite kernel to extract relations between entities with both flat and structured features"}, "citing_string": "Zhang et al. , 2006", "sentence": 1, "section": 3, "citation_id": "D09-1143_68", "raw_string": "Min Zhang, Jie Zhang, Jian Su, , and Guodong Zhou. 2006. A composite kernel to extract relations between entities with both flat and structured features. In Proceedings of COLING-ACL 2006, pages 825\u2013 832.", "subsection": 0, "cite_context": "rvised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau Yih, 2002) applied a probabilistic approach to solve the problems of named entity and relation extraction with the incorporation of various features such as word, part-of-sp", "is_self_cite": false, "cited_paper_id": "External_32497"}, {"info": {"authors": ["Min Zhang", "Jie Zhang", "Jian Su"], "year": "2006", "title": "a composite kernel to extract relations between entities with both flat and structured features"}, "citing_string": "Zhang et al. , 2006", "sentence": 16, "section": 3, "citation_id": "D09-1143_69", "raw_string": "Min Zhang, Jie Zhang, Jian Su, , and Guodong Zhou. 2006. A composite kernel to extract relations between entities with both flat and structured features. In Proceedings of COLING-ACL 2006, pages 825\u2013 832.", "subsection": 0, "cite_context": "o entities can be captured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A recent approach successfully employs a convolution tree kernel (of type SST) over constituent syntactic parse tree (Zhang et al., 2006; Zhou et al., 2007), but it does not capture grammatical relations in dependency structure. We believe that an efficient and appropriate kernel can be used to solve the RE problem, exploiting the advantages of dependency structures, convolution tree kernels and sequence kernels. 3 Support Vector Machines and Kernel Methods In this section we give a brief introduction to support vector machines, kernel methods, diverse tree and sequence kernel spaces, which can be applied to the RE task. 3.1 Support Vector Machines (SVMs) Support Vector Machines refer to a supervised machine learning technique", "is_self_cite": false, "cited_paper_id": "External_32497"}, {"info": {"authors": ["Min Zhang", "Jie Zhang", "Jian Su"], "year": "2006", "title": "a composite kernel to extract relations between entities with both flat and structured features"}, "citing_string": "Zhang et al. , 2006", "sentence": 1, "section": 5, "citation_id": "D09-1143_70", "raw_string": "Min Zhang, Jie Zhang, Jian Su, , and Guodong Zhou. 2006. A composite kernel to extract relations between entities with both flat and structured features. In Proceedings of COLING-ACL 2006, pages 825\u2013 832.", "subsection": 3, "cite_context": "SK4 in which words are replaced by their POS tags, e.g.: NN T2-LOC IN VBP T1-PER NNS GPE NNP. It is worth noting that the potential information contained in such sequences can be fully exploited by the word sequence kernel. 4.3 Combining Kernels Given that syntactic information from different parse trees may have different impact on relation extraction (RE), the viable approach to study the role of dependency and constituent parsing is to experiment with different syntactic models and measuring the impact in terms of RE accuracy. For this purpose we compared the composite kernel described in (Zhang et al., 2006) with the partial tree kernels applied to DW, GR, and GRW and sequence kernels based on six sequences described above. The composite kernels include polynomial kernel applied to entity-related feature vector. The word sequence kernel (WSK) is always applied to sequential structures. The used kernels are described in more detail below. 4.3.1 Polynomial Kernel The basic kernel between two named entities of the ACE documents is defined as: KP(R1, R2) = \ufffd KE(R1.Ei, R2.Ei), i=1,2 where R1 and R2 are two relation instances, Ei is the ith entity of a relation instance. KE(\u00b7, \u00b7) is a kernel over entit", "is_self_cite": false, "cited_paper_id": "External_32497"}, {"info": {"authors": ["Min Zhang", "Jie Zhang", "Jian Su"], "year": "2006", "title": "a composite kernel to extract relations between entities with both flat and structured features"}, "citing_string": "Zhang et al. , 2006", "sentence": 1, "section": 3, "citation_id": "D09-1143_71", "raw_string": "Min Zhang, Jie Zhang, Jian Su, , and Guodong Zhou. 2006. A composite kernel to extract relations between entities with both flat and structured features. In Proceedings of COLING-ACL 2006, pages 825\u2013 832.", "subsection": 0, "cite_context": "n PET (a portion of the constituent tree) and combined with the CK1 schema whereas PET and GR associated with CK5 means that SST kernel is applied to PET and PT kernel is applied to GR in CK5. The remaining three columns report Precision, Recall and F1 measure. The interpretation of the second table is more immediate since the only tree kernel involved is the SST kernel applied to PET and combined by means of CK1. We note that: first, the dependency kernels, i.e. the results on the rows from 3 to 6 are below the composite kernel CK1, i.e. 68.9. This is the state-of-the-art in RE, designed by (Zhang et al., 2006), where our implementation provides 1384 Parse Tree Kernel P R F PET CK1 69.5 68.3 68.9 DW CK1 53.2 59.7 56.3 GR CK1 58.8 61.7 60.2 GRW CK1 56.1 61.2 58.5 DW and GR CK5 59.7 64.1 61.8 PET and GR CK2 70.7 69.0 69.8 CK3 70.8 70.2 70.5 Table 1: Results on the ACE 2004 evaluation test set. Six structures were experimented over the constituent and dependency trees. Kernel P R F CK1 69.5 68.3 68.9 SK1 72.0 52.8 61.0 SK2 61.7 60.0 60.8 SK3 62.6 60.7 61.6 SK4 73.1 50.3 59.7 SK5 59.0 60.7 59.8 SK6 57.7 61.8 59.7 SK3 + SK4 75.0 63.4 68.8 SK3 + SK6 66.8 65.1 65.9 SSK = Ei SKi 73.8 66.2 69.8 CSK 75.6 66.6", "is_self_cite": false, "cited_paper_id": "External_32497"}, {"info": {"authors": ["Shubin Zhao", "Ralph Grishman"], "year": "2005", "title": "extracting relations with integrated information using kernel methods"}, "citing_string": "Zhao and Grishman , 2005", "sentence": 14, "section": 2, "citation_id": "D09-1143_72", "raw_string": "Shubin Zhao and Ralph Grishman. 2005. Extracting relations with integrated information using kernel methods. In Proceedings of the 43rd Meeting of the ACL, pages 419\u2013426, Ann Arbor, Michigan, USA.", "subsection": 0, "cite_context": "ubtree shared by two input trees. An example is that of syntactic (or subset) tree kernel (SST) (Collins and Duffy, 2001), where trees encode grammatical derivations. Previous work on the use of kernels for RE has exploited some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Zhang et al., 2005) or subsequence kernels over dependency graphs (Bunescu and Mooney, 2005a; Wang, 2008). More specifically, (Bunescu and Mooney, 2005a; Culotta and Sorensen, 2004) use kernels over dependency trees, which showed much lower accuracy than feature-based methods (Zhao and Grishman, 2005). One problem of the dependency kernels above is that they do not exploit the overall structural aspects of dependency trees. A more effective solution is the application of convolution kernels to constituent parse trees (Zhang et al., 2006) but this is not satisfactory from a general per1378 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 1378\u20131387, Singapore, 6-7 August 2009. c\ufffd2009 ACL and AFNLP spective since dependency structures offer some unique advantages, which should be exploited by an appropriate kernel. Therefore, studying convolution t", "is_self_cite": false, "cited_paper_id": "P05-1052"}, {"info": {"authors": ["Shubin Zhao", "Ralph Grishman"], "year": "2005", "title": "extracting relations with integrated information using kernel methods"}, "citing_string": "Zhao and Grishman , 2005", "sentence": 1, "section": 3, "citation_id": "D09-1143_73", "raw_string": "Shubin Zhao and Ralph Grishman. 2005. Extracting relations with integrated information using kernel methods. In Proceedings of the 43rd Meeting of the ACL, pages 419\u2013426, Ann Arbor, Michigan, USA.", "subsection": 0, "cite_context": "e presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syntactic parse trees. It demonstrated that a lexicalized, probabilistic context-free parser with head rules can be used effectively for information extraction. Meanwhile, feature-based approaches often employ various kinds of linguistic, syntactic or contextual information and integrate into the feature space. (Roth and tau", "is_self_cite": false, "cited_paper_id": "P05-1052"}, {"info": {"authors": ["GuoDong Zhou", "Jian Su", "Jie Zhang"], "year": "2005", "title": "exploring various knowledge in relation extraction"}, "citing_string": "Zhou et al. , 2005", "sentence": 0, "section": 3, "citation_id": "D09-1143_74", "raw_string": "GuoDong Zhou, Jian Su, Jie Zhang, , and Min Zhang. 2005. Exploring various knowledge in relation extraction. In Proceedings of the 43rd Meeting of the ACL, pages 427\u2013434, Ann Arbor, USA, June.", "subsection": 0, "cite_context": "on (Culotta and Sorensen, 2004), although on dependency trees, is not a convolution tree kernel. A review of previous work on RE is described in Section 2. Section 3 introduces support vector machines and kernel methods whereas our specific kernels for RE are described is Section 4. The experiments and conclusions are presented in sections 5 and 6, respectively. 2 Related Work To identify semantic relations using machine learning, three learning settings have mainly been applied, namely supervised methods (Miller et al., 2000; Zelenko et al., 2002; Culotta and Sorensen, 2004; Kambhatla, 2004; Zhou et al., 2005), semi supervised methods (Brin, 1998; Agichtein and Gravano, 2000), and unsupervised method (Hasegawa et al., 2004). In a supervised learning setting, representative related work can be classified into generative models (Miller et al., 2000), feature-based (Roth and tau Yih, 2002; Kambhatla, 2004; Zhao and Grishman, 2005; Zhou et al., 2005) or kernel-based methods (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008; Zhang et al., 2006). The learning model employed in (Miller et al., 2000) used statistical parsing techniques to learn syn", "is_self_cite": false, "cited_paper_id": "External_58154"}, {"info": {"authors": ["GuoDong Zhou", "Min Zhang", "DongHong Ji", "QiaoMing Zhu"], "year": "2007", "title": "tree kernelbased relation extraction with contextsensitive structured parse tree information"}, "citing_string": "Zhou et al. , 2007", "sentence": 16, "section": 3, "citation_id": "D09-1143_75", "raw_string": "GuoDong Zhou, Min Zhang, DongHong Ji, and QiaoMing Zhu. 2007. Tree kernel-based relation extraction with context-sensitive structured parse tree information. In Proceedings of EMNLP-CoNLL 2007, pages 728\u2013736.", "subsection": 0, "cite_context": "ptured by the shortest path between them in the dependency graph. Although approaches in RE have been dominated by kernel-based methods, until now, most of research in this line has used the kernel as some similarity measures over diverse features (Zelenko et al., 2002; Culotta and Sorensen, 2004; Bunescu and Mooney, 2005a; Zhang et al., 2005; Wang, 2008). These are not convolution kernels and produce a much lower number of substructures than the PT kernel. A recent approach successfully employs a convolution tree kernel (of type SST) over constituent syntactic parse tree (Zhang et al., 2006; Zhou et al., 2007), but it does not capture grammatical relations in dependency structure. We believe that an efficient and appropriate kernel can be used to solve the RE problem, exploiting the advantages of dependency structures, convolution tree kernels and sequence kernels. 3 Support Vector Machines and Kernel Methods In this section we give a brief introduction to support vector machines, kernel methods, diverse tree and sequence kernel spaces, which can be applied to the RE task. 3.1 Support Vector Machines (SVMs) Support Vector Machines refer to a supervised machine learning technique based on the latest", "is_self_cite": false, "cited_paper_id": "External_33468"}, {"info": {"authors": ["GuoDong Zhou", "Min Zhang", "DongHong Ji", "QiaoMing Zhu"], "year": "2007", "title": "tree kernelbased relation extraction with contextsensitive structured parse tree information"}, "citing_string": "Zhou et al. , 2007", "sentence": 16, "section": 3, "citation_id": "D09-1143_76", "raw_string": "GuoDong Zhou, Min Zhang, DongHong Ji, and QiaoMing Zhu. 2007. Tree kernel-based relation extraction with context-sensitive structured parse tree information. In Proceedings of EMNLP-CoNLL 2007, pages 728\u2013736.", "subsection": 0, "cite_context": "des 1384 Parse Tree Kernel P R F PET CK1 69.5 68.3 68.9 DW CK1 53.2 59.7 56.3 GR CK1 58.8 61.7 60.2 GRW CK1 56.1 61.2 58.5 DW and GR CK5 59.7 64.1 61.8 PET and GR CK2 70.7 69.0 69.8 CK3 70.8 70.2 70.5 Table 1: Results on the ACE 2004 evaluation test set. Six structures were experimented over the constituent and dependency trees. Kernel P R F CK1 69.5 68.3 68.9 SK1 72.0 52.8 61.0 SK2 61.7 60.0 60.8 SK3 62.6 60.7 61.6 SK4 73.1 50.3 59.7 SK5 59.0 60.7 59.8 SK6 57.7 61.8 59.7 SK3 + SK4 75.0 63.4 68.8 SK3 + SK6 66.8 65.1 65.9 SSK = Ei SKi 73.8 66.2 69.8 CSK 75.6 66.6 70.8 CK1 + SSK 76.6 67.0 71.5 (Zhou et al., 2007) 82.2 70.2 75.8 CK1 with Heuristics Table 2: Performance comparison on the ACE 2004 data with different kernel setups. a slightly smaller result than the original version (i.e. an F1 of about 72 using a different syntactic parser). Second, CK1 improves to 70.5, when the contribution of PT kernel applied to GR (dependency tree built using grammatical relations) is added. This suggests that dependency structures are effectively exploited by PT kernel and that such information is somewhat complementary to constituent trees. Third, in the second table, the model CK1 + SSK, which adds to CK1 the co", "is_self_cite": false, "cited_paper_id": "External_33468"}]}